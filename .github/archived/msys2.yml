name: Build MSYS2

on: [push]

jobs:
  msys2-ucrt64:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: base-devel
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install dependencies
        run: tools/msys2-setup.sh --install-all --noconfirm
      - name: Build
        run: |
          mkdir build && cd build
          cmake -G Ninja ..
          ninja
          ninja test
          ninja wireshark_nsis_prep
          ninja wireshark_nsis
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nsis-installer
          path: build/packaging/nsis/wireshark-*-x64.exe

  install-nsis:
    runs-on: windows-latest
    needs: msys2-ucrt64
    steps:
      - name: Download installer
        uses: actions/download-artifact@v4
        with:
          name: nsis-installer
          path: downloads
      - name: Run installer
        working-directory: downloads
        run: |
          $ErrorActionPreference = 'Stop'
          $installer = Get-ChildItem -Path . -Filter "wireshark-*-x64.exe" -File | Select-Object -First 1
          if ($null -eq $installer) {
            Write-Error "Installer not found in downloads directory."
            exit 1
          }
          Start-Process -FilePath $installer.FullName -ArgumentList '/S', '/D=C:\Wireshark' -Wait -NoNewWindow
          if (!$?) {
            Write-Error "Wireshark installation failed."
            exit 1
          }
        shell: pwsh
      - name: Show version
        run: |
          $ErrorActionPreference = 'Stop'
          if (Test-Path "C:\Wireshark\tshark.exe") {
            $versionOutput = & "C:\Wireshark\tshark.exe" --version
            if ($LASTEXITCODE -ne 0) {
              Write-Error "Failed to retrieve TShark version."
              exit $LASTEXITCODE
            }
            Write-Output $versionOutput
          } else {
            Write-Error "TShark executable not found at C:\Wireshark\tshark.exe."
            exit 1
          }
        shell: pwsh


