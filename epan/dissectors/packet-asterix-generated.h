/* packet-asterix-generated.h
*
* Notice:
* This file is auto generated, do not edit!
* See tools/asterix/README.md for details.
*
* Data source: ['https://zoranbosnjak.github.io/asterix-specs', 'git revision: f27003694943864a33305b0ebd0a1f304573013a']
*
* Generated definitions for ASTERIX dissector
*
* Wireshark - Network traffic analyzer
* By Gerald Combs <gerald@wireshark.org>
* Copyright 1998 Gerald Combs
*
* SPDX-License-Identifier: GPL-2.0-or-later
*/

#include "packet-asterix.h"

static int hf_asterix_category;
static int hf_asterix_length;
static int hf_asterix_record;
static int hf_asterix_fspec;
static int hf_asterix_fspec_bitstring;
static int hf_asterix_datablock;
static int hf_asterix_counter;
static int hf_asterix_possible_interpretation;
static int hf_asterix_possible_interpretations;
static int hf_asterix_spare;

static int ett_asterix_subtree;

static enum value_cat_1_e {
  value_1_1_2,
  value_1_1_3,
  value_1_1_4
} value_cat_1;
static const enum_val_t cat_1_enum_vals[] = {
  {"cat_1_ed_1_2", "edition_1_2", value_1_1_2},
  {"cat_1_ed_1_3", "edition_1_3", value_1_1_3},
  {"cat_1_ed_1_4", "edition_1_4", value_1_1_4},
  {NULL, NULL, 0}
};

static int value_1_1_4_default = value_1_1_4;
static enum value_cat_2_e {
  value_2_1_0,
  value_2_1_1,
  value_2_1_2
} value_cat_2;
static const enum_val_t cat_2_enum_vals[] = {
  {"cat_2_ed_1_0", "edition_1_0", value_2_1_0},
  {"cat_2_ed_1_1", "edition_1_1", value_2_1_1},
  {"cat_2_ed_1_2", "edition_1_2", value_2_1_2},
  {NULL, NULL, 0}
};

static int value_2_1_2_default = value_2_1_2;
static enum value_cat_4_e {
  value_4_1_12,
  value_4_1_13
} value_cat_4;
static const enum_val_t cat_4_enum_vals[] = {
  {"cat_4_ed_1_12", "edition_1_12", value_4_1_12},
  {"cat_4_ed_1_13", "edition_1_13", value_4_1_13},
  {NULL, NULL, 0}
};

static int value_4_1_13_default = value_4_1_13;
static enum value_cat_8_e {
  value_8_1_2,
  value_8_1_3
} value_cat_8;
static const enum_val_t cat_8_enum_vals[] = {
  {"cat_8_ed_1_2", "edition_1_2", value_8_1_2},
  {"cat_8_ed_1_3", "edition_1_3", value_8_1_3},
  {NULL, NULL, 0}
};

static int value_8_1_3_default = value_8_1_3;
static enum value_cat_9_e {
  value_9_2_1
} value_cat_9;
static const enum_val_t cat_9_enum_vals[] = {
  {"cat_9_ed_2_1", "edition_2_1", value_9_2_1},
  {NULL, NULL, 0}
};

static int value_9_2_1_default = value_9_2_1;
static enum value_cat_10_e {
  value_10_1_1
} value_cat_10;
static const enum_val_t cat_10_enum_vals[] = {
  {"cat_10_ed_1_1", "edition_1_1", value_10_1_1},
  {NULL, NULL, 0}
};

static int value_10_1_1_default = value_10_1_1;
static enum value_cat_11_e {
  value_11_1_2,
  value_11_1_3
} value_cat_11;
static const enum_val_t cat_11_enum_vals[] = {
  {"cat_11_ed_1_2", "edition_1_2", value_11_1_2},
  {"cat_11_ed_1_3", "edition_1_3", value_11_1_3},
  {NULL, NULL, 0}
};

static int value_11_1_3_default = value_11_1_3;
static enum value_cat_15_e {
  value_15_1_0,
  value_15_1_1,
  value_15_1_2
} value_cat_15;
static const enum_val_t cat_15_enum_vals[] = {
  {"cat_15_ed_1_0", "edition_1_0", value_15_1_0},
  {"cat_15_ed_1_1", "edition_1_1", value_15_1_1},
  {"cat_15_ed_1_2", "edition_1_2", value_15_1_2},
  {NULL, NULL, 0}
};

static int value_15_1_2_default = value_15_1_2;
static enum value_cat_16_e {
  value_16_1_0
} value_cat_16;
static const enum_val_t cat_16_enum_vals[] = {
  {"cat_16_ed_1_0", "edition_1_0", value_16_1_0},
  {NULL, NULL, 0}
};

static int value_16_1_0_default = value_16_1_0;
static enum value_cat_17_e {
  value_17_1_3
} value_cat_17;
static const enum_val_t cat_17_enum_vals[] = {
  {"cat_17_ed_1_3", "edition_1_3", value_17_1_3},
  {NULL, NULL, 0}
};

static int value_17_1_3_default = value_17_1_3;
static enum value_cat_18_e {
  value_18_1_7,
  value_18_1_8
} value_cat_18;
static const enum_val_t cat_18_enum_vals[] = {
  {"cat_18_ed_1_7", "edition_1_7", value_18_1_7},
  {"cat_18_ed_1_8", "edition_1_8", value_18_1_8},
  {NULL, NULL, 0}
};

static int value_18_1_8_default = value_18_1_8;
static enum value_cat_19_e {
  value_19_1_3
} value_cat_19;
static const enum_val_t cat_19_enum_vals[] = {
  {"cat_19_ed_1_3", "edition_1_3", value_19_1_3},
  {NULL, NULL, 0}
};

static int value_19_1_3_default = value_19_1_3;
static enum value_cat_20_e {
  value_20_1_9,
  value_20_1_10,
  value_20_1_11
} value_cat_20;
static const enum_val_t cat_20_enum_vals[] = {
  {"cat_20_ed_1_9", "edition_1_9", value_20_1_9},
  {"cat_20_ed_1_10", "edition_1_10", value_20_1_10},
  {"cat_20_ed_1_11", "edition_1_11", value_20_1_11},
  {NULL, NULL, 0}
};

static int value_20_1_11_default = value_20_1_11;
static enum value_cat_21_e {
  value_21_0_23,
  value_21_0_24,
  value_21_0_25,
  value_21_0_26,
  value_21_2_1,
  value_21_2_2,
  value_21_2_3,
  value_21_2_4,
  value_21_2_5,
  value_21_2_6,
  value_21_2_7
} value_cat_21;
static const enum_val_t cat_21_enum_vals[] = {
  {"cat_21_ed_0_23", "edition_0_23", value_21_0_23},
  {"cat_21_ed_0_24", "edition_0_24", value_21_0_24},
  {"cat_21_ed_0_25", "edition_0_25", value_21_0_25},
  {"cat_21_ed_0_26", "edition_0_26", value_21_0_26},
  {"cat_21_ed_2_1", "edition_2_1", value_21_2_1},
  {"cat_21_ed_2_2", "edition_2_2", value_21_2_2},
  {"cat_21_ed_2_3", "edition_2_3", value_21_2_3},
  {"cat_21_ed_2_4", "edition_2_4", value_21_2_4},
  {"cat_21_ed_2_5", "edition_2_5", value_21_2_5},
  {"cat_21_ed_2_6", "edition_2_6", value_21_2_6},
  {"cat_21_ed_2_7", "edition_2_7", value_21_2_7},
  {NULL, NULL, 0}
};

static int value_21_2_7_default = value_21_2_7;
static enum value_cat_21_re_e {
  value_21_1_4_re,
  value_21_1_5_re
} value_cat_21_re;
static const enum_val_t cat_21_enum_vals_re[] = {
  {"cat_21_ed_1_4", "edition_1_4", value_21_1_4_re},
  {"cat_21_ed_1_5", "edition_1_5", value_21_1_5_re},
  {NULL, NULL, 0}
};

static int value_21_1_5_re_default = value_21_1_5_re;
static enum value_cat_23_e {
  value_23_1_2,
  value_23_1_3
} value_cat_23;
static const enum_val_t cat_23_enum_vals[] = {
  {"cat_23_ed_1_2", "edition_1_2", value_23_1_2},
  {"cat_23_ed_1_3", "edition_1_3", value_23_1_3},
  {NULL, NULL, 0}
};

static int value_23_1_3_default = value_23_1_3;
static enum value_cat_25_e {
  value_25_1_5
} value_cat_25;
static const enum_val_t cat_25_enum_vals[] = {
  {"cat_25_ed_1_5", "edition_1_5", value_25_1_5},
  {NULL, NULL, 0}
};

static int value_25_1_5_default = value_25_1_5;
static enum value_cat_32_e {
  value_32_1_1,
  value_32_1_2
} value_cat_32;
static const enum_val_t cat_32_enum_vals[] = {
  {"cat_32_ed_1_1", "edition_1_1", value_32_1_1},
  {"cat_32_ed_1_2", "edition_1_2", value_32_1_2},
  {NULL, NULL, 0}
};

static int value_32_1_2_default = value_32_1_2;
static enum value_cat_34_e {
  value_34_1_27,
  value_34_1_28,
  value_34_1_29
} value_cat_34;
static const enum_val_t cat_34_enum_vals[] = {
  {"cat_34_ed_1_27", "edition_1_27", value_34_1_27},
  {"cat_34_ed_1_28", "edition_1_28", value_34_1_28},
  {"cat_34_ed_1_29", "edition_1_29", value_34_1_29},
  {NULL, NULL, 0}
};

static int value_34_1_29_default = value_34_1_29;
static enum value_cat_48_e {
  value_48_1_27,
  value_48_1_28,
  value_48_1_29,
  value_48_1_30,
  value_48_1_31,
  value_48_1_32
} value_cat_48;
static const enum_val_t cat_48_enum_vals[] = {
  {"cat_48_ed_1_27", "edition_1_27", value_48_1_27},
  {"cat_48_ed_1_28", "edition_1_28", value_48_1_28},
  {"cat_48_ed_1_29", "edition_1_29", value_48_1_29},
  {"cat_48_ed_1_30", "edition_1_30", value_48_1_30},
  {"cat_48_ed_1_31", "edition_1_31", value_48_1_31},
  {"cat_48_ed_1_32", "edition_1_32", value_48_1_32},
  {NULL, NULL, 0}
};

static int value_48_1_32_default = value_48_1_32;
static enum value_cat_48_re_e {
  value_48_1_11_re,
  value_48_1_12_re,
  value_48_1_13_re
} value_cat_48_re;
static const enum_val_t cat_48_enum_vals_re[] = {
  {"cat_48_ed_1_11", "edition_1_11", value_48_1_11_re},
  {"cat_48_ed_1_12", "edition_1_12", value_48_1_12_re},
  {"cat_48_ed_1_13", "edition_1_13", value_48_1_13_re},
  {NULL, NULL, 0}
};

static int value_48_1_13_re_default = value_48_1_13_re;
static enum value_cat_62_e {
  value_62_1_16,
  value_62_1_17,
  value_62_1_18,
  value_62_1_19,
  value_62_1_20,
  value_62_1_21
} value_cat_62;
static const enum_val_t cat_62_enum_vals[] = {
  {"cat_62_ed_1_16", "edition_1_16", value_62_1_16},
  {"cat_62_ed_1_17", "edition_1_17", value_62_1_17},
  {"cat_62_ed_1_18", "edition_1_18", value_62_1_18},
  {"cat_62_ed_1_19", "edition_1_19", value_62_1_19},
  {"cat_62_ed_1_20", "edition_1_20", value_62_1_20},
  {"cat_62_ed_1_21", "edition_1_21", value_62_1_21},
  {NULL, NULL, 0}
};

static int value_62_1_21_default = value_62_1_21;
static enum value_cat_62_re_e {
  value_62_1_2_re,
  value_62_1_3_re
} value_cat_62_re;
static const enum_val_t cat_62_enum_vals_re[] = {
  {"cat_62_ed_1_2", "edition_1_2", value_62_1_2_re},
  {"cat_62_ed_1_3", "edition_1_3", value_62_1_3_re},
  {NULL, NULL, 0}
};

static int value_62_1_3_re_default = value_62_1_3_re;
static enum value_cat_63_e {
  value_63_1_6,
  value_63_1_7
} value_cat_63;
static const enum_val_t cat_63_enum_vals[] = {
  {"cat_63_ed_1_6", "edition_1_6", value_63_1_6},
  {"cat_63_ed_1_7", "edition_1_7", value_63_1_7},
  {NULL, NULL, 0}
};

static int value_63_1_7_default = value_63_1_7;
static enum value_cat_65_e {
  value_65_1_4,
  value_65_1_5,
  value_65_1_6
} value_cat_65;
static const enum_val_t cat_65_enum_vals[] = {
  {"cat_65_ed_1_4", "edition_1_4", value_65_1_4},
  {"cat_65_ed_1_5", "edition_1_5", value_65_1_5},
  {"cat_65_ed_1_6", "edition_1_6", value_65_1_6},
  {NULL, NULL, 0}
};

static int value_65_1_6_default = value_65_1_6;
static enum value_cat_150_e {
  value_150_3_0
} value_cat_150;
static const enum_val_t cat_150_enum_vals[] = {
  {"cat_150_ed_3_0", "edition_3_0", value_150_3_0},
  {NULL, NULL, 0}
};

static int value_150_3_0_default = value_150_3_0;
static enum value_cat_205_e {
  value_205_1_0
} value_cat_205;
static const enum_val_t cat_205_enum_vals[] = {
  {"cat_205_ed_1_0", "edition_1_0", value_205_1_0},
  {NULL, NULL, 0}
};

static int value_205_1_0_default = value_205_1_0;
static enum value_cat_240_e {
  value_240_1_3
} value_cat_240;
static const enum_val_t cat_240_enum_vals[] = {
  {"cat_240_ed_1_3", "edition_1_3", value_240_1_3},
  {NULL, NULL, 0}
};

static int value_240_1_3_default = value_240_1_3;
static enum value_cat_247_e {
  value_247_1_2,
  value_247_1_3
} value_cat_247;
static const enum_val_t cat_247_enum_vals[] = {
  {"cat_247_ed_1_2", "edition_1_2", value_247_1_2},
  {"cat_247_ed_1_3", "edition_1_3", value_247_1_3},
  {NULL, NULL, 0}
};

static int value_247_1_3_default = value_247_1_3;
static dialog_cat_struct asterix_properties[] = {
  { 1, (int*)&value_cat_1, &value_1_1_4_default, cat_1_enum_vals, "cat_1", true },
  { 2, (int*)&value_cat_2, &value_2_1_2_default, cat_2_enum_vals, "cat_2", true },
  { 4, (int*)&value_cat_4, &value_4_1_13_default, cat_4_enum_vals, "cat_4", true },
  { 8, (int*)&value_cat_8, &value_8_1_3_default, cat_8_enum_vals, "cat_8", true },
  { 9, (int*)&value_cat_9, &value_9_2_1_default, cat_9_enum_vals, "cat_9", true },
  { 10, (int*)&value_cat_10, &value_10_1_1_default, cat_10_enum_vals, "cat_10", true },
  { 11, (int*)&value_cat_11, &value_11_1_3_default, cat_11_enum_vals, "cat_11", true },
  { 15, (int*)&value_cat_15, &value_15_1_2_default, cat_15_enum_vals, "cat_15", true },
  { 16, (int*)&value_cat_16, &value_16_1_0_default, cat_16_enum_vals, "cat_16", true },
  { 17, (int*)&value_cat_17, &value_17_1_3_default, cat_17_enum_vals, "cat_17", true },
  { 18, (int*)&value_cat_18, &value_18_1_8_default, cat_18_enum_vals, "cat_18", true },
  { 19, (int*)&value_cat_19, &value_19_1_3_default, cat_19_enum_vals, "cat_19", true },
  { 20, (int*)&value_cat_20, &value_20_1_11_default, cat_20_enum_vals, "cat_20", true },
  { 21, (int*)&value_cat_21, &value_21_2_7_default, cat_21_enum_vals, "cat_21", true },
  { 21, (int*)&value_cat_21_re, &value_21_1_5_re_default, cat_21_enum_vals_re, "cat_21_re", false },
  { 23, (int*)&value_cat_23, &value_23_1_3_default, cat_23_enum_vals, "cat_23", true },
  { 25, (int*)&value_cat_25, &value_25_1_5_default, cat_25_enum_vals, "cat_25", true },
  { 32, (int*)&value_cat_32, &value_32_1_2_default, cat_32_enum_vals, "cat_32", true },
  { 34, (int*)&value_cat_34, &value_34_1_29_default, cat_34_enum_vals, "cat_34", true },
  { 48, (int*)&value_cat_48, &value_48_1_32_default, cat_48_enum_vals, "cat_48", true },
  { 48, (int*)&value_cat_48_re, &value_48_1_13_re_default, cat_48_enum_vals_re, "cat_48_re", false },
  { 62, (int*)&value_cat_62, &value_62_1_21_default, cat_62_enum_vals, "cat_62", true },
  { 62, (int*)&value_cat_62_re, &value_62_1_3_re_default, cat_62_enum_vals_re, "cat_62_re", false },
  { 63, (int*)&value_cat_63, &value_63_1_7_default, cat_63_enum_vals, "cat_63", true },
  { 65, (int*)&value_cat_65, &value_65_1_6_default, cat_65_enum_vals, "cat_65", true },
  { 150, (int*)&value_cat_150, &value_150_3_0_default, cat_150_enum_vals, "cat_150", true },
  { 205, (int*)&value_cat_205, &value_205_1_0_default, cat_205_enum_vals, "cat_205", true },
  { 240, (int*)&value_cat_240, &value_240_1_3_default, cat_240_enum_vals, "cat_240", true },
  { 247, (int*)&value_cat_247, &value_247_1_3_default, cat_247_enum_vals, "cat_247", true }
};
static int expand_var_0;
static int expand_var_1;
static int expand_var_2;
static int expand_var_3;
static int expand_var_4;
static int expand_var_5;
static int expand_var_6;
static int expand_var_7;
static int expand_var_8;
static int expand_var_9;
static int expand_var_10;
static int expand_var_11;
static int expand_var_12;
static int expand_var_13;
static int expand_var_14;
static int expand_var_15;
static int expand_var_16;
static int expand_var_17;
static int expand_var_18;
static int expand_var_19;
static int expand_var_20;
static int expand_var_21;
static int expand_var_22;
static int expand_var_23;
static int expand_var_24;
static int expand_var_25;
static int expand_var_26;
static int expand_var_27;
static int expand_var_28;
static int expand_var_29;
static int expand_var_30;
static int expand_var_31;
static int expand_var_32;
static int expand_var_33;
static int expand_var_34;
static int expand_var_35;
static int expand_var_36;
static int expand_var_37;
static int expand_var_38;
static int expand_var_39;
static int expand_var_40;
static int expand_var_41;
static int expand_var_42;
static int expand_var_43;
static int expand_var_44;
static int expand_var_45;
static int expand_var_46;
static int expand_var_47;
static int expand_var_48;
static int expand_var_49;
static int expand_var_50;
static int expand_var_51;
static int expand_var_52;
static int expand_var_53;
static int expand_var_54;
static int expand_var_55;
static int expand_var_56;
static int expand_var_57;
static int expand_var_58;
static int expand_var_59;
static int expand_var_60;
static int expand_var_61;
static int expand_var_62;
static int expand_var_63;
static int expand_var_64;
static int expand_var_65;
static int expand_var_66;
static int expand_var_67;
static int expand_var_68;
static int expand_var_69;
static int expand_var_70;
static int expand_var_71;
static int expand_var_72;
static int expand_var_73;
static int expand_var_74;
static int expand_var_75;
static int expand_var_76;
static int expand_var_77;
static int expand_var_78;
static int expand_var_79;
static int expand_var_80;
static int expand_var_81;
static int expand_var_82;
static int expand_var_83;
static int expand_var_84;
static int expand_var_85;
static int expand_var_86;
static int expand_var_87;
static int expand_var_88;
static int expand_var_89;
static int expand_var_90;
static int expand_var_91;
static int expand_var_92;
static int expand_var_93;
static int expand_var_94;
static int expand_var_95;
static int expand_var_96;
static int expand_var_97;
static int expand_var_98;
static int expand_var_99;
static int expand_var_100;
static int expand_var_101;
static int expand_var_102;
static int expand_var_103;
static int expand_var_104;
static int expand_var_105;
static int expand_var_106;
static int expand_var_107;
static int expand_var_108;
static int expand_var_109;
static int expand_var_110;
static int expand_var_111;
static int expand_var_112;
static int expand_var_113;
static int expand_var_114;
static int expand_var_115;
static int expand_var_116;
static int expand_var_117;
static int expand_var_118;
static int expand_var_119;
static int expand_var_120;
static int expand_var_121;
static int expand_var_122;
static int expand_var_123;
static int expand_var_124;
static int expand_var_125;
static int expand_var_126;
static int expand_var_127;
static int expand_var_128;
static int expand_var_129;
static int expand_var_130;
static int expand_var_131;
static int expand_var_132;
static int expand_var_133;
static int expand_var_134;
static int expand_var_135;
static int expand_var_136;
static int expand_var_137;
static int expand_var_138;
static int expand_var_139;
static int expand_var_140;
static int expand_var_141;
static int expand_var_142;
static int expand_var_143;
static int expand_var_144;
static int expand_var_145;
static int expand_var_146;
static int expand_var_147;
static int expand_var_148;
static int expand_var_149;
static int expand_var_150;
static int expand_var_151;
static int expand_var_152;
static int expand_var_153;
static int expand_var_154;
static int expand_var_155;
static int expand_var_156;
static int expand_var_157;
static int expand_var_158;
static int expand_var_159;
static int expand_var_160;
static int expand_var_161;
static int expand_var_162;
static int expand_var_163;
static int expand_var_164;
static int expand_var_165;
static int expand_var_166;
static int expand_var_167;
static int expand_var_168;
static int expand_var_169;
static int expand_var_170;
static int expand_var_171;
static int expand_var_172;
static int expand_var_173;
static int expand_var_174;
static int expand_var_175;
static int expand_var_176;
static int expand_var_177;
static int expand_var_178;
static int expand_var_179;
static int expand_var_180;
static int expand_var_181;
static int expand_var_182;
static int expand_var_183;
static int expand_var_184;
static int expand_var_185;
static int expand_var_186;
static int expand_var_187;
static int expand_var_188;
static int expand_var_189;
static int expand_var_190;
static int expand_var_191;
static int expand_var_192;
static int expand_var_193;
static int expand_var_194;
static int expand_var_195;
static int expand_var_196;
static int expand_var_197;
static int expand_var_198;
static int expand_var_199;
static int expand_var_200;
static int expand_var_201;
static int expand_var_202;
static int expand_var_203;
static int expand_var_204;
static int expand_var_205;
static int expand_var_206;
static int expand_var_207;
static int expand_var_208;
static int expand_var_209;
static int expand_var_210;
static int expand_var_211;
static int expand_var_212;
static int expand_var_213;
static int expand_var_214;
static int expand_var_215;
static int expand_var_216;
static int expand_var_217;
static int expand_var_218;
static int expand_var_219;
static int expand_var_220;
static int expand_var_221;
static int expand_var_222;
static int expand_var_223;
static int expand_var_224;
static int expand_var_225;
static int expand_var_226;
static int expand_var_227;
static int expand_var_228;
static int expand_var_229;
static int expand_var_230;
static int expand_var_231;
static int expand_var_232;
static int expand_var_233;
static int expand_var_234;
static int expand_var_235;
static int expand_var_236;
static int expand_var_237;
static int expand_var_238;
static int expand_var_239;
static int expand_var_240;
static int expand_var_241;
static int expand_var_242;
static int expand_var_243;
static int expand_var_244;
static int expand_var_245;
static int expand_var_246;
static int expand_var_247;
static int expand_var_248;
static int expand_var_249;
static int expand_var_250;
static int expand_var_251;
static int expand_var_252;
static int expand_var_253;
static int expand_var_254;
static int expand_var_255;
static int expand_var_256;
static int expand_var_257;
static int expand_var_258;
static int expand_var_259;
static int expand_var_260;
static int expand_var_261;
static int expand_var_262;
static int expand_var_263;
static int expand_var_264;
static int expand_var_265;
static int expand_var_266;
static int expand_var_267;
static int expand_var_268;
static int expand_var_269;
static int expand_var_270;
static int expand_var_271;
static int expand_var_272;
static int expand_var_273;
static int expand_var_274;
static int expand_var_275;
static int expand_var_276;
static int expand_var_277;
static int expand_var_278;
static int expand_var_279;
static int expand_var_280;
static int expand_var_281;
static int expand_var_282;
static int expand_var_283;
static int expand_var_284;
static int expand_var_285;
static int expand_var_286;
static int expand_var_287;
static int expand_var_288;
static int expand_var_289;
static int expand_var_290;
static int expand_var_291;
static int expand_var_292;
static int expand_var_293;
static int expand_var_294;
static int expand_var_295;
static int expand_var_296;
static int expand_var_297;
static int expand_var_298;
static int expand_var_299;
static int expand_var_300;
static int expand_var_301;
static int expand_var_302;
static int expand_var_303;
static int expand_var_304;
static int expand_var_305;
static int expand_var_306;
static int expand_var_307;
static int expand_var_308;
static int expand_var_309;
static int expand_var_310;
static int expand_var_311;
static int expand_var_312;
static int expand_var_313;
static int expand_var_314;
static int expand_var_315;
static int expand_var_316;
static int expand_var_317;
static int expand_var_318;
static int expand_var_319;
static int expand_var_320;
static int expand_var_321;
static int expand_var_322;
static int expand_var_323;
static int expand_var_324;
static int expand_var_325;
static int expand_var_326;
static int expand_var_327;
static int expand_var_328;
static int expand_var_329;
static int expand_var_330;
static int expand_var_331;
static int expand_var_332;
static int expand_var_333;
static int expand_var_334;
static int expand_var_335;
static int expand_var_336;
static int expand_var_337;
static int expand_var_338;
static int expand_var_339;
static int expand_var_340;
static int expand_var_341;
static int expand_var_342;
static int expand_var_343;
static int expand_var_344;
static int expand_var_345;
static int expand_var_346;
static int expand_var_347;
static int expand_var_348;
static int expand_var_349;
static int expand_var_350;
static int expand_var_351;
static int expand_var_352;
static int expand_var_353;
static int expand_var_354;
static int expand_var_355;
static int expand_var_356;
static int expand_var_357;
static int expand_var_358;
static int expand_var_359;
static int expand_var_360;
static int expand_var_361;
static int expand_var_362;
static int expand_var_363;
static int expand_var_364;
static int expand_var_365;
static int expand_var_366;
static int expand_var_367;
static int expand_var_368;
static int expand_var_369;
static int expand_var_370;
static int expand_var_371;
static int expand_var_372;
static int expand_var_373;
static int expand_var_374;
static int expand_var_375;
static int expand_var_376;
static int expand_var_377;
static int expand_var_378;
static int expand_var_379;
static int expand_var_380;
static int expand_var_381;
static int expand_var_382;
static int expand_var_383;
static int expand_var_384;
static int expand_var_385;
static int expand_var_386;
static int expand_var_387;
static int expand_var_388;
static int expand_var_389;
static int expand_var_390;
static int expand_var_391;
static int expand_var_392;
static int expand_var_393;
static int expand_var_394;
static int expand_var_395;
static int expand_var_396;
static int expand_var_397;
static int expand_var_398;
static int expand_var_399;
static int expand_var_400;
static int expand_var_401;
static int expand_var_402;
static int expand_var_403;
static int expand_var_404;
static int expand_var_405;
static int expand_var_406;
static int expand_var_407;
static int expand_var_408;
static int expand_var_409;
static int expand_var_410;
static int expand_var_411;
static int expand_var_412;
static int expand_var_413;
static int expand_var_414;
static int expand_var_415;
static int expand_var_416;
static int expand_var_417;
static int expand_var_418;
static int expand_var_419;
static int expand_var_420;
static int expand_var_421;
static int expand_var_422;
static int expand_var_423;
static int expand_var_424;
static int expand_var_425;
static int expand_var_426;
static int expand_var_427;
static int expand_var_428;
static int expand_var_429;
static int expand_var_430;
static int expand_var_431;
static int expand_var_432;
static int expand_var_433;
static int expand_var_434;
static int expand_var_435;
static int expand_var_436;
static int expand_var_437;
static int expand_var_438;
static int expand_var_439;
static int expand_var_440;
static int expand_var_441;
static int expand_var_442;
static int expand_var_443;
static int expand_var_444;
static int expand_var_445;
static int expand_var_446;
static int expand_var_447;
static int expand_var_448;
static int expand_var_449;
static int expand_var_450;
static int expand_var_451;
static int expand_var_452;
static int expand_var_453;
static int expand_var_454;
static int expand_var_455;
static int expand_var_456;
static int expand_var_457;
static int expand_var_458;
static int expand_var_459;
static int expand_var_460;
static int expand_var_461;
static int expand_var_462;
static int expand_var_463;
static int expand_var_464;
static int expand_var_465;
static int expand_var_466;
static int expand_var_467;
static int expand_var_468;
static int expand_var_469;
static int expand_var_470;
static int expand_var_471;
static int expand_var_472;
static int expand_var_473;
static int expand_var_474;
static int expand_var_475;
static int expand_var_476;
static int expand_var_477;
static int expand_var_478;
static int expand_var_479;
static int expand_var_480;
static int expand_var_481;
static int expand_var_482;
static int expand_var_483;
static int expand_var_484;
static int expand_var_485;
static int expand_var_486;
static int expand_var_487;
static int expand_var_488;
static int expand_var_489;
static int expand_var_490;
static int expand_var_491;
static int expand_var_492;
static int expand_var_493;
static int expand_var_494;
static int expand_var_495;
static int expand_var_496;
static int expand_var_497;
static int expand_var_498;
static int expand_var_499;
static int expand_var_500;
static int expand_var_501;
static int expand_var_502;
static int expand_var_503;
static int expand_var_504;
static int expand_var_505;
static int expand_var_506;
static int expand_var_507;
static int expand_var_508;
static int expand_var_509;
static int expand_var_510;
static int expand_var_511;
static int expand_var_512;
static int expand_var_513;
static int expand_var_514;
static int expand_var_515;
static int expand_var_516;
static int expand_var_517;
static int expand_var_518;
static int expand_var_519;
static int expand_var_520;
static int expand_var_521;
static int expand_var_522;
static int expand_var_523;
static int expand_var_524;
static int expand_var_525;
static int expand_var_526;
static int expand_var_527;
static int expand_var_528;
static int expand_var_529;
static int expand_var_530;
static int expand_var_531;
static int expand_var_532;
static int expand_var_533;
static int expand_var_534;
static int expand_var_535;
static int expand_var_536;
static int expand_var_537;
static int expand_var_538;
static int expand_var_539;
static int expand_var_540;
static int expand_var_541;
static int expand_var_542;
static int expand_var_543;
static int expand_var_544;
static int expand_var_545;
static int expand_var_546;
static int expand_var_547;
static int expand_var_548;
static int expand_var_549;
static int expand_var_550;
static int expand_var_551;
static int expand_var_552;
static int expand_var_553;
static int expand_var_554;
static int expand_var_555;
static int expand_var_556;
static int expand_var_557;
static int expand_var_558;
static int expand_var_559;
static int expand_var_560;
static int expand_var_561;
static int expand_var_562;
static int expand_var_563;
static int expand_var_564;
static int expand_var_565;
static int expand_var_566;
static int expand_var_567;
static int expand_var_568;
static int expand_var_569;
static int expand_var_570;
static int expand_var_571;
static int expand_var_572;
static int expand_var_573;
static int expand_var_574;
static int expand_var_575;
static int expand_var_576;
static int expand_var_577;
static int expand_var_578;
static int expand_var_579;
static int expand_var_580;
static int expand_var_581;
static int expand_var_582;
static int expand_var_583;
static int expand_var_584;
static int expand_var_585;
static int expand_var_586;
static int expand_var_587;
static int expand_var_588;
static int expand_var_589;
static int expand_var_590;
static int expand_var_591;
static int expand_var_592;
static int expand_var_593;
static int expand_var_594;
static int expand_var_595;
static int expand_var_596;
static int expand_var_597;
static int expand_var_598;
static int expand_var_599;
static int expand_var_600;
static int expand_var_601;
static int expand_var_602;
static int expand_var_603;
static int expand_var_604;
static int expand_var_605;
static int expand_var_606;
static int expand_var_607;
static int expand_var_608;
static int expand_var_609;
static int expand_var_610;
static int expand_var_611;
static int expand_var_612;
static int expand_var_613;
static int expand_var_614;
static int expand_var_615;
static int expand_var_616;
static int expand_var_617;
static int expand_var_618;
static int expand_var_619;
static int expand_var_620;
static int expand_var_621;
static int expand_var_622;
static int expand_var_623;
static int expand_var_624;
static int expand_var_625;
static int expand_var_626;
static int expand_var_627;
static int expand_var_628;
static int expand_var_629;
static int expand_var_630;
static int expand_var_631;
static int expand_var_632;
static int expand_var_633;
static int expand_var_634;
static int expand_var_635;
static int expand_var_636;
static int expand_var_637;
static int expand_var_638;
static int expand_var_639;
static int expand_var_640;
static int expand_var_641;
static int expand_var_642;
static int expand_var_643;
static int expand_var_644;
static int expand_var_645;
static int expand_var_646;
static int expand_var_647;
static int expand_var_648;
static int expand_var_649;
static int expand_var_650;
static int expand_var_651;
static int expand_var_652;
static int expand_var_653;
static int expand_var_654;
static int expand_var_655;
static int expand_var_656;
static int expand_var_657;
static int expand_var_658;
static int expand_var_659;
static int expand_var_660;
static int expand_var_661;
static int expand_var_662;
static int expand_var_663;
static int expand_var_664;
static int expand_var_665;
static int expand_var_666;
static int expand_var_667;
static int expand_var_668;
static int expand_var_669;
static int expand_var_670;
static int expand_var_671;
static int expand_var_672;
static int expand_var_673;
static int expand_var_674;
static int expand_var_675;
static int expand_var_676;
static int expand_var_677;
static int expand_var_678;
static int expand_var_679;
static int expand_var_680;
static int expand_var_681;
static int expand_var_682;
static int expand_var_683;
static int expand_var_684;
static int expand_var_685;
static int expand_var_686;
static int expand_var_687;
static int expand_var_688;
static int expand_var_689;
static int expand_var_690;
static int expand_var_691;
static int expand_var_692;
static int expand_var_693;
static int expand_var_694;
static int expand_var_695;
static int expand_var_696;
static int expand_var_697;
static int expand_var_698;
static int expand_var_699;
static int expand_var_700;
static int expand_var_701;
static int expand_var_702;
static int expand_var_703;
static int expand_var_704;
static int expand_var_705;
static int expand_var_706;
static int expand_var_707;
static int expand_var_708;
static int expand_var_709;
static int expand_var_710;
static int expand_var_711;
static int expand_var_712;
static int expand_var_713;
static int expand_var_714;
static int expand_var_715;
static int expand_var_716;
static int expand_var_717;
static int expand_var_718;
static int expand_var_719;
static int expand_var_720;
static int expand_var_721;
static int expand_var_722;
static int expand_var_723;
static int expand_var_724;
static int expand_var_725;
static int expand_var_726;
static int expand_var_727;
static int expand_var_728;
static int expand_var_729;
static int expand_var_730;
static int expand_var_731;
static int expand_var_732;
static int expand_var_733;
static int expand_var_734;
static int expand_var_735;
static int expand_var_736;
static int expand_var_737;
static int expand_var_738;
static int expand_var_739;
static int expand_var_740;
static int expand_var_741;
static int expand_var_742;
static int expand_var_743;
static int expand_var_744;
static int expand_var_745;
static int expand_var_746;
static int expand_var_747;
static int expand_var_748;
static int expand_var_749;
static int expand_var_750;
static int expand_var_751;
static int expand_var_752;
static int expand_var_753;
static int expand_var_754;
static int expand_var_755;
static int expand_var_756;
static int expand_var_757;
static int expand_var_758;
static int expand_var_759;
static int expand_var_760;
static int expand_var_761;
static int expand_var_762;
static int expand_var_763;
static int expand_var_764;
static int expand_var_765;
static int expand_var_766;
static int expand_var_767;
static int expand_var_768;
static int expand_var_769;
static int expand_var_770;
static int expand_var_771;
static int expand_var_772;
static int expand_var_773;
static int expand_var_774;
static int expand_var_775;
static int expand_var_776;
static int expand_var_777;
static int expand_var_778;
static int expand_var_779;
static int expand_var_780;
static int expand_var_781;
static int expand_var_782;
static int expand_var_783;
static int expand_var_784;
static int expand_var_785;
static int expand_var_786;
static int expand_var_787;
static int expand_var_788;
static int expand_var_789;
static int expand_var_790;
static int expand_var_791;
static int expand_var_792;
static int expand_var_793;
static int expand_var_794;
static int expand_var_795;
static int expand_var_796;
static int expand_var_797;
static int expand_var_798;
static int expand_var_799;
static int expand_var_800;
static int expand_var_801;
static int expand_var_802;
static int expand_var_803;
static int expand_var_804;
static int expand_var_805;
static int expand_var_806;
static int expand_var_807;
static int expand_var_808;
static int expand_var_809;
static int expand_var_810;
static int expand_var_811;
static int expand_var_812;
static int expand_var_813;
static int expand_var_814;
static int expand_var_815;
static int expand_var_816;
static int expand_var_817;
static int expand_var_818;
static int expand_var_819;
static int expand_var_820;
static int expand_var_821;
static int expand_var_822;
static int expand_var_823;
static int expand_var_824;
static int expand_var_825;
static int expand_var_826;
static int expand_var_827;
static int expand_var_828;
static int expand_var_829;
static int expand_var_830;
static int expand_var_831;
static int expand_var_832;
static int expand_var_833;
static int expand_var_834;
static int expand_var_835;
static int expand_var_836;
static int expand_var_837;
static int expand_var_838;
static int expand_var_839;
static int expand_var_840;
static int expand_var_841;
static int expand_var_842;
static int expand_var_843;
static int expand_var_844;
static int expand_var_845;
static int expand_var_846;
static int expand_var_847;
static int expand_var_848;
static int expand_var_849;
static int expand_var_850;
static int expand_var_851;
static int expand_var_852;
static int expand_var_853;
static int expand_var_854;
static int expand_var_855;
static int expand_var_856;
static int expand_var_857;
static int expand_var_858;
static int expand_var_859;
static int expand_var_860;
static int expand_var_861;
static int expand_var_862;
static int expand_var_863;
static int expand_var_864;
static int expand_var_865;
static int expand_var_866;
static int expand_var_867;
static int expand_var_868;
static int expand_var_869;
static int expand_var_870;
static int expand_var_871;
static int expand_var_872;
static int expand_var_873;
static int expand_var_874;
static int expand_var_875;
static int expand_var_876;
static int expand_var_877;
static int expand_var_878;
static int expand_var_879;
static int expand_var_880;
static int expand_var_881;
static int expand_var_882;
static int expand_var_883;
static int expand_var_884;
static int expand_var_885;
static int expand_var_886;
static int expand_var_887;
static int expand_var_888;
static int expand_var_889;
static int expand_var_890;
static int expand_var_891;
static int expand_var_892;
static int expand_var_893;
static int expand_var_894;
static int expand_var_895;
static int expand_var_896;
static int expand_var_897;
static int expand_var_898;
static int expand_var_899;
static int expand_var_900;
static int expand_var_901;
static int expand_var_902;
static int expand_var_903;
static int expand_var_904;
static int expand_var_905;
static int expand_var_906;
static int expand_var_907;
static int expand_var_908;
static int expand_var_909;
static int expand_var_910;
static int expand_var_911;
static int expand_var_912;
static int expand_var_913;
static int expand_var_914;
static int expand_var_915;
static int expand_var_916;
static int expand_var_917;
static int expand_var_918;
static int expand_var_919;
static int expand_var_920;
static int expand_var_921;
static int expand_var_922;
static int expand_var_923;
static int expand_var_924;
static int expand_var_925;
static int expand_var_926;
static int expand_var_927;
static int expand_var_928;
static int expand_var_929;
static int expand_var_930;
static int expand_var_931;
static int expand_var_932;
static int expand_var_933;
static int expand_var_934;
static int expand_var_935;
static int expand_var_936;
static int expand_var_937;
static int expand_var_938;
static int expand_var_939;
static int expand_var_940;
static int expand_var_941;
static int expand_var_942;
static int expand_var_943;
static int expand_var_944;
static int expand_var_945;
static int expand_var_946;
static int expand_var_947;
static int expand_var_948;
static int expand_var_949;
static int expand_var_950;
static int expand_var_951;
static int expand_var_952;
static int expand_var_953;
static int expand_var_954;
static int expand_var_955;
static int expand_var_956;
static int expand_var_957;
static int expand_var_958;
static int expand_var_959;
static int expand_var_960;
static int expand_var_961;
static int expand_var_962;
static int expand_var_963;
static int expand_var_964;
static int expand_var_965;
static int expand_var_966;
static int expand_var_967;
static int expand_var_968;
static int expand_var_969;
static int expand_var_970;
static int expand_var_971;
static int expand_var_972;
static int expand_var_973;
static int expand_var_974;
static int expand_var_975;
static int expand_var_976;
static int expand_var_977;
static int expand_var_978;
static int expand_var_979;
static int expand_var_980;
static int expand_var_981;
static int expand_var_982;
static int expand_var_983;
static int expand_var_984;
static int expand_var_985;
static int expand_var_986;
static int expand_var_987;
static int expand_var_988;
static int expand_var_989;
static int expand_var_990;
static int expand_var_991;
static int expand_var_992;
static int expand_var_993;
static int expand_var_994;
static int expand_var_995;
static int expand_var_996;
static int expand_var_997;
static int expand_var_998;
static int expand_var_999;
static int expand_var_1000;
static int expand_var_1001;
static int expand_var_1002;
static int expand_var_1003;
static int expand_var_1004;
static int expand_var_1005;
static int expand_var_1006;
static int expand_var_1007;
static int expand_var_1008;
static int expand_var_1009;
static int expand_var_1010;
static int expand_var_1011;
static int expand_var_1012;
static int expand_var_1013;
static int expand_var_1014;
static int expand_var_1015;
static int expand_var_1016;
static int expand_var_1017;
static int expand_var_1018;
static int expand_var_1019;
static int expand_var_1020;
static int expand_var_1021;
static int expand_var_1022;
static int expand_var_1023;
static int expand_var_1024;
static int expand_var_1025;
static int expand_var_1026;
static int expand_var_1027;
static int expand_var_1028;
static int expand_var_1029;
static int expand_var_1030;
static int expand_var_1031;
static int expand_var_1032;
static int expand_var_1033;
static int expand_var_1034;
static int expand_var_1035;
static int expand_var_1036;
static int expand_var_1037;
static int expand_var_1038;
static int expand_var_1039;
static int expand_var_1040;
static int expand_var_1041;
static int expand_var_1042;
static int expand_var_1043;
static int expand_var_1044;
static int expand_var_1045;
static int expand_var_1046;
static int expand_var_1047;
static int expand_var_1048;
static int expand_var_1049;
static int expand_var_1050;
static int expand_var_1051;
static int expand_var_1052;
static int expand_var_1053;
static int expand_var_1054;
static int expand_var_1055;
static int expand_var_1056;
static int expand_var_1057;
static int expand_var_1058;
static int expand_var_1059;
static int expand_var_1060;
static int expand_var_1061;
static int expand_var_1062;
static int expand_var_1063;
static int expand_var_1064;
static int expand_var_1065;
static int expand_var_1066;
static int expand_var_1067;
static int expand_var_1068;
static int expand_var_1069;
static int expand_var_1070;
static int expand_var_1071;
static int expand_var_1072;
static int expand_var_1073;
static int expand_var_1074;
static int expand_var_1075;
static int expand_var_1076;
static int expand_var_1077;
static int expand_var_1078;
static int expand_var_1079;
static int expand_var_1080;
static int expand_var_1081;
static int expand_var_1082;
static int expand_var_1083;
static int expand_var_1084;
static int expand_var_1085;
static int expand_var_1086;
static int expand_var_1087;
static int expand_var_1088;
static int expand_var_1089;
static int expand_var_1090;
static int expand_var_1091;
static int expand_var_1092;
static int expand_var_1093;
static int expand_var_1094;
static int expand_var_1095;
static int expand_var_1096;
static int expand_var_1097;
static int expand_var_1098;
static int expand_var_1099;
static int expand_var_1100;
static int expand_var_1101;
static int expand_var_1102;
static int expand_var_1103;
static int expand_var_1104;
static int expand_var_1105;
static int expand_var_1106;
static int expand_var_1107;
static int expand_var_1108;
static int expand_var_1109;
static int expand_var_1110;
static int expand_var_1111;
static int expand_var_1112;
static int expand_var_1113;
static int expand_var_1114;
static int expand_var_1115;
static int expand_var_1116;
static int expand_var_1117;
static int expand_var_1118;
static int expand_var_1119;
static int expand_var_1120;
static int expand_var_1121;
static int expand_var_1122;
static int expand_var_1123;
static int expand_var_1124;
static int expand_var_1125;
static int expand_var_1126;
static int expand_var_1127;
static int expand_var_1128;
static int expand_var_1129;
static int expand_var_1130;
static int expand_var_1131;
static int expand_var_1132;
static int expand_var_1133;
static int expand_var_1134;
static int expand_var_1135;
static int expand_var_1136;
static int expand_var_1137;
static int expand_var_1138;
static int expand_var_1139;
static int expand_var_1140;
static int expand_var_1141;
static int expand_var_1142;
static int expand_var_1143;
static int expand_var_1144;
static int expand_var_1145;
static int expand_var_1146;
static int expand_var_1147;
static int expand_var_1148;
static int expand_var_1149;
static int expand_var_1150;
static int expand_var_1151;
static int expand_var_1152;
static int expand_var_1153;
static int expand_var_1154;
static int expand_var_1155;
static int expand_var_1156;
static int expand_var_1157;
static int expand_var_1158;
static int expand_var_1159;
static int expand_var_1160;
static int expand_var_1161;
static int expand_var_1162;
static int expand_var_1163;
static int expand_var_1164;
static int expand_var_1165;
static int expand_var_1166;
static int expand_var_1167;
static int expand_var_1168;
static int expand_var_1169;
static int expand_var_1170;
static int expand_var_1171;
static int expand_var_1172;
static int expand_var_1173;
static int expand_var_1174;
static int expand_var_1175;
static int expand_var_1176;
static int expand_var_1177;
static int expand_var_1178;
static int expand_var_1179;
static int expand_var_1180;
static int expand_var_1181;
static int expand_var_1182;
static int expand_var_1183;
static int expand_var_1184;
static int expand_var_1185;
static int expand_var_1186;
static int expand_var_1187;
static int expand_var_1188;
static int expand_var_1189;
static int expand_var_1190;
static int expand_var_1191;
static int expand_var_1192;
static int expand_var_1193;
static int expand_var_1194;
static int expand_var_1195;
static int expand_var_1196;
static int expand_var_1197;
static int expand_var_1198;
static int expand_var_1199;
static int expand_var_1200;
static int expand_var_1201;
static int expand_var_1202;
static int expand_var_1203;
static int expand_var_1204;
static int expand_var_1205;
static int expand_var_1206;
static int expand_var_1207;
static int expand_var_1208;
static int expand_var_1209;
static int expand_var_1210;
static int expand_var_1211;
static int expand_var_1212;
static int expand_var_1213;
static int expand_var_1214;
static int expand_var_1215;
static int expand_var_1216;
static int expand_var_1217;
static int expand_var_1218;
static int expand_var_1219;
static int expand_var_1220;
static int expand_var_1221;
static int expand_var_1222;
static int expand_var_1223;
static int expand_var_1224;
static int expand_var_1225;
static int expand_var_1226;
static int expand_var_1227;
static int expand_var_1228;
static int expand_var_1229;
static int expand_var_1230;
static int expand_var_1231;
static int expand_var_1232;
static int expand_var_1233;
static int expand_var_1234;
static int expand_var_1235;
static int expand_var_1236;
static int expand_var_1237;
static int expand_var_1238;
static int expand_var_1239;
static int expand_var_1240;
static int expand_var_1241;
static int expand_var_1242;
static int expand_var_1243;
static int expand_var_1244;
static int expand_var_1245;
static int expand_var_1246;
static int expand_var_1247;
static int expand_var_1248;
static int expand_var_1249;
static int expand_var_1250;
static int expand_var_1251;
static int expand_var_1252;
static int expand_var_1253;
static int expand_var_1254;
static int expand_var_1255;
static int expand_var_1256;
static int expand_var_1257;
static int expand_var_1258;
static int expand_var_1259;
static int expand_var_1260;
static int expand_var_1261;
static int expand_var_1262;
static int expand_var_1263;
static int expand_var_1264;
static int expand_var_1265;
static int expand_var_1266;
static int expand_var_1267;
static int expand_var_1268;
static int expand_var_1269;
static int expand_var_1270;
static int expand_var_1271;
static int expand_var_1272;
static int expand_var_1273;
static int expand_var_1274;
static int expand_var_1275;
static int expand_var_1276;
static int expand_var_1277;
static int expand_var_1278;
static int expand_var_1279;
static int expand_var_1280;
static int expand_var_1281;
static int expand_var_1282;
static int expand_var_1283;
static int expand_var_1284;
static int expand_var_1285;
static int expand_var_1286;
static int expand_var_1287;
static int expand_var_1288;
static int expand_var_1289;
static int expand_var_1290;
static int expand_var_1291;
static int expand_var_1292;
static int expand_var_1293;
static int expand_var_1294;
static int expand_var_1295;
static int expand_var_1296;
static int expand_var_1297;
static int expand_var_1298;
static int expand_var_1299;
static int expand_var_1300;
static int expand_var_1301;
static int expand_var_1302;
static int expand_var_1303;
static int expand_var_1304;
static int expand_var_1305;
static int expand_var_1306;
static int expand_var_1307;
static int expand_var_1308;
static int expand_var_1309;
static int expand_var_1310;
static int expand_var_1311;
static int expand_var_1312;
static int expand_var_1313;
static int expand_var_1314;
static int expand_var_1315;
static int expand_var_1316;
static int expand_var_1317;
static int expand_var_1318;
static int expand_var_1319;
static int expand_var_1320;
static int expand_var_1321;
static int expand_var_1322;
static int expand_var_1323;
static int expand_var_1324;
static int expand_var_1325;
static int expand_var_1326;
static int expand_var_1327;
static int expand_var_1328;
static int expand_var_1329;
static int expand_var_1330;
static int expand_var_1331;
static int expand_var_1332;
static int expand_var_1333;
static int expand_var_1334;
static int expand_var_1335;
static int expand_var_1336;
static int expand_var_1337;
static int expand_var_1338;
static int expand_var_1339;
static int expand_var_1340;
static int expand_var_1341;
static int expand_var_1342;
static int expand_var_1343;
static int expand_var_1344;
static int expand_var_1345;
static int expand_var_1346;
static int expand_var_1347;
static int expand_var_1348;
static int expand_var_1349;
static int expand_var_1350;
static int expand_var_1351;
static int expand_var_1352;
static int expand_var_1353;
static int expand_var_1354;
static int expand_var_1355;
static int expand_var_1356;
static int expand_var_1357;
static int expand_var_1358;
static int expand_var_1359;
static int expand_var_1360;
static int expand_var_1361;
static int expand_var_1362;
static int expand_var_1363;
static int expand_var_1364;
static int expand_var_1365;
static int expand_var_1366;
static int expand_var_1367;
static int expand_var_1368;
static int expand_var_1369;
static int expand_var_1370;
static int expand_var_1371;
static int expand_var_1372;
static int expand_var_1373;
static int expand_var_1374;
static int expand_var_1375;
static int expand_var_1376;
static int expand_var_1377;
static int expand_var_1378;
static int expand_var_1379;
static int expand_var_1380;
static int expand_var_1381;
static int expand_var_1382;
static int expand_var_1383;
static int expand_var_1384;
static int expand_var_1385;
static int expand_var_1386;
static int expand_var_1387;
static int expand_var_1388;
static int expand_var_1389;
static int expand_var_1390;
static int expand_var_1391;
static int expand_var_1392;
static int expand_var_1393;
static int expand_var_1394;
static int expand_var_1395;
static int expand_var_1396;
static int expand_var_1397;
static int expand_var_1398;
static int expand_var_1399;
static int expand_var_1400;
static int expand_var_1401;
static int expand_var_1402;
static int expand_var_1403;
static int expand_var_1404;
static int expand_var_1405;
static int expand_var_1406;
static int expand_var_1407;
static int expand_var_1408;
static int expand_var_1409;
static int expand_var_1410;
static int expand_var_1411;
static int expand_var_1412;
static int expand_var_1413;
static int expand_var_1414;
static int expand_var_1415;
static int expand_var_1416;
static int expand_var_1417;
static int expand_var_1418;
static int expand_var_1419;
static int expand_var_1420;
static int expand_var_1421;
static int expand_var_1422;
static int expand_var_1423;
static int expand_var_1424;
static int expand_var_1425;
static int expand_var_1426;
static int expand_var_1427;
static int expand_var_1428;
static int expand_var_1429;
static int expand_var_1430;
static int expand_var_1431;
static int expand_var_1432;
static int expand_var_1433;
static int expand_var_1434;
static int expand_var_1435;
static int expand_var_1436;
static int expand_var_1437;
static int expand_var_1438;
static int expand_var_1439;
static int expand_var_1440;
static int expand_var_1441;
static int expand_var_1442;
static int expand_var_1443;
static int expand_var_1444;
static int expand_var_1445;
static int expand_var_1446;
static int expand_var_1447;
static int expand_var_1448;
static int expand_var_1449;
static int expand_var_1450;
static int expand_var_1451;
static int expand_var_1452;
static int expand_var_1453;
static int expand_var_1454;
static int expand_var_1455;
static int expand_var_1456;
static int expand_var_1457;
static int expand_var_1458;
static int expand_var_1459;
static int expand_var_1460;
static int expand_var_1461;
static int expand_var_1462;
static int expand_var_1463;
static int expand_var_1464;
static int expand_var_1465;
static int expand_var_1466;
static int expand_var_1467;
static int expand_var_1468;
static int expand_var_1469;
static int expand_var_1470;
static int expand_var_1471;
static int expand_var_1472;
static int expand_var_1473;
static int expand_var_1474;
static int expand_var_1475;
static int expand_var_1476;
static int expand_var_1477;
static int expand_var_1478;
static int expand_var_1479;
static int expand_var_1480;
static int expand_var_1481;
static int expand_var_1482;
static int expand_var_1483;
static int expand_var_1484;
static int expand_var_1485;
static int expand_var_1486;
static int expand_var_1487;
static int expand_var_1488;
static int expand_var_1489;
static int expand_var_1490;
static int expand_var_1491;
static int expand_var_1492;
static int expand_var_1493;
static int expand_var_1494;
static int expand_var_1495;
static int expand_var_1496;
static int expand_var_1497;
static int expand_var_1498;
static int expand_var_1499;
static int expand_var_1500;
static int expand_var_1501;
static int expand_var_1502;
static int expand_var_1503;
static int expand_var_1504;
static int expand_var_1505;
static int expand_var_1506;
static int expand_var_1507;
static int expand_var_1508;
static int expand_var_1509;
static int expand_var_1510;
static int expand_var_1511;
static int expand_var_1512;
static int expand_var_1513;
static int expand_var_1514;
static int expand_var_1515;
static int expand_var_1516;
static int expand_var_1517;
static int expand_var_1518;
static int expand_var_1519;
static int expand_var_1520;
static int expand_var_1521;
static int expand_var_1522;
static int expand_var_1523;
static int expand_var_1524;
static int expand_var_1525;
static int expand_var_1526;
static int expand_var_1527;
static int expand_var_1528;
static int expand_var_1529;
static int expand_var_1530;
static int expand_var_1531;
static int expand_var_1532;
static int expand_var_1533;
static int expand_var_1534;
static int expand_var_1535;
static int expand_var_1536;
static int expand_var_1537;
static int expand_var_1538;
static int expand_var_1539;
static int expand_var_1540;
static int expand_var_1541;
static int expand_var_1542;
static int expand_var_1543;
static int expand_var_1544;
static int expand_var_1545;
static int expand_var_1546;
static int expand_var_1547;
static int expand_var_1548;
static int expand_var_1549;
static int expand_var_1550;
static int expand_var_1551;
static int expand_var_1552;
static int expand_var_1553;
static int expand_var_1554;
static int expand_var_1555;
static int expand_var_1556;
static int expand_var_1557;
static int expand_var_1558;
static int expand_var_1559;
static int expand_var_1560;
static int expand_var_1561;
static int expand_var_1562;
static int expand_var_1563;
static int expand_var_1564;
static int expand_var_1565;
static int expand_var_1566;
static int expand_var_1567;
static int expand_var_1568;
static int expand_var_1569;
static int expand_var_1570;
static int expand_var_1571;
static int expand_var_1572;
static int expand_var_1573;
static int expand_var_1574;
static int expand_var_1575;
static int expand_var_1576;
static int expand_var_1577;
static int expand_var_1578;
static int expand_var_1579;
static int expand_var_1580;
static int expand_var_1581;
static int expand_var_1582;
static int expand_var_1583;
static int expand_var_1584;
static int expand_var_1585;
static int expand_var_1586;
static int expand_var_1587;
static int expand_var_1588;
static int expand_var_1589;
static int expand_var_1590;
static int expand_var_1591;
static int expand_var_1592;
static int expand_var_1593;
static int expand_var_1594;
static int expand_var_1595;
static int expand_var_1596;
static int expand_var_1597;
static int expand_var_1598;
static int expand_var_1599;
static int expand_var_1600;
static int expand_var_1601;
static int expand_var_1602;
static int expand_var_1603;
static int expand_var_1604;
static int expand_var_1605;
static int expand_var_1606;
static int expand_var_1607;
static int expand_var_1608;
static int expand_var_1609;
static int expand_var_1610;
static int expand_var_1611;
static int expand_var_1612;
static int expand_var_1613;
static int expand_var_1614;
static int expand_var_1615;
static int expand_var_1616;
static int expand_var_1617;
static int expand_var_1618;
static int expand_var_1619;
static int expand_var_1620;
static int expand_var_1621;
static int expand_var_1622;
static int expand_var_1623;
static int expand_var_1624;
static int expand_var_1625;
static int expand_var_1626;
static int expand_var_1627;
static int expand_var_1628;
static int expand_var_1629;
static int expand_var_1630;
static int expand_var_1631;
static int expand_var_1632;
static int expand_var_1633;
static int expand_var_1634;
static int expand_var_1635;
static int expand_var_1636;
static int expand_var_1637;
static int expand_var_1638;
static int expand_var_1639;
static int expand_var_1640;
static int expand_var_1641;
static int expand_var_1642;
static int expand_var_1643;
static int expand_var_1644;
static int expand_var_1645;
static int expand_var_1646;
static int expand_var_1647;
static int expand_var_1648;
static int expand_var_1649;
static int expand_var_1650;
static int expand_var_1651;
static int expand_var_1652;
static int expand_var_1653;
static int expand_var_1654;
static int expand_var_1655;
static int expand_var_1656;
static int expand_var_1657;
static int expand_var_1658;
static int expand_var_1659;
static int expand_var_1660;
static int expand_var_1661;
static int expand_var_1662;
static int expand_var_1663;
static int expand_var_1664;
static int expand_var_1665;
static int expand_var_1666;
static int expand_var_1667;
static int expand_var_1668;
static int expand_var_1669;
static int expand_var_1670;
static int expand_var_1671;
static int expand_var_1672;
static int expand_var_1673;
static int expand_var_1674;
static int expand_var_1675;
static int expand_var_1676;
static int expand_var_1677;
static int expand_var_1678;
static int expand_var_1679;
static int expand_var_1680;
static int expand_var_1681;
static int expand_var_1682;
static int expand_var_1683;
static int expand_var_1684;
static int expand_var_1685;
static int expand_var_1686;
static int expand_var_1687;
static int expand_var_1688;
static int expand_var_1689;
static int expand_var_1690;
static int expand_var_1691;
static int expand_var_1692;
static int expand_var_1693;
static int expand_var_1694;
static int expand_var_1695;
static int expand_var_1696;
static int expand_var_1697;
static int expand_var_1698;
static int expand_var_1699;
static int expand_var_1700;
static int expand_var_1701;
static int expand_var_1702;
static int expand_var_1703;
static int expand_var_1704;
static int expand_var_1705;
static int expand_var_1706;
static int expand_var_1707;
static int expand_var_1708;
static int expand_var_1709;
static int expand_var_1710;
static int expand_var_1711;
static int expand_var_1712;
static int expand_var_1713;
static int expand_var_1714;
static int expand_var_1715;
static int expand_var_1716;
static int expand_var_1717;
static int expand_var_1718;
static int expand_var_1719;
static int expand_var_1720;
static int expand_var_1721;
static int expand_var_1722;
static int expand_var_1723;
static int expand_var_1724;
static int expand_var_1725;
static int expand_var_1726;
static int expand_var_1727;
static int expand_var_1728;
static int expand_var_1729;
static int expand_var_1730;
static int expand_var_1731;
static int expand_var_1732;
static int expand_var_1733;
static int expand_var_1734;
static int expand_var_1735;
static int expand_var_1736;
static int expand_var_1737;
static int expand_var_1738;
static int expand_var_1739;
static int expand_var_1740;
static int expand_var_1741;
static int expand_var_1742;
static int expand_var_1743;
static int expand_var_1744;
static int expand_var_1745;
static int expand_var_1746;
static int expand_var_1747;
static int expand_var_1748;
static int expand_var_1749;
static int expand_var_1750;
static int expand_var_1751;
static int expand_var_1752;
static int expand_var_1753;
static int expand_var_1754;
static int expand_var_1755;
static int expand_var_1756;
static int expand_var_1757;
static int expand_var_1758;
static int expand_var_1759;
static int expand_var_1760;
static int expand_var_1761;
static int expand_var_1762;
static int expand_var_1763;
static int expand_var_1764;
static int expand_var_1765;
static int expand_var_1766;
static int expand_var_1767;
static int expand_var_1768;
static int expand_var_1769;
static int expand_var_1770;
static int expand_var_1771;
static int expand_var_1772;
static int expand_var_1773;
static int expand_var_1774;
static int expand_var_1775;
static int expand_var_1776;
static int expand_var_1777;
static int expand_var_1778;
static int expand_var_1779;
static int expand_var_1780;
static int expand_var_1781;
static int expand_var_1782;
static int expand_var_1783;
static int expand_var_1784;
static int expand_var_1785;
static int expand_var_1786;
static int expand_var_1787;
static int expand_var_1788;
static int expand_var_1789;
static int expand_var_1790;
static int expand_var_1791;
static int expand_var_1792;
static int expand_var_1793;
static int expand_var_1794;
static int expand_var_1795;
static int expand_var_1796;
static int expand_var_1797;
static int expand_var_1798;
static int expand_var_1799;
static int expand_var_1800;
static int expand_var_1801;
static int expand_var_1802;
static int expand_var_1803;
static int expand_var_1804;
static int expand_var_1805;
static int expand_var_1806;
static int expand_var_1807;
static int expand_var_1808;
static int expand_var_1809;
static int expand_var_1810;
static int expand_var_1811;
static int expand_var_1812;
static int expand_var_1813;
static int expand_var_1814;
static int expand_var_1815;
static int expand_var_1816;
static int expand_var_1817;
static int expand_var_1818;
static int expand_var_1819;
static int expand_var_1820;
static int expand_var_1821;
static int expand_var_1822;
static int expand_var_1823;
static int expand_var_1824;
static int expand_var_1825;
static int expand_var_1826;
static int expand_var_1827;
static int expand_var_1828;
static int expand_var_1829;
static int expand_var_1830;
static int expand_var_1831;
static int expand_var_1832;
static int expand_var_1833;
static int expand_var_1834;
static int expand_var_1835;
static int expand_var_1836;
static int expand_var_1837;
static int expand_var_1838;
static int expand_var_1839;
static int expand_var_1840;
static int expand_var_1841;
static int expand_var_1842;
static int expand_var_1843;
static int expand_var_1844;
static int expand_var_1845;
static int expand_var_1846;
static int expand_var_1847;
static int expand_var_1848;
static int expand_var_1849;
static int expand_var_1850;
static int expand_var_1851;
static int expand_var_1852;
static int expand_var_1853;
static int expand_var_1854;
static int expand_var_1855;
static int expand_var_1856;
static int expand_var_1857;
static int expand_var_1858;
static int expand_var_1859;
static int expand_var_1860;
static int expand_var_1861;
static int expand_var_1862;
static int expand_var_1863;
static int expand_var_1864;
static int expand_var_1865;
static int expand_var_1866;
static int expand_var_1867;
static int expand_var_1868;
static int expand_var_1869;
static int expand_var_1870;
static int expand_var_1871;
static int expand_var_1872;
static int expand_var_1873;
static int expand_var_1874;
static int expand_var_1875;
static int expand_var_1876;
static int expand_var_1877;
static int expand_var_1878;
static int expand_var_1879;
static int expand_var_1880;
static int expand_var_1881;
static int expand_var_1882;
static int expand_var_1883;
static int expand_var_1884;
static int expand_var_1885;
static int expand_var_1886;
static int expand_var_1887;
static int expand_var_1888;
static int expand_var_1889;
static int expand_var_1890;
static int expand_var_1891;
static int expand_var_1892;
static int expand_var_1893;
static int expand_var_1894;
static int expand_var_1895;
static int expand_var_1896;
static int expand_var_1897;
static int expand_var_1898;
static int expand_var_1899;
static int expand_var_1900;
static int expand_var_1901;
static int expand_var_1902;
static int expand_var_1903;
static int expand_var_1904;
static int expand_var_1905;
static int expand_var_1906;
static int expand_var_1907;
static int expand_var_1908;
static int expand_var_1909;
static int expand_var_1910;
static int expand_var_1911;
static int expand_var_1912;
static int expand_var_1913;
static int expand_var_1914;
static int expand_var_1915;
static int expand_var_1916;
static int expand_var_1917;
static int expand_var_1918;
static int expand_var_1919;
static int expand_var_1920;
static int expand_var_1921;
static int expand_var_1922;
static int expand_var_1923;
static int expand_var_1924;
static int expand_var_1925;
static int expand_var_1926;
static int expand_var_1927;
static int expand_var_1928;
static int expand_var_1929;
static int expand_var_1930;
static int expand_var_1931;
static int expand_var_1932;
static int expand_var_1933;
static int expand_var_1934;
static int expand_var_1935;
static int expand_var_1936;
static int expand_var_1937;
static int expand_var_1938;
static int expand_var_1939;
static int expand_var_1940;
static int expand_var_1941;
static int expand_var_1942;
static int expand_var_1943;
static int expand_var_1944;
static int expand_var_1945;
static int expand_var_1946;
static int expand_var_1947;
static int expand_var_1948;
static int expand_var_1949;
static int expand_var_1950;
static int expand_var_1951;
static int expand_var_1952;
static int expand_var_1953;
static int expand_var_1954;
static int expand_var_1955;
static int expand_var_1956;
static int expand_var_1957;
static int expand_var_1958;
static int expand_var_1959;
static int expand_var_1960;
static int expand_var_1961;
static int expand_var_1962;
static int expand_var_1963;
static int expand_var_1964;
static int expand_var_1965;
static int expand_var_1966;
static int expand_var_1967;
static int expand_var_1968;
static int expand_var_1969;
static int expand_var_1970;
static int expand_var_1971;
static int expand_var_1972;
static int expand_var_1973;
static int expand_var_1974;
static int expand_var_1975;
static int expand_var_1976;
static int expand_var_1977;
static int expand_var_1978;
static int expand_var_1979;
static int expand_var_1980;
static int expand_var_1981;
static int expand_var_1982;
static int expand_var_1983;
static int expand_var_1984;
static int expand_var_1985;
static int expand_var_1986;
static int expand_var_1987;
static int expand_var_1988;
static int expand_var_1989;
static int expand_var_1990;
static int expand_var_1991;
static int expand_var_1992;
static int expand_var_1993;
static int expand_var_1994;
static int expand_var_1995;
static int expand_var_1996;
static int expand_var_1997;
static int expand_var_1998;
static int expand_var_1999;
static int expand_var_2000;
static int expand_var_2001;
static int expand_var_2002;
static int expand_var_2003;
static int expand_var_2004;
static int expand_var_2005;
static int expand_var_2006;
static int expand_var_2007;
static int expand_var_2008;
static int expand_var_2009;
static int expand_var_2010;
static int expand_var_2011;
static int expand_var_2012;
static int expand_var_2013;
static int expand_var_2014;
static int expand_var_2015;
static int expand_var_2016;
static int expand_var_2017;
static int expand_var_2018;
static int expand_var_2019;
static int expand_var_2020;
static int expand_var_2021;
static int expand_var_2022;
static int expand_var_2023;
static int expand_var_2024;
static int expand_var_2025;
static int expand_var_2026;
static int expand_var_2027;
static int expand_var_2028;
static int expand_var_2029;
static int expand_var_2030;
static int expand_var_2031;
static int expand_var_2032;
static int expand_var_2033;
static int expand_var_2034;
static int expand_var_2035;
static int expand_var_2036;
static int expand_var_2037;
static int expand_var_2038;
static int expand_var_2039;
static int expand_var_2040;
static int expand_var_2041;
static int expand_var_2042;
static int expand_var_2043;
static int expand_var_2044;
static int expand_var_2045;
static int expand_var_2046;
static int expand_var_2047;
static int expand_var_2048;
static int expand_var_2049;
static int expand_var_2050;
static int expand_var_2051;
static int expand_var_2052;
static int expand_var_2053;
static int expand_var_2054;
static int expand_var_2055;
static int expand_var_2056;
static int expand_var_2057;
static int expand_var_2058;
static int expand_var_2059;
static int expand_var_2060;
static int expand_var_2061;
static int expand_var_2062;
static int expand_var_2063;
static int expand_var_2064;
static int expand_var_2065;
static int expand_var_2066;
static int expand_var_2067;
static int expand_var_2068;
static int expand_var_2069;
static int expand_var_2070;
static int expand_var_2071;
static int expand_var_2072;
static int expand_var_2073;
static int expand_var_2074;
static int expand_var_2075;
static int expand_var_2076;
static int expand_var_2077;
static int expand_var_2078;
static int expand_var_2079;
static int expand_var_2080;
static int expand_var_2081;
static int expand_var_2082;
static int expand_var_2083;
static int expand_var_2084;
static int expand_var_2085;
static int expand_var_2086;
static int expand_var_2087;
static int expand_var_2088;
static int expand_var_2089;
static int expand_var_2090;
static int expand_var_2091;
static int expand_var_2092;
static int expand_var_2093;
static int expand_var_2094;
static int expand_var_2095;
static int expand_var_2096;
static int expand_var_2097;
static int expand_var_2098;
static int expand_var_2099;
static int expand_var_2100;
static int expand_var_2101;
static int expand_var_2102;
static int expand_var_2103;
static int expand_var_2104;
static int expand_var_2105;
static int expand_var_2106;
static int expand_var_2107;
static int expand_var_2108;
static int expand_var_2109;
static int expand_var_2110;
static int expand_var_2111;
static int expand_var_2112;
static int expand_var_2113;
static int expand_var_2114;
static int expand_var_2115;
static int expand_var_2116;
static int expand_var_2117;
static int expand_var_2118;
static int expand_var_2119;
static int expand_var_2120;
static int expand_var_2121;
static int expand_var_2122;
static int expand_var_2123;
static int expand_var_2124;
static int expand_var_2125;
static int expand_var_2126;
static int expand_var_2127;
static int expand_var_2128;
static int expand_var_2129;
static int expand_var_2130;
static int expand_var_2131;
static int expand_var_2132;
static int expand_var_2133;
static int expand_var_2134;
static int expand_var_2135;
static int expand_var_2136;
static int expand_var_2137;
static int expand_var_2138;
static int expand_var_2139;
static int expand_var_2140;
static int expand_var_2141;
static int expand_var_2142;
static int expand_var_2143;
static int expand_var_2144;
static int expand_var_2145;
static int expand_var_2146;
static int expand_var_2147;
static int expand_var_2148;
static int expand_var_2149;
static int expand_var_2150;
static int expand_var_2151;
static int expand_var_2152;
static int expand_var_2153;
static int expand_var_2154;
static int expand_var_2155;
static int expand_var_2156;
static int expand_var_2157;
static int expand_var_2158;
static int expand_var_2159;
static int expand_var_2160;
static int expand_var_2161;
static int expand_var_2162;
static int expand_var_2163;
static int expand_var_2164;
static int expand_var_2165;
static int expand_var_2166;
static int expand_var_2167;
static int expand_var_2168;
static int expand_var_2169;
static int expand_var_2170;
static int expand_var_2171;
static int expand_var_2172;
static int expand_var_2173;
static int expand_var_2174;
static int expand_var_2175;
static int expand_var_2176;
static int expand_var_2177;
static int expand_var_2178;
static int expand_var_2179;
static int expand_var_2180;
static int expand_var_2181;
static int expand_var_2182;
static int expand_var_2183;
static int expand_var_2184;
static int expand_var_2185;
static int expand_var_2186;
static int expand_var_2187;
static int expand_var_2188;
static int expand_var_2189;
static int expand_var_2190;
static int expand_var_2191;
static int expand_var_2192;
static int expand_var_2193;
static int expand_var_2194;
static int expand_var_2195;
static int expand_var_2196;
static int expand_var_2197;
static int expand_var_2198;
static int expand_var_2199;
static int expand_var_2200;
static int expand_var_2201;
static int expand_var_2202;
static int expand_var_2203;
static int expand_var_2204;
static int expand_var_2205;
static int expand_var_2206;
static int expand_var_2207;
static int expand_var_2208;
static int expand_var_2209;
static int expand_var_2210;
static int expand_var_2211;
static int expand_var_2212;
static int expand_var_2213;
static int expand_var_2214;
static int expand_var_2215;
static int expand_var_2216;
static int expand_var_2217;
static int expand_var_2218;
static int expand_var_2219;
static int expand_var_2220;
static int expand_var_2221;
static int expand_var_2222;
static int expand_var_2223;
static int expand_var_2224;
static int expand_var_2225;
static int expand_var_2226;
static int expand_var_2227;
static int expand_var_2228;
static int expand_var_2229;
static int expand_var_2230;
static int expand_var_2231;
static int expand_var_2232;
static int expand_var_2233;
static int expand_var_2234;
static int expand_var_2235;
static int expand_var_2236;
static int expand_var_2237;
static int expand_var_2238;
static int expand_var_2239;
static int expand_var_2240;
static int expand_var_2241;
static int expand_var_2242;
static int expand_var_2243;
static int expand_var_2244;
static int expand_var_2245;
static int expand_var_2246;
static int expand_var_2247;
static int expand_var_2248;
static int expand_var_2249;
static int expand_var_2250;
static int expand_var_2251;
static int expand_var_2252;
static int expand_var_2253;
static int expand_var_2254;
static int expand_var_2255;
static int expand_var_2256;
static int expand_var_2257;
static int expand_var_2258;
static int expand_var_2259;
static int expand_var_2260;
static int expand_var_2261;
static int expand_var_2262;
static int expand_var_2263;
static int expand_var_2264;
static int expand_var_2265;
static int expand_var_2266;
static int expand_var_2267;
static int expand_var_2268;
static int expand_var_2269;
static int expand_var_2270;
static int expand_var_2271;
static int expand_var_2272;
static int expand_var_2273;
static int expand_var_2274;
static int expand_var_2275;
static int expand_var_2276;
static int expand_var_2277;
static int expand_var_2278;
static int expand_var_2279;
static int expand_var_2280;
static int expand_var_2281;
static int expand_var_2282;
static int expand_var_2283;
static int expand_var_2284;
static int expand_var_2285;
static int expand_var_2286;
static int expand_var_2287;
static int expand_var_2288;
static int expand_var_2289;
static int expand_var_2290;
static int expand_var_2291;
static int expand_var_2292;
static int expand_var_2293;
static int expand_var_2294;
static int expand_var_2295;
static int expand_var_2296;
static int expand_var_2297;
static int expand_var_2298;
static int expand_var_2299;
static int expand_var_2300;
static int expand_var_2301;
static int expand_var_2302;
static int expand_var_2303;
static int expand_var_2304;
static int expand_var_2305;
static int expand_var_2306;
static int expand_var_2307;
static int expand_var_2308;
static int expand_var_2309;
static int expand_var_2310;
static int expand_var_2311;
static int expand_var_2312;
static int expand_var_2313;
static int expand_var_2314;
static int expand_var_2315;
static int expand_var_2316;
static int expand_var_2317;
static int expand_var_2318;
static int expand_var_2319;
static int expand_var_2320;
static int expand_var_2321;
static int expand_var_2322;
static int expand_var_2323;
static int expand_var_2324;
static int expand_var_2325;
static int expand_var_2326;
static int expand_var_2327;
static int expand_var_2328;
static int expand_var_2329;
static int expand_var_2330;
static int expand_var_2331;
static int expand_var_2332;
static int expand_var_2333;
static int expand_var_2334;
static int expand_var_2335;
static int expand_var_2336;
static int expand_var_2337;
static int expand_var_2338;
static int expand_var_2339;
static int expand_var_2340;
static int expand_var_2341;
static int expand_var_2342;
static int expand_var_2343;
static int expand_var_2344;
static int expand_var_2345;
static int expand_var_2346;
static int expand_var_2347;
static int expand_var_2348;
static int expand_var_2349;
static int expand_var_2350;
static int expand_var_2351;
static int expand_var_2352;
static int expand_var_2353;
static int expand_var_2354;
static int expand_var_2355;
static int expand_var_2356;
static int expand_var_2357;
static int expand_var_2358;
static int expand_var_2359;
static int expand_var_2360;
static int expand_var_2361;
static int expand_var_2362;
static int expand_var_2363;
static int expand_var_2364;
static int expand_var_2365;
static int expand_var_2366;
static int expand_var_2367;
static int expand_var_2368;
static int expand_var_2369;
static int expand_var_2370;
static int expand_var_2371;
static int expand_var_2372;
static int expand_var_2373;
static int expand_var_2374;
static int expand_var_2375;
static int expand_var_2376;
static int expand_var_2377;
static int expand_var_2378;
static int expand_var_2379;
static int expand_var_2380;
static int expand_var_2381;
static int expand_var_2382;
static int expand_var_2383;
static int expand_var_2384;
static int expand_var_2385;
static int expand_var_2386;
static int expand_var_2387;
static int expand_var_2388;
static int expand_var_2389;
static int expand_var_2390;
static int expand_var_2391;
static int expand_var_2392;
static int expand_var_2393;
static int expand_var_2394;
static int expand_var_2395;
static int expand_var_2396;
static int expand_var_2397;
static int expand_var_2398;
static int expand_var_2399;
static int expand_var_2400;
static int expand_var_2401;
static int expand_var_2402;
static int expand_var_2403;
static int expand_var_2404;
static int expand_var_2405;
static int expand_var_2406;
static int expand_var_2407;
static int expand_var_2408;
static int expand_var_2409;
static int expand_var_2410;
static int expand_var_2411;
static int expand_var_2412;
static int expand_var_2413;
static int expand_var_2414;
static int expand_var_2415;
static int expand_var_2416;
static int expand_var_2417;
static int expand_var_2418;
static int expand_var_2419;
static int expand_var_2420;
static int expand_var_2421;
static int expand_var_2422;
static int expand_var_2423;
static int expand_var_2424;
static int expand_var_2425;
static int expand_var_2426;
static int expand_var_2427;
static int expand_var_2428;
static int expand_var_2429;
static int expand_var_2430;
static int expand_var_2431;
static int expand_var_2432;
static int expand_var_2433;
static int expand_var_2434;
static int expand_var_2435;
static int expand_var_2436;
static int expand_var_2437;
static int expand_var_2438;
static int expand_var_2439;
static int expand_var_2440;
static int expand_var_2441;
static int expand_var_2442;
static int expand_var_2443;
static int expand_var_2444;
static int expand_var_2445;
static int expand_var_2446;
static int expand_var_2447;
static int expand_var_2448;
static int expand_var_2449;
static int expand_var_2450;
static int expand_var_2451;
static int expand_var_2452;
static int expand_var_2453;
static int expand_var_2454;
static int expand_var_2455;
static int expand_var_2456;
static int expand_var_2457;
static int expand_var_2458;
static int expand_var_2459;
static int expand_var_2460;
static int expand_var_2461;
static int expand_var_2462;
static int expand_var_2463;
static int expand_var_2464;
static int expand_var_2465;
static int expand_var_2466;
static int expand_var_2467;
static int expand_var_2468;
static int expand_var_2469;
static int expand_var_2470;
static int expand_var_2471;
static int expand_var_2472;
static int expand_var_2473;
static int expand_var_2474;
static int expand_var_2475;
static int expand_var_2476;
static int expand_var_2477;
static int expand_var_2478;
static int expand_var_2479;
static int expand_var_2480;
static int expand_var_2481;
static int expand_var_2482;
static int expand_var_2483;
static int expand_var_2484;
static int expand_var_2485;
static int expand_var_2486;
static int expand_var_2487;
static int expand_var_2488;
static int expand_var_2489;
static int expand_var_2490;
static int expand_var_2491;
static int expand_var_2492;
static int expand_var_2493;
static int expand_var_2494;
static int expand_var_2495;
static int expand_var_2496;
static int expand_var_2497;
static int expand_var_2498;
static int expand_var_2499;
static int expand_var_2500;
static int expand_var_2501;
static int expand_var_2502;
static int expand_var_2503;
static int expand_var_2504;
static int expand_var_2505;
static int expand_var_2506;
static int expand_var_2507;
static int expand_var_2508;
static int expand_var_2509;
static int expand_var_2510;
static int expand_var_2511;
static int expand_var_2512;
static int expand_var_2513;
static int expand_var_2514;
static int expand_var_2515;
static int expand_var_2516;
static int expand_var_2517;
static int expand_var_2518;
static int expand_var_2519;
static int expand_var_2520;
static int expand_var_2521;
static int expand_var_2522;
static int expand_var_2523;
static int expand_var_2524;
static int expand_var_2525;
static int expand_var_2526;
static int expand_var_2527;
static int expand_var_2528;
static int expand_var_2529;
static int expand_var_2530;
static int expand_var_2531;
static int expand_var_2532;
static int expand_var_2533;
static int expand_var_2534;
static int expand_var_2535;
static int expand_var_2536;
static int expand_var_2537;
static int expand_var_2538;
static int expand_var_2539;
static int expand_var_2540;
static int expand_var_2541;
static int expand_var_2542;
static int expand_var_2543;
static int expand_var_2544;
static int expand_var_2545;
static int expand_var_2546;
static int expand_var_2547;
static int expand_var_2548;
static int expand_var_2549;
static int expand_var_2550;
static int expand_var_2551;
static int expand_var_2552;
static int expand_var_2553;
static int expand_var_2554;
static int expand_var_2555;
static int expand_var_2556;
static int expand_var_2557;
static int expand_var_2558;
static int expand_var_2559;
static int expand_var_2560;
static int expand_var_2561;
static int expand_var_2562;
static int expand_var_2563;
static int expand_var_2564;
static int expand_var_2565;
static int expand_var_2566;
static int expand_var_2567;
static int expand_var_2568;
static int expand_var_2569;
static int expand_var_2570;
static int expand_var_2571;
static int expand_var_2572;
static int expand_var_2573;
static int expand_var_2574;
static int expand_var_2575;
static int expand_var_2576;
static int expand_var_2577;
static int expand_var_2578;
static int expand_var_2579;
static int expand_var_2580;
static int expand_var_2581;
static int expand_var_2582;
static int expand_var_2583;
static int expand_var_2584;
static int expand_var_2585;
static int expand_var_2586;
static int expand_var_2587;
static int expand_var_2588;
static int expand_var_2589;
static int expand_var_2590;
static int expand_var_2591;
static int expand_var_2592;
static int expand_var_2593;
static int expand_var_2594;
static int expand_var_2595;
static int expand_var_2596;
static int expand_var_2597;
static int expand_var_2598;
static int expand_var_2599;
static int expand_var_2600;
static int expand_var_2601;
static int expand_var_2602;
static int expand_var_2603;
static int expand_var_2604;
static int expand_var_2605;
static int expand_var_2606;
static int expand_var_2607;
static int expand_var_2608;
static int expand_var_2609;
static int expand_var_2610;
static int expand_var_2611;
static int expand_var_2612;
static int expand_var_2613;
static int expand_var_2614;
static int expand_var_2615;
static int expand_var_2616;
static int expand_var_2617;
static int expand_var_2618;
static int expand_var_2619;
static int expand_var_2620;
static int expand_var_2621;
static int expand_var_2622;
static int expand_var_2623;
static int expand_var_2624;
static int expand_var_2625;
static int expand_var_2626;
static int expand_var_2627;
static int expand_var_2628;
static int expand_var_2629;
static int expand_var_2630;
static int expand_var_2631;
static int expand_var_2632;
static int expand_var_2633;
static int expand_var_2634;
static int expand_var_2635;
static int expand_var_2636;
static int expand_var_2637;
static int expand_var_2638;
static int expand_var_2639;
static int expand_var_2640;
static int expand_var_2641;
static int expand_var_2642;
static int expand_var_2643;
static int expand_var_2644;
static int expand_var_2645;
static int expand_var_2646;
static int expand_var_2647;
static int expand_var_2648;
static int expand_var_2649;
static int expand_var_2650;
static int expand_var_2651;
static int expand_var_2652;
static int expand_var_2653;
static int expand_var_2654;
static int expand_var_2655;
static int expand_var_2656;
static int expand_var_2657;
static int expand_var_2658;
static int expand_var_2659;
static int expand_var_2660;
static int expand_var_2661;
static int expand_var_2662;
static int expand_var_2663;
static int expand_var_2664;
static int expand_var_2665;
static int expand_var_2666;
static int expand_var_2667;
static int expand_var_2668;
static int expand_var_2669;
static int expand_var_2670;
static int expand_var_2671;
static int expand_var_2672;
static int expand_var_2673;
static int expand_var_2674;
static int expand_var_2675;
static int expand_var_2676;
static int expand_var_2677;
static int expand_var_2678;
static int expand_var_2679;
static int expand_var_2680;
static int expand_var_2681;
static int expand_var_2682;
static int expand_var_2683;
static int expand_var_2684;
static int expand_var_2685;
static int expand_var_2686;
static int expand_var_2687;
static int expand_var_2688;
static int expand_var_2689;
static int expand_var_2690;
static int expand_var_2691;
static int expand_var_2692;
static int expand_var_2693;
static int expand_var_2694;
static int expand_var_2695;
static int expand_var_2696;
static int expand_var_2697;
static int expand_var_2698;
static int expand_var_2699;
static int expand_var_2700;
static int expand_var_2701;
static int expand_var_2702;
static int expand_var_2703;
static int expand_var_2704;
static int expand_var_2705;
static int expand_var_2706;
static int expand_var_2707;
static int expand_var_2708;
static int expand_var_2709;
static int expand_var_2710;
static int expand_var_2711;
static int expand_var_2712;
static int expand_var_2713;
static int expand_var_2714;
static int expand_var_2715;
static int expand_var_2716;
static int expand_var_2717;
static int expand_var_2718;
static int expand_var_2719;
static int expand_var_2720;
static int expand_var_2721;
static int expand_var_2722;
static int expand_var_2723;
static int expand_var_2724;
static int expand_var_2725;
static int expand_var_2726;
static int expand_var_2727;
static int expand_var_2728;
static int expand_var_2729;
static int expand_var_2730;
static int expand_var_2731;
static int expand_var_2732;
static int expand_var_2733;
static int expand_var_2734;
static int expand_var_2735;
static int expand_var_2736;
static int expand_var_2737;
static int expand_var_2738;
static int expand_var_2739;
static int expand_var_2740;
static int expand_var_2741;
static int expand_var_2742;
static int expand_var_2743;
static int expand_var_2744;
static int expand_var_2745;
static int expand_var_2746;
static int expand_var_2747;
static int expand_var_2748;
static int expand_var_2749;
static int expand_var_2750;
static int expand_var_2751;
static int expand_var_2752;
static int expand_var_2753;
static int expand_var_2754;
static int expand_var_2755;
static int expand_var_2756;
static int expand_var_2757;
static int expand_var_2758;
static int expand_var_2759;
static int expand_var_2760;
static int expand_var_2761;
static int expand_var_2762;
static int expand_var_2763;
static int expand_var_2764;
static int expand_var_2765;
static int expand_var_2766;
static int expand_var_2767;
static int expand_var_2768;
static int expand_var_2769;
static int expand_var_2770;
static int expand_var_2771;
static int expand_var_2772;
static int expand_var_2773;
static int expand_var_2774;
static int expand_var_2775;
static int expand_var_2776;
static int expand_var_2777;
static int expand_var_2778;
static int expand_var_2779;
static int expand_var_2780;
static int expand_var_2781;
static int expand_var_2782;
static int expand_var_2783;
static int expand_var_2784;
static int expand_var_2785;
static int expand_var_2786;
static int expand_var_2787;
static int expand_var_2788;
static int expand_var_2789;
static int expand_var_2790;
static int expand_var_2791;
static int expand_var_2792;
static int expand_var_2793;
static int expand_var_2794;
static int expand_var_2795;
static int expand_var_2796;
static int expand_var_2797;
static int expand_var_2798;
static int expand_var_2799;
static int expand_var_2800;
static int expand_var_2801;
static int expand_var_2802;
static int expand_var_2803;
static int expand_var_2804;
static int expand_var_2805;
static int expand_var_2806;
static int expand_var_2807;
static int expand_var_2808;
static int expand_var_2809;
static int expand_var_2810;
static int expand_var_2811;
static int expand_var_2812;
static int expand_var_2813;
static int expand_var_2814;
static int expand_var_2815;
static int expand_var_2816;
static int expand_var_2817;
static int expand_var_2818;
static int expand_var_2819;
static int expand_var_2820;
static int expand_var_2821;
static int expand_var_2822;
static int expand_var_2823;
static int expand_var_2824;
static int expand_var_2825;
static int expand_var_2826;
static int expand_var_2827;
static int expand_var_2828;
static int expand_var_2829;
static int expand_var_2830;
static int expand_var_2831;
static int expand_var_2832;
static int expand_var_2833;
static int expand_var_2834;
static int expand_var_2835;
static int expand_var_2836;
static int expand_var_2837;
static int expand_var_2838;
static int expand_var_2839;
static int expand_var_2840;
static int expand_var_2841;
static int expand_var_2842;
static int expand_var_2843;
static int expand_var_2844;
static int expand_var_2845;
static int expand_var_2846;
static int expand_var_2847;
static int expand_var_2848;
static int expand_var_2849;
static int expand_var_2850;
static int expand_var_2851;
static int expand_var_2852;
static int expand_var_2853;
static int expand_var_2854;
static int expand_var_2855;
static int expand_var_2856;
static int expand_var_2857;
static int expand_var_2858;
static int expand_var_2859;
static int expand_var_2860;
static int expand_var_2861;
static int expand_var_2862;
static int expand_var_2863;
static int expand_var_2864;
static int expand_var_2865;
static int expand_var_2866;
static int expand_var_2867;
static int expand_var_2868;
static int expand_var_2869;
static int expand_var_2870;
static int expand_var_2871;
static int expand_var_2872;
static int expand_var_2873;
static int expand_var_2874;
static int expand_var_2875;
static int expand_var_2876;
static int expand_var_2877;
static int expand_var_2878;
static int expand_var_2879;
static int expand_var_2880;
static int expand_var_2881;
static int expand_var_2882;
static int expand_var_2883;
static int expand_var_2884;
static int expand_var_2885;
static int expand_var_2886;
static int expand_var_2887;
static int expand_var_2888;
static int expand_var_2889;
static int expand_var_2890;
static int expand_var_2891;
static int expand_var_2892;
static int expand_var_2893;
static int expand_var_2894;
static int expand_var_2895;
static int expand_var_2896;
static int expand_var_2897;
static int expand_var_2898;
static int expand_var_2899;
static int expand_var_2900;
static int expand_var_2901;
static int expand_var_2902;
static int expand_var_2903;
static int expand_var_2904;
static int expand_var_2905;
static int expand_var_2906;
static int expand_var_2907;
static int expand_var_2908;
static int expand_var_2909;
static int expand_var_2910;
static int expand_var_2911;
static int expand_var_2912;
static int expand_var_2913;
static int expand_var_2914;
static int expand_var_2915;
static int expand_var_2916;
static int expand_var_2917;
static int expand_var_2918;
static int expand_var_2919;
static int expand_var_2920;
static int expand_var_2921;
static int expand_var_2922;
static int expand_var_2923;
static int expand_var_2924;
static int expand_var_2925;
static int expand_var_2926;
static int expand_var_2927;
static int expand_var_2928;
static int expand_var_2929;
static int expand_var_2930;
static int expand_var_2931;
static int expand_var_2932;
static int expand_var_2933;
static int expand_var_2934;
static int expand_var_2935;
static int expand_var_2936;
static int expand_var_2937;
static int expand_var_2938;
static int expand_var_2939;
static int expand_var_2940;
static int expand_var_2941;
static int expand_var_2942;
static int expand_var_2943;
static int expand_var_2944;
static int expand_var_2945;
static int expand_var_2946;
static int expand_var_2947;
static int expand_var_2948;
static int expand_var_2949;
static int expand_var_2950;
static int expand_var_2951;
static int expand_var_2952;
static int expand_var_2953;
static int expand_var_2954;
static int expand_var_2955;
static int expand_var_2956;
static int expand_var_2957;
static int expand_var_2958;
static int expand_var_2959;
static int expand_var_2960;
static int expand_var_2961;
static int expand_var_2962;
static int expand_var_2963;
static int expand_var_2964;
static int expand_var_2965;
static int expand_var_2966;
static int expand_var_2967;
static int expand_var_2968;
static int expand_var_2969;
static int expand_var_2970;
static int expand_var_2971;
static int expand_var_2972;
static int expand_var_2973;
static int expand_var_2974;
static int expand_var_2975;
static int expand_var_2976;
static int expand_var_2977;
static int expand_var_2978;
static int expand_var_2979;
static int expand_var_2980;
static int expand_var_2981;
static int expand_var_2982;
static int expand_var_2983;
static int expand_var_2984;
static int expand_var_2985;
static int expand_var_2986;
static int expand_var_2987;
static int expand_var_2988;
static int expand_var_2989;
static int expand_var_2990;
static int expand_var_2991;
static int expand_var_2992;
static int expand_var_2993;
static int expand_var_2994;
static int expand_var_2995;
static int expand_var_2996;
static int expand_var_2997;
static int expand_var_2998;
static int expand_var_2999;
static int expand_var_3000;
static int expand_var_3001;
static int expand_var_3002;
static int expand_var_3003;
static int expand_var_3004;
static int expand_var_3005;
static int expand_var_3006;
static int expand_var_3007;
static int expand_var_3008;
static int expand_var_3009;
static int expand_var_3010;
static int expand_var_3011;
static int expand_var_3012;
static int expand_var_3013;
static int expand_var_3014;
static int expand_var_3015;
static int expand_var_3016;
static int expand_var_3017;
static int expand_var_3018;
static int expand_var_3019;
static int expand_var_3020;
static int expand_var_3021;
static int expand_var_3022;
static int expand_var_3023;
static int expand_var_3024;
static int expand_var_3025;
static int expand_var_3026;
static int expand_var_3027;
static int expand_var_3028;
static int expand_var_3029;
static int expand_var_3030;
static int expand_var_3031;
static int expand_var_3032;
static int expand_var_3033;
static int expand_var_3034;
static int expand_var_3035;
static int expand_var_3036;
static int expand_var_3037;
static int expand_var_3038;
static int expand_var_3039;
static int expand_var_3040;
static int expand_var_3041;
static int expand_var_3042;
static int expand_var_3043;
static int expand_var_3044;
static int expand_var_3045;
static int expand_var_3046;
static int expand_var_3047;
static int expand_var_3048;
static int expand_var_3049;
static int expand_var_3050;
static int expand_var_3051;
static int expand_var_3052;
static int expand_var_3053;
static int expand_var_3054;
static int expand_var_3055;
static int expand_var_3056;
static int expand_var_3057;
static int expand_var_3058;
static int expand_var_3059;
static int expand_var_3060;
static int expand_var_3061;
static int expand_var_3062;
static int expand_var_3063;
static int expand_var_3064;
static int expand_var_3065;
static int expand_var_3066;
static int expand_var_3067;
static int expand_var_3068;
static int expand_var_3069;
static int expand_var_3070;
static int expand_var_3071;
static int expand_var_3072;
static int expand_var_3073;
static int expand_var_3074;
static int expand_var_3075;
static int expand_var_3076;
static int expand_var_3077;
static int expand_var_3078;
static int expand_var_3079;
static int expand_var_3080;
static int expand_var_3081;
static int expand_var_3082;
static int expand_var_3083;
static int expand_var_3084;
static int expand_var_3085;
static int expand_var_3086;
static int expand_var_3087;
static int expand_var_3088;
static int expand_var_3089;
static int expand_var_3090;
static int expand_var_3091;
static int expand_var_3092;
static int expand_var_3093;
static int expand_var_3094;
static int expand_var_3095;
static int expand_var_3096;
static int expand_var_3097;
static int expand_var_3098;
static int expand_var_3099;
static int expand_var_3100;
static int expand_var_3101;
static int expand_var_3102;
static int expand_var_3103;
static int expand_var_3104;
static int expand_var_3105;
static int expand_var_3106;
static int expand_var_3107;
static int expand_var_3108;
static int expand_var_3109;
static int expand_var_3110;
static int expand_var_3111;
static int expand_var_3112;
static int expand_var_3113;
static int expand_var_3114;
static int expand_var_3115;
static int expand_var_3116;
static int expand_var_3117;
static int expand_var_3118;
static int expand_var_3119;
static int expand_var_3120;
static int expand_var_3121;
static int expand_var_3122;
static int expand_var_3123;
static int expand_var_3124;
static int expand_var_3125;
static int expand_var_3126;
static int expand_var_3127;
static int expand_var_3128;
static int expand_var_3129;
static int expand_var_3130;
static int expand_var_3131;
static int expand_var_3132;
static int expand_var_3133;
static int expand_var_3134;
static int expand_var_3135;
static int expand_var_3136;
static int expand_var_3137;
static int expand_var_3138;
static int expand_var_3139;
static int expand_var_3140;
static int expand_var_3141;
static int expand_var_3142;
static int expand_var_3143;
static int expand_var_3144;
static int expand_var_3145;
static int expand_var_3146;
static int expand_var_3147;
static int expand_var_3148;
static int expand_var_3149;
static int expand_var_3150;
static int expand_var_3151;
static int expand_var_3152;
static int expand_var_3153;
static int expand_var_3154;
static int expand_var_3155;
static int expand_var_3156;
static int expand_var_3157;
static int expand_var_3158;
static int expand_var_3159;
static int expand_var_3160;
static int expand_var_3161;
static int expand_var_3162;
static int expand_var_3163;
static int expand_var_3164;
static int expand_var_3165;
static int expand_var_3166;
static int expand_var_3167;
static int expand_var_3168;
static int expand_var_3169;
static int expand_var_3170;
static int expand_var_3171;
static int expand_var_3172;
static int expand_var_3173;
static int expand_var_3174;
static int expand_var_3175;
static int expand_var_3176;
static int expand_var_3177;
static int expand_var_3178;
static int expand_var_3179;
static int expand_var_3180;
static int expand_var_3181;
static int expand_var_3182;
static int expand_var_3183;
static int expand_var_3184;
static int expand_var_3185;
static int expand_var_3186;
static int expand_var_3187;
static int expand_var_3188;
static int expand_var_3189;
static int expand_var_3190;
static int expand_var_3191;
static int expand_var_3192;
static int expand_var_3193;
static int expand_var_3194;
static int expand_var_3195;
static int expand_var_3196;
static int expand_var_3197;
static int expand_var_3198;
static int expand_var_3199;
static int expand_var_3200;
static int expand_var_3201;
static int expand_var_3202;
static int expand_var_3203;
static int expand_var_3204;
static int expand_var_3205;
static int expand_var_3206;
static int expand_var_3207;
static int expand_var_3208;
static int expand_var_3209;
static int expand_var_3210;
static int expand_var_3211;
static int expand_var_3212;
static int expand_var_3213;
static int expand_var_3214;
static int expand_var_3215;
static int expand_var_3216;
static int expand_var_3217;
static int expand_var_3218;
static int expand_var_3219;
static int expand_var_3220;
static int expand_var_3221;
static int expand_var_3222;
static int expand_var_3223;
static int expand_var_3224;
static int expand_var_3225;
static int expand_var_3226;
static int expand_var_3227;
static int expand_var_3228;
static int expand_var_3229;
static int expand_var_3230;
static int expand_var_3231;
static int expand_var_3232;
static int expand_var_3233;
static int expand_var_3234;
static int expand_var_3235;
static int expand_var_3236;
static int expand_var_3237;
static int expand_var_3238;
static int expand_var_3239;
static int expand_var_3240;
static int expand_var_3241;
static int expand_var_3242;
static int expand_var_3243;
static int expand_var_3244;
static int expand_var_3245;
static int expand_var_3246;
static int expand_var_3247;
static int expand_var_3248;
static int expand_var_3249;
static int expand_var_3250;
static int expand_var_3251;
static int expand_var_3252;
static int expand_var_3253;
static int expand_var_3254;
static int expand_var_3255;
static int expand_var_3256;
static int expand_var_3257;
static int expand_var_3258;
static int expand_var_3259;
static int expand_var_3260;
static int expand_var_3261;
static int expand_var_3262;
static int expand_var_3263;
static int expand_var_3264;
static int expand_var_3265;
static int expand_var_3266;
static int expand_var_3267;
static int expand_var_3268;
static int expand_var_3269;
static int expand_var_3270;
static int expand_var_3271;
static int expand_var_3272;
static int expand_var_3273;
static int expand_var_3274;
static int expand_var_3275;
static int expand_var_3276;
static int expand_var_3277;
static int expand_var_3278;
static int expand_var_3279;
static int expand_var_3280;
static int expand_var_3281;
static int expand_var_3282;
static int expand_var_3283;
static int expand_var_3284;
static int expand_var_3285;
static int expand_var_3286;
static int expand_var_3287;
static int expand_var_3288;
static int expand_var_3289;
static int expand_var_3290;
static int expand_var_3291;
static int expand_var_3292;
static int expand_var_3293;
static int expand_var_3294;
static int expand_var_3295;
static int expand_var_3296;
static int expand_var_3297;
static int expand_var_3298;
static int expand_var_3299;
static int expand_var_3300;
static int expand_var_3301;
static int expand_var_3302;
static int expand_var_3303;
static int expand_var_3304;
static int expand_var_3305;
static int expand_var_3306;
static int expand_var_3307;
static int expand_var_3308;
static int expand_var_3309;
static int expand_var_3310;
static int expand_var_3311;
static int expand_var_3312;
static int expand_var_3313;
static int expand_var_3314;
static int expand_var_3315;
static int expand_var_3316;
static int expand_var_3317;
static int expand_var_3318;
static int expand_var_3319;
static int expand_var_3320;
static int expand_var_3321;
static int expand_var_3322;
static int expand_var_3323;
static int expand_var_3324;
static int expand_var_3325;
static int expand_var_3326;
static int expand_var_3327;
static int expand_var_3328;
static int expand_var_3329;
static int expand_var_3330;
static int expand_var_3331;
static int expand_var_3332;
static int expand_var_3333;
static int expand_var_3334;
static int expand_var_3335;
static int expand_var_3336;
static int expand_var_3337;
static int expand_var_3338;
static int expand_var_3339;
static int expand_var_3340;
static int expand_var_3341;
static int expand_var_3342;
static int expand_var_3343;
static int expand_var_3344;
static int expand_var_3345;
static int expand_var_3346;
static int expand_var_3347;
static int expand_var_3348;
static int expand_var_3349;
static int expand_var_3350;
static int expand_var_3351;
static int expand_var_3352;
static int expand_var_3353;
static int expand_var_3354;
static int expand_var_3355;
static int expand_var_3356;
static int expand_var_3357;
static int expand_var_3358;
static int expand_var_3359;
static int expand_var_3360;
static int expand_var_3361;
static int expand_var_3362;
static int expand_var_3363;
static int expand_var_3364;
static int expand_var_3365;
static int expand_var_3366;
static int expand_var_3367;
static int expand_var_3368;
static int expand_var_3369;
static int expand_var_3370;
static int expand_var_3371;
static int expand_var_3372;
static int expand_var_3373;
static int expand_var_3374;
static int expand_var_3375;
static int expand_var_3376;
static int expand_var_3377;
static int expand_var_3378;
static int expand_var_3379;
static int expand_var_3380;
static int expand_var_3381;
static int expand_var_3382;
static int expand_var_3383;
static int expand_var_3384;
static int expand_var_3385;
static int expand_var_3386;
static int expand_var_3387;
static int expand_var_3388;
static int expand_var_3389;
static int expand_var_3390;
static int expand_var_3391;
static int expand_var_3392;
static int expand_var_3393;
static int expand_var_3394;
static int expand_var_3395;
static int expand_var_3396;
static int expand_var_3397;
static int expand_var_3398;
static int expand_var_3399;
static int expand_var_3400;
static int expand_var_3401;
static int expand_var_3402;
static int expand_var_3403;
static int expand_var_3404;
static int expand_var_3405;
static int expand_var_3406;
static int expand_var_3407;
static int expand_var_3408;
static int expand_var_3409;
static int expand_var_3410;
static int expand_var_3411;
static int expand_var_3412;
static int expand_var_3413;
static int expand_var_3414;
static int expand_var_3415;
static int expand_var_3416;
static int expand_var_3417;
static int expand_var_3418;
static int expand_var_3419;
static int expand_var_3420;
static int expand_var_3421;
static int expand_var_3422;
static int expand_var_3423;
static int expand_var_3424;
static int expand_var_3425;
static int expand_var_3426;
static int expand_var_3427;
static int expand_var_3428;
static int expand_var_3429;
static int expand_var_3430;
static int expand_var_3431;
static int expand_var_3432;
static int expand_var_3433;
static int expand_var_3434;
static int expand_var_3435;
static int expand_var_3436;
static int expand_var_3437;
static int expand_var_3438;
static int expand_var_3439;
static int expand_var_3440;
static int expand_var_3441;
static int expand_var_3442;
static int expand_var_3443;
static int expand_var_3444;
static int expand_var_3445;
static int expand_var_3446;
static int expand_var_3447;
static int expand_var_3448;
static int expand_var_3449;
static int expand_var_3450;
static int expand_var_3451;
static int expand_var_3452;
static int expand_var_3453;
static int expand_var_3454;
static int expand_var_3455;
static int expand_var_3456;
static int expand_var_3457;
static int expand_var_3458;
static int expand_var_3459;
static int expand_var_3460;
static int expand_var_3461;
static int expand_var_3462;
static int expand_var_3463;
static int expand_var_3464;
static int expand_var_3465;
static int expand_var_3466;
static int expand_var_3467;
static int expand_var_3468;
static int expand_var_3469;
static int expand_var_3470;
static int expand_var_3471;
static int expand_var_3472;
static int expand_var_3473;
static int expand_var_3474;
static int expand_var_3475;
static int expand_var_3476;
static int expand_var_3477;
static int expand_var_3478;
static int expand_var_3479;
static int expand_var_3480;
static int expand_var_3481;
static int expand_var_3482;
static int expand_var_3483;
static int expand_var_3484;
static int expand_var_3485;
static int expand_var_3486;
static int expand_var_3487;
static int expand_var_3488;
static int expand_var_3489;
static int expand_var_3490;
static int expand_var_3491;
static int expand_var_3492;
static int expand_var_3493;
static int expand_var_3494;
static int expand_var_3495;
static int expand_var_3496;
static int expand_var_3497;
static int expand_var_3498;
static int expand_var_3499;
static int expand_var_3500;
static int expand_var_3501;
static int expand_var_3502;
static int expand_var_3503;
static int expand_var_3504;
static int expand_var_3505;
static int expand_var_3506;
static int expand_var_3507;
static int expand_var_3508;
static int expand_var_3509;
static int expand_var_3510;
static int expand_var_3511;
static int expand_var_3512;
static int expand_var_3513;
static int expand_var_3514;
static int expand_var_3515;
static int expand_var_3516;
static int expand_var_3517;
static int expand_var_3518;
static int expand_var_3519;
static int expand_var_3520;
static int expand_var_3521;
static int expand_var_3522;
static int expand_var_3523;
static int expand_var_3524;
static int expand_var_3525;
static int expand_var_3526;
static int expand_var_3527;
static int expand_var_3528;
static int expand_var_3529;
static int expand_var_3530;
static int expand_var_3531;
static int expand_var_3532;
static int expand_var_3533;
static int expand_var_3534;
static int expand_var_3535;
static int expand_var_3536;
static int expand_var_3537;
static int expand_var_3538;
static int expand_var_3539;
static int expand_var_3540;
static int expand_var_3541;
static int expand_var_3542;
static int expand_var_3543;
static int expand_var_3544;
static int expand_var_3545;
static int expand_var_3546;
static int expand_var_3547;
static int expand_var_3548;
static int expand_var_3549;
static int expand_var_3550;
static int expand_var_3551;
static int expand_var_3552;
static int expand_var_3553;
static int expand_var_3554;
static int expand_var_3555;
static int expand_var_3556;
static int expand_var_3557;
static int expand_var_3558;
static int expand_var_3559;
static int expand_var_3560;
static int expand_var_3561;
static int expand_var_3562;
static int expand_var_3563;
static int expand_var_3564;
static int expand_var_3565;
static int expand_var_3566;
static int expand_var_3567;
static int expand_var_3568;
static int expand_var_3569;
static int expand_var_3570;
static int expand_var_3571;
static int expand_var_3572;
static int expand_var_3573;
static int expand_var_3574;
static int expand_var_3575;
static int expand_var_3576;
static int expand_var_3577;
static int expand_var_3578;
static int expand_var_3579;
static int expand_var_3580;
static int expand_var_3581;
static int expand_var_3582;
static int expand_var_3583;
static int expand_var_3584;
static int expand_var_3585;
static int expand_var_3586;
static int expand_var_3587;
static int expand_var_3588;
static int expand_var_3589;
static int expand_var_3590;
static int expand_var_3591;
static int expand_var_3592;
static int expand_var_3593;
static int expand_var_3594;
static int expand_var_3595;
static int expand_var_3596;
static int expand_var_3597;
static int expand_var_3598;
static int expand_var_3599;
static int expand_var_3600;
static int expand_var_3601;
static int expand_var_3602;
static int expand_var_3603;
static int expand_var_3604;
static int expand_var_3605;
static int expand_var_3606;
static int expand_var_3607;
static int expand_var_3608;
static int expand_var_3609;
static int expand_var_3610;
static int expand_var_3611;
static int expand_var_3612;
static int expand_var_3613;
static int expand_var_3614;
static int expand_var_3615;
static int expand_var_3616;
static int expand_var_3617;
static int expand_var_3618;
static int expand_var_3619;
static int expand_var_3620;
static int expand_var_3621;
static int expand_var_3622;
static int expand_var_3623;
static int expand_var_3624;
static int expand_var_3625;
static int expand_var_3626;
static int expand_var_3627;
static int expand_var_3628;
static int expand_var_3629;
static int expand_var_3630;
static int expand_var_3631;
static int expand_var_3632;
static int expand_var_3633;
static int expand_var_3634;
static int expand_var_3635;
static int expand_var_3636;
static int expand_var_3637;
static int expand_var_3638;
static int expand_var_3639;
static int expand_var_3640;
static int expand_var_3641;
static int expand_var_3642;
static int expand_var_3643;
static int expand_var_3644;
static int expand_var_3645;
static int expand_var_3646;
static int expand_var_3647;
static int expand_var_3648;
static int expand_var_3649;
static int expand_var_3650;
static int expand_var_3651;
static int expand_var_3652;
static int expand_var_3653;
static int expand_var_3654;
static int expand_var_3655;
static int expand_var_3656;
static int expand_var_3657;
static int expand_var_3658;
static int expand_var_3659;
static int expand_var_3660;
static int expand_var_3661;
static int expand_var_3662;
static int expand_var_3663;
static int expand_var_3664;
static int expand_var_3665;
static int expand_var_3666;
static int expand_var_3667;
static int expand_var_3668;
static int expand_var_3669;
static int expand_var_3670;
static int expand_var_3671;
static int expand_var_3672;
static int expand_var_3673;
static int expand_var_3674;
static int expand_var_3675;
static int expand_var_3676;
static int expand_var_3677;
static int expand_var_3678;
static int expand_var_3679;
static int expand_var_3680;
static int expand_var_3681;
static int expand_var_3682;
static int expand_var_3683;
static int expand_var_3684;
static int expand_var_3685;
static int expand_var_3686;
static int expand_var_3687;
static int expand_var_3688;
static int expand_var_3689;
static int expand_var_3690;
static int expand_var_3691;
static int expand_var_3692;
static int expand_var_3693;
static int expand_var_3694;
static int expand_var_3695;
static int expand_var_3696;
static int expand_var_3697;
static int expand_var_3698;
static int expand_var_3699;
static int expand_var_3700;
static int expand_var_3701;
static int expand_var_3702;
static int expand_var_3703;
static int expand_var_3704;
static int expand_var_3705;
static int expand_var_3706;
static int expand_var_3707;
static int expand_var_3708;
static int expand_var_3709;
static int expand_var_3710;
static int expand_var_3711;
static int expand_var_3712;
static int expand_var_3713;
static int expand_var_3714;
static int expand_var_3715;
static int expand_var_3716;
static int expand_var_3717;
static int expand_var_3718;
static int expand_var_3719;
static int expand_var_3720;
static int expand_var_3721;
static int expand_var_3722;
static int expand_var_3723;
static int expand_var_3724;
static int expand_var_3725;
static int expand_var_3726;
static int expand_var_3727;
static int expand_var_3728;
static int expand_var_3729;
static int expand_var_3730;
static int expand_var_3731;
static int expand_var_3732;
static int expand_var_3733;
static int expand_var_3734;
static int expand_var_3735;
static int expand_var_3736;
static int expand_var_3737;
static int expand_var_3738;
static int expand_var_3739;
static int expand_var_3740;
static int expand_var_3741;
static int expand_var_3742;
static int expand_var_3743;
static int expand_var_3744;
static int expand_var_3745;
static int expand_var_3746;
static int expand_var_3747;
static int expand_var_3748;
static int expand_var_3749;
static int expand_var_3750;
static int expand_var_3751;
static int expand_var_3752;
static int expand_var_3753;
static int expand_var_3754;
static int expand_var_3755;
static int expand_var_3756;
static int expand_var_3757;
static int expand_var_3758;
static int expand_var_3759;
static int expand_var_3760;
static int expand_var_3761;
static int expand_var_3762;
static int expand_var_3763;
static int expand_var_3764;
static int expand_var_3765;
static int expand_var_3766;
static int expand_var_3767;
static int expand_var_3768;
static int expand_var_3769;
static int expand_var_3770;
static int expand_var_3771;
static int expand_var_3772;
static int expand_var_3773;
static int expand_var_3774;
static int expand_var_3775;
static int expand_var_3776;
static int expand_var_3777;
static int expand_var_3778;
static int expand_var_3779;
static int expand_var_3780;
static int expand_var_3781;
static int expand_var_3782;
static int expand_var_3783;
static int expand_var_3784;
static int expand_var_3785;
static int expand_var_3786;
static int expand_var_3787;
static int expand_var_3788;
static int expand_var_3789;
static int expand_var_3790;
static int expand_var_3791;
static int expand_var_3792;
static int expand_var_3793;
static int expand_var_3794;
static int expand_var_3795;
static int expand_var_3796;
static int expand_var_3797;
static int expand_var_3798;
static int expand_var_3799;
static int expand_var_3800;
static int expand_var_3801;
static int expand_var_3802;
static int expand_var_3803;
static int expand_var_3804;
static int expand_var_3805;
static int expand_var_3806;
static int expand_var_3807;
static int expand_var_3808;
static int expand_var_3809;
static int expand_var_3810;
static int expand_var_3811;
static int expand_var_3812;
static int expand_var_3813;
static int expand_var_3814;
static int expand_var_3815;
static int expand_var_3816;
static int expand_var_3817;
static int expand_var_3818;
static int expand_var_3819;
static int expand_var_3820;
static int expand_var_3821;
static int expand_var_3822;
static int expand_var_3823;
static int expand_var_3824;
static int expand_var_3825;
static int expand_var_3826;
static int expand_var_3827;
static int expand_var_3828;
static int expand_var_3829;
static int expand_var_3830;
static int expand_var_3831;
static int expand_var_3832;
static int expand_var_3833;
static int expand_var_3834;
static int expand_var_3835;
static int expand_var_3836;
static int expand_var_3837;
static int expand_var_3838;
static int expand_var_3839;
static int expand_var_3840;
static int expand_var_3841;
static int expand_var_3842;
static int expand_var_3843;
static int expand_var_3844;
static int expand_var_3845;
static int expand_var_3846;
static int expand_var_3847;
static int expand_var_3848;
static int expand_var_3849;
static int expand_var_3850;
static int expand_var_3851;
static int expand_var_3852;
static int expand_var_3853;
static int expand_var_3854;
static int expand_var_3855;
static int expand_var_3856;
static int expand_var_3857;
static int expand_var_3858;
static int expand_var_3859;
static int expand_var_3860;
static int expand_var_3861;
static int expand_var_3862;
static int expand_var_3863;
static int expand_var_3864;
static int expand_var_3865;
static int expand_var_3866;
static int expand_var_3867;
static int expand_var_3868;
static int expand_var_3869;
static int expand_var_3870;
static int expand_var_3871;
static int expand_var_3872;
static int expand_var_3873;
static int expand_var_3874;
static int expand_var_3875;
static int expand_var_3876;
static int expand_var_3877;
static int expand_var_3878;
static int expand_var_3879;
static int expand_var_3880;
static int expand_var_3881;
static int expand_var_3882;
static int expand_var_3883;
static int expand_var_3884;
static int expand_var_3885;
static int expand_var_3886;
static int expand_var_3887;
static int expand_var_3888;
static int expand_var_3889;
static int expand_var_3890;
static int expand_var_3891;
static int expand_var_3892;
static int expand_var_3893;
static int expand_var_3894;
static int expand_var_3895;
static int expand_var_3896;
static int expand_var_3897;
static int expand_var_3898;
static int expand_var_3899;
static int expand_var_3900;
static int expand_var_3901;
static int expand_var_3902;
static int expand_var_3903;
static int expand_var_3904;
static int expand_var_3905;
static int expand_var_3906;
static int expand_var_3907;
static int expand_var_3908;
static int expand_var_3909;
static int expand_var_3910;
static int expand_var_3911;
static int expand_var_3912;
static int expand_var_3913;
static int expand_var_3914;
static int expand_var_3915;
static int expand_var_3916;
static int expand_var_3917;
static int expand_var_3918;
static int expand_var_3919;
static int expand_var_3920;
static int expand_var_3921;
static int expand_var_3922;
static int expand_var_3923;
static int expand_var_3924;
static int expand_var_3925;
static int expand_var_3926;
static int expand_var_3927;
static int expand_var_3928;
static int expand_var_3929;
static int expand_var_3930;
static int expand_var_3931;
static int expand_var_3932;
static int expand_var_3933;
static int expand_var_3934;
static int expand_var_3935;
static int expand_var_3936;
static int expand_var_3937;
static int expand_var_3938;
static int expand_var_3939;
static int expand_var_3940;
static int expand_var_3941;
static int expand_var_3942;
static int expand_var_3943;
static int expand_var_3944;
static int expand_var_3945;
static int expand_var_3946;
static int expand_var_3947;
static int expand_var_3948;
static int expand_var_3949;
static int expand_var_3950;
static int expand_var_3951;
static int expand_var_3952;
static int expand_var_3953;
static int expand_var_3954;
static int expand_var_3955;
static int expand_var_3956;
static int expand_var_3957;
static int expand_var_3958;
static int expand_var_3959;
static int expand_var_3960;
static int expand_var_3961;
static int expand_var_3962;
static int expand_var_3963;
static int expand_var_3964;
static int expand_var_3965;
static int expand_var_3966;
static int expand_var_3967;
static int expand_var_3968;
static int expand_var_3969;
static int expand_var_3970;
static int expand_var_3971;
static int expand_var_3972;
static int expand_var_3973;
static int expand_var_3974;
static int expand_var_3975;
static int expand_var_3976;
static int expand_var_3977;
static int expand_var_3978;
static int expand_var_3979;
static int expand_var_3980;
static int expand_var_3981;
static int expand_var_3982;
static int expand_var_3983;
static int expand_var_3984;
static int expand_var_3985;
static int expand_var_3986;
static int expand_var_3987;
static int expand_var_3988;
static int expand_var_3989;
static int expand_var_3990;
static int expand_var_3991;
static int expand_var_3992;
static int expand_var_3993;
static int expand_var_3994;
static int expand_var_3995;
static int expand_var_3996;
static int expand_var_3997;
static int expand_var_3998;
static int expand_var_3999;
static int expand_var_4000;
static int expand_var_4001;
static int expand_var_4002;
static int expand_var_4003;
static int expand_var_4004;
static int expand_var_4005;
static int expand_var_4006;
static int expand_var_4007;
static int expand_var_4008;
static int expand_var_4009;
static int expand_var_4010;
static int expand_var_4011;
static int expand_var_4012;
static int expand_var_4013;
static int expand_var_4014;
static int expand_var_4015;
static int expand_var_4016;
static int expand_var_4017;
static int expand_var_4018;
static int expand_var_4019;
static int expand_var_4020;
static int expand_var_4021;
static int expand_var_4022;
static int expand_var_4023;
static int expand_var_4024;
static int expand_var_4025;
static int expand_var_4026;
static int expand_var_4027;
static int expand_var_4028;
static int expand_var_4029;
static int expand_var_4030;
static int expand_var_4031;
static int expand_var_4032;
static int expand_var_4033;
static int expand_var_4034;
static int expand_var_4035;
static int expand_var_4036;
static int expand_var_4037;
static int expand_var_4038;
static int expand_var_4039;
static int expand_var_4040;
static int expand_var_4041;
static int expand_var_4042;
static int expand_var_4043;
static int expand_var_4044;
static int expand_var_4045;
static int expand_var_4046;
static int expand_var_4047;
static int expand_var_4048;
static int expand_var_4049;
static int expand_var_4050;
static int expand_var_4051;
static int expand_var_4052;
static int expand_var_4053;
static int expand_var_4054;
static int expand_var_4055;
static int expand_var_4056;
static int expand_var_4057;
static int expand_var_4058;
static int expand_var_4059;
static int expand_var_4060;
static int expand_var_4061;
static int expand_var_4062;
static int expand_var_4063;
static int expand_var_4064;
static int expand_var_4065;
static int expand_var_4066;
static int expand_var_4067;
static int expand_var_4068;
static int expand_var_4069;
static int expand_var_4070;
static int expand_var_4071;
static int expand_var_4072;
static int expand_var_4073;
static int expand_var_4074;
static int expand_var_4075;
static int expand_var_4076;
static int expand_var_4077;
static int expand_var_4078;
static int expand_var_4079;
static int expand_var_4080;
static int expand_var_4081;
static int expand_var_4082;
static int expand_var_4083;
static int expand_var_4084;
static int expand_var_4085;
static int expand_var_4086;
static int expand_var_4087;
static int expand_var_4088;
static int expand_var_4089;
static int expand_var_4090;
static int expand_var_4091;
static int expand_var_4092;
static int expand_var_4093;
static int expand_var_4094;
static int expand_var_4095;
static int expand_var_4096;
static int expand_var_4097;
static int expand_var_4098;
static int expand_var_4099;
static int expand_var_4100;
static int expand_var_4101;
static int expand_var_4102;
static int expand_var_4103;
static int expand_var_4104;
static int expand_var_4105;
static int expand_var_4106;
static int expand_var_4107;
static int expand_var_4108;
static int expand_var_4109;
static int expand_var_4110;
static int expand_var_4111;
static int expand_var_4112;
static int expand_var_4113;
static int expand_var_4114;
static int expand_var_4115;
static int expand_var_4116;
static int expand_var_4117;
static int expand_var_4118;
static int expand_var_4119;
static int expand_var_4120;
static int expand_var_4121;
static int expand_var_4122;
static int expand_var_4123;
static int expand_var_4124;
static int expand_var_4125;
static int expand_var_4126;
static int expand_var_4127;
static int expand_var_4128;
static int expand_var_4129;
static int expand_var_4130;
static int expand_var_4131;
static int expand_var_4132;
static int expand_var_4133;
static int expand_var_4134;
static int expand_var_4135;
static int expand_var_4136;
static int expand_var_4137;
static int expand_var_4138;
static int expand_var_4139;
static int expand_var_4140;
static int expand_var_4141;
static int expand_var_4142;
static int expand_var_4143;
static int expand_var_4144;
static int expand_var_4145;
static int expand_var_4146;
static int expand_var_4147;
static int expand_var_4148;
static int expand_var_4149;
static int expand_var_4150;
static int expand_var_4151;
static const value_string value_map_2[] = {
  { 0, "Plot" },
  { 1, "Track" },
  { 0, NULL }
};
static const value_string value_map_3[] = {
  { 0, "Actual plot or track" },
  { 1, "Simulated plot or track" },
  { 0, NULL }
};
static const value_string value_map_4[] = {
  { 0, "No detection" },
  { 1, "Sole primary detection" },
  { 2, "Sole secondary detection" },
  { 3, "Combined primary and secondary detection" },
  { 0, NULL }
};
static const value_string value_map_5[] = {
  { 0, "Target report from antenna 1" },
  { 1, "Target report from antenna 2" },
  { 0, NULL }
};
static const value_string value_map_6[] = {
  { 0, "Default" },
  { 1, "Special Position Identification" },
  { 0, NULL }
};
static const value_string value_map_7[] = {
  { 0, "Default" },
  { 1, "Plot or track from a fixed transponder" },
  { 0, NULL }
};
static const value_string value_map_8[] = {
  { 0, "Default" },
  { 1, "Test target indicator" },
  { 0, NULL }
};
static const value_string value_map_9[] = {
  { 0, "Default" },
  { 1, "Unlawful interference (code 7500)" },
  { 2, "Radio-communication failure (code 7600)" },
  { 3, "Emergency (code 7700)" },
  { 0, NULL }
};
static const value_string value_map_10[] = {
  { 0, "Default" },
  { 1, "Military emergency" },
  { 0, NULL }
};
static const value_string value_map_11[] = {
  { 0, "Default" },
  { 1, "Military identification" },
  { 0, NULL }
};
static const value_string value_map_16[] = {
  { 0, "Code validated" },
  { 1, "Code not validated" },
  { 0, NULL }
};
static const value_string value_map_17[] = {
  { 0, "Default" },
  { 1, "Garbled code" },
  { 0, NULL }
};
static const value_string value_map_32[] = {
  { 0, "Mode-3/A code derived from the reply of the transponder" },
  { 1, "Smoothed Mode-3/A code as provided by a local tracker" },
  { 0, NULL }
};
static const value_string value_map_18[] = {
  { 0, "Mode-2 code as derived from the reply of the transponder" },
  { 1, "Smoothed Mode-2 code as provided by a local tracker" },
  { 0, NULL }
};
static const value_string value_map_20[] = {
  { 0, "High quality pulse A4" },
  { 1, "Low quality pulse A4" },
  { 0, NULL }
};
static const value_string value_map_21[] = {
  { 0, "High quality pulse A2" },
  { 1, "Low quality pulse A2" },
  { 0, NULL }
};
static const value_string value_map_22[] = {
  { 0, "High quality pulse A1" },
  { 1, "Low quality pulse A1" },
  { 0, NULL }
};
static const value_string value_map_23[] = {
  { 0, "High quality pulse B4" },
  { 1, "Low quality pulse B4" },
  { 0, NULL }
};
static const value_string value_map_24[] = {
  { 0, "High quality pulse B2" },
  { 1, "Low quality pulse B2" },
  { 0, NULL }
};
static const value_string value_map_25[] = {
  { 0, "High quality pulse B1" },
  { 1, "Low quality pulse B1" },
  { 0, NULL }
};
static const value_string value_map_26[] = {
  { 0, "High quality pulse C4" },
  { 1, "Low quality pulse C4" },
  { 0, NULL }
};
static const value_string value_map_27[] = {
  { 0, "High quality pulse C2" },
  { 1, "Low quality pulse C2" },
  { 0, NULL }
};
static const value_string value_map_28[] = {
  { 0, "High quality pulse C1" },
  { 1, "Low quality pulse C1" },
  { 0, NULL }
};
static const value_string value_map_29[] = {
  { 0, "High quality pulse D4" },
  { 1, "Low quality pulse D4" },
  { 0, NULL }
};
static const value_string value_map_30[] = {
  { 0, "High quality pulse D2" },
  { 1, "Low quality pulse D2" },
  { 0, NULL }
};
static const value_string value_map_31[] = {
  { 0, "High quality pulse D1" },
  { 1, "Low quality pulse D1" },
  { 0, NULL }
};
static const value_string value_map_12[] = {
  { 0, "No warning nor error condition" },
  { 1, "Garbled reply" },
  { 2, "Reflection" },
  { 3, "Sidelobe reply" },
  { 4, "Split plot" },
  { 5, "Second time around reply" },
  { 6, "Angels" },
  { 7, "Terrestrial vehicles" },
  { 64, "Possible wrong code in Mode-3/A" },
  { 65, "Possible wrong altitude information, transmitted when the Code C credibility check fails together with the Mode-C code in binary notation" },
  { 66, "Possible phantom MSSR plot" },
  { 80, "Fixed PSR plot" },
  { 81, "Slow PSR plot" },
  { 82, "Low quality PSR plot" },
  { 0, NULL }
};
static const value_string value_map_37[] = {
  { 0, "Default" },
  { 1, "X-pulse received in Mode-3/A reply" },
  { 0, NULL }
};
static const value_string value_map_38[] = {
  { 0, "Default" },
  { 1, "X-pulse received in Mode-C reply" },
  { 0, NULL }
};
static const value_string value_map_39[] = {
  { 0, "Default" },
  { 1, "X-pulse received in Mode-2 reply" },
  { 0, NULL }
};
static const value_string value_map_40[] = {
  { 0, "Confirmed Track" },
  { 1, "Track in initialisation phase" },
  { 0, NULL }
};
static const value_string value_map_41[] = {
  { 0, "Primary track" },
  { 1, "SSR/Combined track" },
  { 0, NULL }
};
static const value_string value_map_42[] = {
  { 0, "Default" },
  { 1, "Aircraft manoeuvring" },
  { 0, NULL }
};
static const value_string value_map_43[] = {
  { 0, "Default" },
  { 1, "Doubtful plot to track association" },
  { 0, NULL }
};
static const value_string value_map_44[] = {
  { 0, "RDP Chain 1" },
  { 1, "RDP Chain 2" },
  { 0, NULL }
};
static const value_string value_map_45[] = {
  { 0, "Default" },
  { 1, "Ghost track" },
  { 0, NULL }
};
static const value_string value_map_46[] = {
  { 0, "Default" },
  { 1, "Last report for a track" },
  { 0, NULL }
};
static const value_string value_map_48[] = {
  { 1, "North marker message" },
  { 2, "Sector crossing message" },
  { 3, "South marker message" },
  { 8, "Activation of blind zone filtering" },
  { 9, "Stop of blind zone filtering" },
  { 0, NULL }
};
static const value_string value_map_50[] = {
  { 0, "Counter for antenna 1" },
  { 1, "Counter for antenna 2" },
  { 0, NULL }
};
static const value_string value_map_51[] = {
  { 1, "Sole primary plots" },
  { 2, "Sole SSR plots" },
  { 3, "Combined plots" },
  { 0, NULL }
};
static const value_string value_map_55[] = {
  { 1, "Alive Message (AM)" },
  { 2, "Route Adherence Monitor Longitudinal Deviation (RAMLD)" },
  { 3, "Route Adherence Monitor Heading Deviation (RAMHD)" },
  { 4, "Minimum Safe Altitude Warning (MSAW)" },
  { 5, "Area Proximity Warning (APW)" },
  { 6, "Clearance Level Adherence Monitor (CLAM)" },
  { 7, "Short Term Conflict Alert (STCA)" },
  { 8, "Approach Path Monitor (APM)" },
  { 9, "RIMCAS Arrival / Landing Monitor (ALM)" },
  { 10, "RIMCAS Arrival / Departure Wrong Runway Alert (WRA)" },
  { 11, "RIMCAS Arrival / Departure Opposite Traffic Alert (OTA)" },
  { 12, "RIMCAS Departure Monitor (RDM)" },
  { 13, "RIMCAS Runway / Taxiway Crossing Monitor (RCM)" },
  { 14, "RIMCAS Taxiway Separation Monitor (TSM)" },
  { 15, "RIMCAS Unauthorized Taxiway Movement Monitor(UTMM)" },
  { 16, "RIMCAS Stop Bar Overrun Alert (SBOA)" },
  { 17, "End Of Conflict (EOC)" },
  { 18, "ACAS Resolution Advisory (ACASRA)" },
  { 19, "Near Term Conflict Alert (NTCA)" },
  { 20, "Downlinked Barometric Pressure Setting Monitor (DBPSM)" },
  { 21, "Speed Adherence Monitor (SAM)" },
  { 22, "Outside Controlled Airspace Tool (OCAT)" },
  { 23, "Vertical Conflict Detection (VCD)" },
  { 24, "Vertical Rate Adherence Monitor (VRAM)" },
  { 25, "Cleared Heading Adherence Monitor (CHAM)" },
  { 26, "Downlinked Selected Altitude Monitor (DSAM)" },
  { 27, "Holding Adherence Monitor (HAM)" },
  { 28, "Vertical Path Monitor (VPM)" },
  { 29, "RIMCAS Taxiway Traffic Alert (TTA)" },
  { 30, "RIMCAS Arrival/Departure Close Runway Alert (CRA)" },
  { 31, "RIMCAS Arrival/Departure Aircraft Separation Monitor (ASM)" },
  { 32, "RIMCAS ILS Area Violation Monitor (IAVM)" },
  { 33, "Final Target Distance Indicator (FTD)" },
  { 34, "Initial Target Distance Indicator (ITD)" },
  { 35, "Wake Vortex Indicator Infringement Alert (IIA)" },
  { 36, "Sequence Warning (SQW)" },
  { 37, "Catch Up Warning (CUW)" },
  { 38, "Conflicting ATC Clearances (CATC)" },
  { 39, "No ATC Clearance (NOCLR)" },
  { 40, "Aircraft Not Moving despite ATC Clearance (NOMOV)" },
  { 41, "Aircraft leaving/entering the aerodrome area without proper handover (NOH)" },
  { 42, "Wrong Runway or Taxiway Type (WRTY)" },
  { 43, "Stand Occupied (STOCC)" },
  { 44, "Ongoing Alert (ONGOING)" },
  { 97, "Lost Track Warning (LTW)" },
  { 98, "Holding Volume Infringement (HVI)" },
  { 99, "Airspace Infringement Warning (AIW)" },
  { 0, NULL }
};
static const value_string value_map_56[] = {
  { 0, "Default" },
  { 1, "MRVA function" },
  { 0, NULL }
};
static const value_string value_map_57[] = {
  { 0, "Default" },
  { 1, "RAMLD function" },
  { 0, NULL }
};
static const value_string value_map_58[] = {
  { 0, "Default" },
  { 1, "RAMHD function" },
  { 0, NULL }
};
static const value_string value_map_59[] = {
  { 0, "Default" },
  { 1, "MSAW function" },
  { 0, NULL }
};
static const value_string value_map_60[] = {
  { 0, "Default" },
  { 1, "APW function" },
  { 0, NULL }
};
static const value_string value_map_61[] = {
  { 0, "Default" },
  { 1, "CLAM function" },
  { 0, NULL }
};
static const value_string value_map_62[] = {
  { 0, "Default" },
  { 1, "STCA function" },
  { 0, NULL }
};
static const value_string value_map_63[] = {
  { 0, "Default" },
  { 1, "APM function" },
  { 0, NULL }
};
static const value_string value_map_64[] = {
  { 0, "Default" },
  { 1, "RIMCA function" },
  { 0, NULL }
};
static const value_string value_map_65[] = {
  { 0, "Default" },
  { 1, "ACAS RA function" },
  { 0, NULL }
};
static const value_string value_map_66[] = {
  { 0, "Default" },
  { 1, "NTCA function" },
  { 0, NULL }
};
static const value_string value_map_67[] = {
  { 0, "Default" },
  { 1, "System degraded" },
  { 0, NULL }
};
static const value_string value_map_68[] = {
  { 0, "Default" },
  { 1, "Overflow error" },
  { 0, NULL }
};
static const value_string value_map_69[] = {
  { 0, "Default" },
  { 1, "Overload error" },
  { 0, NULL }
};
static const value_string value_map_70[] = {
  { 0, "Default" },
  { 1, "AIW function" },
  { 0, NULL }
};
static const value_string value_map_71[] = {
  { 0, "Default" },
  { 1, "PAIW function" },
  { 0, NULL }
};
static const value_string value_map_72[] = {
  { 0, "Default" },
  { 1, "OCAT function" },
  { 0, NULL }
};
static const value_string value_map_73[] = {
  { 0, "Default" },
  { 1, "SAM function" },
  { 0, NULL }
};
static const value_string value_map_74[] = {
  { 0, "Default" },
  { 1, "VCD function" },
  { 0, NULL }
};
static const value_string value_map_75[] = {
  { 0, "Default" },
  { 1, "CHAM function" },
  { 0, NULL }
};
static const value_string value_map_76[] = {
  { 0, "Default" },
  { 1, "DSAM function" },
  { 0, NULL }
};
static const value_string value_map_77[] = {
  { 0, "Default" },
  { 1, "DBPSM ARR sub-function" },
  { 0, NULL }
};
static const value_string value_map_78[] = {
  { 0, "Default" },
  { 1, "DBPSM DEP sub-function" },
  { 0, NULL }
};
static const value_string value_map_79[] = {
  { 0, "Default" },
  { 1, "DBPSM TL sub-function" },
  { 0, NULL }
};
static const value_string value_map_80[] = {
  { 0, "Default" },
  { 1, "VRAM CRM sub-function" },
  { 0, NULL }
};
static const value_string value_map_81[] = {
  { 0, "Default" },
  { 1, "VRAM VTM sub-function" },
  { 0, NULL }
};
static const value_string value_map_82[] = {
  { 0, "Default" },
  { 1, "VRAM VRM sub-function" },
  { 0, NULL }
};
static const value_string value_map_83[] = {
  { 0, "Default" },
  { 1, "HAM HD sub-function" },
  { 0, NULL }
};
static const value_string value_map_84[] = {
  { 0, "Default" },
  { 1, "HAM RD sub-function" },
  { 0, NULL }
};
static const value_string value_map_85[] = {
  { 0, "Default" },
  { 1, "HAM VD sub-function" },
  { 0, NULL }
};
static const value_string value_map_86[] = {
  { 0, "Default" },
  { 1, "HVI function" },
  { 0, NULL }
};
static const value_string value_map_87[] = {
  { 0, "Default" },
  { 1, "LTW function" },
  { 0, NULL }
};
static const value_string value_map_88[] = {
  { 0, "Default" },
  { 1, "VPM function" },
  { 0, NULL }
};
static const value_string value_map_89[] = {
  { 0, "Default" },
  { 1, "TTA function" },
  { 0, NULL }
};
static const value_string value_map_90[] = {
  { 0, "Default" },
  { 1, "CRA function" },
  { 0, NULL }
};
static const value_string value_map_91[] = {
  { 0, "Default" },
  { 1, "ASM sub-function" },
  { 0, NULL }
};
static const value_string value_map_92[] = {
  { 0, "Default" },
  { 1, "IAVM sub-function" },
  { 0, NULL }
};
static const value_string value_map_93[] = {
  { 0, "Default" },
  { 1, "FTD Function" },
  { 0, NULL }
};
static const value_string value_map_94[] = {
  { 0, "Default" },
  { 1, "ITD function" },
  { 0, NULL }
};
static const value_string value_map_95[] = {
  { 0, "Default" },
  { 1, "IIA function" },
  { 0, NULL }
};
static const value_string value_map_96[] = {
  { 0, "Default" },
  { 1, "SQW function" },
  { 0, NULL }
};
static const value_string value_map_97[] = {
  { 0, "Default" },
  { 1, "CUW function" },
  { 0, NULL }
};
static const value_string value_map_98[] = {
  { 0, "Default" },
  { 1, "CATC function" },
  { 0, NULL }
};
static const value_string value_map_99[] = {
  { 0, "Default" },
  { 1, "NOCLR sub-function" },
  { 0, NULL }
};
static const value_string value_map_100[] = {
  { 0, "Default" },
  { 1, "NOMOV Function" },
  { 0, NULL }
};
static const value_string value_map_101[] = {
  { 0, "Default" },
  { 1, "NOH function" },
  { 0, NULL }
};
static const value_string value_map_102[] = {
  { 0, "Default" },
  { 1, "WRTY function" },
  { 0, NULL }
};
static const value_string value_map_103[] = {
  { 0, "Default" },
  { 1, "STOCC function" },
  { 0, NULL }
};
static const value_string value_map_104[] = {
  { 0, "Default" },
  { 1, "ONGOING function" },
  { 0, NULL }
};
static const value_string value_map_135[] = {
  { 0, "Unknown" },
  { 1, "General Air Traffic" },
  { 2, "Operational Air Traffic" },
  { 3, "Not applicable" },
  { 0, NULL }
};
static const value_string value_map_136[] = {
  { 0, "Instrument Flight Rules" },
  { 1, "Visual Flight rules" },
  { 2, "Not applicable" },
  { 3, "Controlled Visual Flight Rules" },
  { 0, NULL }
};
static const value_string value_map_137[] = {
  { 0, "Unknown" },
  { 1, "Approved" },
  { 2, "Exempt" },
  { 3, "Not Approved" },
  { 0, NULL }
};
static const value_string value_map_138[] = {
  { 0, "Normal Priority Flight" },
  { 1, "High Priority Flight" },
  { 0, NULL }
};
static const value_string value_map_139[] = {
  { 0, "Maintaining" },
  { 1, "Climbing" },
  { 2, "Descending" },
  { 3, "Invalid" },
  { 0, NULL }
};
static const value_string value_map_140[] = {
  { 0, "Non primary target" },
  { 1, "Primary target" },
  { 0, NULL }
};
static const value_string value_map_141[] = {
  { 0, "Default" },
  { 1, "Ground Vehicle" },
  { 0, NULL }
};
static const value_string value_map_112[] = {
  { 0, "Conflict not predicted to occur in military airspace" },
  { 1, "Conflict predicted to occur in military airspace" },
  { 0, NULL }
};
static const value_string value_map_113[] = {
  { 0, "Conflict not predicted to occur in civil airspace" },
  { 1, "Conflict predicted to occur in civil airspace" },
  { 0, NULL }
};
static const value_string value_map_114[] = {
  { 0, "Aircraft are not fast diverging laterally at current time" },
  { 1, "Aircraft are fast diverging laterally at current time" },
  { 0, NULL }
};
static const value_string value_map_115[] = {
  { 0, "Aircraft are not fast diverging vertically at current time" },
  { 1, "Aircraft are fast diverging vertically at current time" },
  { 0, NULL }
};
static const value_string value_map_116[] = {
  { 0, "Minor separation infringement" },
  { 1, "Major separation infringement" },
  { 0, NULL }
};
static const value_string value_map_117[] = {
  { 0, "Aircraft have not crossed at starting time of conflict" },
  { 1, "Aircraft have crossed at starting time of conflict" },
  { 0, NULL }
};
static const value_string value_map_118[] = {
  { 0, "Aircraft are not diverging at starting time of conflict" },
  { 1, "Aircraft are diverging at starting time of conflict" },
  { 0, NULL }
};
static const value_string value_map_119[] = {
  { 0, "Default" },
  { 1, "Runway/Runway Crossing" },
  { 0, NULL }
};
static const value_string value_map_120[] = {
  { 0, "Default" },
  { 1, "Runway/Taxiway Crossing" },
  { 0, NULL }
};
static const value_string value_map_121[] = {
  { 0, "Default" },
  { 1, "Msg Type 4 (MSAW) indicates MRVA" },
  { 0, NULL }
};
static const value_string value_map_122[] = {
  { 0, "Default" },
  { 1, "Msg Type 25 (VRAM) indicates CRM" },
  { 0, NULL }
};
static const value_string value_map_123[] = {
  { 0, "Default" },
  { 1, "Msg Type 25 (VRAM) indicates VRM" },
  { 0, NULL }
};
static const value_string value_map_124[] = {
  { 0, "Default" },
  { 1, "Msg Type 25 (VRAM) indicates VTM" },
  { 0, NULL }
};
static const value_string value_map_125[] = {
  { 0, "Default" },
  { 1, "Msg Type 29 (HAM) indicates HD" },
  { 0, NULL }
};
static const value_string value_map_126[] = {
  { 0, "Default" },
  { 1, "Msg Type 29 (HAM) indicates RD" },
  { 0, NULL }
};
static const value_string value_map_127[] = {
  { 0, "Default" },
  { 1, "Msg Type 29 (HAM) indicates VD" },
  { 0, NULL }
};
static const value_string value_map_128[] = {
  { 0, "Default" },
  { 1, "Msg Type 20 (DBPSM) indicates ARR" },
  { 0, NULL }
};
static const value_string value_map_129[] = {
  { 0, "Default" },
  { 1, "Msg Type 20 (DBPSM) indicates DEP" },
  { 0, NULL }
};
static const value_string value_map_130[] = {
  { 0, "Default" },
  { 1, "Msg Type 20 (DBPSM) indicates above TL" },
  { 0, NULL }
};
static const value_string value_map_131[] = {
  { 0, "Default" },
  { 1, "Msg Type 99 (AIW) indicates pAIW Alert" },
  { 0, NULL }
};
static const value_string value_map_132[] = {
  { 0, "LOW" },
  { 1, "HIGH" },
  { 0, NULL }
};
static const value_string value_map_144[] = {
  { 1, "Alive Message (AM)" },
  { 2, "Route Adherence Monitor Longitudinal Deviation (RAMLD)" },
  { 3, "Route Adherence Monitor Heading Deviation (RAMHD)" },
  { 4, "Minimum Safe Altitude Warning (MSAW)" },
  { 5, "Area Proximity Warning (APW)" },
  { 6, "Clearance Level Adherence Monitor (CLAM)" },
  { 7, "Short Term Conflict Alert (STCA)" },
  { 8, "Approach Path Monitor (APM)" },
  { 9, "RIMCAS Arrival / Landing Monitor (ALM)" },
  { 10, "RIMCAS Arrival / Departure Wrong Runway Alert (WRA)" },
  { 11, "RIMCAS Arrival / Departure Opposite Traffic Alert (OTA)" },
  { 12, "RIMCAS Departure Monitor (RDM)" },
  { 13, "RIMCAS Runway / Taxiway Crossing Monitor (RCM)" },
  { 14, "RIMCAS Taxiway Separation Monitor (TSM)" },
  { 15, "RIMCAS Unauthorized Taxiway Movement Monitor(UTMM)" },
  { 16, "RIMCAS Stop Bar Overrun Alert (SBOA)" },
  { 17, "End Of Conflict (EOC)" },
  { 18, "ACAS Resolution Advisory (ACASRA)" },
  { 19, "Near Term Conflict Alert (NTCA)" },
  { 20, "Downlinked Barometric Pressure Setting Monitor (DBPSM)" },
  { 21, "Speed Adherence Monitor (SAM)" },
  { 22, "Outside Controlled Airspace Tool (OCAT)" },
  { 23, "Vertical Conflict Detection (VCD)" },
  { 24, "Vertical Rate Adherence Monitor (VRAM)" },
  { 25, "Cleared Heading Adherence Monitor (CHAM)" },
  { 26, "Downlinked Selected Altitude Monitor (DSAM)" },
  { 27, "Holding Adherence Monitor (HAM)" },
  { 28, "Vertical Path Monitor (VPM)" },
  { 29, "RIMCAS Taxiway Traffic Alert (TTA)" },
  { 30, "RIMCAS Arrival/Departure Close Runway Alert (CRA)" },
  { 31, "RIMCAS Arrival/Departure Aircraft Separation Monitor (ASM)" },
  { 32, "RIMCAS ILS Area Violation Monitor (IAVM)" },
  { 33, "Final Target Distance Indicator (FTD)" },
  { 34, "Initial Target Distance Indicator (ITD)" },
  { 35, "Wake Vortex Indicator Infringement Alert (IIA)" },
  { 36, "Sequence Warning (SQW)" },
  { 37, "Catch Up Warning (CUW)" },
  { 38, "Conflicting ATC Clearances (CATC)" },
  { 39, "No ATC Clearance (NOCLR)" },
  { 40, "Aircraft Not Moving despite ATC Clearance (NOMOV)" },
  { 41, "Aircraft leaving/entering the aerodrome area without proper handover (NOH)" },
  { 42, "Wrong Runway or Taxiway Type (WRTY)" },
  { 43, "Stand Occupied (STOCC)" },
  { 44, "Ongoing Alert (ONGOING)" },
  { 45, "Non-Transgression Zone Violation (NTZ)" },
  { 97, "Lost Track Warning (LTW)" },
  { 98, "Holding Volume Infringement (HVI)" },
  { 99, "Airspace Infringement Warning (AIW)" },
  { 0, NULL }
};
static const value_string value_map_145[] = {
  { 0, "Element not populated" },
  { 1, "Element populated" },
  { 0, NULL }
};
static const value_string value_map_146[] = {
  { 0, "Inactive" },
  { 1, "Active" },
  { 2, "Pre-active" },
  { 3, "Reserved for Future Use" },
  { 4, "Reserved for Future Use" },
  { 5, "Reserved for Future Use" },
  { 6, "Reserved for Future Use" },
  { 7, "Reserved for Future Use" },
  { 0, NULL }
};
static const value_string value_map_147[] = {
  { 0, "Default" },
  { 1, "Non-Transgression Zone Function" },
  { 0, NULL }
};
static const value_string value_map_148[] = {
  { 1, "Polar vector" },
  { 2, "Cartesian vector of start point/length" },
  { 3, "Contour record" },
  { 4, "Cartesian start point and end point vector" },
  { 254, "SOP message" },
  { 255, "EOP message" },
  { 0, NULL }
};
static const value_string value_map_149[] = {
  { 0, "Local Coordinates" },
  { 1, "System Coordinates" },
  { 0, NULL }
};
static const value_string value_map_150[] = {
  { 0, "0°" },
  { 1, "22.5°" },
  { 2, "45°" },
  { 3, "67.5°" },
  { 4, "90°" },
  { 5, "112.5°" },
  { 6, "135°" },
  { 7, "157.5°" },
  { 0, NULL }
};
static const value_string value_map_151[] = {
  { 0, "Default" },
  { 1, "Test vector" },
  { 0, NULL }
};
static const value_string value_map_152[] = {
  { 0, "Default" },
  { 1, "Error condition encountered" },
  { 0, NULL }
};
static const value_string value_map_154[] = {
  { 0, "Intermediate record of a contour" },
  { 1, "Last record of a contour of at least two records" },
  { 2, "First record of a contour of at least two records" },
  { 3, "First and only record, fully defining a contour" },
  { 0, NULL }
};
static const value_string value_map_155[] = {
  { 2, "Cartesian vector" },
  { 253, "Intermediate-update-step message" },
  { 254, "Start-of-picture message" },
  { 255, "End-of-picture message" },
  { 0, NULL }
};
static const value_string value_map_156[] = {
  { 1, "Target Report" },
  { 2, "Start of Update Cycle" },
  { 3, "Periodic Status Message" },
  { 4, "Event-triggered Status Message" },
  { 0, NULL }
};
static const value_string value_map_157[] = {
  { 0, "SSR multilateration" },
  { 1, "Mode S multilateration" },
  { 2, "ADS-B" },
  { 3, "PSR" },
  { 4, "Magnetic Loop System" },
  { 5, "HF multilateration" },
  { 6, "Not defined" },
  { 7, "Other types" },
  { 0, NULL }
};
static const value_string value_map_158[] = {
  { 0, "No differential correction (ADS-B)" },
  { 1, "Differential correction (ADS-B)" },
  { 0, NULL }
};
static const value_string value_map_159[] = {
  { 0, "Chain 1" },
  { 1, "Chain 2" },
  { 0, NULL }
};
static const value_string value_map_160[] = {
  { 0, "Transponder Ground bit not set" },
  { 1, "Transponder Ground bit set" },
  { 0, NULL }
};
static const value_string value_map_161[] = {
  { 0, "No Corrupted reply in multilateration" },
  { 1, "Corrupted replies in multilateration" },
  { 0, NULL }
};
static const value_string value_map_162[] = {
  { 0, "Actual target report" },
  { 1, "Simulated target report" },
  { 0, NULL }
};
static const value_string value_map_163[] = {
  { 0, "Default" },
  { 1, "Test Target" },
  { 0, NULL }
};
static const value_string value_map_164[] = {
  { 0, "Report from target transponder" },
  { 1, "Report from field monitor (fixed transponder)" },
  { 0, NULL }
};
static const value_string value_map_165[] = {
  { 0, "Undetermined" },
  { 1, "Loop start" },
  { 2, "Loop finish" },
  { 0, NULL }
};
static const value_string value_map_166[] = {
  { 0, "Undetermined" },
  { 1, "Aircraft" },
  { 2, "Ground vehicle" },
  { 3, "Helicopter" },
  { 0, NULL }
};
static const value_string value_map_167[] = {
  { 0, "Absence of SPI" },
  { 1, "Special Position Identification" },
  { 0, NULL }
};
static const value_string value_map_173[] = {
  { 0, "Confirmed track" },
  { 1, "Track in initialisation phase" },
  { 0, NULL }
};
static const value_string value_map_174[] = {
  { 0, "No extrapolation" },
  { 1, "Predictable extrapolation due to sensor refresh period (see NOTE)" },
  { 2, "Predictable extrapolation in masked area" },
  { 3, "Extrapolation due to unpredictable absence of detection" },
  { 0, NULL }
};
static const value_string value_map_175[] = {
  { 0, "Default" },
  { 1, "Horizontal manoeuvre" },
  { 0, NULL }
};
static const value_string value_map_176[] = {
  { 0, "Tracking performed in 'Sensor Plane', i.e. neither slant range correction nor projection was applied" },
  { 1, "Slant range correction and a suitable projection technique are used to track in a 2D.reference plane, tangential to the earth model at the Sensor Site co-ordinates" },
  { 0, NULL }
};
static const value_string value_map_177[] = {
  { 0, "Measured position" },
  { 1, "Smoothed position" },
  { 0, NULL }
};
static const value_string value_map_178[] = {
  { 0, "Unknown type of movement" },
  { 1, "Taking-off" },
  { 2, "Landing" },
  { 3, "Other types of movement" },
  { 0, NULL }
};
static const value_string value_map_179[] = {
  { 0, "No doubt" },
  { 1, "Doubtful correlation (undetermined reason)" },
  { 2, "Doubtful correlation in clutter" },
  { 3, "Loss of accuracy" },
  { 4, "Loss of accuracy in clutter" },
  { 5, "Unstable track" },
  { 6, "Previously coasted" },
  { 0, NULL }
};
static const value_string value_map_180[] = {
  { 0, "Merge or split indication undetermined" },
  { 1, "Track merged by association to plot" },
  { 2, "Track merged by non-association to plot" },
  { 3, "Split track" },
  { 0, NULL }
};
static const value_string value_map_171[] = {
  { 0, "Mode-3/A code derived from the reply of the transponder" },
  { 1, "Mode-3/A code not extracted during the last scan" },
  { 0, NULL }
};
static const value_string value_map_183[] = {
  { 0, "Callsign or registration downlinked from transponder" },
  { 1, "Callsign not downlinked from transponder" },
  { 2, "Registration not downlinked from transponder" },
  { 0, NULL }
};
static const value_string value_map_186[] = {
  { 0, "Unknown" },
  { 1, "ATC equipment maintenance" },
  { 2, "Airport maintenance" },
  { 3, "Fire" },
  { 4, "Bird scarer" },
  { 5, "Snow plough" },
  { 6, "Runway sweeper" },
  { 7, "Emergency" },
  { 8, "Police" },
  { 9, "Bus" },
  { 10, "Tug (push/tow)" },
  { 11, "Grass cutter" },
  { 12, "Fuel" },
  { 13, "Baggage" },
  { 14, "Catering" },
  { 15, "Aircraft maintenance" },
  { 16, "Flyco (follow me)" },
  { 0, NULL }
};
static const value_string value_map_191[] = {
  { 0, "Operational" },
  { 1, "Degraded" },
  { 2, "NOGO" },
  { 0, NULL }
};
static const value_string value_map_192[] = {
  { 0, "No overload" },
  { 1, "Overload" },
  { 0, NULL }
};
static const value_string value_map_193[] = {
  { 0, "Valid" },
  { 1, "Invalid" },
  { 0, NULL }
};
static const value_string value_map_194[] = {
  { 0, "Normal Operation" },
  { 1, "Diversity degraded" },
  { 0, NULL }
};
static const value_string value_map_195[] = {
  { 0, "Test Target Operative" },
  { 1, "Test Target Failure" },
  { 0, NULL }
};
static const value_string value_map_187[] = {
  { 0, "Default" },
  { 1, "In Trouble" },
  { 0, NULL }
};
static const value_string value_map_188[] = {
  { 1, "Towing aircraft" },
  { 2, "“Follow me” operation" },
  { 3, "Runway check" },
  { 4, "Emergency operation (fire, medical...)" },
  { 5, "Work in progress (maintenance, birds scarer, sweepers...)" },
  { 0, NULL }
};
static const value_string value_map_196[] = {
  { 1, "Target reports, flight plan data and basic alerts" },
  { 2, "Manual attachment of flight plan to track" },
  { 3, "Manual detachment of flight plan to track" },
  { 4, "Insertion of flight plan data" },
  { 5, "Suppression of flight plan data" },
  { 6, "Modification of flight plan data" },
  { 7, "Holdbar status" },
  { 0, NULL }
};
static const value_string value_map_221[] = {
  { 0, "No communications capability (surveillance only)" },
  { 1, "Comm. A and Comm. B capability" },
  { 2, "Comm. A, Comm. B and Uplink ELM" },
  { 3, "Comm. A, Comm. B, Uplink ELM and Downlink ELM" },
  { 4, "Level 5 Transponder capability" },
  { 5, "Not assigned" },
  { 6, "Not assigned" },
  { 7, "Not assigned" },
  { 0, NULL }
};
static const value_string value_map_222[] = {
  { 0, "No alert, no SPI, aircraft airborne" },
  { 1, "No alert, no SPI, aircraft on ground" },
  { 2, "Alert, no SPI, aircraft airborne" },
  { 3, "Alert, no SPI, aircraft on ground" },
  { 4, "Alert, SPI, aircraft airborne or on ground" },
  { 5, "No alert, SPI, aircraft airborne or on ground" },
  { 6, "General Emergency" },
  { 7, "Lifeguard / medical" },
  { 8, "Minimum fuel" },
  { 9, "No communications" },
  { 10, "Unlawful" },
  { 0, NULL }
};
static const value_string value_map_223[] = {
  { 0, "No" },
  { 1, "Yes" },
  { 0, NULL }
};
static const value_string value_map_224[] = {
  { 0, "100 ft resolution" },
  { 1, "25 ft resolution" },
  { 0, NULL }
};
static const value_string value_map_225[] = {
  { 0, "Yes" },
  { 1, "No" },
  { 0, NULL }
};
static const value_string value_map_226[] = {
  { 1, "Light aircraft <= 7000 kg" },
  { 2, "Reserved" },
  { 3, "7000 kg &lt; medium aircraft &lt; 136000 kg" },
  { 4, "Reserved" },
  { 5, "136000 kg <= heavy aircraft" },
  { 6, "Highly manoeuvrable (5g acceleration capability) and high speed (&gt;400 knots cruise)" },
  { 7, "Reserved" },
  { 8, "Reserved" },
  { 9, "Reserved" },
  { 10, "Rotocraft" },
  { 11, "Glider / sailplane" },
  { 12, "Lighter-than-air" },
  { 13, "Unmanned aerial vehicle" },
  { 14, "Space / transatmospheric vehicle" },
  { 15, "Ultralight / handglider / paraglider" },
  { 16, "Parachutist / skydiver" },
  { 17, "Reserved" },
  { 18, "Reserved" },
  { 19, "Reserved" },
  { 20, "Surface emergency vehicle" },
  { 21, "Surface service vehicle" },
  { 22, "Fixed ground or tethered obstruction" },
  { 23, "Reserved" },
  { 24, "Reserved" },
  { 0, NULL }
};
static const value_string value_map_227[] = {
  { 0, "VDL Mode 4 available" },
  { 1, "VDL Mode 4 not available" },
  { 0, NULL }
};
static const value_string value_map_228[] = {
  { 0, "Mode S available" },
  { 1, "Mode S not available" },
  { 0, NULL }
};
static const value_string value_map_229[] = {
  { 0, "UAT available" },
  { 1, "UAT not available" },
  { 0, NULL }
};
static const value_string value_map_198[] = {
  { 0, "Multisensor Track" },
  { 1, "Monosensor Track" },
  { 0, NULL }
};
static const value_string value_map_199[] = {
  { 0, "Transponder Ground bit not set or unknown" },
  { 1, "Transponder Ground bit set" },
  { 0, NULL }
};
static const value_string value_map_200[] = {
  { 0, "Barometric altitude (Mode C) more reliable" },
  { 1, "Geometric altitude more reliable" },
  { 0, NULL }
};
static const value_string value_map_201[] = {
  { 0, "No source" },
  { 1, "GPS" },
  { 2, "3d radar" },
  { 3, "Triangulation" },
  { 4, "Height from coverage" },
  { 5, "Speed look-up table" },
  { 6, "Default height" },
  { 7, "Multilateration" },
  { 0, NULL }
};
static const value_string value_map_202[] = {
  { 0, "Confirmed track" },
  { 1, "Tentative track" },
  { 0, NULL }
};
static const value_string value_map_203[] = {
  { 0, "Actual Track" },
  { 1, "Simulated track" },
  { 0, NULL }
};
static const value_string value_map_204[] = {
  { 0, "Default value" },
  { 1, "Track service end (i.e. last message transmitted to the user for the track)" },
  { 0, NULL }
};
static const value_string value_map_205[] = {
  { 0, "Default value" },
  { 1, "Track service begin (i.e. first message transmitted to the user for the track)" },
  { 0, NULL }
};
static const value_string value_map_206[] = {
  { 0, "No Mode 4 interrogationt" },
  { 1, "Friendly target" },
  { 2, "Unknown target" },
  { 3, "No reply" },
  { 0, NULL }
};
static const value_string value_map_207[] = {
  { 0, "Default value" },
  { 1, "Military Emergency present in the last report received from a sensor capable of decoding this data" },
  { 0, NULL }
};
static const value_string value_map_208[] = {
  { 0, "End of Data Item" },
  { 1, "Military Identification present in the last report received from a sensor capable of decoding this data" },
  { 0, NULL }
};
static const value_string value_map_209[] = {
  { 0, "Track not resulting from amalgamation process" },
  { 1, "Track resulting from amalgamation process" },
  { 0, NULL }
};
static const value_string value_map_210[] = {
  { 0, "Default value" },
  { 1, "SPI present in the last report received from a sensor capable of decoding this data" },
  { 0, NULL }
};
static const value_string value_map_211[] = {
  { 0, "Default value" },
  { 1, "Age of the last received track update is higher than system dependent threshold (coasting)" },
  { 0, NULL }
};
static const value_string value_map_212[] = {
  { 0, "Not flight-plan correlated" },
  { 1, "Flight plan correlated" },
  { 0, NULL }
};
static const value_string value_map_213[] = {
  { 0, "Default value" },
  { 1, "ADS-B data inconsistent with other surveillance information" },
  { 0, NULL }
};
static const value_string value_map_237[] = {
  { 0, "Unknown" },
  { 1, "On stand" },
  { 2, "Taxiing for departure" },
  { 3, "Taxiing for arrival" },
  { 4, "Runway for departure" },
  { 5, "Runway for arrival" },
  { 6, "Hold for departure" },
  { 7, "Hold for arrival" },
  { 8, "Push back" },
  { 9, "On finals" },
  { 0, NULL }
};
static const value_string value_map_197[] = {
  { 0, "No QNH correction applied" },
  { 1, "QNH correction applied" },
  { 0, NULL }
};
static const value_string value_map_230[] = {
  { 0, "Plan number" },
  { 1, "Unit 1 internal flight number" },
  { 2, "Unit 2 internal flight number" },
  { 3, "Unit 3 internal flight number" },
  { 0, NULL }
};
static const value_string value_map_231[] = {
  { 76, "Light" },
  { 77, "Medium" },
  { 72, "Heavy" },
  { 74, "Super" },
  { 0, NULL }
};
static const value_string value_map_232[] = {
  { 0, "Scheduled off-block time" },
  { 1, "Estimated off-block time" },
  { 2, "Estimated take-off time" },
  { 3, "Actual off-block time" },
  { 4, "Predicted time at runway hold" },
  { 5, "Actual time at runway hold" },
  { 6, "Actual line-up time" },
  { 7, "Actual take-off time" },
  { 8, "Estimated time of arrival" },
  { 9, "Predicted landing time" },
  { 10, "Actual landing time" },
  { 11, "Actual time off runway" },
  { 12, "Predicted time to gate" },
  { 13, "Actual on-block time" },
  { 0, NULL }
};
static const value_string value_map_233[] = {
  { 0, "Today" },
  { 1, "Yesterday" },
  { 2, "Tomorrow" },
  { 0, NULL }
};
static const value_string value_map_234[] = {
  { 0, "Seconds available" },
  { 1, "Seconds not available" },
  { 0, NULL }
};
static const value_string value_map_235[] = {
  { 0, "Empty" },
  { 1, "Occupied" },
  { 2, "Unknown" },
  { 0, NULL }
};
static const value_string value_map_236[] = {
  { 0, "Available" },
  { 1, "Not available" },
  { 2, "Unknown" },
  { 0, NULL }
};
static const value_string value_map_218[] = {
  { 0, "Flyco (follow me)" },
  { 1, "ATC equipment maintenance" },
  { 2, "Airport maintenance" },
  { 3, "Fire" },
  { 4, "Bird scarer" },
  { 5, "Snow plough" },
  { 6, "Runway sweeper" },
  { 7, "Emergency" },
  { 8, "Police" },
  { 9, "Bus" },
  { 10, "Tug (push/tow)" },
  { 11, "Grass cutter" },
  { 12, "Fuel" },
  { 13, "Baggage" },
  { 14, "Catering" },
  { 15, "Aircraft maintenance" },
  { 16, "Unknown" },
  { 0, NULL }
};
static const value_string value_map_219[] = {
  { 1, "Towing aircraft" },
  { 2, "FOLLOW-ME operation" },
  { 3, "Runway check" },
  { 4, "Emergency operation (fire, medical...)" },
  { 5, "Work in progress (maintenance, birds scarer, sweepers...)" },
  { 0, NULL }
};
static const value_string value_map_241[] = {
  { 0, "Alert acknowledged" },
  { 1, "Alert not acknowledged" },
  { 0, NULL }
};
static const value_string value_map_242[] = {
  { 0, "End fo alert" },
  { 1, "Pre-alarm" },
  { 2, "Severe alert" },
  { 0, NULL }
};
static const value_string value_map_243[] = {
  { 0, "Indicator on" },
  { 1, "Indicator off" },
  { 0, NULL }
};
static const value_string value_map_251[] = {
  { 0, "No alert, no SPI, aircraft airborne" },
  { 1, "No alert, no SPI, aircraft on ground" },
  { 2, "Alert, no SPI, aircraft airborne" },
  { 3, "Alert, no SPI, aircraft on ground" },
  { 4, "Alert, SPI, aircraft airborne or on ground" },
  { 5, "No alert, SPI, aircraft airborne or on ground" },
  { 6, "General Emergency" },
  { 7, "Lifeguard / medical" },
  { 8, "Minimum fuel" },
  { 9, "No communications" },
  { 10, "Unlawful interference" },
  { 0, NULL }
};
static const value_string value_map_245[] = {
  { 0, "Default value" },
  { 1, "Age of the last received PSR track update is higher than system dependent threshold" },
  { 0, NULL }
};
static const value_string value_map_246[] = {
  { 0, "Default value" },
  { 1, "Age of the last received SSR track update is higher than system dependent threshold" },
  { 0, NULL }
};
static const value_string value_map_247[] = {
  { 0, "Default value" },
  { 1, "Age of the last received Mode S track update is higher than system dependent threshold" },
  { 0, NULL }
};
static const value_string value_map_248[] = {
  { 0, "Default value" },
  { 1, "Age of the last received ADS track update is higher than system dependent threshold" },
  { 0, NULL }
};
static const value_string value_map_249[] = {
  { 0, "Default value" },
  { 1, "Special Used Code (Mode A codes to be defined in the system to mark a track with special interest)" },
  { 0, NULL }
};
static const value_string value_map_250[] = {
  { 0, "Default value" },
  { 1, "Assigned Mode A Code Conflict (same individual Mode A Code assigned to another track)" },
  { 0, NULL }
};
static const value_string value_map_244[] = {
  { 0, "No QNH Correction Applied" },
  { 1, "QNH Correction Applied" },
  { 0, NULL }
};
static const value_string value_map_252[] = {
  { 0, "Instrument Flight Rules" },
  { 1, "Visual Flight Rules" },
  { 2, "Not applicable" },
  { 3, "Controlled Visual Flight Rules" },
  { 0, NULL }
};
static const value_string value_map_253[] = {
  { 1, "Measurement Plot" },
  { 2, "Measurement Track" },
  { 3, "Sensor Centric Plot" },
  { 4, "Sensor Centric Track" },
  { 5, "Track End Message" },
  { 0, NULL }
};
static const value_string value_map_254[] = {
  { 0, "Periodic Report" },
  { 1, "Event Driven Report" },
  { 0, NULL }
};
static const value_string value_map_255[] = {
  { 0, "Mono-Static Sensor" },
  { 1, "Multi-Static Sensor" },
  { 2, "Other" },
  { 3, "Unknown" },
  { 0, NULL }
};
static const value_string value_map_256[] = {
  { 0, "Actual Target Report" },
  { 1, "Reference Target" },
  { 2, "Synthetic Target" },
  { 3, "Simulated / Replayed Target" },
  { 0, NULL }
};
static const value_string value_map_257[] = {
  { 0, "Unknown" },
  { 1, "Forward" },
  { 2, "Backward" },
  { 3, "Static" },
  { 0, NULL }
};
static const value_string value_map_258[] = {
  { 0, "Target not in Blind Zone" },
  { 1, "Target in Blind Zone" },
  { 0, NULL }
};
static const value_string value_map_259[] = {
  { 0, "Target not in Blanked Zone" },
  { 1, "Target in Blanked Zone" },
  { 0, NULL }
};
static const value_string value_map_260[] = {
  { 0, "Track Alive" },
  { 1, "Track Terminated by User Request" },
  { 0, NULL }
};
static const value_string value_map_261[] = {
  { 0, "Not extrapolated" },
  { 1, "Extrapolated" },
  { 0, NULL }
};
static const value_string value_map_262[] = {
  { 0, "Confirmed Track" },
  { 1, "Tentative Track" },
  { 0, NULL }
};
static const value_string value_map_283[] = {
  { 1, "System Configuration" },
  { 2, "Transmitter / Receiver Configuration" },
  { 0, NULL }
};
static const value_string value_map_287[] = {
  { 0, "Network information" },
  { 10, "Track data" },
  { 20, "Track data request" },
  { 21, "Track data stop" },
  { 22, "Cancel track data request" },
  { 23, "Track data stop acknowledgement" },
  { 30, "New Node / Change-over Initial or intermediate message segment" },
  { 31, "New Node / Change-over Final or only message segment" },
  { 32, "New Node / Change-over Initial or intermediate message segment reply" },
  { 33, "New Node / Change-over Final or only message segment reply" },
  { 110, "Move node to new cluster state;" },
  { 111, "Move node to new cluster state acknowledgement" },
  { 0, NULL }
};
static const value_string value_map_289[] = {
  { 0, "Mode-3/A code derived from the reply of the transponder" },
  { 1, "Smoothed Mode-3/A code not extracted during the last scan" },
  { 0, NULL }
};
static const value_string value_map_288[] = {
  { 0, "Default" },
  { 1, "Garbled code / Error correction applied" },
  { 0, NULL }
};
static const value_string value_map_290[] = {
  { 0, "No communications capability (surveillance only), no ability to set CA code 7 either airborne or on the ground" },
  { 1, "Reserved" },
  { 2, "Reserved" },
  { 3, "Reserved" },
  { 4, "At Least Comm. A and Comm. B capability and the ability to set CA code 7 and on the ground" },
  { 5, "At Least Comm. A and Comm. B capability and the ability to set CA code 7 and airborne" },
  { 6, "At Least Comm. A and Comm. B capability and the ability to set CA code 7 and either airborne or on the ground" },
  { 7, "Signifies the DR field is not equal to 0 or the FS field equals 2, 3, 4 or 5 and either airborne or on the ground SI/II-capabilities of the Transponder" },
  { 0, NULL }
};
static const value_string value_map_291[] = {
  { 0, "Transponder SI capable" },
  { 1, "Transponder not SI capable" },
  { 0, NULL }
};
static const value_string value_map_292[] = {
  { 0, "Measured position" },
  { 1, "No measured position (coasted)" },
  { 0, NULL }
};
static const value_string value_map_293[] = {
  { 0, "Last Measured Flight Level" },
  { 1, "Predicted Flight Level" },
  { 0, NULL }
};
static const value_string value_map_294[] = {
  { 0, "Associate_req" },
  { 1, "Associate_resp" },
  { 2, "Release_req" },
  { 3, "Release_resp" },
  { 4, "Abort_req" },
  { 5, "Keep_alive" },
  { 16, "Aircraft_report" },
  { 17, "Aircraft_command" },
  { 18, "II_code_change" },
  { 32, "Uplink_packet" },
  { 33, "Cancel_uplink_packet" },
  { 34, "Uplink_packet_ack" },
  { 35, "Downlink_packet" },
  { 38, "Data_XON" },
  { 39, "Data_XOFF" },
  { 48, "Uplink_broadcast" },
  { 49, "Cancel_uplink_broadcast" },
  { 50, "Uplink_broadcast_ack" },
  { 52, "Downlink_broadcast" },
  { 64, "GICB_extraction" },
  { 65, "Cancel_GICB_extraction" },
  { 66, "GICB_extraction_ack" },
  { 67, "GICB_response" },
  { 0, NULL }
};
static const value_string value_map_295[] = {
  { 0, "Accepted, the request is accepted and is under processing" },
  { 1, "Rejected, the request has not been accepted" },
  { 2, "Cancelled, the request has been cancelled" },
  { 3, "Finished, the request has been accepted and successfully processed" },
  { 4, "Delayed, the request processing is temporarily delayed but the request is still valid" },
  { 5, "In Progress, the request is being successfully processed" },
  { 6, "In Progress, the request is being successfully processed" },
  { 0, NULL }
};
static const value_string value_map_296[] = {
  { 0, "No diagnostic available" },
  { 1, "Aircraft Exit" },
  { 2, "Incorrect aircraft address" },
  { 3, "Impossibility to process the message" },
  { 4, "Insufficient or change in data link capability" },
  { 5, "Invalid LV field" },
  { 6, "Duplicate request number" },
  { 7, "Unknown request number" },
  { 8, "Timer T3 expiry" },
  { 9, "Expiry of I/R delivery timer" },
  { 10, "Uplink flow disabled by UC" },
  { 0, NULL }
};
static const value_string value_map_321[] = {
  { 0, "SVC packets" },
  { 1, "MSP packets" },
  { 2, "Route packets" },
  { 0, NULL }
};
static const value_string value_map_322[] = {
  { 0, "The periodicity may not be strictly respected" },
  { 1, "The periodicity shall be strictly respected" },
  { 0, NULL }
};
static const value_string value_map_323[] = {
  { 0, "GICB extractions should be sent only when required by the periodicity" },
  { 1, "If a GICB extraction is done due to external conditions, an update will also be sent, even if it does not match the expected periodicity" },
  { 0, NULL }
};
static const value_string value_map_324[] = {
  { 0, "The GICB extraction is attempted according to the periodicity" },
  { 1, "There will no GICB attempts" },
  { 0, NULL }
};
static const value_string value_map_325[] = {
  { 0, "The extracted GICB must be sent only on the Data Link line" },
  { 1, "The extracted GICB must be sent only on the Surveillance line" },
  { 2, "The extracted GICB must be sent both on the Data Link and on the Surveillance lines" },
  { 0, NULL }
};
static const value_string value_map_297[] = {
  { 0, "UC shall be ignored" },
  { 1, "UC shall be taken into account" },
  { 0, NULL }
};
static const value_string value_map_298[] = {
  { 0, "DC shall be ignored" },
  { 1, "DC shall be taken into account" },
  { 0, NULL }
};
static const value_string value_map_299[] = {
  { 0, "the uplink flow shall be enabled" },
  { 1, "the uplink flow shall be stopped" },
  { 0, NULL }
};
static const value_string value_map_300[] = {
  { 0, "the downlink flow shall be enabled" },
  { 1, "the downlink flow shall be stopped" },
  { 0, NULL }
};
static const value_string value_map_301[] = {
  { 0, "The interrogator is enabled to uplink frames" },
  { 1, "The interrogator is disabled to uplink frames" },
  { 0, NULL }
};
static const value_string value_map_302[] = {
  { 0, "The interrogator is enabled to extract frames" },
  { 1, "The interrogator is disabled to extract frames" },
  { 0, NULL }
};
static const value_string value_map_303[] = {
  { 0, "The aircraft is in the Datalink coverage map of the interrogator" },
  { 1, "The aircraft is not in the Datalink coverage map of the interrogator" },
  { 0, NULL }
};
static const value_string value_map_304[] = {
  { 0, "The interrogators current ability to uplink/downlink frames (UCS/DCS) and the content of the Aircraft_report could be changed using D_Data_link_command" },
  { 1, "The interrogators current ability to uplink/downlink frames (UCS/DCS) and the content of the Aircraft_report cannot be changed using D_Data_link_command" },
  { 0, NULL }
};
static const value_string value_map_305[] = {
  { 0, "The next Aircraft_report may not include D_Data_link_status" },
  { 1, "The next Aircraft_report shall include D_Data_link_status" },
  { 0, NULL }
};
static const value_string value_map_306[] = {
  { 0, "The next Aircraft_report may not include D_COM" },
  { 1, "The next Aircraft_report shall include D_COM" },
  { 0, NULL }
};
static const value_string value_map_307[] = {
  { 0, "The next Aircraft_report may not include D_ECA" },
  { 1, "The next Aircraft_report shall include D_ECA" },
  { 0, NULL }
};
static const value_string value_map_308[] = {
  { 0, "The next Aircraft_report may not include D_CQF" },
  { 1, "The next Aircraft_report shall include D_CQF" },
  { 0, NULL }
};
static const value_string value_map_309[] = {
  { 0, "The next Aircraft_report may not include D_CQF_method" },
  { 1, "The next Aircraft_report shall include D_CQF_method" },
  { 0, NULL }
};
static const value_string value_map_310[] = {
  { 0, "The next Aircraft_report may not include D_Polar_position" },
  { 1, "The next Aircraft_report shall include D_Polar_position" },
  { 0, NULL }
};
static const value_string value_map_311[] = {
  { 0, "The next Aircraft_report may not include D_Cartesian_position" },
  { 1, "The next Aircraft_report shall include D_Cartesian_position" },
  { 0, NULL }
};
static const value_string value_map_312[] = {
  { 0, "The next Aircraft_report may not include Aircraft_ID" },
  { 1, "The next Aircraft_report shall include Aircraft_ID" },
  { 0, NULL }
};
static const value_string value_map_313[] = {
  { 0, "The next Aircraft_report may not include Mode_A" },
  { 1, "The next Aircraft_report shall include Mode_A" },
  { 0, NULL }
};
static const value_string value_map_314[] = {
  { 0, "The next Aircraft_report may not include Speed" },
  { 1, "The next Aircraft_report shall include Speed" },
  { 0, NULL }
};
static const value_string value_map_315[] = {
  { 0, "The next Aircraft_report may not include Height" },
  { 1, "The next Aircraft_report shall include Height" },
  { 0, NULL }
};
static const value_string value_map_316[] = {
  { 0, "The next Aircraft_report may not include Heading" },
  { 1, "The next Aircraft_report shall include Heading" },
  { 0, NULL }
};
static const value_string value_map_317[] = {
  { 0, "No communications capability (surveillance only)" },
  { 1, "Comm. A and Comm. B capability" },
  { 2, "Comm. A, Comm. B and Uplink ELM" },
  { 3, "Comm. A, Comm. B and Uplink ELM and Downlink ELM" },
  { 4, "Level 5 Transponder capability" },
  { 0, NULL }
};
static const value_string value_map_318[] = {
  { 0, "Aircraft is airborne" },
  { 1, "Aircraft is on the ground" },
  { 0, NULL }
};
static const value_string value_map_319[] = {
  { 0, "The CQF calculation method is not supported" },
  { 1, "The CQF is minimum" },
  { 126, "The CQF is maximum" },
  { 127, "The CQF is undefined according to the calculation method" },
  { 0, NULL }
};
static const value_string value_map_326[] = {
  { 1, "Start of Update Cycle" },
  { 2, "Periodic Status Message" },
  { 3, "Event-triggered Status Message" },
  { 0, NULL }
};
static const value_string value_map_327[] = {
  { 0, "Operational" },
  { 1, "Degraded" },
  { 2, "NOGO" },
  { 3, "Undefined" },
  { 0, NULL }
};
static const value_string value_map_328[] = {
  { 0, "Standby" },
  { 1, "Exec" },
  { 0, NULL }
};
static const value_string value_map_329[] = {
  { 0, "Faulted" },
  { 1, "Good" },
  { 0, NULL }
};
static const value_string value_map_330[] = {
  { 0, "Not present" },
  { 1, "Present" },
  { 0, NULL }
};
static const value_string value_map_331[] = {
  { 0, "Offline" },
  { 1, "Online" },
  { 0, NULL }
};
static const value_string value_map_332[] = {
  { 1, "Warning" },
  { 2, "Faulted" },
  { 3, "Good" },
  { 0, NULL }
};
static const value_string value_map_334[] = {
  { 0, "Non-Mode S 1090MHz multilateration" },
  { 1, "No Non-Mode S 1090MHz multilat" },
  { 0, NULL }
};
static const value_string value_map_335[] = {
  { 0, "Mode-S 1090 MHz multilateration" },
  { 1, "No Mode-S 1090 MHz multilateration" },
  { 0, NULL }
};
static const value_string value_map_336[] = {
  { 0, "HF multilateration" },
  { 1, "No HF multilateration" },
  { 0, NULL }
};
static const value_string value_map_337[] = {
  { 0, "VDL Mode 4 multilateration" },
  { 1, "No VDL Mode 4 multilateration" },
  { 0, NULL }
};
static const value_string value_map_338[] = {
  { 0, "UAT multilateration" },
  { 1, "No UAT multilateration" },
  { 0, NULL }
};
static const value_string value_map_339[] = {
  { 0, "DME/TACAN multilateration" },
  { 1, "No DME/TACAN multilateration" },
  { 0, NULL }
};
static const value_string value_map_340[] = {
  { 0, "Other Technology Multilateration" },
  { 1, "No Other Technology Multilateration" },
  { 0, NULL }
};
static const value_string value_map_341[] = {
  { 0, "Report from target transponder" },
  { 1, "Report from field monitor (element transponder)" },
  { 0, NULL }
};
static const value_string value_map_346[] = {
  { 0, "Confirmed track" },
  { 1, "Track in initiation phase" },
  { 0, NULL }
};
static const value_string value_map_345[] = {
  { 0, "Mode-3/A code derived from the reply of the transponder" },
  { 1, "Mode-3/A code not extracted during the last update period" },
  { 0, NULL }
};
static const value_string value_map_348[] = {
  { 0, "Callsign or registration not downlinked from transponder" },
  { 1, "Registration downlinked from transponder" },
  { 2, "Callsign downlinked from transponder" },
  { 3, "Not defined" },
  { 0, NULL }
};
static const value_string value_map_349[] = {
  { 0, "TU1/RU1 has NOT contributed to the target detection" },
  { 1, "TU1/RU1 has contributed to the target detection" },
  { 0, NULL }
};
static const value_string value_map_350[] = {
  { 0, "TU2/RU2 has NOT contributed to the target detection" },
  { 1, "TU2/RU2 has contributed to the target detection" },
  { 0, NULL }
};
static const value_string value_map_351[] = {
  { 0, "TU3/RU3 has NOT contributed to the target detection" },
  { 1, "TU3/RU3 has contributed to the target detection" },
  { 0, NULL }
};
static const value_string value_map_352[] = {
  { 0, "TU4/RU4 has NOT contributed to the target detection" },
  { 1, "TU4/RU4 has contributed to the target detection" },
  { 0, NULL }
};
static const value_string value_map_353[] = {
  { 0, "TU5/RU5 has NOT contributed to the target detection" },
  { 1, "TU5/RU5 has contributed to the target detection" },
  { 0, NULL }
};
static const value_string value_map_354[] = {
  { 0, "TU6/RU6 has NOT contributed to the target detection" },
  { 1, "TU6/RU6 has contributed to the target detection" },
  { 0, NULL }
};
static const value_string value_map_355[] = {
  { 0, "TU7/RU7 has NOT contributed to the target detection" },
  { 1, "TU7/RU7 has contributed to the target detection" },
  { 0, NULL }
};
static const value_string value_map_356[] = {
  { 0, "TU8/RU8 has NOT contributed to the target detection" },
  { 1, "TU8/RU8 has contributed to the target detection" },
  { 0, NULL }
};
static const value_string value_map_347[] = {
  { 0, "No alert, no SPI, aircraft airborne" },
  { 1, "No alert, no SPI, aircraft on ground" },
  { 2, "Alert, no SPI, aircraft airborne" },
  { 3, "Alert, no SPI, aircraft on ground" },
  { 4, "Alert, SPI, aircraft airborne or on ground" },
  { 5, "No alert, SPI, aircraft airborne or on ground" },
  { 6, "Not assigned" },
  { 7, "Information not yet extracted" },
  { 0, NULL }
};
static const value_string value_map_342[] = {
  { 0, "Not defined; never used" },
  { 1, "Multipath Reply (Reflection)" },
  { 3, "Split plot" },
  { 10, "Phantom SSR plot" },
  { 11, "Non-Matching Mode-3/A Code" },
  { 12, "Mode C code / Mode S altitude code abnormal value compared to the track" },
  { 15, "Transponder anomaly detected" },
  { 16, "Duplicated or Illegal Mode S Aircraft Address" },
  { 17, "Mode S error correction applied" },
  { 18, "Undecodable Mode C code / Mode S altitude code" },
  { 0, NULL }
};
static const value_string value_map_344[] = {
  { 0, "Mode-1 code derived from the reply of the transponder" },
  { 1, "Smoothed Mode-1 code as provided by a local tracker" },
  { 0, NULL }
};
static const value_string value_map_343[] = {
  { 0, "Mode-2 code derived from the reply of the transponder" },
  { 1, "Smoothed Mode-2 code as provided by a local tracker n" },
  { 0, NULL }
};
static const value_string value_map_358[] = {
  { 0, "Target with 24-bit ICAO address" },
  { 1, "Target with a non-ICAO 24-bit address" },
  { 2, "Non-ADS-B Message" },
  { 3, "Information not available" },
  { 0, NULL }
};
static const value_string value_map_359[] = {
  { 0, "Not Coasted" },
  { 1, "Coasted" },
  { 0, NULL }
};
static const value_string value_map_360[] = {
  { 0, "Non-extended version" },
  { 1, "ACAS Xa Version 1" },
  { 2, "ACAS Xu Version 1" },
  { 3, "Reserved for future use" },
  { 0, NULL }
};
static const value_string value_map_363[] = {
  { 0, "Ground Bit not set" },
  { 1, "Ground Bit set" },
  { 0, NULL }
};
static const value_string value_map_364[] = {
  { 0, "Equipment capable to provide Selected Altitude" },
  { 1, "Equipment not capable to provide Selected Altitude" },
  { 0, NULL }
};
static const value_string value_map_365[] = {
  { 0, "Non unique address" },
  { 1, "24-Bit ICAO address" },
  { 2, "Surface vehicle address" },
  { 3, "Anonymous address" },
  { 4, "Reserved for future use" },
  { 5, "Reserved for future use" },
  { 6, "Reserved for future use" },
  { 7, "Reserved for future use" },
  { 0, NULL }
};
static const value_string value_map_366[] = {
  { 0, "Unknown" },
  { 1, "25 ft" },
  { 2, "100 ft" },
  { 0, NULL }
};
static const value_string value_map_367[] = {
  { 0, "Unknown" },
  { 1, "ACAS not operational" },
  { 2, "ACAS operartional" },
  { 3, "Invalid" },
  { 0, NULL }
};
static const value_string value_map_368[] = {
  { 0, "Unknown" },
  { 1, "Multiple Navigation not operational" },
  { 2, "Multiple Navigation operartional" },
  { 3, "Invalid" },
  { 0, NULL }
};
static const value_string value_map_369[] = {
  { 0, "Unknown" },
  { 1, "Differencial Correction" },
  { 2, "NO Differencial Correction" },
  { 3, "Invalid" },
  { 0, NULL }
};
static const value_string value_map_391[] = {
  { 0, "Unknown" },
  { 1, "Aircraft equiped with CDTI" },
  { 0, NULL }
};
static const value_string value_map_392[] = {
  { 0, "Not used" },
  { 1, "Used" },
  { 0, NULL }
};
static const value_string value_map_385[] = {
  { 0, "Air Speed = IAS, LSB (Bit-1) = 2 -14 NM/s" },
  { 1, "Air Speed = Mach, LSB (Bit-1) = 0.001" },
  { 0, NULL }
};
static const value_string value_map_388[] = {
  { 0, "Not available" },
  { 1, "Left" },
  { 2, "Right" },
  { 3, "Straight" },
  { 0, NULL }
};
static const value_string value_map_390[] = {
  { 0, "No emergency / not reported" },
  { 1, "General emergency" },
  { 2, "Lifeguard / medical" },
  { 3, "Minimum fuel" },
  { 4, "No communications" },
  { 5, "Unlawful interference" },
  { 0, NULL }
};
static const value_string value_map_361[] = {
  { 1, "Light aircraft <= 7000 kg" },
  { 2, "Reserved" },
  { 3, "7000 kg < Medium aircraft < 136000 kg" },
  { 4, "Reserved" },
  { 5, "136000 kg <= Heavy aircraft" },
  { 6, "Highly manoeuvrable (5g acceleration capability) and high speed (>400 knots cruise)" },
  { 7, "Reserved" },
  { 8, "Reserved" },
  { 9, "Reserved" },
  { 10, "Rotocraft" },
  { 11, "Glider / sailplane" },
  { 12, "Lighter-than-air" },
  { 13, "Unmanned aerial vehicle" },
  { 14, "Space / transatmospheric vehicle" },
  { 15, "Ultralight / handglider / paraglider" },
  { 16, "Parachutist / skydiver" },
  { 17, "Reserved" },
  { 18, "Reserved" },
  { 19, "Reserved" },
  { 20, "Surface emergency vehicle" },
  { 21, "Surface service vehicle" },
  { 22, "Fixed ground or tethered obstruction" },
  { 23, "Reserved" },
  { 24, "Reserved" },
  { 0, NULL }
};
static const value_string value_map_382[] = {
  { 0, "No source information provided" },
  { 1, "Source Information provided" },
  { 0, NULL }
};
static const value_string value_map_383[] = {
  { 0, "Unknown" },
  { 1, "Aircraft Altitude (Holding Altitude)" },
  { 2, "MCP/FCU Selected Altitude" },
  { 3, "FMS Selected Altitude" },
  { 0, NULL }
};
static const value_string value_map_384[] = {
  { 0, "Not active" },
  { 1, "Active" },
  { 0, NULL }
};
static const value_string value_map_371[] = {
  { 0, "Trajectory Intent Data is available for this aircraft" },
  { 1, "Trajectory Intent Data is not available for this aircraft" },
  { 0, NULL }
};
static const value_string value_map_372[] = {
  { 0, "Trajectory Intent Data is valid" },
  { 1, "Trajectory Intent Data is not valid" },
  { 0, NULL }
};
static const value_string value_map_373[] = {
  { 0, "TCP number available" },
  { 1, "TCP number not available" },
  { 0, NULL }
};
static const value_string value_map_374[] = {
  { 0, "TCP compliance" },
  { 1, "TCP non-compliance" },
  { 0, NULL }
};
static const value_string value_map_377[] = {
  { 0, "Unknown" },
  { 1, "Fly by waypoint (LT)" },
  { 2, "Fly over waypoint (LT)" },
  { 3, "Hold pattern (LT)" },
  { 4, "Procedure hold (LT)" },
  { 5, "Procedure turn (LT)" },
  { 6, "RF leg (LT)" },
  { 7, "Top of climb (VT)" },
  { 8, "Top of descent (VT)" },
  { 9, "Start of level (VT)" },
  { 10, "Cross-over altitude (VT)" },
  { 11, "Transition altitude (VT)" },
  { 0, NULL }
};
static const value_string value_map_378[] = {
  { 0, "N/A" },
  { 1, "Turn right" },
  { 2, "Turn left" },
  { 3, "No turn" },
  { 0, NULL }
};
static const value_string value_map_379[] = {
  { 0, "TTR not available" },
  { 1, "TTR available" },
  { 0, NULL }
};
static const value_string value_map_380[] = {
  { 0, "TOV available" },
  { 1, "TOV not available" },
  { 0, NULL }
};
static const value_string value_map_396[] = {
  { 0, "Mode-3/A code derived during last update" },
  { 1, "Mode-3/A code not extracted during the last update" },
  { 0, NULL }
};
static const value_string value_map_398[] = {
  { 0, "True North" },
  { 1, "Magnetic North" },
  { 0, NULL }
};
static const value_string value_map_399[] = {
  { 0, "Data is either unavailable or invalid" },
  { 1, "Data is available and valid" },
  { 0, NULL }
};
static const value_string value_map_401[] = {
  { 0, "Autopilot not engaged" },
  { 1, "Autopilot engaged" },
  { 0, NULL }
};
static const value_string value_map_402[] = {
  { 0, "Vertical Navigation not active" },
  { 1, "Vertical Navigation active" },
  { 0, NULL }
};
static const value_string value_map_403[] = {
  { 0, "Altitude Hold not engaged" },
  { 1, "Altitude Hold engaged" },
  { 0, NULL }
};
static const value_string value_map_404[] = {
  { 0, "Approach Mode not active" },
  { 1, "Approach Mode active" },
  { 0, NULL }
};
static const value_string value_map_405[] = {
  { 0, "Aircraft has not stopped" },
  { 1, "Aircraft has stopped" },
  { 0, NULL }
};
static const value_string value_map_406[] = {
  { 0, "Heading/Ground Track data is not valid" },
  { 1, "Heading/Ground Track data is valid" },
  { 0, NULL }
};
static const value_string value_map_407[] = {
  { 0, "Heading data provided" },
  { 1, "Ground Track provided" },
  { 0, NULL }
};
static const value_string value_map_409[] = {
  { 0, "Target is not 1090 ES IN capable" },
  { 1, "Target is 1090 ES IN capable" },
  { 0, NULL }
};
static const value_string value_map_410[] = {
  { 0, "Target is not UAT IN capable" },
  { 1, "Target is UAT IN capable" },
  { 0, NULL }
};
static const value_string value_map_411[] = {
  { 0, "No Mode 5 interrogation" },
  { 1, "Mode 5 interrogation" },
  { 0, NULL }
};
static const value_string value_map_412[] = {
  { 0, "No authenticated Mode 5 ID reply/report" },
  { 1, "Authenticated Mode 5 ID reply/report" },
  { 0, NULL }
};
static const value_string value_map_413[] = {
  { 0, "No authenticated Mode 5 Data reply or Report" },
  { 1, "Authenticated Mode 5 Data reply or Report (i.e any valid Mode 5 reply type other than ID)" },
  { 0, NULL }
};
static const value_string value_map_414[] = {
  { 0, "Mode 1 code not present or not from Mode 5 reply/report" },
  { 1, "Mode 1 code from Mode 5 reply/report" },
  { 0, NULL }
};
static const value_string value_map_415[] = {
  { 0, "Mode 2 code not present or not from Mode 5 reply/report" },
  { 1, "Mode 2 code from Mode 5 reply/report" },
  { 0, NULL }
};
static const value_string value_map_416[] = {
  { 0, "Mode 3 code not present or not from Mode 5 reply/report" },
  { 1, "Mode 3 code from Mode 5 reply/report" },
  { 0, NULL }
};
static const value_string value_map_417[] = {
  { 0, "Flightlevel not present or not from Mode 5 reply/report" },
  { 1, "Flightlevel from Mode 5 reply/report" },
  { 0, NULL }
};
static const value_string value_map_418[] = {
  { 0, "Position not from Mode 5 report (ADS-B report)" },
  { 1, "Position from Mode 5 report" },
  { 0, NULL }
};
static const value_string value_map_419[] = {
  { 0, "Mode 1 code as derived from the report of the transponder" },
  { 1, "Smoothed Mode 1 code as provided by a local tracker" },
  { 0, NULL }
};
static const value_string value_map_420[] = {
  { 0, "X-Pulse not present" },
  { 1, "X-pulse present" },
  { 0, NULL }
};
static const value_string value_map_421[] = {
  { 0, "X-pulse set to zero or no authenticated Data reply or Report received" },
  { 1, "X-pulse set to one (present)" },
  { 0, NULL }
};
static const value_string value_map_422[] = {
  { 0, "X-pulse set to zero or no Mode C reply" },
  { 1, "X-pulse set to one (present)" },
  { 0, NULL }
};
static const value_string value_map_423[] = {
  { 0, "X-pulse set to zero or no Mode 3/A reply" },
  { 1, "X-pulse set to one (present)" },
  { 0, NULL }
};
static const value_string value_map_424[] = {
  { 0, "0 X-pulse set to zero or no Mode 2 reply" },
  { 1, "X-pulse set to one (present)" },
  { 0, NULL }
};
static const value_string value_map_425[] = {
  { 0, "X-pulse set to zero or no Mode 1 reply" },
  { 1, "X-pulse set to one (present)" },
  { 0, NULL }
};
static const value_string value_map_426[] = {
  { 0, "MCP/FCU Mode Bits not populated" },
  { 1, "MCP/FCU Mode Bits populated" },
  { 0, NULL }
};
static const value_string value_map_427[] = {
  { 0, "Not RCE" },
  { 1, "TABS (see Note 2)" },
  { 2, "Reserved for future use" },
  { 3, "Other RCE" },
  { 0, NULL }
};
static const value_string value_map_428[] = {
  { 0, "Reply Rate Limiting is not active" },
  { 1, "Reply Rate Limiting is active" },
  { 0, NULL }
};
static const value_string value_map_429[] = {
  { 0, "No emergency / not reported" },
  { 1, "General emergency" },
  { 2, "UAS/RPAS - Lost link" },
  { 3, "Minimum fuel" },
  { 4, "No communications" },
  { 5, "Unlawful interference" },
  { 6, "Aircraft in Distress" },
  { 7, "Aircraft in Distress Manual Activation" },
  { 0, NULL }
};
static const value_string value_map_430[] = {
  { 0, "Unavailable, Unknown, or less than 70 W" },
  { 1, "70 W" },
  { 2, "125 W" },
  { 3, "200 W" },
  { 0, NULL }
};
static const value_string value_map_431[] = {
  { 0, "Unknown" },
  { 1, "Transponder #1 (left/pilot side or single)" },
  { 2, "Transponder #2 (right/co-pilot side)" },
  { 3, "Transponder #3 (auxiliary or Backup)" },
  { 0, NULL }
};
static const value_string value_map_432[] = {
  { 0, "Manned Operation" },
  { 1, "Unmanned Operation" },
  { 0, NULL }
};
static const value_string value_map_433[] = {
  { 0, "RWC Corrective Alert not active" },
  { 1, "RWC Corrective Alert active" },
  { 0, NULL }
};
static const value_string value_map_434[] = {
  { 0, "No RWC Capability" },
  { 1, "RWC/RA/OCM Capability" },
  { 2, "RWC/OCM Capability" },
  { 3, "Invalid ASTERIX Value" },
  { 0, NULL }
};
static const value_string value_map_435[] = {
  { 0, "Vertical Only" },
  { 1, "Horizontal Only" },
  { 2, "Blended" },
  { 3, "Vertical Only or Horizontal Only per intruder" },
  { 0, NULL }
};
static const value_string value_map_436[] = {
  { 0, "Active CAS (TCAS II) or no CAS" },
  { 1, "Active CAS (not TCAS II)" },
  { 2, "Active CAS (not TCAS II) with OCM transmit capability" },
  { 3, "Active CAS of Junior Status" },
  { 4, "Passive CAS with 1030TCAS Resolution Message receive capability" },
  { 5, "Passive CAS with only OCM receive capability" },
  { 6, "Reserved for future use" },
  { 7, "Reserved for future use" },
  { 0, NULL }
};
static const value_string value_map_437[] = {
  { 0, "Element Not Populated" },
  { 1, "Element Populated" },
  { 0, NULL }
};
static const value_string value_map_438[] = {
  { 0, "No data" },
  { 1, "0 ≤ TAO ≤ 1" },
  { 2, "1 < TAO ≤ 2" },
  { 3, "2 < TAO ≤ 4" },
  { 4, "4 < TAO ≤ 6" },
  { 5, "6 < TAO ≤ 8" },
  { 6, "8 < TAO ≤ 10" },
  { 7, "10 < TAO ≤ 12" },
  { 8, "12 < TAO ≤ 14" },
  { 9, "14 < TAO ≤ 16" },
  { 10, "16 < TAO ≤ 18" },
  { 11, "18 < TAO ≤ 20" },
  { 12, "20 < TAO ≤ 22" },
  { 13, "22 < TAO ≤ 24" },
  { 14, "24 < TAO ≤ 26" },
  { 15, "26 < TAO ≤ 28" },
  { 16, "28 < TAO ≤ 30" },
  { 17, "30 < TAO ≤ 32" },
  { 18, "32 < TAO ≤ 34" },
  { 19, "34 < TAO ≤ 36" },
  { 20, "36 < TAO ≤ 38" },
  { 21, "38 < TAO ≤ 40" },
  { 22, "40 < TAO ≤ 42" },
  { 23, "42 < TAO ≤ 44" },
  { 24, "44 < TAO ≤ 46" },
  { 25, "46 < TAO ≤ 48" },
  { 26, "48 < TAO ≤ 50" },
  { 27, "50 < TAO ≤ 52" },
  { 28, "52 < TAO ≤ 54" },
  { 29, "54 < TAO ≤ 56" },
  { 30, "56 < TAO ≤ 58" },
  { 31, "TAO > 58" },
  { 0, NULL }
};
static const value_string value_map_448[] = {
  { 0, "24-Bit ICAO address" },
  { 1, "Duplicate address" },
  { 2, "Surface vehicle address" },
  { 3, "Anonymous address" },
  { 4, "Reserved for future use" },
  { 5, "Reserved for future use" },
  { 6, "Reserved for future use" },
  { 7, "Reserved for future use" },
  { 0, NULL }
};
static const value_string value_map_449[] = {
  { 0, "25 ft" },
  { 1, "100 ft" },
  { 2, "Unknown" },
  { 3, "Invalid" },
  { 0, NULL }
};
static const value_string value_map_450[] = {
  { 0, "Default" },
  { 1, "Range Check passed, CPR Validation pending" },
  { 0, NULL }
};
static const value_string value_map_451[] = {
  { 0, "Report valid" },
  { 1, "Report suspect" },
  { 2, "No information" },
  { 3, "Reserved for future use" },
  { 0, NULL }
};
static const value_string value_map_452[] = {
  { 0, "Default (see note)" },
  { 1, "Independent Position Check failed" },
  { 0, NULL }
};
static const value_string value_map_453[] = {
  { 0, "NOGO-bit not set" },
  { 1, "NOGO-bit set" },
  { 0, NULL }
};
static const value_string value_map_454[] = {
  { 0, "CPR Validation correct" },
  { 1, "CPR Validation failed" },
  { 0, NULL }
};
static const value_string value_map_455[] = {
  { 0, "LDPJ not detected" },
  { 1, "LDPJ detected" },
  { 0, NULL }
};
static const value_string value_map_456[] = {
  { 0, "Default" },
  { 1, "Range Check failed" },
  { 0, NULL }
};
static const value_string value_map_462[] = {
  { 0, "Value in defined range" },
  { 1, "Value exceeds defined range" },
  { 0, NULL }
};
static const value_string value_map_457[] = {
  { 3, "Reserved" },
  { 2, "TOMRp whole seconds = (I021/073) Whole seconds - 1" },
  { 1, "TOMRp whole seconds = (I021/073) Whole seconds + 1" },
  { 0, "TOMRp whole seconds = (I021/073) Whole seconds" },
  { 0, NULL }
};
static const value_string value_map_459[] = {
  { 3, "Reserved" },
  { 2, "TOMRp whole seconds = (I021/075) Whole seconds - 1" },
  { 1, "TOMRp whole seconds = (I021/075) Whole seconds + 1" },
  { 0, "TOMRp whole seconds = (I021/075) Whole seconds" },
  { 0, NULL }
};
static const value_string value_map_460[] = {
  { 0, "Measured per flight-hour" },
  { 1, "Measured per sample" },
  { 0, NULL }
};
static const value_string value_map_468[] = {
  { 0, "The MOPS Version is supported by the GS" },
  { 1, "The MOPS Version is not supported by the GS" },
  { 0, NULL }
};
static const value_string value_map_469[] = {
  { 0, "ED102/DO-260 [Ref. 8]" },
  { 1, "DO-260A [Ref. 9]" },
  { 2, "ED102A/DO-260B [Ref. 11]" },
  { 0, NULL }
};
static const value_string value_map_470[] = {
  { 0, "Other" },
  { 1, "UAT" },
  { 2, "1090 ES" },
  { 3, "VDL 4" },
  { 4, "Not assigned" },
  { 5, "Not assigned" },
  { 6, "Not assigned" },
  { 7, "Not assigned" },
  { 0, NULL }
};
static const value_string value_map_464[] = {
  { 0, "No intent change active" },
  { 1, "Intent change flag raised" },
  { 0, NULL }
};
static const value_string value_map_465[] = {
  { 0, "LNAV Mode engaged" },
  { 1, "LNAV Mode not engaged" },
  { 0, NULL }
};
static const value_string value_map_466[] = {
  { 0, "No emergency / not reported" },
  { 1, "General emergency" },
  { 2, "Lifeguard / medical emergency" },
  { 3, "Minimum fuel" },
  { 4, "No communications" },
  { 5, "Unlawful interference" },
  { 6, "DOWNED Aircraft" },
  { 0, NULL }
};
static const value_string value_map_467[] = {
  { 0, "No condition reported" },
  { 1, "Permanent Alert (Emergency condition)" },
  { 2, "Temporary Alert (change in Mode 3/A Code other than emergency)" },
  { 3, "SPI set" },
  { 0, NULL }
};
static const value_string value_map_447[] = {
  { 0, "No ADS-B Emitter Category Information" },
  { 1, "Light aircraft <= 15500 lbs" },
  { 2, "15500 lbs < small aircraft <75000 lbs" },
  { 3, "75000 lbs < medium a/c < 300000 lbs" },
  { 4, "High Vortex Large" },
  { 5, "300000 lbs <= heavy aircraft" },
  { 6, "Highly manoeuvrable (5g acceleration capability) and high speed (>400 knots cruise)" },
  { 7, "Reserved" },
  { 8, "Reserved" },
  { 9, "Reserved" },
  { 10, "Rotocraft" },
  { 11, "Glider / sailplane" },
  { 12, "Lighter-than-air" },
  { 13, "Unmanned aerial vehicle" },
  { 14, "Space / transatmospheric vehicle" },
  { 15, "Ultralight / handglider / paraglider" },
  { 16, "Parachutist / skydiver" },
  { 17, "Reserved" },
  { 18, "Reserved" },
  { 19, "Reserved" },
  { 20, "Surface emergency vehicle" },
  { 21, "Surface service vehicle" },
  { 22, "Fixed ground or tethered obstruction" },
  { 23, "Cluster obstacle" },
  { 24, "Line obstacle" },
  { 0, NULL }
};
static const value_string value_map_461[] = {
  { 0, "Not active or unknown" },
  { 1, "Active" },
  { 0, NULL }
};
static const value_string value_map_439[] = {
  { 0, "TCAS II or ACAS RA not active" },
  { 1, "TCAS RA active" },
  { 0, NULL }
};
static const value_string value_map_440[] = {
  { 0, "No capability for Trajectory Change Reports" },
  { 1, "Support for TC+0 reports only" },
  { 2, "Support for multiple TC reports" },
  { 3, "Reserved" },
  { 0, NULL }
};
static const value_string value_map_441[] = {
  { 0, "No capability to support Target State Reports" },
  { 1, "Capable of supporting target State Reports" },
  { 0, NULL }
};
static const value_string value_map_442[] = {
  { 0, "No capability to generate ARV-reports" },
  { 1, "Capable of generate ARV-reports" },
  { 0, NULL }
};
static const value_string value_map_443[] = {
  { 0, "CDTI not operational" },
  { 1, "CDTI operational" },
  { 0, NULL }
};
static const value_string value_map_444[] = {
  { 0, "TCAS operational" },
  { 1, "TCAS not operational" },
  { 0, NULL }
};
static const value_string value_map_445[] = {
  { 0, "Antenna Diversity" },
  { 1, "Single Antenna only" },
  { 0, NULL }
};
static const value_string value_map_471[] = {
  { 0, "Position transmitted is not ADS-B position reference point" },
  { 1, "Position transmitted is the ADS-B position reference point" },
  { 0, NULL }
};
static const value_string value_map_472[] = {
  { 0, ">= 70 Watts" },
  { 1, "< 70 Watts" },
  { 0, NULL }
};
static const value_string value_map_473[] = {
  { 0, "Aircraft not receiving ATC-services" },
  { 1, "Aircraft receiving ATC services" },
  { 0, NULL }
};
static const value_string value_map_474[] = {
  { 0, "IDENT switch not active" },
  { 1, "IDENT switch active" },
  { 0, NULL }
};
static const value_string value_map_476[] = {
  { 0, "No military emergency" },
  { 1, "Military emergency" },
  { 0, NULL }
};
static const value_string value_map_477[] = {
  { 0, "Default" },
  { 1, "List Lookup failed (see note)" },
  { 0, NULL }
};
static const value_string value_map_478[] = {
  { 0, "ED102/DO-260 [Ref. 7]" },
  { 1, "DO-260A [Ref. 8]" },
  { 2, "ED102A/DO-260B [Ref. 10]" },
  { 3, "ED-102B/DO-260C [Ref. 11]" },
  { 0, NULL }
};
static const value_string value_map_479[] = {
  { 0, "PIC mapped from FTC and NIC Supplements" },
  { 1, "1 PIC directly received in HVA or Phase Overlay" },
  { 0, NULL }
};
static const value_string value_map_480[] = {
  { 0, "Validation not performed" },
  { 1, "Validation performed without Pass/Fail (see Note)" },
  { 2, "Validation Pass (see Note)" },
  { 3, "Validation Fail (see Note)" },
  { 0, NULL }
};
static const value_string value_map_481[] = {
  { 0, "Item not available" },
  { 1, "Item available" },
  { 0, NULL }
};
static const value_string value_map_483[] = {
  { 1, "Ground station status report" },
  { 2, "Service status report" },
  { 3, "Service statistics report" },
  { 0, NULL }
};
static const value_string value_map_484[] = {
  { 1, "ADS-B VDL4" },
  { 2, "ADS-B Ext Squitter" },
  { 3, "ADS-B UAT" },
  { 4, "TIS-B VDL4" },
  { 5, "TIS-B Ext Squitter" },
  { 6, "TIS-B UAT" },
  { 7, "FIS-B VDL4" },
  { 8, "GRAS VDL4" },
  { 9, "MLT" },
  { 0, NULL }
};
static const value_string value_map_485[] = {
  { 0, "Data is released for operational use" },
  { 1, "Data must not be used operationally" },
  { 0, NULL }
};
static const value_string value_map_486[] = {
  { 0, "Default, no overload" },
  { 1, "Overload in DP" },
  { 0, NULL }
};
static const value_string value_map_487[] = {
  { 0, "Default, no overload" },
  { 1, "Overload in transmission subsystem" },
  { 0, NULL }
};
static const value_string value_map_488[] = {
  { 0, "Monitoring system not connected or unknown" },
  { 1, "Monitoring system connected" },
  { 0, NULL }
};
static const value_string value_map_489[] = {
  { 0, "No spoofing detected" },
  { 1, "Potential spoofing attack" },
  { 0, NULL }
};
static const value_string value_map_490[] = {
  { 0, "Default" },
  { 1, "Track numbering has restarted" },
  { 0, NULL }
};
static const value_string value_map_491[] = {
  { 0, "No information" },
  { 1, "NRA class" },
  { 2, "Reserved for future use" },
  { 3, "Reserved for future use" },
  { 4, "Reserved for future use" },
  { 5, "Reserved for future use" },
  { 6, "Reserved for future use" },
  { 7, "Reserved for future use" },
  { 0, NULL }
};
static const value_string value_map_492[] = {
  { 0, "Unknown" },
  { 1, "Failed" },
  { 2, "Disabled" },
  { 3, "Degraded" },
  { 4, "Normal" },
  { 5, "Initialisation" },
  { 0, NULL }
};
static const value_string value_map_493[] = {
  { 0, "Number of unknown messages received" },
  { 1, "Number of too old messages received" },
  { 2, "Number of failed message conversions" },
  { 3, "Total Number of messages received" },
  { 4, "Total Number of messages transmitted" },
  { 20, "Number of TIS-B management messages received" },
  { 21, "Number of Basic messages received" },
  { 22, "Number of High Dynamic messages received" },
  { 23, "Number of Full Position messages received" },
  { 24, "Number of Basic Ground  messages received" },
  { 25, "Number of TCP messages received" },
  { 26, "Number of UTC time  messages received" },
  { 27, "Number of Data messages received" },
  { 28, "Number of High Resolution messages received" },
  { 29, "Number of Aircraft Target Airborne messages received" },
  { 30, "Number of Aircraft Target Ground messages received" },
  { 31, "Number of Ground Vehicle Target messages received" },
  { 32, "Number of 2 slots TCP messages received" },
  { 0, NULL }
};
static const value_string value_map_494[] = {
  { 0, "From midnight" },
  { 1, "From the last report" },
  { 0, NULL }
};
static const value_string value_map_496[] = {
  { 0, "Operational" },
  { 1, "Operational but in Standby" },
  { 2, "Maintenance" },
  { 3, "Reserved for future use" },
  { 0, NULL }
};
static const value_string value_map_497[] = {
  { 0, "Running" },
  { 1, "Failed" },
  { 2, "Degraded" },
  { 3, "Undefined" },
  { 4, "Reserved for future use" },
  { 5, "Reserved for future use" },
  { 6, "Reserved for future use" },
  { 7, "Reserved for future use" },
  { 8, "Reserved for future use" },
  { 9, "Reserved for future use" },
  { 10, "Reserved for future use" },
  { 11, "Reserved for future use" },
  { 12, "Reserved for future use" },
  { 13, "Reserved for future use" },
  { 14, "Reserved for future use" },
  { 15, "Reserved for future use" },
  { 0, NULL }
};
static const value_string value_map_498[] = {
  { 0, "Running / OK" },
  { 1, "Failed" },
  { 2, "Degraded" },
  { 3, "Undefined" },
  { 4, "Reserved for future use" },
  { 5, "Reserved for future use" },
  { 6, "Reserved for future use" },
  { 7, "Reserved for future use" },
  { 0, NULL }
};
static const value_string value_map_499[] = {
  { 0, "OK" },
  { 1, "Failed" },
  { 2, "Degraded" },
  { 3, "Undefined" },
  { 4, "Reserved for future use" },
  { 5, "Reserved for future use" },
  { 6, "Reserved for future use" },
  { 7, "Reserved for future use" },
  { 0, NULL }
};
static const value_string value_map_500[] = {
  { 0, "No error detected (shall not be sent)" },
  { 1, "Error Code Undefined" },
  { 2, "Time Source Invalid" },
  { 3, "Time Source Coasting" },
  { 4, "Track ID numbering has restarted" },
  { 5, "Data Processor Overload" },
  { 6, "Ground Interface Data Communications Overload" },
  { 7, "System stopped by operator" },
  { 8, "CBIT failed" },
  { 9, "Test Target Failure" },
  { 10, "Reserved for allocation by the AMG" },
  { 11, "Reserved for allocation by the AMG" },
  { 12, "Reserved for allocation by the AMG" },
  { 13, "Reserved for allocation by the AMG" },
  { 14, "Reserved for allocation by the AMG" },
  { 15, "Reserved for allocation by the AMG" },
  { 16, "Reserved for allocation by the AMG" },
  { 17, "Reserved for allocation by the AMG" },
  { 18, "Reserved for allocation by the AMG" },
  { 19, "Reserved for allocation by the AMG" },
  { 20, "Reserved for allocation by the AMG" },
  { 21, "Reserved for allocation by the AMG" },
  { 22, "Reserved for allocation by the AMG" },
  { 23, "Reserved for allocation by the AMG" },
  { 24, "Reserved for allocation by the AMG" },
  { 25, "Reserved for allocation by the AMG" },
  { 26, "Reserved for allocation by the AMG" },
  { 27, "Reserved for allocation by the AMG" },
  { 28, "Reserved for allocation by the AMG" },
  { 29, "Reserved for allocation by the AMG" },
  { 30, "Reserved for allocation by the AMG" },
  { 31, "Reserved for allocation by the AMG" },
  { 32, "Reserved for allocation by system manufacturers" },
  { 33, "Reserved for allocation by system manufacturers" },
  { 34, "Reserved for allocation by system manufacturers" },
  { 35, "Reserved for allocation by system manufacturers" },
  { 36, "Reserved for allocation by system manufacturers" },
  { 37, "Reserved for allocation by system manufacturers" },
  { 38, "Reserved for allocation by system manufacturers" },
  { 39, "Reserved for allocation by system manufacturers" },
  { 40, "Reserved for allocation by system manufacturers" },
  { 41, "Reserved for allocation by system manufacturers" },
  { 42, "Reserved for allocation by system manufacturers" },
  { 43, "Reserved for allocation by system manufacturers" },
  { 44, "Reserved for allocation by system manufacturers" },
  { 45, "Reserved for allocation by system manufacturers" },
  { 46, "Reserved for allocation by system manufacturers" },
  { 47, "Reserved for allocation by system manufacturers" },
  { 48, "Reserved for allocation by system manufacturers" },
  { 49, "Reserved for allocation by system manufacturers" },
  { 50, "Reserved for allocation by system manufacturers" },
  { 51, "Reserved for allocation by system manufacturers" },
  { 52, "Reserved for allocation by system manufacturers" },
  { 53, "Reserved for allocation by system manufacturers" },
  { 54, "Reserved for allocation by system manufacturers" },
  { 55, "Reserved for allocation by system manufacturers" },
  { 56, "Reserved for allocation by system manufacturers" },
  { 57, "Reserved for allocation by system manufacturers" },
  { 58, "Reserved for allocation by system manufacturers" },
  { 59, "Reserved for allocation by system manufacturers" },
  { 60, "Reserved for allocation by system manufacturers" },
  { 61, "Reserved for allocation by system manufacturers" },
  { 62, "Reserved for allocation by system manufacturers" },
  { 63, "Reserved for allocation by system manufacturers" },
  { 64, "Reserved for allocation by system manufacturers" },
  { 65, "Reserved for allocation by system manufacturers" },
  { 66, "Reserved for allocation by system manufacturers" },
  { 67, "Reserved for allocation by system manufacturers" },
  { 68, "Reserved for allocation by system manufacturers" },
  { 69, "Reserved for allocation by system manufacturers" },
  { 70, "Reserved for allocation by system manufacturers" },
  { 71, "Reserved for allocation by system manufacturers" },
  { 72, "Reserved for allocation by system manufacturers" },
  { 73, "Reserved for allocation by system manufacturers" },
  { 74, "Reserved for allocation by system manufacturers" },
  { 75, "Reserved for allocation by system manufacturers" },
  { 76, "Reserved for allocation by system manufacturers" },
  { 77, "Reserved for allocation by system manufacturers" },
  { 78, "Reserved for allocation by system manufacturers" },
  { 79, "Reserved for allocation by system manufacturers" },
  { 80, "Reserved for allocation by system manufacturers" },
  { 81, "Reserved for allocation by system manufacturers" },
  { 82, "Reserved for allocation by system manufacturers" },
  { 83, "Reserved for allocation by system manufacturers" },
  { 84, "Reserved for allocation by system manufacturers" },
  { 85, "Reserved for allocation by system manufacturers" },
  { 86, "Reserved for allocation by system manufacturers" },
  { 87, "Reserved for allocation by system manufacturers" },
  { 88, "Reserved for allocation by system manufacturers" },
  { 89, "Reserved for allocation by system manufacturers" },
  { 90, "Reserved for allocation by system manufacturers" },
  { 91, "Reserved for allocation by system manufacturers" },
  { 92, "Reserved for allocation by system manufacturers" },
  { 93, "Reserved for allocation by system manufacturers" },
  { 94, "Reserved for allocation by system manufacturers" },
  { 95, "Reserved for allocation by system manufacturers" },
  { 96, "Reserved for allocation by system manufacturers" },
  { 97, "Reserved for allocation by system manufacturers" },
  { 98, "Reserved for allocation by system manufacturers" },
  { 99, "Reserved for allocation by system manufacturers" },
  { 100, "Reserved for allocation by system manufacturers" },
  { 101, "Reserved for allocation by system manufacturers" },
  { 102, "Reserved for allocation by system manufacturers" },
  { 103, "Reserved for allocation by system manufacturers" },
  { 104, "Reserved for allocation by system manufacturers" },
  { 105, "Reserved for allocation by system manufacturers" },
  { 106, "Reserved for allocation by system manufacturers" },
  { 107, "Reserved for allocation by system manufacturers" },
  { 108, "Reserved for allocation by system manufacturers" },
  { 109, "Reserved for allocation by system manufacturers" },
  { 110, "Reserved for allocation by system manufacturers" },
  { 111, "Reserved for allocation by system manufacturers" },
  { 112, "Reserved for allocation by system manufacturers" },
  { 113, "Reserved for allocation by system manufacturers" },
  { 114, "Reserved for allocation by system manufacturers" },
  { 115, "Reserved for allocation by system manufacturers" },
  { 116, "Reserved for allocation by system manufacturers" },
  { 117, "Reserved for allocation by system manufacturers" },
  { 118, "Reserved for allocation by system manufacturers" },
  { 119, "Reserved for allocation by system manufacturers" },
  { 120, "Reserved for allocation by system manufacturers" },
  { 121, "Reserved for allocation by system manufacturers" },
  { 122, "Reserved for allocation by system manufacturers" },
  { 123, "Reserved for allocation by system manufacturers" },
  { 124, "Reserved for allocation by system manufacturers" },
  { 125, "Reserved for allocation by system manufacturers" },
  { 126, "Reserved for allocation by system manufacturers" },
  { 127, "Reserved for allocation by system manufacturers" },
  { 128, "Reserved for allocation by system manufacturers" },
  { 129, "Reserved for allocation by system manufacturers" },
  { 130, "Reserved for allocation by system manufacturers" },
  { 131, "Reserved for allocation by system manufacturers" },
  { 132, "Reserved for allocation by system manufacturers" },
  { 133, "Reserved for allocation by system manufacturers" },
  { 134, "Reserved for allocation by system manufacturers" },
  { 135, "Reserved for allocation by system manufacturers" },
  { 136, "Reserved for allocation by system manufacturers" },
  { 137, "Reserved for allocation by system manufacturers" },
  { 138, "Reserved for allocation by system manufacturers" },
  { 139, "Reserved for allocation by system manufacturers" },
  { 140, "Reserved for allocation by system manufacturers" },
  { 141, "Reserved for allocation by system manufacturers" },
  { 142, "Reserved for allocation by system manufacturers" },
  { 143, "Reserved for allocation by system manufacturers" },
  { 144, "Reserved for allocation by system manufacturers" },
  { 145, "Reserved for allocation by system manufacturers" },
  { 146, "Reserved for allocation by system manufacturers" },
  { 147, "Reserved for allocation by system manufacturers" },
  { 148, "Reserved for allocation by system manufacturers" },
  { 149, "Reserved for allocation by system manufacturers" },
  { 150, "Reserved for allocation by system manufacturers" },
  { 151, "Reserved for allocation by system manufacturers" },
  { 152, "Reserved for allocation by system manufacturers" },
  { 153, "Reserved for allocation by system manufacturers" },
  { 154, "Reserved for allocation by system manufacturers" },
  { 155, "Reserved for allocation by system manufacturers" },
  { 156, "Reserved for allocation by system manufacturers" },
  { 157, "Reserved for allocation by system manufacturers" },
  { 158, "Reserved for allocation by system manufacturers" },
  { 159, "Reserved for allocation by system manufacturers" },
  { 160, "Reserved for allocation by system manufacturers" },
  { 161, "Reserved for allocation by system manufacturers" },
  { 162, "Reserved for allocation by system manufacturers" },
  { 163, "Reserved for allocation by system manufacturers" },
  { 164, "Reserved for allocation by system manufacturers" },
  { 165, "Reserved for allocation by system manufacturers" },
  { 166, "Reserved for allocation by system manufacturers" },
  { 167, "Reserved for allocation by system manufacturers" },
  { 168, "Reserved for allocation by system manufacturers" },
  { 169, "Reserved for allocation by system manufacturers" },
  { 170, "Reserved for allocation by system manufacturers" },
  { 171, "Reserved for allocation by system manufacturers" },
  { 172, "Reserved for allocation by system manufacturers" },
  { 173, "Reserved for allocation by system manufacturers" },
  { 174, "Reserved for allocation by system manufacturers" },
  { 175, "Reserved for allocation by system manufacturers" },
  { 176, "Reserved for allocation by system manufacturers" },
  { 177, "Reserved for allocation by system manufacturers" },
  { 178, "Reserved for allocation by system manufacturers" },
  { 179, "Reserved for allocation by system manufacturers" },
  { 180, "Reserved for allocation by system manufacturers" },
  { 181, "Reserved for allocation by system manufacturers" },
  { 182, "Reserved for allocation by system manufacturers" },
  { 183, "Reserved for allocation by system manufacturers" },
  { 184, "Reserved for allocation by system manufacturers" },
  { 185, "Reserved for allocation by system manufacturers" },
  { 186, "Reserved for allocation by system manufacturers" },
  { 187, "Reserved for allocation by system manufacturers" },
  { 188, "Reserved for allocation by system manufacturers" },
  { 189, "Reserved for allocation by system manufacturers" },
  { 190, "Reserved for allocation by system manufacturers" },
  { 191, "Reserved for allocation by system manufacturers" },
  { 192, "Reserved for allocation by system manufacturers" },
  { 193, "Reserved for allocation by system manufacturers" },
  { 194, "Reserved for allocation by system manufacturers" },
  { 195, "Reserved for allocation by system manufacturers" },
  { 196, "Reserved for allocation by system manufacturers" },
  { 197, "Reserved for allocation by system manufacturers" },
  { 198, "Reserved for allocation by system manufacturers" },
  { 199, "Reserved for allocation by system manufacturers" },
  { 200, "Reserved for allocation by system manufacturers" },
  { 201, "Reserved for allocation by system manufacturers" },
  { 202, "Reserved for allocation by system manufacturers" },
  { 203, "Reserved for allocation by system manufacturers" },
  { 204, "Reserved for allocation by system manufacturers" },
  { 205, "Reserved for allocation by system manufacturers" },
  { 206, "Reserved for allocation by system manufacturers" },
  { 207, "Reserved for allocation by system manufacturers" },
  { 208, "Reserved for allocation by system manufacturers" },
  { 209, "Reserved for allocation by system manufacturers" },
  { 210, "Reserved for allocation by system manufacturers" },
  { 211, "Reserved for allocation by system manufacturers" },
  { 212, "Reserved for allocation by system manufacturers" },
  { 213, "Reserved for allocation by system manufacturers" },
  { 214, "Reserved for allocation by system manufacturers" },
  { 215, "Reserved for allocation by system manufacturers" },
  { 216, "Reserved for allocation by system manufacturers" },
  { 217, "Reserved for allocation by system manufacturers" },
  { 218, "Reserved for allocation by system manufacturers" },
  { 219, "Reserved for allocation by system manufacturers" },
  { 220, "Reserved for allocation by system manufacturers" },
  { 221, "Reserved for allocation by system manufacturers" },
  { 222, "Reserved for allocation by system manufacturers" },
  { 223, "Reserved for allocation by system manufacturers" },
  { 224, "Reserved for allocation by system manufacturers" },
  { 225, "Reserved for allocation by system manufacturers" },
  { 226, "Reserved for allocation by system manufacturers" },
  { 227, "Reserved for allocation by system manufacturers" },
  { 228, "Reserved for allocation by system manufacturers" },
  { 229, "Reserved for allocation by system manufacturers" },
  { 230, "Reserved for allocation by system manufacturers" },
  { 231, "Reserved for allocation by system manufacturers" },
  { 232, "Reserved for allocation by system manufacturers" },
  { 233, "Reserved for allocation by system manufacturers" },
  { 234, "Reserved for allocation by system manufacturers" },
  { 235, "Reserved for allocation by system manufacturers" },
  { 236, "Reserved for allocation by system manufacturers" },
  { 237, "Reserved for allocation by system manufacturers" },
  { 238, "Reserved for allocation by system manufacturers" },
  { 239, "Reserved for allocation by system manufacturers" },
  { 240, "Reserved for allocation by system manufacturers" },
  { 241, "Reserved for allocation by system manufacturers" },
  { 242, "Reserved for allocation by system manufacturers" },
  { 243, "Reserved for allocation by system manufacturers" },
  { 244, "Reserved for allocation by system manufacturers" },
  { 245, "Reserved for allocation by system manufacturers" },
  { 246, "Reserved for allocation by system manufacturers" },
  { 247, "Reserved for allocation by system manufacturers" },
  { 248, "Reserved for allocation by system manufacturers" },
  { 249, "Reserved for allocation by system manufacturers" },
  { 250, "Reserved for allocation by system manufacturers" },
  { 251, "Reserved for allocation by system manufacturers" },
  { 252, "Reserved for allocation by system manufacturers" },
  { 253, "Reserved for allocation by system manufacturers" },
  { 254, "Reserved for allocation by system manufacturers" },
  { 255, "Reserved for allocation by system manufacturers" },
  { 0, NULL }
};
static const value_string value_map_501[] = {
  { 0, "No Error Detected" },
  { 1, "Error Code Undefined" },
  { 2, "Reserved for allocation by the AMG" },
  { 3, "Reserved for allocation by the AMG" },
  { 4, "Reserved for allocation by the AMG" },
  { 5, "Reserved for allocation by the AMG" },
  { 6, "Reserved for allocation by the AMG" },
  { 7, "Reserved for allocation by the AMG" },
  { 8, "Reserved for allocation by the AMG" },
  { 9, "Reserved for allocation by the AMG" },
  { 10, "Reserved for allocation by the AMG" },
  { 11, "Reserved for allocation by the AMG" },
  { 12, "Reserved for allocation by the AMG" },
  { 13, "Reserved for allocation by the AMG" },
  { 14, "Reserved for allocation by the AMG" },
  { 15, "Reserved for allocation by the AMG" },
  { 16, "Reserved for allocation by system manufacturers" },
  { 17, "Reserved for allocation by system manufacturers" },
  { 18, "Reserved for allocation by system manufacturers" },
  { 19, "Reserved for allocation by system manufacturers" },
  { 20, "Reserved for allocation by system manufacturers" },
  { 21, "Reserved for allocation by system manufacturers" },
  { 22, "Reserved for allocation by system manufacturers" },
  { 23, "Reserved for allocation by system manufacturers" },
  { 24, "Reserved for allocation by system manufacturers" },
  { 25, "Reserved for allocation by system manufacturers" },
  { 26, "Reserved for allocation by system manufacturers" },
  { 27, "Reserved for allocation by system manufacturers" },
  { 28, "Reserved for allocation by system manufacturers" },
  { 29, "Reserved for allocation by system manufacturers" },
  { 30, "Reserved for allocation by system manufacturers" },
  { 31, "Reserved for allocation by system manufacturers" },
  { 32, "Reserved for allocation by system manufacturers" },
  { 33, "Reserved for allocation by system manufacturers" },
  { 34, "Reserved for allocation by system manufacturers" },
  { 35, "Reserved for allocation by system manufacturers" },
  { 36, "Reserved for allocation by system manufacturers" },
  { 37, "Reserved for allocation by system manufacturers" },
  { 38, "Reserved for allocation by system manufacturers" },
  { 39, "Reserved for allocation by system manufacturers" },
  { 40, "Reserved for allocation by system manufacturers" },
  { 41, "Reserved for allocation by system manufacturers" },
  { 42, "Reserved for allocation by system manufacturers" },
  { 43, "Reserved for allocation by system manufacturers" },
  { 44, "Reserved for allocation by system manufacturers" },
  { 45, "Reserved for allocation by system manufacturers" },
  { 46, "Reserved for allocation by system manufacturers" },
  { 47, "Reserved for allocation by system manufacturers" },
  { 48, "Reserved for allocation by system manufacturers" },
  { 49, "Reserved for allocation by system manufacturers" },
  { 50, "Reserved for allocation by system manufacturers" },
  { 51, "Reserved for allocation by system manufacturers" },
  { 52, "Reserved for allocation by system manufacturers" },
  { 53, "Reserved for allocation by system manufacturers" },
  { 54, "Reserved for allocation by system manufacturers" },
  { 55, "Reserved for allocation by system manufacturers" },
  { 56, "Reserved for allocation by system manufacturers" },
  { 57, "Reserved for allocation by system manufacturers" },
  { 58, "Reserved for allocation by system manufacturers" },
  { 59, "Reserved for allocation by system manufacturers" },
  { 60, "Reserved for allocation by system manufacturers" },
  { 61, "Reserved for allocation by system manufacturers" },
  { 62, "Reserved for allocation by system manufacturers" },
  { 63, "Reserved for allocation by system manufacturers" },
  { 0, NULL }
};
static const value_string value_map_502[] = {
  { 0, "Running" },
  { 1, "Failed" },
  { 2, "Maintenance" },
  { 3, "Reserved" },
  { 0, NULL }
};
static const value_string value_map_503[] = {
  { 0, "Number of unknown messages received" },
  { 1, "Number of too old messages received" },
  { 2, "Number of failed message conversions" },
  { 3, "Total Number of messages received" },
  { 4, "Total number of messages transmitted" },
  { 5, "Reserved for AMG" },
  { 6, "Reserved for AMG" },
  { 7, "Reserved for AMG" },
  { 8, "Reserved for AMG" },
  { 9, "Reserved for AMG" },
  { 10, "Reserved for AMG" },
  { 11, "Reserved for AMG" },
  { 12, "Reserved for AMG" },
  { 13, "Reserved for AMG" },
  { 14, "Reserved for AMG" },
  { 15, "Reserved for AMG" },
  { 16, "Reserved for AMG" },
  { 17, "Reserved for AMG" },
  { 18, "Reserved for AMG" },
  { 19, "Reserved for AMG" },
  { 20, "Implementation specific" },
  { 21, "Implementation specific" },
  { 22, "Implementation specific" },
  { 23, "Implementation specific" },
  { 24, "Implementation specific" },
  { 25, "Implementation specific" },
  { 26, "Implementation specific" },
  { 27, "Implementation specific" },
  { 28, "Implementation specific" },
  { 29, "Implementation specific" },
  { 30, "Implementation specific" },
  { 31, "Implementation specific" },
  { 32, "Implementation specific" },
  { 33, "Implementation specific" },
  { 34, "Implementation specific" },
  { 35, "Implementation specific" },
  { 36, "Implementation specific" },
  { 37, "Implementation specific" },
  { 38, "Implementation specific" },
  { 39, "Implementation specific" },
  { 40, "Implementation specific" },
  { 41, "Implementation specific" },
  { 42, "Implementation specific" },
  { 43, "Implementation specific" },
  { 44, "Implementation specific" },
  { 45, "Implementation specific" },
  { 46, "Implementation specific" },
  { 47, "Implementation specific" },
  { 48, "Implementation specific" },
  { 49, "Implementation specific" },
  { 50, "Implementation specific" },
  { 51, "Implementation specific" },
  { 52, "Implementation specific" },
  { 53, "Implementation specific" },
  { 54, "Implementation specific" },
  { 55, "Implementation specific" },
  { 56, "Implementation specific" },
  { 57, "Implementation specific" },
  { 58, "Implementation specific" },
  { 59, "Implementation specific" },
  { 60, "Implementation specific" },
  { 61, "Implementation specific" },
  { 62, "Implementation specific" },
  { 63, "Implementation specific" },
  { 64, "Implementation specific" },
  { 65, "Implementation specific" },
  { 66, "Implementation specific" },
  { 67, "Implementation specific" },
  { 68, "Implementation specific" },
  { 69, "Implementation specific" },
  { 70, "Implementation specific" },
  { 71, "Implementation specific" },
  { 72, "Implementation specific" },
  { 73, "Implementation specific" },
  { 74, "Implementation specific" },
  { 75, "Implementation specific" },
  { 76, "Implementation specific" },
  { 77, "Implementation specific" },
  { 78, "Implementation specific" },
  { 79, "Implementation specific" },
  { 80, "Implementation specific" },
  { 81, "Implementation specific" },
  { 82, "Implementation specific" },
  { 83, "Implementation specific" },
  { 84, "Implementation specific" },
  { 85, "Implementation specific" },
  { 86, "Implementation specific" },
  { 87, "Implementation specific" },
  { 88, "Implementation specific" },
  { 89, "Implementation specific" },
  { 90, "Implementation specific" },
  { 91, "Implementation specific" },
  { 92, "Implementation specific" },
  { 93, "Implementation specific" },
  { 94, "Implementation specific" },
  { 95, "Implementation specific" },
  { 96, "Implementation specific" },
  { 97, "Implementation specific" },
  { 98, "Implementation specific" },
  { 99, "Implementation specific" },
  { 100, "Implementation specific" },
  { 101, "Implementation specific" },
  { 102, "Implementation specific" },
  { 103, "Implementation specific" },
  { 104, "Implementation specific" },
  { 105, "Implementation specific" },
  { 106, "Implementation specific" },
  { 107, "Implementation specific" },
  { 108, "Implementation specific" },
  { 109, "Implementation specific" },
  { 110, "Implementation specific" },
  { 111, "Implementation specific" },
  { 112, "Implementation specific" },
  { 113, "Implementation specific" },
  { 114, "Implementation specific" },
  { 115, "Implementation specific" },
  { 116, "Implementation specific" },
  { 117, "Implementation specific" },
  { 118, "Implementation specific" },
  { 119, "Implementation specific" },
  { 120, "Implementation specific" },
  { 121, "Implementation specific" },
  { 122, "Implementation specific" },
  { 123, "Implementation specific" },
  { 124, "Implementation specific" },
  { 125, "Implementation specific" },
  { 126, "Implementation specific" },
  { 127, "Implementation specific" },
  { 128, "Implementation specific" },
  { 129, "Implementation specific" },
  { 130, "Implementation specific" },
  { 131, "Implementation specific" },
  { 132, "Implementation specific" },
  { 133, "Implementation specific" },
  { 134, "Implementation specific" },
  { 135, "Implementation specific" },
  { 136, "Implementation specific" },
  { 137, "Implementation specific" },
  { 138, "Implementation specific" },
  { 139, "Implementation specific" },
  { 140, "Implementation specific" },
  { 141, "Implementation specific" },
  { 142, "Implementation specific" },
  { 143, "Implementation specific" },
  { 144, "Implementation specific" },
  { 145, "Implementation specific" },
  { 146, "Implementation specific" },
  { 147, "Implementation specific" },
  { 148, "Implementation specific" },
  { 149, "Implementation specific" },
  { 150, "Implementation specific" },
  { 151, "Implementation specific" },
  { 152, "Implementation specific" },
  { 153, "Implementation specific" },
  { 154, "Implementation specific" },
  { 155, "Implementation specific" },
  { 156, "Implementation specific" },
  { 157, "Implementation specific" },
  { 158, "Implementation specific" },
  { 159, "Implementation specific" },
  { 160, "Implementation specific" },
  { 161, "Implementation specific" },
  { 162, "Implementation specific" },
  { 163, "Implementation specific" },
  { 164, "Implementation specific" },
  { 165, "Implementation specific" },
  { 166, "Implementation specific" },
  { 167, "Implementation specific" },
  { 168, "Implementation specific" },
  { 169, "Implementation specific" },
  { 170, "Implementation specific" },
  { 171, "Implementation specific" },
  { 172, "Implementation specific" },
  { 173, "Implementation specific" },
  { 174, "Implementation specific" },
  { 175, "Implementation specific" },
  { 176, "Implementation specific" },
  { 177, "Implementation specific" },
  { 178, "Implementation specific" },
  { 179, "Implementation specific" },
  { 180, "Implementation specific" },
  { 181, "Implementation specific" },
  { 182, "Implementation specific" },
  { 183, "Implementation specific" },
  { 184, "Implementation specific" },
  { 185, "Implementation specific" },
  { 186, "Implementation specific" },
  { 187, "Implementation specific" },
  { 188, "Implementation specific" },
  { 189, "Implementation specific" },
  { 190, "Implementation specific" },
  { 191, "Implementation specific" },
  { 192, "Implementation specific" },
  { 193, "Implementation specific" },
  { 194, "Implementation specific" },
  { 195, "Implementation specific" },
  { 196, "Implementation specific" },
  { 197, "Implementation specific" },
  { 198, "Implementation specific" },
  { 199, "Implementation specific" },
  { 200, "Implementation specific" },
  { 201, "Implementation specific" },
  { 202, "Implementation specific" },
  { 203, "Implementation specific" },
  { 204, "Implementation specific" },
  { 205, "Implementation specific" },
  { 206, "Implementation specific" },
  { 207, "Implementation specific" },
  { 208, "Implementation specific" },
  { 209, "Implementation specific" },
  { 210, "Implementation specific" },
  { 211, "Implementation specific" },
  { 212, "Implementation specific" },
  { 213, "Implementation specific" },
  { 214, "Implementation specific" },
  { 215, "Implementation specific" },
  { 216, "Implementation specific" },
  { 217, "Implementation specific" },
  { 218, "Implementation specific" },
  { 219, "Implementation specific" },
  { 220, "Implementation specific" },
  { 221, "Implementation specific" },
  { 222, "Implementation specific" },
  { 223, "Implementation specific" },
  { 224, "Implementation specific" },
  { 225, "Implementation specific" },
  { 226, "Implementation specific" },
  { 227, "Implementation specific" },
  { 228, "Implementation specific" },
  { 229, "Implementation specific" },
  { 230, "Implementation specific" },
  { 231, "Implementation specific" },
  { 232, "Implementation specific" },
  { 233, "Implementation specific" },
  { 234, "Implementation specific" },
  { 235, "Implementation specific" },
  { 236, "Implementation specific" },
  { 237, "Implementation specific" },
  { 238, "Implementation specific" },
  { 239, "Implementation specific" },
  { 240, "Implementation specific" },
  { 241, "Implementation specific" },
  { 242, "Implementation specific" },
  { 243, "Implementation specific" },
  { 244, "Implementation specific" },
  { 245, "Implementation specific" },
  { 246, "Implementation specific" },
  { 247, "Implementation specific" },
  { 248, "Implementation specific" },
  { 249, "Implementation specific" },
  { 250, "Implementation specific" },
  { 251, "Implementation specific" },
  { 252, "Implementation specific" },
  { 253, "Implementation specific" },
  { 254, "Implementation specific" },
  { 255, "Implementation specific" },
  { 0, NULL }
};
static const value_string value_map_504[] = {
  { 0, "From UTC midnight" },
  { 1, "From the previous report" },
  { 0, NULL }
};
static const value_string value_map_506[] = {
  { 1, "Information sent by an FPPS" },
  { 0, NULL }
};
static const value_string value_map_507[] = {
  { 1, "Flight Plan to track initial correlation" },
  { 2, "Miniplan update" },
  { 3, "End of correlation" },
  { 4, "Miniplan Cancellation" },
  { 5, "Retained Miniplan" },
  { 0, NULL }
};
static const value_string value_map_508[] = {
  { 0, "Plan Number" },
  { 1, "Unit 1 internal flight number" },
  { 2, "Unit 2 internal flight number" },
  { 3, "Unit 3 internal flight number" },
  { 0, NULL }
};
static const value_string value_map_509[] = {
  { 0, "Unknown" },
  { 1, "Approved" },
  { 2, "Exempt" },
  { 3, "Not approved" },
  { 0, NULL }
};
static const value_string value_map_510[] = {
  { 0, "Scheduled Off-Block Time" },
  { 1, "Estimated Off-Block Time" },
  { 2, "Estimated Take-Off Time" },
  { 3, "Actual Off-Block Time" },
  { 4, "Predicted Time at Runway Hold" },
  { 5, "Actual Time at Runway Hold" },
  { 6, "Actual Line-Up Time" },
  { 7, "Actual Take-Off Time" },
  { 8, "Estimated Time of Arrival" },
  { 9, "Predicted Landing Time" },
  { 10, "Actual Landing Time" },
  { 11, "Actual Time off Runway" },
  { 12, "Predicted Time to Gate" },
  { 13, "Actual On-Block Time" },
  { 0, NULL }
};
static const value_string value_map_511[] = {
  { 0, "Today" },
  { 1, "Yesterday" },
  { 2, "Tomorrow" },
  { 3, "Invalid" },
  { 0, NULL }
};
static const value_string value_map_512[] = {
  { 0, "Empty" },
  { 1, "Occupied" },
  { 2, "Unknown" },
  { 3, "Invalid" },
  { 0, NULL }
};
static const value_string value_map_513[] = {
  { 0, "Available" },
  { 1, "Not available" },
  { 2, "Unknown" },
  { 3, "Invalid" },
  { 0, NULL }
};
static const value_string value_map_514[] = {
  { 0, "Invalid ASTERIX value" },
  { 1, "Information sent by an FPPS" },
  { 2, "SUC information sent by an FDPS" },
  { 0, NULL }
};
static const value_string value_map_515[] = {
  { 1, "North marker message" },
  { 2, "Sector crossing message" },
  { 3, "Geographical filtering message" },
  { 4, "Jamming strobe message" },
  { 0, NULL }
};
static const value_string value_map_516[] = {
  { 0, "System is released for operational use" },
  { 1, "Operational use of System is inhibited, i.e. the data shall be discarded by an operational SDPS" },
  { 0, NULL }
};
static const value_string value_map_517[] = {
  { 0, "RDPC-1 selected" },
  { 1, "RDPC-2 selected" },
  { 0, NULL }
};
static const value_string value_map_518[] = {
  { 0, "Default situation" },
  { 1, "Reset of RDPC" },
  { 0, NULL }
};
static const value_string value_map_519[] = {
  { 0, "Default, no overload" },
  { 1, "Overload in RDP" },
  { 0, NULL }
};
static const value_string value_map_520[] = {
  { 0, "Monitoring system connected" },
  { 1, "Monitoring system disconnected" },
  { 0, NULL }
};
static const value_string value_map_521[] = {
  { 0, "Antenna 1" },
  { 1, "Antenna 2" },
  { 0, NULL }
};
static const value_string value_map_522[] = {
  { 0, "No channel selected" },
  { 1, "Channel A only selected" },
  { 2, "Channel B only selected" },
  { 3, "Diversity mode ; Channel A and B selected" },
  { 0, NULL }
};
static const value_string value_map_523[] = {
  { 0, "No channel selected" },
  { 1, "Channel A only selected" },
  { 2, "Channel B only selected" },
  { 3, "Invalid combination" },
  { 0, NULL }
};
static const value_string value_map_524[] = {
  { 0, "No channel selected" },
  { 1, "Channel A only selected" },
  { 2, "Channel B only selected" },
  { 3, "Illegal combination" },
  { 0, NULL }
};
static const value_string value_map_525[] = {
  { 0, "Channel A in use" },
  { 1, "Channel B in use" },
  { 0, NULL }
};
static const value_string value_map_526[] = {
  { 0, "No reduction active" },
  { 1, "Reduction step 1 active" },
  { 2, "Reduction step 2 active" },
  { 3, "Reduction step 3 active" },
  { 4, "Reduction step 4 active" },
  { 5, "Reduction step 5 active" },
  { 6, "Reduction step 6 active" },
  { 7, "Reduction step 7 active" },
  { 0, NULL }
};
static const value_string value_map_527[] = {
  { 0, "Linear polarization" },
  { 1, "Circular polarization" },
  { 0, NULL }
};
static const value_string value_map_528[] = {
  { 0, "STC Map-1" },
  { 1, "STC Map-2" },
  { 2, "STC Map-3" },
  { 3, "STC Map-4" },
  { 0, NULL }
};
static const value_string value_map_529[] = {
  { 0, "Autonomous" },
  { 1, "Not autonomous" },
  { 0, NULL }
};
static const value_string value_map_530[] = {
  { 0, "No detection (number of misses)" },
  { 1, "Single PSR target reports" },
  { 2, "Single SSR target reports (Non-Mode S)" },
  { 3, "SSR+PSR target reports (Non-Mode S)" },
  { 4, "Single All-Call target reports (Mode S)" },
  { 5, "Single Roll-Call target reports (Mode S)" },
  { 6, "All-Call + PSR (Mode S) target reports" },
  { 7, "Roll-Call + PSR (Mode S) target reports" },
  { 8, "Filter for Weather data" },
  { 9, "Filter for Jamming Strobe" },
  { 10, "Filter for PSR data" },
  { 11, "Filter for SSR/Mode S data" },
  { 12, "Filter for SSR/Mode S+PSR data" },
  { 13, "Filter for Enhanced Surveillance data" },
  { 14, "Filter for PSR+Enhanced Surveillance" },
  { 15, "Filter for PSR+Enhanced Surveillance + SSR/Mode S data not in Area of Prime Interest" },
  { 16, "Filter for PSR+Enhanced Surveillance + all SSR/Mode S data" },
  { 0, NULL }
};
static const value_string value_map_531[] = {
  { 0, "Invalid value" },
  { 1, "Filter for Weather data" },
  { 2, "Filter for Jamming Strobe" },
  { 3, "Filter for PSR data" },
  { 4, "Filter for SSR/Mode S data" },
  { 5, "Filter for SSR/Mode S + PSR data" },
  { 6, "Enhanced Surveillance data" },
  { 7, "Filter for PSR+Enhanced Surveillance data" },
  { 8, "Filter for PSR+Enhanced Surveillance + SSR/Mode S data not in Area of Prime Interest" },
  { 9, "Filter for PSR+Enhanced Surveillance + all SSR/Mode S data" },
  { 0, NULL }
};
static const value_string value_map_532[] = {
  { 1, "North marker message" },
  { 2, "Sector crossing message" },
  { 3, "Geographical filtering message" },
  { 4, "Jamming strobe message" },
  { 5, "Solar Storm Message" },
  { 0, NULL }
};
static const value_string value_map_533[] = {
  { 0, "No detection (number of misses)" },
  { 1, "Single PSR target reports" },
  { 2, "Single SSR target reports (Non-Mode S)" },
  { 3, "SSR+PSR target reports (Non-Mode S)" },
  { 4, "Single All-Call target reports (Mode S)" },
  { 5, "Single Roll-Call target reports (Mode S)" },
  { 6, "All-Call + PSR (Mode S) target reports" },
  { 7, "Roll-Call + PSR (Mode S) target reports" },
  { 8, "Filter for Weather data" },
  { 9, "Filter for Jamming Strobe" },
  { 10, "Filter for PSR data" },
  { 11, "Filter for SSR/Mode S data" },
  { 12, "Filter for SSR/Mode S+PSR data" },
  { 13, "Filter for Enhanced Surveillance data" },
  { 14, "Filter for PSR+Enhanced Surveillance" },
  { 15, "Filter for PSR+Enhanced Surveillance + SSR/Mode S data not in Area of Prime Interest" },
  { 16, "Filter for PSR+Enhanced Surveillance + all SSR/Mode S data" },
  { 17, "Re-Interrogations (per sector)" },
  { 18, "BDS Swap and wrong DF replies(per sector)" },
  { 19, "Mode A/C FRUIT (per sector)" },
  { 20, "Mode S FRUIT (per sector)" },
  { 0, NULL }
};
static const value_string value_map_534[] = {
  { 1, "North marker message" },
  { 2, "Sector crossing message" },
  { 3, "Geographical filtering message" },
  { 4, "Jamming strobe message" },
  { 5, "Solar Storm Message" },
  { 6, "SSR Jamming Strobe Message" },
  { 7, "Mode S Jamming Strobe Message" },
  { 0, NULL }
};
static const value_string value_map_535[] = {
  { 0, "No authenticated Mode 5 Data reply/report" },
  { 1, "Authenticated Mode 5 Data reply/report (i.e any valid Mode 5 reply type other than ID)" },
  { 0, NULL }
};
static const value_string value_map_536[] = {
  { 0, "Mode C altitude not present or not from Mode 5 reply/report" },
  { 1, "Mode C altitude from Mode 5 reply/report" },
  { 0, NULL }
};
static const value_string value_map_537[] = {
  { 0, "National Origin is valid" },
  { 1, "National Origin is invalid" },
  { 0, NULL }
};
static const value_string value_map_538[] = {
  { 0, "GA reported in 100 ft increments" },
  { 1, "GA reported in 25 ft increments" },
  { 0, NULL }
};
static const value_string value_map_539[] = {
  { 0, "Code not validated" },
  { 1, "Code validated" },
  { 0, NULL }
};
static const value_string value_map_540[] = {
  { 0, "Mode 1 Code derived from the reply of the transponder" },
  { 1, "Mode 1 Code not extracted during the last scan" },
  { 0, NULL }
};
static const value_string value_map_541[] = {
  { 0, "X-pulse set to zero or no Mode 2 reply" },
  { 1, "X-pulse set to one (present)" },
  { 0, NULL }
};
static const value_string value_map_542[] = {
  { 0, "No Mode 4 interrogation" },
  { 1, "Possibly friendly target" },
  { 2, "Probably friendly target" },
  { 3, "Friendly target" },
  { 0, NULL }
};
static const value_string value_map_544[] = {
  { 0, "Track is not associated with an SCN Plot" },
  { 1, "Track is associated with an SCN Plot" },
  { 0, NULL }
};
static const value_string value_map_545[] = {
  { 0, "Associated Plot does not contain a Roll Call component" },
  { 1, "Associated Plot contains at least a Roll Call component" },
  { 0, NULL }
};
static const value_string value_map_546[] = {
  { 0, "Associated Plot does not contain an All Call component" },
  { 1, "Associated Plot contains at least an All Call component" },
  { 0, NULL }
};
static const value_string value_map_547[] = {
  { 0, "Associated Plot does not contain an SSR component" },
  { 1, "Associated Plot contains at least an SSR component" },
  { 0, NULL }
};
static const value_string value_map_548[] = {
  { 0, "Associated Plot does not contain a PSR component" },
  { 1, "Associated Plot contains at least a PSR component" },
  { 0, NULL }
};
static const value_string value_map_550[] = {
  { 0, "Surveillance Mode A (alert bit or periodic)" },
  { 1, "Comm-A" },
  { 2, "Ground Initiated Comm-B" },
  { 3, "Air Initiated Comm-B" },
  { 4, "Broadcast Comm-B" },
  { 5, "Comm-C" },
  { 6, "Comm-D" },
  { 7, "Reserved for future use" },
  { 8, "Reserved for future use" },
  { 9, "Reserved for future use" },
  { 10, "Reserved for future use" },
  { 11, "Reserved for future use" },
  { 12, "Reserved for future use" },
  { 13, "Reserved for future use" },
  { 14, "Reserved for future use" },
  { 15, "Reserved for future use" },
  { 0, NULL }
};
static const value_string value_map_551[] = {
  { 0, "From previous scan" },
  { 1, "New in current scan" },
  { 2, "Requested in the beam by transponder" },
  { 3, "Invalid ASTERIX value" },
  { 0, NULL }
};
static const value_string value_map_552[] = {
  { 0, "In progress" },
  { 1, "Completed" },
  { 2, "Cancelled" },
  { 3, "Invalid ASTERIX value" },
  { 0, NULL }
};
static const value_string value_map_553[] = {
  { 0, "Target not locked out by this radar" },
  { 1, "Target locked out by this radar" },
  { 0, NULL }
};
static const value_string value_map_555[] = {
  { 0, "Tentative Track with One Plot" },
  { 1, "Tentative Track with at least Two Plots" },
  { 2, "Pre-Confirmed Track" },
  { 3, "Confirmed Track" },
  { 0, NULL }
};
static const value_string value_map_556[] = {
  { 0, "Data used by Tracker" },
  { 1, "Data not used by Tracker" },
  { 2, "2-127: Reserved for future use" },
  { 0, NULL }
};
static const value_string value_map_557[] = {
  { 0, "DRN not available" },
  { 1, "DRN available" },
  { 0, NULL }
};
static const value_string value_map_558[] = {
  { 0, "Radar tracker calculation" },
  { 1, "Integrated ADS-B" },
  { 2, "External ADS-B" },
  { 3, "SCN" },
  { 0, NULL }
};
static const value_string value_map_559[] = {
  { 0, "Identity not requested" },
  { 1, "Identity requested" },
  { 0, NULL }
};
static const value_string value_map_560[] = {
  { 0, "PSR Echo" },
  { 1, "SSR Reply" },
  { 2, "All Call Reply" },
  { 3, "Roll Call Reply" },
  { 0, NULL }
};
static const value_string value_map_561[] = {
  { 0, "Mode-2 code as derived from reply of the transponder" },
  { 1, "Smoothed Mode-2 as provided by a local tracker" },
  { 0, NULL }
};
static const value_string value_map_562[] = {
  { 0, "Mode-3/A code as derived from the reply of the transponder" },
  { 1, "Smoothed Mode-3/A code as provided by a local tracker" },
  { 0, NULL }
};
static const value_string value_map_566[] = {
  { 0, "No detection" },
  { 1, "Single PSR detection" },
  { 2, "Single SSR detection" },
  { 3, "SSR + PSR detection" },
  { 4, "Single ModeS All-Call" },
  { 5, "Single ModeS Roll-Call" },
  { 6, "ModeS All-Call + PSR" },
  { 7, "ModeS Roll-Call +PSR" },
  { 0, NULL }
};
static const value_string value_map_567[] = {
  { 0, "Report from RDP Chain 1" },
  { 1, "Report from RDP Chain 2" },
  { 0, NULL }
};
static const value_string value_map_568[] = {
  { 0, "Report from aircraft transponder" },
  { 1, "Report from field monitor (fixed transponder)" },
  { 0, NULL }
};
static const value_string value_map_569[] = {
  { 0, "Real target report" },
  { 1, "Test target report" },
  { 0, NULL }
};
static const value_string value_map_570[] = {
  { 0, "No Extended Range" },
  { 1, "Extended Range present" },
  { 0, NULL }
};
static const value_string value_map_571[] = {
  { 0, "No X-Pulse present" },
  { 1, "X-Pulse present" },
  { 0, NULL }
};
static const value_string value_map_572[] = {
  { 0, "No military identification" },
  { 1, "Military identification" },
  { 0, NULL }
};
static const value_string value_map_573[] = {
  { 0, "No Mode 4 interrogation" },
  { 1, "Friendly target" },
  { 2, "Unknown target" },
  { 3, "No reply" },
  { 0, NULL }
};
static const value_string value_map_582[] = {
  { 0, "Combined Track" },
  { 1, "PSR Track" },
  { 2, "SSR/Mode S Track" },
  { 3, "Invalid" },
  { 0, NULL }
};
static const value_string value_map_583[] = {
  { 0, "Normal confidence" },
  { 1, "Low confidence in plot to track association" },
  { 0, NULL }
};
static const value_string value_map_584[] = {
  { 0, "No horizontal man.sensed" },
  { 1, "Horizontal man. sensed" },
  { 0, NULL }
};
static const value_string value_map_585[] = {
  { 0, "Maintaining" },
  { 1, "Climbing" },
  { 2, "Descending" },
  { 3, "Unknown" },
  { 0, NULL }
};
static const value_string value_map_586[] = {
  { 0, "Track still alive" },
  { 1, "End of track lifetime(last report for this track)" },
  { 0, NULL }
};
static const value_string value_map_587[] = {
  { 0, "True target track" },
  { 1, "Ghost target track" },
  { 0, NULL }
};
static const value_string value_map_588[] = {
  { 0, "Tracking performed in so-called 'Radar Plane', i.e. neither slant range correction nor stereographical projection was applied" },
  { 1, "Slant range correction and a suitable projection technique are used to track in a 2D.reference plane, tangential to the earth model at the Radar Site co-ordinates" },
  { 0, NULL }
};
static const value_string value_map_574[] = {
  { 0, "Not defined; never used" },
  { 1, "Multipath Reply (Reflection)" },
  { 2, "Reply due to sidelobe interrogation/reception" },
  { 3, "Split plot" },
  { 4, "Second time around reply" },
  { 5, "Angel" },
  { 6, "Slow moving target correlated with road infrastructure (terrestrial vehicle)" },
  { 7, "Fixed PSR plot" },
  { 8, "Slow PSR target" },
  { 9, "Low quality PSR plot" },
  { 10, "Phantom SSR plot" },
  { 11, "Non-Matching Mode-3/A Code" },
  { 12, "Mode C code / Mode S altitude code abnormal value compared to the track" },
  { 13, "Target in Clutter Area" },
  { 14, "Maximum Doppler Response in Zero Filter" },
  { 15, "Transponder anomaly detected" },
  { 16, "Duplicated or Illegal Mode S Aircraft Address" },
  { 17, "Mode S error correction applied" },
  { 18, "Undecodable Mode C code / Mode S altitude code" },
  { 19, "Birds" },
  { 20, "Flock of Birds" },
  { 21, "Mode-1 was present in original reply" },
  { 22, "Mode-2 was present in original reply" },
  { 23, "Plot potentially caused by Wind Turbine" },
  { 24, "Helicopter" },
  { 25, "Maximum number of re-interrogations reached (surveillance information)" },
  { 26, "Maximum number of re-interrogations reached (BDS Extractions)" },
  { 27, "BDS Overlay Incoherence" },
  { 28, "Potential BDS Swap Detected" },
  { 29, "Track Update in the Zenithal Gap" },
  { 30, "Mode S Track re-acquired" },
  { 31, "Duplicated Mode 5 Pair NO/PIN detected" },
  { 0, NULL }
};
static const value_string value_map_576[] = {
  { 0, "Doppler speed is valid" },
  { 1, "Doppler speed is doubtful" },
  { 0, NULL }
};
static const value_string value_map_590[] = {
  { 0, "No communications capability (surveillance only)" },
  { 1, "Comm. A and Comm. B capability" },
  { 2, "Comm. A, Comm. B and Uplink ELM" },
  { 3, "Comm. A, Comm. B, Uplink ELM and Downlink ELM" },
  { 4, "Level 5 Transponder capability" },
  { 0, NULL }
};
static const value_string value_map_591[] = {
  { 0, "No alert, no SPI, aircraft airborne" },
  { 1, "No alert, no SPI, aircraft on ground" },
  { 2, "Alert, no SPI, aircraft airborne" },
  { 3, "Alert, no SPI, aircraft on ground" },
  { 4, "Alert, SPI, aircraft airborne or on ground" },
  { 5, "No alert, SPI, aircraft airborne or on ground" },
  { 7, "Unknown" },
  { 0, NULL }
};
static const value_string value_map_592[] = {
  { 0, "SI-Code Capable" },
  { 1, "II-Code Capable" },
  { 0, NULL }
};
static const value_string value_map_575[] = {
  { 0, "Mode-1 code as derived from the reply of the transponder" },
  { 1, "Smoothed Mode-1 code as provided by a local tracker" },
  { 0, NULL }
};
static const value_string value_map_593[] = {
  { 0, "Not defined; never used" },
  { 1, "Multipath Reply (Reflection)" },
  { 2, "Reply due to sidelobe interrogation/reception" },
  { 3, "Split plot" },
  { 4, "Second time around reply" },
  { 5, "Angel" },
  { 6, "Slow moving target correlated with road infrastructure (terrestrial vehicle)" },
  { 7, "Fixed PSR plot" },
  { 8, "Slow PSR target" },
  { 9, "Low quality PSR plot" },
  { 10, "Phantom SSR plot" },
  { 11, "Non-Matching Mode-3/A Code" },
  { 12, "Mode C code / Mode S altitude code abnormal value compared to the track" },
  { 13, "Target in Clutter Area" },
  { 14, "Maximum Doppler Response in Zero Filter" },
  { 15, "Transponder anomaly detected" },
  { 16, "Duplicated or Illegal Mode S Aircraft Address" },
  { 17, "Mode S error correction applied" },
  { 18, "Undecodable Mode C code / Mode S altitude code" },
  { 19, "Birds" },
  { 20, "Flock of Birds" },
  { 21, "Mode-1 was present in original reply" },
  { 22, "Mode-2 was present in original reply" },
  { 23, "Plot potentially caused by Wind Turbine" },
  { 24, "Helicopter" },
  { 25, "Maximum number of re-interrogations reached (surveillance information)" },
  { 26, "Maximum number of re-interrogations reached (BDS Extractions)" },
  { 27, "BDS Overlay Incoherence" },
  { 28, "Potential BDS Swap Detected" },
  { 29, "Track Update in the Zenithal Gap" },
  { 30, "Mode S Track re-acquired" },
  { 31, "Duplicated Mode 5 Pair NO/PIN detected" },
  { 32, "Wrong DF reply format detected" },
  { 33, "Transponder anomaly (MS XPD replies with Mode A/C to Mode A/C-only all-call)" },
  { 34, "Transponder anomaly (SI capability report wrong)" },
  { 0, NULL }
};
static const value_string value_map_594[] = {
  { 0, "ADSB not populated" },
  { 1, "ADSB populated" },
  { 0, NULL }
};
static const value_string value_map_595[] = {
  { 0, "Not available" },
  { 1, "Available" },
  { 0, NULL }
};
static const value_string value_map_596[] = {
  { 0, "SCN not populated" },
  { 1, "SCN populated" },
  { 0, NULL }
};
static const value_string value_map_597[] = {
  { 0, "PAI not populated" },
  { 1, "PAI populated" },
  { 0, NULL }
};
static const value_string value_map_598[] = {
  { 0, "Not defined; never used" },
  { 1, "Multipath Reply (Reflection)" },
  { 2, "Reply due to sidelobe interrogation/reception" },
  { 3, "Split plot" },
  { 4, "Second time around reply" },
  { 5, "Angel" },
  { 6, "Slow moving target correlated with road infrastructure (terrestrial vehicle)" },
  { 7, "Fixed PSR plot" },
  { 8, "Slow PSR target" },
  { 9, "Low quality PSR plot" },
  { 10, "Phantom SSR plot" },
  { 11, "Non-Matching Mode-3/A Code" },
  { 12, "Mode C code / Mode S altitude code abnormal value compared to the track" },
  { 13, "Target in Clutter Area" },
  { 14, "Maximum Doppler Response in Zero Filter" },
  { 15, "Transponder anomaly detected" },
  { 16, "Duplicated or Illegal Mode S Aircraft Address" },
  { 17, "Mode S error correction applied" },
  { 18, "Undecodable Mode C code / Mode S altitude code" },
  { 19, "Birds" },
  { 20, "Flock of Birds" },
  { 21, "Mode-1 was present in original reply" },
  { 22, "Mode-2 was present in original reply" },
  { 23, "Plot potentially caused by Wind Turbine" },
  { 24, "Helicopter" },
  { 25, "Maximum number of re-interrogations reached (surveillance information)" },
  { 26, "Maximum number of re-interrogations reached (BDS Extractions)" },
  { 27, "BDS Overlay Incoherence" },
  { 28, "Potential BDS Swap Detected" },
  { 29, "Track Update in the Zenithal Gap" },
  { 30, "Mode S Track re-acquired" },
  { 31, "Duplicated Mode 5 Pair NO/PIN detected" },
  { 32, "Wrong DF reply format detected" },
  { 33, "Transponder anomaly (MS XPD replies with Mode A/C to Mode A/C-only all-call)" },
  { 34, "Transponder anomaly (SI capability report wrong)" },
  { 35, "Potential IC Conflict" },
  { 36, "IC Conflict detection possible-no conflict currently detected" },
  { 0, NULL }
};
static const value_string value_map_599[] = {
  { 0, "ACASXV not populated" },
  { 1, "ACASXV populated" },
  { 0, NULL }
};
static const value_string value_map_600[] = {
  { 0, "Non-Extended Version" },
  { 1, "ACAS Xa Version 1" },
  { 2, "ACAS Xu Version 1" },
  { 0, NULL }
};
static const value_string value_map_601[] = {
  { 0, "POXPR not populated" },
  { 1, "POXPR populated" },
  { 0, NULL }
};
static const value_string value_map_602[] = {
  { 0, "PO not supported (PPM only)" },
  { 1, "PO supported" },
  { 0, NULL }
};
static const value_string value_map_603[] = {
  { 0, "POACT not populated" },
  { 1, "POACT populated" },
  { 0, NULL }
};
static const value_string value_map_604[] = {
  { 0, "PO not active" },
  { 1, "PO active" },
  { 0, NULL }
};
static const value_string value_map_605[] = {
  { 0, "DTFXPR not populated" },
  { 1, "DTFXPR populated" },
  { 0, NULL }
};
static const value_string value_map_606[] = {
  { 0, "Basic Dataflash not supported" },
  { 1, "Basic Dataflash supported" },
  { 0, NULL }
};
static const value_string value_map_607[] = {
  { 0, "DTFACT not populated" },
  { 1, "DTFACT populated" },
  { 0, NULL }
};
static const value_string value_map_608[] = {
  { 0, "Basic Dataflash not active" },
  { 1, "Basic Dataflash active" },
  { 0, NULL }
};
static const value_string value_map_609[] = {
  { 0, "IRMXPR not populated" },
  { 1, "IRMXPR populated" },
  { 0, NULL }
};
static const value_string value_map_610[] = {
  { 0, "Transponder not IRM capable" },
  { 1, "Transponder IRM capable" },
  { 0, NULL }
};
static const value_string value_map_611[] = {
  { 0, "IRMACT not populated" },
  { 1, "IRMACT populated" },
  { 0, NULL }
};
static const value_string value_map_612[] = {
  { 0, "IRM not active" },
  { 1, "IRM active" },
  { 0, NULL }
};
static const value_string value_map_613[] = {
  { 0, "Not defined; never used" },
  { 1, "Multipath Reply (Reflection)" },
  { 2, "Reply due to sidelobe interrogation/reception" },
  { 3, "Split plot" },
  { 4, "Second time around reply" },
  { 5, "Angel" },
  { 6, "Slow moving target correlated with road infrastructure (terrestrial vehicle)" },
  { 7, "Fixed PSR plot" },
  { 8, "Slow PSR target" },
  { 9, "Low quality PSR plot" },
  { 10, "Phantom SSR plot" },
  { 11, "Non-Matching Mode-3/A Code" },
  { 12, "Mode C code / Mode S altitude code abnormal value compared to the track" },
  { 13, "Target in Clutter Area" },
  { 14, "Maximum Doppler Response in Zero Filter" },
  { 15, "Transponder anomaly detected" },
  { 16, "Duplicated or Illegal Mode S Aircraft Address" },
  { 17, "Mode S error correction applied" },
  { 18, "Undecodable Mode C code / Mode S altitude code" },
  { 19, "Birds" },
  { 20, "Flock of Birds" },
  { 21, "Mode-1 was present in original reply" },
  { 22, "Mode-2 was present in original reply" },
  { 23, "Plot potentially caused by Wind Turbine" },
  { 24, "Helicopter" },
  { 25, "Maximum number of re-interrogations reached (surveillance information)" },
  { 26, "Maximum number of re-interrogations reached (BDS Extractions)" },
  { 27, "BDS Overlay Incoherence" },
  { 28, "Potential BDS Swap Detected" },
  { 29, "Track Update in the Zenithal Gap" },
  { 30, "Mode S Track re-acquired" },
  { 31, "Duplicated Mode 5 Pair NO/PIN detected" },
  { 32, "Wrong DF reply format detected" },
  { 33, "Transponder anomaly (MS XPD replies with Mode A/C to Mode A/C-only all-call)" },
  { 34, "Transponder anomaly (SI capability report wrong)" },
  { 35, "Potential IC Conflict" },
  { 36, "IC Conflict detection possible-no conflict currently detected" },
  { 37, "Duplicate Mode 5 PIN (refer to the Mode 5 items in the REF)" },
  { 0, NULL }
};
static const value_string value_map_614[] = {
  { 0, "No detection" },
  { 1, "Single PSR detection" },
  { 2, "Single SSR detection" },
  { 3, "SSR+PSR detection" },
  { 4, "Single Mode S All-Call" },
  { 5, "Single Mode S Roll-Call" },
  { 6, "Mode S All-Call + PSR" },
  { 7, "Mode S Roll-Call + PSR" },
  { 8, "ADS-B" },
  { 9, "WAM" },
  { 0, NULL }
};
static const value_string value_map_615[] = {
  { 0, "Flight plan data from active FDPS" },
  { 1, "Flight plan data retained from no longer active FDPS" },
  { 0, NULL }
};
static const value_string value_map_616[] = {
  { 0, "LNAV not populated" },
  { 1, "LNAV populated" },
  { 0, NULL }
};
static const value_string value_map_617[] = {
  { 0, "LNAV Mode Engaged" },
  { 1, "LNAV Mode not Engaged" },
  { 0, NULL }
};
static const value_string value_map_618[] = {
  { 0, "PS3 Element not populated" },
  { 1, "PS3 Element populated" },
  { 0, NULL }
};
static const value_string value_map_619[] = {
  { 0, "No emergency / not reported" },
  { 1, "General emergency" },
  { 2, "UAS/RPAS - Lost link" },
  { 3, "Minimum fuel" },
  { 4, "No communications" },
  { 5, "Unlawful interference" },
  { 6, "Aircraft in Distress Automatic Activation" },
  { 7, "Aircraft in Distress Manual Activation" },
  { 0, NULL }
};
static const value_string value_map_620[] = {
  { 0, "Not RCE" },
  { 1, "TABS" },
  { 2, "Reserved for future use" },
  { 3, "Other RCE" },
  { 0, NULL }
};
static const value_string value_map_621[] = {
  { 0, "Unknown" },
  { 1, "Transponder #1 (left/pilot side or single)" },
  { 2, "Transponder #2 (right/co-pilot side)" },
  { 3, "Transponder #3 (auxiliary or Back-up)" },
  { 0, NULL }
};
static const value_string value_map_622[] = {
  { 0, "Active CAS (TCAS II) or no CAS" },
  { 1, "Active CAS (not TCAS II)" },
  { 2, "Active CAS (not TCAS II) with OCM transmit capability" },
  { 3, "Active CAS of Junior Status" },
  { 4, "Passive CAS with 1030 TCAS Resolution Message receive capability" },
  { 5, "Passive CAS with only OCM receive capability" },
  { 6, "Reserved for future use" },
  { 7, "Reserved for future use" },
  { 0, NULL }
};
static const value_string value_map_623[] = {
  { 0, "No change" },
  { 1, "Mode 3/A has changed" },
  { 0, NULL }
};
static const value_string value_map_653[] = {
  { 0, "Callsign or registration downlinked from target" },
  { 1, "Callsign not downlinked from target" },
  { 2, "Registration not downlinked from target" },
  { 3, "Invalid" },
  { 0, NULL }
};
static const value_string value_map_657[] = {
  { 0, "Air Speed = IAS, LSB (Bit-1) = 2^-14 NM/s" },
  { 1, "Air Speed = Mach, LSB (Bit-1) = 0.001" },
  { 0, NULL }
};
static const value_string value_map_658[] = {
  { 0, "No source information provided" },
  { 1, "Source information provided" },
  { 0, NULL }
};
static const value_string value_map_659[] = {
  { 0, "Unknown" },
  { 1, "Aircraft altitude" },
  { 2, "FCU/MCP selected altitude" },
  { 3, "FMS selected altitude" },
  { 0, NULL }
};
static const value_string value_map_660[] = {
  { 0, "Trajectory intent data is available for this aircraft" },
  { 1, "Trajectory intent data is not available for this aircraft" },
  { 0, NULL }
};
static const value_string value_map_661[] = {
  { 0, "Trajectory intent data is valid" },
  { 1, "Trajectory intent data is not valid" },
  { 0, NULL }
};
static const value_string value_map_662[] = {
  { 0, "No alert, no SPI, aircraft airborne" },
  { 1, "No alert, no SPI, aircraft on ground" },
  { 2, "Alert, no SPI, aircraft airborne" },
  { 3, "Alert, no SPI, aircraft on ground" },
  { 4, "Alert, SPI, aircraft airborne or on ground" },
  { 5, "No alert, SPI, aircraft airborne or on ground" },
  { 0, NULL }
};
static const value_string value_map_663[] = {
  { 0, "Unknown" },
  { 1, "ACAS not operational" },
  { 2, "ACAS operational" },
  { 3, "Invalid" },
  { 0, NULL }
};
static const value_string value_map_664[] = {
  { 0, "Unknown" },
  { 1, "Multiple navigational aids not operating" },
  { 2, "Multiple navigational aids operating" },
  { 3, "Invalid" },
  { 0, NULL }
};
static const value_string value_map_665[] = {
  { 0, "Unknown" },
  { 1, "Differential correction" },
  { 2, "No differential correction" },
  { 3, "Invalid" },
  { 0, NULL }
};
static const value_string value_map_666[] = {
  { 0, "Transponder ground bit not set or unknown" },
  { 1, "Transponder Ground Bit set" },
  { 0, NULL }
};
static const value_string value_map_667[] = {
  { 0, "No emergency" },
  { 1, "General emergency" },
  { 2, "Lifeguard / medical" },
  { 3, "Minimum fuel" },
  { 4, "No communications" },
  { 5, "Unlawful interference" },
  { 6, "Downed Aircraft" },
  { 7, "Unknown" },
  { 0, NULL }
};
static const value_string value_map_668[] = {
  { 0, "Not valid Wind Speed" },
  { 1, "Valid Wind Speed" },
  { 0, NULL }
};
static const value_string value_map_669[] = {
  { 0, "Not valid Wind Direction" },
  { 1, "Valid Wind Direction" },
  { 0, NULL }
};
static const value_string value_map_670[] = {
  { 0, "Not valid Temperature" },
  { 1, "Valid Temperature" },
  { 0, NULL }
};
static const value_string value_map_671[] = {
  { 0, "Not valid Turbulence" },
  { 1, "Valid Turbulence" },
  { 0, NULL }
};
static const value_string value_map_672[] = {
  { 1, "Light aircraft =< 7000 kg" },
  { 2, "Reserved" },
  { 3, "7000 kg < medium aircraft < 136000 kg" },
  { 4, "Reserved" },
  { 5, "136000 kg <= heavy aircraft" },
  { 6, "Highly manoeuvrable (5g acceleration capability) and high speed (>400 knots cruise)" },
  { 7, "Reserved" },
  { 8, "Reserved" },
  { 9, "Reserved" },
  { 10, "Rotocraft" },
  { 11, "Glider / sailplane" },
  { 12, "Lighter-than-air" },
  { 13, "Unmanned aerial vehicle" },
  { 14, "Space / transatmospheric vehicle" },
  { 15, "Ultralight / handglider / paraglider" },
  { 16, "Parachutist / skydiver" },
  { 17, "Reserved" },
  { 18, "Reserved" },
  { 19, "Reserved" },
  { 20, "Surface emergency vehicle" },
  { 21, "Surface service vehicle" },
  { 22, "Fixed ground or tethered obstruction" },
  { 23, "Reserved" },
  { 24, "Reserved" },
  { 0, NULL }
};
static const value_string value_map_624[] = {
  { 0, "Multisensor track" },
  { 1, "Monosensor track" },
  { 0, NULL }
};
static const value_string value_map_625[] = {
  { 0, "No source" },
  { 1, "GNSS" },
  { 2, "3D radar" },
  { 3, "Triangulation" },
  { 4, "Height from coverage" },
  { 5, "Speed look-up table" },
  { 6, "Default height" },
  { 7, "Multilateration" },
  { 0, NULL }
};
static const value_string value_map_626[] = {
  { 0, "Actual track" },
  { 1, "Simulated track" },
  { 0, NULL }
};
static const value_string value_map_627[] = {
  { 0, "Default value" },
  { 1, "Last message transmitted to the user for the track" },
  { 0, NULL }
};
static const value_string value_map_628[] = {
  { 0, "Default value" },
  { 1, "First message transmitted to the user for the track" },
  { 0, NULL }
};
static const value_string value_map_629[] = {
  { 0, "Default value" },
  { 1, "Slave Track Promotion" },
  { 0, NULL }
};
static const value_string value_map_630[] = {
  { 0, "Complementary service used" },
  { 1, "Background service used" },
  { 0, NULL }
};
static const value_string value_map_631[] = {
  { 0, "Default value" },
  { 1, "Military Identification present in the last report received from a sensor capable of decoding this data" },
  { 0, NULL }
};
static const value_string value_map_632[] = {
  { 0, "No Mode 5 interrogation" },
  { 1, "Friendly target" },
  { 2, "Unknown target" },
  { 3, "No reply" },
  { 0, NULL }
};
static const value_string value_map_633[] = {
  { 0, "Default value" },
  { 1, "Age of the last received ADS-B track update is higher than system dependent threshold" },
  { 0, NULL }
};
static const value_string value_map_634[] = {
  { 0, "Default value" },
  { 1, "Assigned Mode A Code Conflict (same discrete Mode A Code assigned to another track)" },
  { 0, NULL }
};
static const value_string value_map_635[] = {
  { 0, "Combined" },
  { 1, "Co-operative only" },
  { 2, "Non-Cooperative only" },
  { 3, "Not defined" },
  { 0, NULL }
};
static const value_string value_map_636[] = {
  { 0, "No emergency" },
  { 1, "General emergency" },
  { 2, "Lifeguard / medical" },
  { 3, "Minimum fuel" },
  { 4, "No communications" },
  { 5, "Unlawful interference" },
  { 6, "Downed Aircraft" },
  { 7, "Undefined" },
  { 0, NULL }
};
static const value_string value_map_637[] = {
  { 0, "No indication" },
  { 1, "Potential False Track Indication" },
  { 0, NULL }
};
static const value_string value_map_638[] = {
  { 0, "Default value" },
  { 1, "Track created / updated with FPL data" },
  { 0, NULL }
};
static const value_string value_map_639[] = {
  { 0, "Default value" },
  { 1, "Duplicate Mode 3/A Code" },
  { 0, NULL }
};
static const value_string value_map_640[] = {
  { 0, "Default value" },
  { 1, "Duplicate Flight Plan" },
  { 0, NULL }
};
static const value_string value_map_641[] = {
  { 0, "Default value" },
  { 1, "Duplicate Flight Plan due to manual correlation" },
  { 0, NULL }
};
static const value_string value_map_649[] = {
  { 0, "Constant course" },
  { 1, "Right turn" },
  { 2, "Left turn" },
  { 3, "Undetermined" },
  { 0, NULL }
};
static const value_string value_map_650[] = {
  { 0, "Constant groundspeed" },
  { 1, "Increasing groundspeed" },
  { 2, "Decreasing groundspeed" },
  { 3, "Undetermined" },
  { 0, NULL }
};
static const value_string value_map_651[] = {
  { 0, "Level" },
  { 1, "Climb" },
  { 2, "Descent" },
  { 3, "Undetermined" },
  { 0, NULL }
};
static const value_string value_map_652[] = {
  { 0, "No altitude discrepancy" },
  { 1, "Altitude discrepancy" },
  { 0, NULL }
};
static const value_string value_map_675[] = {
  { 0, "No valid Mode 3/A available" },
  { 1, "Valid Mode 3/A available" },
  { 0, NULL }
};
static const value_string value_map_642[] = {
  { 0, "No authenticated Mode 5 ID reply" },
  { 1, "Authenticated Mode 5 ID reply" },
  { 0, NULL }
};
static const value_string value_map_643[] = {
  { 0, "Mode 1 code not present or not from Mode 5 reply" },
  { 1, "Mode 1 code from Mode 5 reply" },
  { 0, NULL }
};
static const value_string value_map_644[] = {
  { 0, "Mode 2 code not present or not from Mode 5 reply" },
  { 1, "Mode 2 code from Mode 5 reply" },
  { 0, NULL }
};
static const value_string value_map_645[] = {
  { 0, "Mode 3 code not present or not from Mode 5 reply" },
  { 1, "Mode 3 code from Mode 5 reply" },
  { 0, NULL }
};
static const value_string value_map_646[] = {
  { 0, "Mode C altitude code not present or not from Mode 5 reply" },
  { 1, "Mode C altitude from Mode 5 reply" },
  { 0, NULL }
};
static const value_string value_map_647[] = {
  { 0, "X-pulse set to zero or no authenticated Data reply or Report received" },
  { 1, "X-pulse set to one" },
  { 0, NULL }
};
static const value_string value_map_654[] = {
  { 0, "Mode 3/A code as derived from the reply of the transponder" },
  { 1, "Mode 3/A code as provided by a sensor local tracker" },
  { 0, NULL }
};
static const value_string value_map_655[] = {
  { 0, "No detection" },
  { 1, "Single PSR detection" },
  { 2, "Single SSR detection" },
  { 3, "SSR + PSR detection" },
  { 4, "Single ModeS All-Call" },
  { 5, "Single ModeS Roll-Call" },
  { 6, "ModeS All-Call + PSR" },
  { 7, "ModeS Roll-Call + PSR" },
  { 0, NULL }
};
static const value_string value_map_656[] = {
  { 0, "Report from target transponder" },
  { 1, "Report from field monitor (item transponder)" },
  { 0, NULL }
};
static const value_string value_map_684[] = {
  { 0, "No alert, no SPI, aircraft airborne" },
  { 1, "No alert, no SPI, aircraft on ground" },
  { 2, "Alert, no SPI, aircraft airborne" },
  { 3, "Alert, no SPI, aircraft on ground" },
  { 4, "Alert, SPI, aircraft airborne or on ground" },
  { 5, "No alert, SPI, aircraft airborne or on ground" },
  { 6, "Not defined" },
  { 7, "Unknown or not yet extracted" },
  { 0, NULL }
};
static const value_string value_map_681[] = {
  { 0, "Default value" },
  { 1, "Surface target" },
  { 0, NULL }
};
static const value_string value_map_682[] = {
  { 0, "No indication" },
  { 1, "Duplicate Flight-ID" },
  { 0, NULL }
};
static const value_string value_map_683[] = {
  { 0, "Default value" },
  { 1, "Inconsistent Emergency Code" },
  { 0, NULL }
};
static const value_string value_map_685[] = {
  { 0, "Default value" },
  { 1, "Age of the last received MLAT track updateis higher than system dependent threshold" },
  { 0, NULL }
};
static const value_string value_map_686[] = {
  { 0, "Default value" },
  { 1, "Age of the last received Mode-5 interrogation track update is higher than system dependent threshold" },
  { 0, NULL }
};
static const value_string value_map_687[] = {
  { 0, "Operational" },
  { 1, "Degraded" },
  { 2, "Initialization" },
  { 3, "Not currently connected" },
  { 0, NULL }
};
static const value_string value_map_688[] = {
  { 0, "PSR GO" },
  { 1, "PSR NOGO" },
  { 0, NULL }
};
static const value_string value_map_689[] = {
  { 0, "SSR GO" },
  { 1, "SSR NOGO" },
  { 0, NULL }
};
static const value_string value_map_690[] = {
  { 0, "MDS GO" },
  { 1, "MDS NOGO" },
  { 0, NULL }
};
static const value_string value_map_691[] = {
  { 0, "ADS GO" },
  { 1, "ADS NOGO" },
  { 0, NULL }
};
static const value_string value_map_692[] = {
  { 0, "MLT GO" },
  { 1, "MLT NOGO" },
  { 0, NULL }
};
static const value_string value_map_693[] = {
  { 0, "System is released for operational use" },
  { 1, "Operational use of System is inhibited" },
  { 0, NULL }
};
static const value_string value_map_694[] = {
  { 0, "Default (no meaning)" },
  { 1, "No plots being received" },
  { 0, NULL }
};
static const value_string value_map_698[] = {
  { 1, "SDPS Status" },
  { 2, "End of Batch" },
  { 3, "Service Status Report" },
  { 0, NULL }
};
static const value_string value_map_699[] = {
  { 0, "Operational" },
  { 1, "Degraded" },
  { 2, "Not currently connected" },
  { 3, "Unknown" },
  { 0, NULL }
};
static const value_string value_map_700[] = {
  { 0, "Default" },
  { 1, "Overload" },
  { 0, NULL }
};
static const value_string value_map_701[] = {
  { 0, "Default" },
  { 1, "Invalid Time Source" },
  { 0, NULL }
};
static const value_string value_map_702[] = {
  { 0, "Not applicable" },
  { 1, "SDPS-1 selected" },
  { 2, "SDPS-2 selected" },
  { 3, "SDPS-3 selected" },
  { 0, NULL }
};
static const value_string value_map_703[] = {
  { 1, "Service degradation" },
  { 2, "Service degradation ended" },
  { 3, "Main radar out of service" },
  { 4, "Service interrupted by the operator" },
  { 5, "Service interrupted due to contingency" },
  { 6, "Ready for service restart after contingency" },
  { 7, "Service ended by the operator" },
  { 8, "Failure of user main radar" },
  { 9, "Service restarted by the operator" },
  { 10, "Main radar becoming operational" },
  { 11, "Main radar becoming degraded" },
  { 12, "Service continuity interrupted due to disconnection with adjacent unit" },
  { 13, "Service continuity restarted" },
  { 14, "Service synchronised on backup radar" },
  { 15, "Service synchronised on main radar" },
  { 16, "Main and backup radar, if any, failed" },
  { 0, NULL }
};
static const value_string value_map_704[] = {
  { 1, "Flight plan creation" },
  { 2, "Flight plan modification" },
  { 3, "Flight plan repetition" },
  { 4, "Manual flight plan deletion" },
  { 5, "Automatic flight plan deletion" },
  { 6, "Flight is beyond extraction area boundary" },
  { 251, "Short term conflict alert" },
  { 252, "Correlations" },
  { 253, "Decorrelations" },
  { 254, "Start of background loop" },
  { 255, "End of background loop" },
  { 0, NULL }
};
static const value_string value_map_705[] = {
  { 1, "P, point" },
  { 2, "B, point with bearing and distance" },
  { 3, "LS, latitude/longitude position short format" },
  { 4, "LL, latitude/longitude position long format" },
  { 5, "X, x/y co-ordinate position" },
  { 6, "G, georeference position" },
  { 14, "E, airport" },
  { 0, NULL }
};
static const value_string value_map_706[] = {
  { 1, "System Position Report" },
  { 2, "System Bearing Report" },
  { 3, "System Position Report of conflicting transmission" },
  { 4, "System Detection End Report" },
  { 5, "Sensor Data Report" },
  { 0, NULL }
};
static const value_string value_map_710[] = {
  { 1, "Video Summary message" },
  { 2, "Video message" },
  { 0, NULL }
};
static const value_string value_map_712[] = {
  { 0, "No compression applied" },
  { 1, "Compression applied" },
  { 0, NULL }
};
static const value_string value_map_713[] = {
  { 1, "Monobit Resolution (1 bit)" },
  { 2, "Low Resolution (2 bits)" },
  { 3, "Medium Resolution (4 bits)" },
  { 4, "High Resolution (8 bits)" },
  { 5, "Very High Resolution (16 bits)" },
  { 6, "Ultra High Resolution (32 bits)" },
  { 0, NULL }
};
static hf_register_info hf[] = {
{ &hf_asterix_category, { "Category", "asterix.category", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &hf_asterix_length,   { "Length", "asterix.length", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &hf_asterix_fspec,    { "FSPEC", "asterix.fspec", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &hf_asterix_fspec_bitstring,    { "FSPEC", "asterix.fspec_bitstring", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &hf_asterix_datablock,{ "ASTERIX DATA BLOCK", "asterix.datablock", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &hf_asterix_record,   { "RECORD", "asterix.record", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &hf_asterix_counter,   { "Repetition", "asterix.counter", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &hf_asterix_possible_interpretation,   { "Possible interpretation", "asterix.possible_interpretation", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &hf_asterix_possible_interpretations,   { "Possible interpretations:", "asterix.possible_interpretations", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &hf_asterix_spare,   { "Spare bits", "asterix.spare_bit", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_0, { "010 : Data Source Identifier", "asterix.1_1_2_010_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1, { "SAC : System Area Code", "asterix.1_1_2_010_plot_group_1", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2, { "SIC : System Identification Code", "asterix.1_1_2_010_plot_group_2", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3, { "020 : Target Report Descriptor", "asterix.1_1_2_020_plot_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4, { "TYP", "asterix.1_1_2_020_plot_extended_TYP", FT_UINT8, BASE_DEC, VALS(value_map_2), 0x0, NULL, HFILL } },
{ &expand_var_5, { "SIM", "asterix.1_1_2_020_plot_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_3), 0x0, NULL, HFILL } },
{ &expand_var_6, { "SSRPSR(Radar Detection in Last Antenna Scan)", "asterix.1_1_2_020_plot_extended_SSRPSR", FT_UINT8, BASE_DEC, VALS(value_map_4), 0x0, NULL, HFILL } },
{ &expand_var_7, { "ANT", "asterix.1_1_2_020_plot_extended_ANT", FT_UINT8, BASE_DEC, VALS(value_map_5), 0x0, NULL, HFILL } },
{ &expand_var_8, { "SPI", "asterix.1_1_2_020_plot_extended_SPI", FT_UINT8, BASE_DEC, VALS(value_map_6), 0x0, NULL, HFILL } },
{ &expand_var_9, { "RAB", "asterix.1_1_2_020_plot_extended_RAB", FT_UINT8, BASE_DEC, VALS(value_map_7), 0x0, NULL, HFILL } },
{ &expand_var_10, { "FX", "asterix.1_1_2_020_plot_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_11, { "TST", "asterix.1_1_2_020_plot_extended_TST", FT_UINT8, BASE_DEC, VALS(value_map_8), 0x0, NULL, HFILL } },
{ &expand_var_12, { "DS1DS2(Radar Detection in Last Antenna Scan)", "asterix.1_1_2_020_plot_extended_DS1DS2", FT_UINT8, BASE_DEC, VALS(value_map_9), 0x0, NULL, HFILL } },
{ &expand_var_13, { "ME", "asterix.1_1_2_020_plot_extended_ME", FT_UINT8, BASE_DEC, VALS(value_map_10), 0x0, NULL, HFILL } },
{ &expand_var_14, { "MI", "asterix.1_1_2_020_plot_extended_MI", FT_UINT8, BASE_DEC, VALS(value_map_11), 0x0, NULL, HFILL } },
{ &expand_var_15, { "FX", "asterix.1_1_2_020_plot_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_16, { "040 : Measured Position in Polar Co-ordinates", "asterix.1_1_2_040_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_17, { "RHO [NM]", "asterix.1_1_2_040_plot_group_14", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_18, { "THETA [°]", "asterix.1_1_2_040_plot_group_15", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_19, { "070 : Mode-3/A Code in Octal Representation", "asterix.1_1_2_070_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_20, { "V", "asterix.1_1_2_070_plot_group_18", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_21, { "G", "asterix.1_1_2_070_plot_group_19", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_22, { "L", "asterix.1_1_2_070_plot_group_36", FT_UINT8, BASE_DEC, VALS(value_map_32), 0x0, NULL, HFILL } },
{ &expand_var_23, { "MODE3A : Mode-3/A Reply in Octal Representation", "asterix.1_1_2_070_plot_group_37", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_24, { "090 : Mode-C Code in Binary Representation", "asterix.1_1_2_090_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_25, { "V", "asterix.1_1_2_090_plot_group_18", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_26, { "G", "asterix.1_1_2_090_plot_group_19", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_27, { "HGT : Mode-C HEIGHT [FL]", "asterix.1_1_2_090_plot_group_38", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_28, { "130 : Radar Plot Characteristics", "asterix.1_1_2_130_plot_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_29, { "130 : Radar Plot Characteristics", "asterix.1_1_2_130_rep0_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_30, { "141 : Truncated Time of Day [s]", "asterix.1_1_2_141_plot_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_31, { "050 : Mode-2 Code in Octal Representation", "asterix.1_1_2_050_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_32, { "V", "asterix.1_1_2_050_plot_group_18", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_33, { "G", "asterix.1_1_2_050_plot_group_19", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_34, { "L", "asterix.1_1_2_050_plot_group_20", FT_UINT8, BASE_DEC, VALS(value_map_18), 0x0, NULL, HFILL } },
{ &expand_var_35, { "MODE2 : Mode-2 Code in Octal Representation", "asterix.1_1_2_050_plot_group_22", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_36, { "120 : Measured Radial Doppler Speed [NM/s]", "asterix.1_1_2_120_plot_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_37, { "131 : Received Power [dBm]", "asterix.1_1_2_131_plot_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_38, { "080 : Mode-3/A Code Confidence Indicator", "asterix.1_1_2_080_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_39, { "QA4", "asterix.1_1_2_080_plot_group_24", FT_UINT8, BASE_DEC, VALS(value_map_20), 0x0, NULL, HFILL } },
{ &expand_var_40, { "QA2", "asterix.1_1_2_080_plot_group_25", FT_UINT8, BASE_DEC, VALS(value_map_21), 0x0, NULL, HFILL } },
{ &expand_var_41, { "QA1", "asterix.1_1_2_080_plot_group_26", FT_UINT8, BASE_DEC, VALS(value_map_22), 0x0, NULL, HFILL } },
{ &expand_var_42, { "QB4", "asterix.1_1_2_080_plot_group_27", FT_UINT8, BASE_DEC, VALS(value_map_23), 0x0, NULL, HFILL } },
{ &expand_var_43, { "QB2", "asterix.1_1_2_080_plot_group_28", FT_UINT8, BASE_DEC, VALS(value_map_24), 0x0, NULL, HFILL } },
{ &expand_var_44, { "QB1", "asterix.1_1_2_080_plot_group_29", FT_UINT8, BASE_DEC, VALS(value_map_25), 0x0, NULL, HFILL } },
{ &expand_var_45, { "QC4", "asterix.1_1_2_080_plot_group_30", FT_UINT8, BASE_DEC, VALS(value_map_26), 0x0, NULL, HFILL } },
{ &expand_var_46, { "QC2", "asterix.1_1_2_080_plot_group_31", FT_UINT8, BASE_DEC, VALS(value_map_27), 0x0, NULL, HFILL } },
{ &expand_var_47, { "QC1", "asterix.1_1_2_080_plot_group_32", FT_UINT8, BASE_DEC, VALS(value_map_28), 0x0, NULL, HFILL } },
{ &expand_var_48, { "QD4", "asterix.1_1_2_080_plot_group_33", FT_UINT8, BASE_DEC, VALS(value_map_29), 0x0, NULL, HFILL } },
{ &expand_var_49, { "QD2", "asterix.1_1_2_080_plot_group_34", FT_UINT8, BASE_DEC, VALS(value_map_30), 0x0, NULL, HFILL } },
{ &expand_var_50, { "QD1", "asterix.1_1_2_080_plot_group_35", FT_UINT8, BASE_DEC, VALS(value_map_31), 0x0, NULL, HFILL } },
{ &expand_var_51, { "100 : Mode-C Code and Code Confidence Indicator", "asterix.1_1_2_100_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_52, { "V", "asterix.1_1_2_100_plot_group_18", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_53, { "G", "asterix.1_1_2_100_plot_group_19", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_54, { "MODEC : Mode-C Reply in Gray Notation", "asterix.1_1_2_100_plot_group_39", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_55, { "QC1", "asterix.1_1_2_100_plot_group_32", FT_UINT8, BASE_DEC, VALS(value_map_28), 0x0, NULL, HFILL } },
{ &expand_var_56, { "QA1", "asterix.1_1_2_100_plot_group_40", FT_UINT8, BASE_DEC, VALS(value_map_22), 0x0, NULL, HFILL } },
{ &expand_var_57, { "QC2", "asterix.1_1_2_100_plot_group_41", FT_UINT8, BASE_DEC, VALS(value_map_27), 0x0, NULL, HFILL } },
{ &expand_var_58, { "QA2", "asterix.1_1_2_100_plot_group_42", FT_UINT8, BASE_DEC, VALS(value_map_21), 0x0, NULL, HFILL } },
{ &expand_var_59, { "QC4", "asterix.1_1_2_100_plot_group_43", FT_UINT8, BASE_DEC, VALS(value_map_26), 0x0, NULL, HFILL } },
{ &expand_var_60, { "QA4", "asterix.1_1_2_100_plot_group_44", FT_UINT8, BASE_DEC, VALS(value_map_20), 0x0, NULL, HFILL } },
{ &expand_var_61, { "QB1", "asterix.1_1_2_100_plot_group_45", FT_UINT8, BASE_DEC, VALS(value_map_25), 0x0, NULL, HFILL } },
{ &expand_var_62, { "QD1", "asterix.1_1_2_100_plot_group_46", FT_UINT8, BASE_DEC, VALS(value_map_31), 0x0, NULL, HFILL } },
{ &expand_var_63, { "QB2", "asterix.1_1_2_100_plot_group_47", FT_UINT8, BASE_DEC, VALS(value_map_24), 0x0, NULL, HFILL } },
{ &expand_var_64, { "QD2", "asterix.1_1_2_100_plot_group_48", FT_UINT8, BASE_DEC, VALS(value_map_30), 0x0, NULL, HFILL } },
{ &expand_var_65, { "QB4", "asterix.1_1_2_100_plot_group_49", FT_UINT8, BASE_DEC, VALS(value_map_23), 0x0, NULL, HFILL } },
{ &expand_var_66, { "QD4", "asterix.1_1_2_100_plot_group_50", FT_UINT8, BASE_DEC, VALS(value_map_29), 0x0, NULL, HFILL } },
{ &expand_var_67, { "060 : Mode-2 Code Confidence Indicator", "asterix.1_1_2_060_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_68, { "030 : Warning/Error Conditions", "asterix.1_1_2_030_plot_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_69, { "030 : Warning/Error Conditions", "asterix.1_1_2_030_rep1_element", FT_UINT8, BASE_DEC, VALS(value_map_12), 0x0, NULL, HFILL } },
{ &expand_var_70, { "150 : Presence of X-Pulse", "asterix.1_1_2_150_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_71, { "XA", "asterix.1_1_2_150_plot_group_51", FT_UINT8, BASE_DEC, VALS(value_map_37), 0x0, NULL, HFILL } },
{ &expand_var_72, { "XC", "asterix.1_1_2_150_plot_group_52", FT_UINT8, BASE_DEC, VALS(value_map_38), 0x0, NULL, HFILL } },
{ &expand_var_73, { "X2", "asterix.1_1_2_150_plot_group_53", FT_UINT8, BASE_DEC, VALS(value_map_39), 0x0, NULL, HFILL } },
{ &expand_var_74, { "SP : Special Purpose Field", "asterix.1_1_2_SP_plot_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_75, { "010 : Data Source Identifier", "asterix.1_1_2_010_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_76, { "020 : Target Report Descriptor", "asterix.1_1_2_020_track_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_77, { "161 : Track Plot Number", "asterix.1_1_2_161_track_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_78, { "040 : Measured Position in Polar Co-ordinates", "asterix.1_1_2_040_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_79, { "042 : Calculated Position in Cartesian Co-ordinates", "asterix.1_1_2_042_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_80, { "X : X-Component [NM]", "asterix.1_1_2_042_track_group_16", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_81, { "Y : Y-Component [NM]", "asterix.1_1_2_042_track_group_17", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_82, { "200 : Calculated Track Velocity in Polar Co-ordinates", "asterix.1_1_2_200_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_83, { "GSP : Calculated Groundspeed [NM/s]", "asterix.1_1_2_200_track_group_62", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_84, { "HDG : Calculated Heading [°]", "asterix.1_1_2_200_track_group_63", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_85, { "070 : Mode-3/A Code in Octal Representation", "asterix.1_1_2_070_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_86, { "090 : Mode-C Code in Binary Representation", "asterix.1_1_2_090_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_87, { "141 : Truncated Time of Day [s]", "asterix.1_1_2_141_track_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_88, { "130 : Radar Plot Characteristics", "asterix.1_1_2_130_track_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_89, { "131 : Received Power [dBm]", "asterix.1_1_2_131_track_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_90, { "120 : Measured Radial Doppler Speed [NM/s]", "asterix.1_1_2_120_track_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_91, { "170 : Track Status", "asterix.1_1_2_170_track_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_92, { "CON", "asterix.1_1_2_170_track_extended_CON", FT_UINT8, BASE_DEC, VALS(value_map_40), 0x0, NULL, HFILL } },
{ &expand_var_93, { "RAD", "asterix.1_1_2_170_track_extended_RAD", FT_UINT8, BASE_DEC, VALS(value_map_41), 0x0, NULL, HFILL } },
{ &expand_var_94, { "MAN", "asterix.1_1_2_170_track_extended_MAN", FT_UINT8, BASE_DEC, VALS(value_map_42), 0x0, NULL, HFILL } },
{ &expand_var_95, { "DOU", "asterix.1_1_2_170_track_extended_DOU", FT_UINT8, BASE_DEC, VALS(value_map_43), 0x0, NULL, HFILL } },
{ &expand_var_96, { "RDPC(Radar Data Processing Chain)", "asterix.1_1_2_170_track_extended_RDPC", FT_UINT8, BASE_DEC, VALS(value_map_44), 0x0, NULL, HFILL } },
{ &expand_var_97, { "GHO", "asterix.1_1_2_170_track_extended_GHO", FT_UINT8, BASE_DEC, VALS(value_map_45), 0x0, NULL, HFILL } },
{ &expand_var_98, { "FX", "asterix.1_1_2_170_track_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_99, { "TRE", "asterix.1_1_2_170_track_extended_TRE", FT_UINT8, BASE_DEC, VALS(value_map_46), 0x0, NULL, HFILL } },
{ &expand_var_100, { "FX", "asterix.1_1_2_170_track_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_101, { "210 : Track Quality", "asterix.1_1_2_210_track_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_102, { "050 : Mode-2 Code in Octal Representation", "asterix.1_1_2_050_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_103, { "080 : Mode-3/A Code Confidence Indicator", "asterix.1_1_2_080_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_104, { "100 : Mode-C Code and Code Confidence Indicator", "asterix.1_1_2_100_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_105, { "060 : Mode-2 Code Confidence Indicator", "asterix.1_1_2_060_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_106, { "030 : Warning/Error Conditions", "asterix.1_1_2_030_track_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_107, { "SP : Special Purpose Field", "asterix.1_1_2_SP_track_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_108, { "150 : Presence of X-Pulse", "asterix.1_1_2_150_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_109, { "010 : Data Source Identifier", "asterix.1_1_3_010_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_110, { "020 : Target Report Descriptor", "asterix.1_1_3_020_plot_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_111, { "040 : Measured Position in Polar Co-ordinates", "asterix.1_1_3_040_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_112, { "070 : Mode-3/A Code in Octal Representation", "asterix.1_1_3_070_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_113, { "090 : Mode-C Code in Binary Representation", "asterix.1_1_3_090_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_114, { "130 : Radar Plot Characteristics", "asterix.1_1_3_130_plot_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_115, { "141 : Truncated Time of Day [s]", "asterix.1_1_3_141_plot_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_116, { "050 : Mode-2 Code in Octal Representation", "asterix.1_1_3_050_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_117, { "120 : Measured Radial Doppler Speed [NM/s]", "asterix.1_1_3_120_plot_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_118, { "131 : Received Power [dBm]", "asterix.1_1_3_131_plot_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_119, { "080 : Mode-3/A Code Confidence Indicator", "asterix.1_1_3_080_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_120, { "100 : Mode-C Code and Code Confidence Indicator", "asterix.1_1_3_100_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_121, { "060 : Mode-2 Code Confidence Indicator", "asterix.1_1_3_060_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_122, { "030 : Warning/Error Conditions", "asterix.1_1_3_030_plot_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_123, { "150 : Presence of X-Pulse", "asterix.1_1_3_150_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_124, { "SP : Special Purpose Field", "asterix.1_1_3_SP_plot_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_125, { "010 : Data Source Identifier", "asterix.1_1_3_010_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_126, { "020 : Target Report Descriptor", "asterix.1_1_3_020_track_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_127, { "161 : Track Plot Number", "asterix.1_1_3_161_track_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_128, { "040 : Measured Position in Polar Co-ordinates", "asterix.1_1_3_040_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_129, { "042 : Calculated Position in Cartesian Co-ordinates", "asterix.1_1_3_042_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_130, { "200 : Calculated Track Velocity in Polar Co-ordinates", "asterix.1_1_3_200_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_131, { "070 : Mode-3/A Code in Octal Representation", "asterix.1_1_3_070_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_132, { "090 : Mode-C Code in Binary Representation", "asterix.1_1_3_090_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_133, { "141 : Truncated Time of Day [s]", "asterix.1_1_3_141_track_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_134, { "130 : Radar Plot Characteristics", "asterix.1_1_3_130_track_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_135, { "131 : Received Power [dBm]", "asterix.1_1_3_131_track_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_136, { "120 : Measured Radial Doppler Speed [NM/s]", "asterix.1_1_3_120_track_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_137, { "170 : Track Status", "asterix.1_1_3_170_track_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_138, { "210 : Track Quality", "asterix.1_1_3_210_track_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_139, { "050 : Mode-2 Code in Octal Representation", "asterix.1_1_3_050_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_140, { "080 : Mode-3/A Code Confidence Indicator", "asterix.1_1_3_080_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_141, { "100 : Mode-C Code and Code Confidence Indicator", "asterix.1_1_3_100_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_142, { "060 : Mode-2 Code Confidence Indicator", "asterix.1_1_3_060_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_143, { "030 : Warning/Error Conditions", "asterix.1_1_3_030_track_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_144, { "SP : Special Purpose Field", "asterix.1_1_3_SP_track_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_145, { "150 : Presence of X-Pulse", "asterix.1_1_3_150_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_146, { "010 : Data Source Identifier", "asterix.1_1_4_010_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_147, { "020 : Target Report Descriptor", "asterix.1_1_4_020_plot_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_148, { "040 : Measured Position in Polar Co-ordinates", "asterix.1_1_4_040_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_149, { "070 : Mode-3/A Code in Octal Representation", "asterix.1_1_4_070_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_150, { "090 : Mode-C Code in Binary Representation", "asterix.1_1_4_090_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_151, { "130 : Radar Plot Characteristics", "asterix.1_1_4_130_plot_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_152, { "141 : Truncated Time of Day [s]", "asterix.1_1_4_141_plot_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_153, { "050 : Mode-2 Code in Octal Representation", "asterix.1_1_4_050_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_154, { "120 : Measured Radial Doppler Speed [NM/s]", "asterix.1_1_4_120_plot_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_155, { "131 : Received Power [dBm]", "asterix.1_1_4_131_plot_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_156, { "080 : Mode-3/A Code Confidence Indicator", "asterix.1_1_4_080_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_157, { "100 : Mode-C Code and Code Confidence Indicator", "asterix.1_1_4_100_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_158, { "060 : Mode-2 Code Confidence Indicator", "asterix.1_1_4_060_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_159, { "030 : Warning/Error Conditions", "asterix.1_1_4_030_plot_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_160, { "150 : Presence of X-Pulse", "asterix.1_1_4_150_plot_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_161, { "SP : Special Purpose Field", "asterix.1_1_4_SP_plot_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_162, { "010 : Data Source Identifier", "asterix.1_1_4_010_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_163, { "020 : Target Report Descriptor", "asterix.1_1_4_020_track_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_164, { "161 : Track Plot Number", "asterix.1_1_4_161_track_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_165, { "040 : Measured Position in Polar Co-ordinates", "asterix.1_1_4_040_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_166, { "042 : Calculated Position in Cartesian Co-ordinates", "asterix.1_1_4_042_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_167, { "200 : Calculated Track Velocity in Polar Co-ordinates", "asterix.1_1_4_200_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_168, { "070 : Mode-3/A Code in Octal Representation", "asterix.1_1_4_070_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_169, { "090 : Mode-C Code in Binary Representation", "asterix.1_1_4_090_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_170, { "141 : Truncated Time of Day [s]", "asterix.1_1_4_141_track_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_171, { "130 : Radar Plot Characteristics", "asterix.1_1_4_130_track_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_172, { "131 : Received Power [dBm]", "asterix.1_1_4_131_track_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_173, { "120 : Measured Radial Doppler Speed [NM/s]", "asterix.1_1_4_120_track_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_174, { "170 : Track Status", "asterix.1_1_4_170_track_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_175, { "210 : Track Quality", "asterix.1_1_4_210_track_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_176, { "050 : Mode-2 Code in Octal Representation", "asterix.1_1_4_050_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_177, { "080 : Mode-3/A Code Confidence Indicator", "asterix.1_1_4_080_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_178, { "100 : Mode-C Code and Code Confidence Indicator", "asterix.1_1_4_100_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_179, { "060 : Mode-2 Code Confidence Indicator", "asterix.1_1_4_060_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_180, { "030 : Warning/Error Conditions", "asterix.1_1_4_030_track_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_181, { "SP : Special Purpose Field", "asterix.1_1_4_SP_track_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_182, { "150 : Presence of X-Pulse", "asterix.1_1_4_150_track_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_183, { "010 : Data Source Identifier", "asterix.2_1_0_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_184, { "000 : Message Type", "asterix.2_1_0_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_48), 0x0, NULL, HFILL } },
{ &expand_var_185, { "020 : Sector Number [°]", "asterix.2_1_0_020_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_186, { "030 : Time of Day [s]", "asterix.2_1_0_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_187, { "041 : Antenna Rotation Speed [s]", "asterix.2_1_0_041_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_188, { "050 : Station Configuration Status", "asterix.2_1_0_050_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_189, { "060 : Station Processing Mode", "asterix.2_1_0_060_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_190, { "070 : Plot Count Values", "asterix.2_1_0_070_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_191, { "070 : Plot Count Values", "asterix.2_1_0_070_rep2_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_192, { "A : Aerial Identification", "asterix.2_1_0_070_rep2_group_64", FT_UINT8, BASE_DEC, VALS(value_map_50), 0x0, NULL, HFILL } },
{ &expand_var_193, { "IDENT", "asterix.2_1_0_070_rep2_group_65", FT_UINT8, BASE_DEC, VALS(value_map_51), 0x0, NULL, HFILL } },
{ &expand_var_194, { "COUNTER", "asterix.2_1_0_070_rep2_group_66", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_195, { "100 : Dynamic Window Type 1", "asterix.2_1_0_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_196, { "RS : Rho Start [NM]", "asterix.2_1_0_100_uap_group_69", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_197, { "RE : Rho End [NM]", "asterix.2_1_0_100_uap_group_70", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_198, { "TS : Theta Start [°]", "asterix.2_1_0_100_uap_group_71", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_199, { "TE : Theta End [°]", "asterix.2_1_0_100_uap_group_72", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_200, { "090 : Collimation Error", "asterix.2_1_0_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_201, { "RE : Range Error [NM]", "asterix.2_1_0_090_uap_group_67", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_202, { "AE : Azimuth Error [°]", "asterix.2_1_0_090_uap_group_68", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_203, { "080 : Warning/Error Conditions", "asterix.2_1_0_080_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_204, { "SP : Special Purpose Field", "asterix.2_1_0_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_205, { "010 : Data Source Identifier", "asterix.2_1_1_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_206, { "000 : Message Type", "asterix.2_1_1_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_48), 0x0, NULL, HFILL } },
{ &expand_var_207, { "020 : Sector Number [°]", "asterix.2_1_1_020_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_208, { "030 : Time of Day [s]", "asterix.2_1_1_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_209, { "041 : Antenna Rotation Speed [s]", "asterix.2_1_1_041_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_210, { "050 : Station Configuration Status", "asterix.2_1_1_050_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_211, { "060 : Station Processing Mode", "asterix.2_1_1_060_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_212, { "070 : Plot Count Values", "asterix.2_1_1_070_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_213, { "100 : Dynamic Window Type 1", "asterix.2_1_1_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_214, { "090 : Collimation Error", "asterix.2_1_1_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_215, { "080 : Warning/Error Conditions", "asterix.2_1_1_080_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_216, { "SP : Special Purpose Field", "asterix.2_1_1_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_217, { "010 : Data Source Identifier", "asterix.2_1_2_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_218, { "000 : Message Type", "asterix.2_1_2_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_48), 0x0, NULL, HFILL } },
{ &expand_var_219, { "020 : Sector Number [°]", "asterix.2_1_2_020_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_220, { "030 : Time of Day [s]", "asterix.2_1_2_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_221, { "041 : Antenna Rotation Speed [s]", "asterix.2_1_2_041_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_222, { "050 : Station Configuration Status", "asterix.2_1_2_050_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_223, { "060 : Station Processing Mode", "asterix.2_1_2_060_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_224, { "070 : Plot Count Values", "asterix.2_1_2_070_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_225, { "100 : Dynamic Window Type 1", "asterix.2_1_2_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_226, { "090 : Collimation Error", "asterix.2_1_2_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_227, { "080 : Warning/Error Conditions", "asterix.2_1_2_080_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_228, { "SP : Special Purpose Field", "asterix.2_1_2_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_229, { "010 : Data Source Identifier", "asterix.4_1_12_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_230, { "000 : Message Type", "asterix.4_1_12_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_55), 0x0, NULL, HFILL } },
{ &expand_var_231, { "015 : SDPS Identifier", "asterix.4_1_12_015_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_232, { "015 : SDPS Identifier", "asterix.4_1_12_015_rep3_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_233, { "020 : Time of Message [s]", "asterix.4_1_12_020_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_234, { "040 : Alert Identifier", "asterix.4_1_12_040_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_235, { "045 : Alert Status", "asterix.4_1_12_045_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_236, { "STAT : Status of the Alert", "asterix.4_1_12_045_uap_group_73", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_237, { "060 : Safety Net Function and System Status", "asterix.4_1_12_060_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_238, { "MRVA", "asterix.4_1_12_060_uap_extended_MRVA", FT_UINT8, BASE_DEC, VALS(value_map_56), 0x0, NULL, HFILL } },
{ &expand_var_239, { "RAMLD", "asterix.4_1_12_060_uap_extended_RAMLD", FT_UINT8, BASE_DEC, VALS(value_map_57), 0x0, NULL, HFILL } },
{ &expand_var_240, { "RAMHD", "asterix.4_1_12_060_uap_extended_RAMHD", FT_UINT8, BASE_DEC, VALS(value_map_58), 0x0, NULL, HFILL } },
{ &expand_var_241, { "MSAW", "asterix.4_1_12_060_uap_extended_MSAW", FT_UINT8, BASE_DEC, VALS(value_map_59), 0x0, NULL, HFILL } },
{ &expand_var_242, { "APW", "asterix.4_1_12_060_uap_extended_APW", FT_UINT8, BASE_DEC, VALS(value_map_60), 0x0, NULL, HFILL } },
{ &expand_var_243, { "CLAM", "asterix.4_1_12_060_uap_extended_CLAM", FT_UINT8, BASE_DEC, VALS(value_map_61), 0x0, NULL, HFILL } },
{ &expand_var_244, { "STCA", "asterix.4_1_12_060_uap_extended_STCA", FT_UINT8, BASE_DEC, VALS(value_map_62), 0x0, NULL, HFILL } },
{ &expand_var_245, { "FX", "asterix.4_1_12_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_246, { "APM", "asterix.4_1_12_060_uap_extended_APM", FT_UINT8, BASE_DEC, VALS(value_map_63), 0x0, NULL, HFILL } },
{ &expand_var_247, { "RIMCA", "asterix.4_1_12_060_uap_extended_RIMCA", FT_UINT8, BASE_DEC, VALS(value_map_64), 0x0, NULL, HFILL } },
{ &expand_var_248, { "ACASRA", "asterix.4_1_12_060_uap_extended_ACASRA", FT_UINT8, BASE_DEC, VALS(value_map_65), 0x0, NULL, HFILL } },
{ &expand_var_249, { "NTCA", "asterix.4_1_12_060_uap_extended_NTCA", FT_UINT8, BASE_DEC, VALS(value_map_66), 0x0, NULL, HFILL } },
{ &expand_var_250, { "DG", "asterix.4_1_12_060_uap_extended_DG", FT_UINT8, BASE_DEC, VALS(value_map_67), 0x0, NULL, HFILL } },
{ &expand_var_251, { "OF", "asterix.4_1_12_060_uap_extended_OF", FT_UINT8, BASE_DEC, VALS(value_map_68), 0x0, NULL, HFILL } },
{ &expand_var_252, { "OL", "asterix.4_1_12_060_uap_extended_OL", FT_UINT8, BASE_DEC, VALS(value_map_69), 0x0, NULL, HFILL } },
{ &expand_var_253, { "FX", "asterix.4_1_12_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_254, { "AIW", "asterix.4_1_12_060_uap_extended_AIW", FT_UINT8, BASE_DEC, VALS(value_map_70), 0x0, NULL, HFILL } },
{ &expand_var_255, { "PAIW", "asterix.4_1_12_060_uap_extended_PAIW", FT_UINT8, BASE_DEC, VALS(value_map_71), 0x0, NULL, HFILL } },
{ &expand_var_256, { "OCAT", "asterix.4_1_12_060_uap_extended_OCAT", FT_UINT8, BASE_DEC, VALS(value_map_72), 0x0, NULL, HFILL } },
{ &expand_var_257, { "SAM", "asterix.4_1_12_060_uap_extended_SAM", FT_UINT8, BASE_DEC, VALS(value_map_73), 0x0, NULL, HFILL } },
{ &expand_var_258, { "VCD", "asterix.4_1_12_060_uap_extended_VCD", FT_UINT8, BASE_DEC, VALS(value_map_74), 0x0, NULL, HFILL } },
{ &expand_var_259, { "CHAM", "asterix.4_1_12_060_uap_extended_CHAM", FT_UINT8, BASE_DEC, VALS(value_map_75), 0x0, NULL, HFILL } },
{ &expand_var_260, { "DSAM", "asterix.4_1_12_060_uap_extended_DSAM", FT_UINT8, BASE_DEC, VALS(value_map_76), 0x0, NULL, HFILL } },
{ &expand_var_261, { "FX", "asterix.4_1_12_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_262, { "DBPSMARR", "asterix.4_1_12_060_uap_extended_DBPSMARR", FT_UINT8, BASE_DEC, VALS(value_map_77), 0x0, NULL, HFILL } },
{ &expand_var_263, { "DBPSMDEP", "asterix.4_1_12_060_uap_extended_DBPSMDEP", FT_UINT8, BASE_DEC, VALS(value_map_78), 0x0, NULL, HFILL } },
{ &expand_var_264, { "DBPSMTL", "asterix.4_1_12_060_uap_extended_DBPSMTL", FT_UINT8, BASE_DEC, VALS(value_map_79), 0x0, NULL, HFILL } },
{ &expand_var_265, { "VRAMCRM", "asterix.4_1_12_060_uap_extended_VRAMCRM", FT_UINT8, BASE_DEC, VALS(value_map_80), 0x0, NULL, HFILL } },
{ &expand_var_266, { "VRAMVTM", "asterix.4_1_12_060_uap_extended_VRAMVTM", FT_UINT8, BASE_DEC, VALS(value_map_81), 0x0, NULL, HFILL } },
{ &expand_var_267, { "VRAMVRM", "asterix.4_1_12_060_uap_extended_VRAMVRM", FT_UINT8, BASE_DEC, VALS(value_map_82), 0x0, NULL, HFILL } },
{ &expand_var_268, { "HAMHD", "asterix.4_1_12_060_uap_extended_HAMHD", FT_UINT8, BASE_DEC, VALS(value_map_83), 0x0, NULL, HFILL } },
{ &expand_var_269, { "FX", "asterix.4_1_12_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_270, { "HAMRD", "asterix.4_1_12_060_uap_extended_HAMRD", FT_UINT8, BASE_DEC, VALS(value_map_84), 0x0, NULL, HFILL } },
{ &expand_var_271, { "HAMVD", "asterix.4_1_12_060_uap_extended_HAMVD", FT_UINT8, BASE_DEC, VALS(value_map_85), 0x0, NULL, HFILL } },
{ &expand_var_272, { "HVI", "asterix.4_1_12_060_uap_extended_HVI", FT_UINT8, BASE_DEC, VALS(value_map_86), 0x0, NULL, HFILL } },
{ &expand_var_273, { "LTW", "asterix.4_1_12_060_uap_extended_LTW", FT_UINT8, BASE_DEC, VALS(value_map_87), 0x0, NULL, HFILL } },
{ &expand_var_274, { "VPM", "asterix.4_1_12_060_uap_extended_VPM", FT_UINT8, BASE_DEC, VALS(value_map_88), 0x0, NULL, HFILL } },
{ &expand_var_275, { "TTA", "asterix.4_1_12_060_uap_extended_TTA", FT_UINT8, BASE_DEC, VALS(value_map_89), 0x0, NULL, HFILL } },
{ &expand_var_276, { "CRA", "asterix.4_1_12_060_uap_extended_CRA", FT_UINT8, BASE_DEC, VALS(value_map_90), 0x0, NULL, HFILL } },
{ &expand_var_277, { "FX", "asterix.4_1_12_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_278, { "ASM", "asterix.4_1_12_060_uap_extended_ASM", FT_UINT8, BASE_DEC, VALS(value_map_91), 0x0, NULL, HFILL } },
{ &expand_var_279, { "IAVM", "asterix.4_1_12_060_uap_extended_IAVM", FT_UINT8, BASE_DEC, VALS(value_map_92), 0x0, NULL, HFILL } },
{ &expand_var_280, { "FTD", "asterix.4_1_12_060_uap_extended_FTD", FT_UINT8, BASE_DEC, VALS(value_map_93), 0x0, NULL, HFILL } },
{ &expand_var_281, { "ITD", "asterix.4_1_12_060_uap_extended_ITD", FT_UINT8, BASE_DEC, VALS(value_map_94), 0x0, NULL, HFILL } },
{ &expand_var_282, { "IIA", "asterix.4_1_12_060_uap_extended_IIA", FT_UINT8, BASE_DEC, VALS(value_map_95), 0x0, NULL, HFILL } },
{ &expand_var_283, { "SQW", "asterix.4_1_12_060_uap_extended_SQW", FT_UINT8, BASE_DEC, VALS(value_map_96), 0x0, NULL, HFILL } },
{ &expand_var_284, { "CUW", "asterix.4_1_12_060_uap_extended_CUW", FT_UINT8, BASE_DEC, VALS(value_map_97), 0x0, NULL, HFILL } },
{ &expand_var_285, { "FX", "asterix.4_1_12_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_286, { "CATC", "asterix.4_1_12_060_uap_extended_CATC", FT_UINT8, BASE_DEC, VALS(value_map_98), 0x0, NULL, HFILL } },
{ &expand_var_287, { "NOCLR", "asterix.4_1_12_060_uap_extended_NOCLR", FT_UINT8, BASE_DEC, VALS(value_map_99), 0x0, NULL, HFILL } },
{ &expand_var_288, { "NOMOV", "asterix.4_1_12_060_uap_extended_NOMOV", FT_UINT8, BASE_DEC, VALS(value_map_100), 0x0, NULL, HFILL } },
{ &expand_var_289, { "NOH", "asterix.4_1_12_060_uap_extended_NOH", FT_UINT8, BASE_DEC, VALS(value_map_101), 0x0, NULL, HFILL } },
{ &expand_var_290, { "WRTY", "asterix.4_1_12_060_uap_extended_WRTY", FT_UINT8, BASE_DEC, VALS(value_map_102), 0x0, NULL, HFILL } },
{ &expand_var_291, { "STOCC", "asterix.4_1_12_060_uap_extended_STOCC", FT_UINT8, BASE_DEC, VALS(value_map_103), 0x0, NULL, HFILL } },
{ &expand_var_292, { "ONGOING", "asterix.4_1_12_060_uap_extended_ONGOING", FT_UINT8, BASE_DEC, VALS(value_map_104), 0x0, NULL, HFILL } },
{ &expand_var_293, { "FX", "asterix.4_1_12_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_294, { "030 : Track Number 1", "asterix.4_1_12_030_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_295, { "170 : Aircraft Identification and Characteristics 1", "asterix.4_1_12_170_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_296, { "AI1 : Aircraft Identifier (in 7 Characters) of Aircraft 1 Involved in the Conflict", "asterix.4_1_12_170_206_compound_206_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_297, { "M31 : Mode 3/A Code Aircraft 1", "asterix.4_1_12_170_208_compound_208_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_298, { "MODE3A : Mode-3/A Code (Converted Into Octal Representation) of Aircraft 1 Involved in the Conflict", "asterix.4_1_12_170_208_compound_208_group_148", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_299, { "CPW : Predicted Conflict Position Target 1 in WGS-84 Coordinates", "asterix.4_1_12_170_212_compound_212_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_300, { "LAT : Latitude in WGS-84 in Two’s Complement [°]", "asterix.4_1_12_170_212_compound_212_group_149", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_301, { "LON : Longitude in WGS-84 in Two’s Complement [°]", "asterix.4_1_12_170_212_compound_212_group_150", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_302, { "ALT : Altitude of Predicted Conflict [ft]", "asterix.4_1_12_170_212_compound_212_group_151", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_303, { "CPC : Predicted Conflict Position for the Aircraft 1 Involved in the Conflict", "asterix.4_1_12_170_216_compound_216_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_304, { "X : Starting X-position of the Conflict [m]", "asterix.4_1_12_170_216_compound_216_group_152", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_305, { "Y : Starting Y-position of the Conflict [m]", "asterix.4_1_12_170_216_compound_216_group_153", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_306, { "Z : Starting Z-position of the Conflict [ft]", "asterix.4_1_12_170_216_compound_216_group_154", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_307, { "TT1 : Time to Runway Threshold for First Approaching Aircraft in a RIMCA [s]", "asterix.4_1_12_170_217_compound_217_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_308, { "DT1 : Distance to Runway Threshold for Aircraft 1 Involved in a RIMCA [m]", "asterix.4_1_12_170_218_compound_218_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_309, { "AC1 : Characteristics of Aircraft 1 Involved in the Conflict", "asterix.4_1_12_170_226_compound_226_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_310, { "GATOAT(Identification of Conflict Categories Definition Table)", "asterix.4_1_12_170_226_compound_226_extended_GATOAT", FT_UINT8, BASE_DEC, VALS(value_map_135), 0x0, NULL, HFILL } },
{ &expand_var_311, { "FR1FR2(Flight Rules)", "asterix.4_1_12_170_226_compound_226_extended_FR1FR2", FT_UINT8, BASE_DEC, VALS(value_map_136), 0x0, NULL, HFILL } },
{ &expand_var_312, { "RVSM", "asterix.4_1_12_170_226_compound_226_extended_RVSM", FT_UINT8, BASE_DEC, VALS(value_map_137), 0x0, NULL, HFILL } },
{ &expand_var_313, { "HPR", "asterix.4_1_12_170_226_compound_226_extended_HPR", FT_UINT8, BASE_DEC, VALS(value_map_138), 0x0, NULL, HFILL } },
{ &expand_var_314, { "FX", "asterix.4_1_12_170_226_compound_226_extended_AC1_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_315, { "CDM(Climbing/Descending Mode)", "asterix.4_1_12_170_226_compound_226_extended_CDM", FT_UINT8, BASE_DEC, VALS(value_map_139), 0x0, NULL, HFILL } },
{ &expand_var_316, { "PRI", "asterix.4_1_12_170_226_compound_226_extended_PRI", FT_UINT8, BASE_DEC, VALS(value_map_140), 0x0, NULL, HFILL } },
{ &expand_var_317, { "GV", "asterix.4_1_12_170_226_compound_226_extended_GV", FT_UINT8, BASE_DEC, VALS(value_map_141), 0x0, NULL, HFILL } },
{ &expand_var_318, { "FX", "asterix.4_1_12_170_226_compound_226_extended_AC1_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_319, { "MS1 : Aircraft Identification Downloaded from Aircraft 1 Involved in the Conflict If Equipped with a Mode-S Transponder", "asterix.4_1_12_170_227_compound_227_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_320, { "FP1 : Number of the Flight Plan Correlated to Aircraft 1 Involved in the Conflict", "asterix.4_1_12_170_229_compound_229_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_321, { "NBR []", "asterix.4_1_12_170_229_compound_229_group_164", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_322, { "CF1 : Cleared Flight Level for Aircraft 1 Involved in the Conflict [FL]", "asterix.4_1_12_170_230_compound_230_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_323, { "120 : Conflict Characteristics", "asterix.4_1_12_120_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_324, { "CN : Conflict Nature", "asterix.4_1_12_120_198_compound_198_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_325, { "MAS(Conflict Location in Military Airspace)", "asterix.4_1_12_120_198_compound_198_extended_MAS", FT_UINT8, BASE_DEC, VALS(value_map_112), 0x0, NULL, HFILL } },
{ &expand_var_326, { "CAS(Conflict Location in Civil Airspace)", "asterix.4_1_12_120_198_compound_198_extended_CAS", FT_UINT8, BASE_DEC, VALS(value_map_113), 0x0, NULL, HFILL } },
{ &expand_var_327, { "FLD(Fast Lateral Divergence)", "asterix.4_1_12_120_198_compound_198_extended_FLD", FT_UINT8, BASE_DEC, VALS(value_map_114), 0x0, NULL, HFILL } },
{ &expand_var_328, { "FVD(Fast Vertical Divergence)", "asterix.4_1_12_120_198_compound_198_extended_FVD", FT_UINT8, BASE_DEC, VALS(value_map_115), 0x0, NULL, HFILL } },
{ &expand_var_329, { "TYPE(Type of Separation Infringement)", "asterix.4_1_12_120_198_compound_198_extended_TYPE", FT_UINT8, BASE_DEC, VALS(value_map_116), 0x0, NULL, HFILL } },
{ &expand_var_330, { "CROSS(Crossing Test)", "asterix.4_1_12_120_198_compound_198_extended_CROSS", FT_UINT8, BASE_DEC, VALS(value_map_117), 0x0, NULL, HFILL } },
{ &expand_var_331, { "DIV(Divergence Test)", "asterix.4_1_12_120_198_compound_198_extended_DIV", FT_UINT8, BASE_DEC, VALS(value_map_118), 0x0, NULL, HFILL } },
{ &expand_var_332, { "FX", "asterix.4_1_12_120_198_compound_198_extended_CN_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_333, { "RRC(Runway/Runway Crossing in RIMCAS)", "asterix.4_1_12_120_198_compound_198_extended_RRC", FT_UINT8, BASE_DEC, VALS(value_map_119), 0x0, NULL, HFILL } },
{ &expand_var_334, { "RTC(Runway/Taxiway Crossing in RIMCAS)", "asterix.4_1_12_120_198_compound_198_extended_RTC", FT_UINT8, BASE_DEC, VALS(value_map_120), 0x0, NULL, HFILL } },
{ &expand_var_335, { "MRVA", "asterix.4_1_12_120_198_compound_198_extended_MRVA", FT_UINT8, BASE_DEC, VALS(value_map_121), 0x0, NULL, HFILL } },
{ &expand_var_336, { "VRAMCRM", "asterix.4_1_12_120_198_compound_198_extended_VRAMCRM", FT_UINT8, BASE_DEC, VALS(value_map_122), 0x0, NULL, HFILL } },
{ &expand_var_337, { "VRAMVRM", "asterix.4_1_12_120_198_compound_198_extended_VRAMVRM", FT_UINT8, BASE_DEC, VALS(value_map_123), 0x0, NULL, HFILL } },
{ &expand_var_338, { "VRAMVTM", "asterix.4_1_12_120_198_compound_198_extended_VRAMVTM", FT_UINT8, BASE_DEC, VALS(value_map_124), 0x0, NULL, HFILL } },
{ &expand_var_339, { "HAMHD", "asterix.4_1_12_120_198_compound_198_extended_HAMHD", FT_UINT8, BASE_DEC, VALS(value_map_125), 0x0, NULL, HFILL } },
{ &expand_var_340, { "FX", "asterix.4_1_12_120_198_compound_198_extended_CN_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_341, { "HAMRD", "asterix.4_1_12_120_198_compound_198_extended_HAMRD", FT_UINT8, BASE_DEC, VALS(value_map_126), 0x0, NULL, HFILL } },
{ &expand_var_342, { "HAMVD", "asterix.4_1_12_120_198_compound_198_extended_HAMVD", FT_UINT8, BASE_DEC, VALS(value_map_127), 0x0, NULL, HFILL } },
{ &expand_var_343, { "DBPSMARR", "asterix.4_1_12_120_198_compound_198_extended_DBPSMARR", FT_UINT8, BASE_DEC, VALS(value_map_128), 0x0, NULL, HFILL } },
{ &expand_var_344, { "DBPSMDEP", "asterix.4_1_12_120_198_compound_198_extended_DBPSMDEP", FT_UINT8, BASE_DEC, VALS(value_map_129), 0x0, NULL, HFILL } },
{ &expand_var_345, { "DBPSMTL", "asterix.4_1_12_120_198_compound_198_extended_DBPSMTL", FT_UINT8, BASE_DEC, VALS(value_map_130), 0x0, NULL, HFILL } },
{ &expand_var_346, { "AIW", "asterix.4_1_12_120_198_compound_198_extended_AIW", FT_UINT8, BASE_DEC, VALS(value_map_131), 0x0, NULL, HFILL } },
{ &expand_var_347, { "FX", "asterix.4_1_12_120_198_compound_198_extended_CN_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_348, { "CC : Conflict Classification", "asterix.4_1_12_120_202_compound_202_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_349, { "TID : Identification of Conflict Categories Definition Table", "asterix.4_1_12_120_202_compound_202_group_145", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_350, { "CPC : Conflict Properties Class", "asterix.4_1_12_120_202_compound_202_group_146", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_351, { "CS : Conflict Severity", "asterix.4_1_12_120_202_compound_202_group_147", FT_UINT8, BASE_DEC, VALS(value_map_132), 0x0, NULL, HFILL } },
{ &expand_var_352, { "CP : Conflict Probability [%]", "asterix.4_1_12_120_203_compound_203_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_353, { "CD : Conflict Duration [s]", "asterix.4_1_12_120_204_compound_204_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_354, { "070 : Conflict Timing and Separation", "asterix.4_1_12_070_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_355, { "TC : Time to Conflict [s]", "asterix.4_1_12_070_158_compound_158_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_356, { "TCA : Time to Closest Approach [s]", "asterix.4_1_12_070_159_compound_159_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_357, { "CHS : Current Horizontal Separation [m]", "asterix.4_1_12_070_160_compound_160_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_358, { "MHS : Estimated Minimum Horizontal Separation [m]", "asterix.4_1_12_070_161_compound_161_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_359, { "CVS : Current Vertical Separation [ft]", "asterix.4_1_12_070_162_compound_162_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_360, { "MVS : Estimated Minimum Vertical Separation [ft]", "asterix.4_1_12_070_163_compound_163_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_361, { "076 : Vertical Deviation [ft]", "asterix.4_1_12_076_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_362, { "074 : Longitudinal Deviation [m]", "asterix.4_1_12_074_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_363, { "075 : Transversal Distance Deviation [m]", "asterix.4_1_12_075_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_364, { "100 : Area Definition", "asterix.4_1_12_100_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_365, { "AN : Area Name", "asterix.4_1_12_100_168_compound_168_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_366, { "CAN : Crossing Area Name", "asterix.4_1_12_100_169_compound_169_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_367, { "RT1 : Runway/Taxiway Designator 1", "asterix.4_1_12_100_170_compound_170_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_368, { "RT2 : Runway/Taxiway Designator 2", "asterix.4_1_12_100_171_compound_171_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_369, { "SB : Stop Bar Designator", "asterix.4_1_12_100_172_compound_172_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_370, { "G : Gate Designator", "asterix.4_1_12_100_173_compound_173_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_371, { "035 : Track Number 2", "asterix.4_1_12_035_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_372, { "171 : Aircraft Identification and Characteristics 2", "asterix.4_1_12_171_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_373, { "AI2 : Aircraft Identifier (in 7 Characters) of Aircraft 2 Involved in the Conflict", "asterix.4_1_12_171_232_compound_232_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_374, { "M32 : Mode 3/A Code Aircraft 2", "asterix.4_1_12_171_234_compound_234_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_375, { "MODE3A : Mode-3/A Code (Converted Into Octal Representation) of Aircraft 2 Involved in the Conflict", "asterix.4_1_12_171_234_compound_234_group_165", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_376, { "CPW : Predicted Conflict Position Target 2 in WGS-84 Coordinates", "asterix.4_1_12_171_235_compound_235_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_377, { "CPL : Predicted Conflict Position for the Aircraft 2 Involved in the Conflict", "asterix.4_1_12_171_236_compound_236_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_378, { "TT2 : Time to Runway Threshold for Second Approaching Aircraft in a RIMCA [s]", "asterix.4_1_12_171_237_compound_237_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_379, { "DT2 : Distance to Runway Threshold for Aircraft 2 Involved in a RIMCA [m]", "asterix.4_1_12_171_238_compound_238_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_380, { "AC2 : Characteristics of Aircraft 2 Involved in the Conflict", "asterix.4_1_12_171_239_compound_239_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_381, { "MS2 : Aircraft Identification Downloaded From Aircraft 2 Involved in the Conflict If Eequipped With a Mode-S Transponder", "asterix.4_1_12_171_240_compound_240_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_382, { "FP2 : Number of the Flight Plan Correlated to Aircraft 2 Involved in the Conflict", "asterix.4_1_12_171_241_compound_241_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_383, { "CF2 : Cleared Flight Level for Aircraft 2 Involved in the Conflict [FL]", "asterix.4_1_12_171_242_compound_242_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_384, { "110 : FDPS Sector Control Identification", "asterix.4_1_12_110_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_385, { "110 : FDPS Sector Control Identification", "asterix.4_1_12_110_rep4_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_386, { "CEN", "asterix.4_1_12_110_rep4_group_123", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_387, { "POS", "asterix.4_1_12_110_rep4_group_124", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_388, { "RE : Reserved Expansion Field", "asterix.4_1_12_19_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_389, { "SP : Special Purpose Field", "asterix.4_1_12_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_390, { "010 : Data Source Identifier", "asterix.4_1_13_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_391, { "000 : Message Type", "asterix.4_1_13_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_144), 0x0, NULL, HFILL } },
{ &expand_var_392, { "015 : SDPS Identifier", "asterix.4_1_13_015_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_393, { "020 : Time of Message [s]", "asterix.4_1_13_020_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_394, { "040 : Alert Identifier", "asterix.4_1_13_040_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_395, { "045 : Area and Alert Status", "asterix.4_1_13_045_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_396, { "AREA : Area Status", "asterix.4_1_13_045_uap_group_168", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_397, { "EP : Element Populated Bit", "asterix.4_1_13_045_uap_group_166", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_398, { "VAL : Area Status Value", "asterix.4_1_13_045_uap_group_167", FT_UINT8, BASE_DEC, VALS(value_map_146), 0x0, NULL, HFILL } },
{ &expand_var_399, { "STAT : Status of the Alert", "asterix.4_1_13_045_uap_group_73", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_400, { "060 : Safety Net Function and System Status", "asterix.4_1_13_060_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_401, { "MRVA", "asterix.4_1_13_060_uap_extended_MRVA", FT_UINT8, BASE_DEC, VALS(value_map_56), 0x0, NULL, HFILL } },
{ &expand_var_402, { "RAMLD", "asterix.4_1_13_060_uap_extended_RAMLD", FT_UINT8, BASE_DEC, VALS(value_map_57), 0x0, NULL, HFILL } },
{ &expand_var_403, { "RAMHD", "asterix.4_1_13_060_uap_extended_RAMHD", FT_UINT8, BASE_DEC, VALS(value_map_58), 0x0, NULL, HFILL } },
{ &expand_var_404, { "MSAW", "asterix.4_1_13_060_uap_extended_MSAW", FT_UINT8, BASE_DEC, VALS(value_map_59), 0x0, NULL, HFILL } },
{ &expand_var_405, { "APW", "asterix.4_1_13_060_uap_extended_APW", FT_UINT8, BASE_DEC, VALS(value_map_60), 0x0, NULL, HFILL } },
{ &expand_var_406, { "CLAM", "asterix.4_1_13_060_uap_extended_CLAM", FT_UINT8, BASE_DEC, VALS(value_map_61), 0x0, NULL, HFILL } },
{ &expand_var_407, { "STCA", "asterix.4_1_13_060_uap_extended_STCA", FT_UINT8, BASE_DEC, VALS(value_map_62), 0x0, NULL, HFILL } },
{ &expand_var_408, { "FX", "asterix.4_1_13_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_409, { "APM", "asterix.4_1_13_060_uap_extended_APM", FT_UINT8, BASE_DEC, VALS(value_map_63), 0x0, NULL, HFILL } },
{ &expand_var_410, { "RIMCA", "asterix.4_1_13_060_uap_extended_RIMCA", FT_UINT8, BASE_DEC, VALS(value_map_64), 0x0, NULL, HFILL } },
{ &expand_var_411, { "ACASRA", "asterix.4_1_13_060_uap_extended_ACASRA", FT_UINT8, BASE_DEC, VALS(value_map_65), 0x0, NULL, HFILL } },
{ &expand_var_412, { "NTCA", "asterix.4_1_13_060_uap_extended_NTCA", FT_UINT8, BASE_DEC, VALS(value_map_66), 0x0, NULL, HFILL } },
{ &expand_var_413, { "DG", "asterix.4_1_13_060_uap_extended_DG", FT_UINT8, BASE_DEC, VALS(value_map_67), 0x0, NULL, HFILL } },
{ &expand_var_414, { "OF", "asterix.4_1_13_060_uap_extended_OF", FT_UINT8, BASE_DEC, VALS(value_map_68), 0x0, NULL, HFILL } },
{ &expand_var_415, { "OL", "asterix.4_1_13_060_uap_extended_OL", FT_UINT8, BASE_DEC, VALS(value_map_69), 0x0, NULL, HFILL } },
{ &expand_var_416, { "FX", "asterix.4_1_13_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_417, { "AIW", "asterix.4_1_13_060_uap_extended_AIW", FT_UINT8, BASE_DEC, VALS(value_map_70), 0x0, NULL, HFILL } },
{ &expand_var_418, { "PAIW", "asterix.4_1_13_060_uap_extended_PAIW", FT_UINT8, BASE_DEC, VALS(value_map_71), 0x0, NULL, HFILL } },
{ &expand_var_419, { "OCAT", "asterix.4_1_13_060_uap_extended_OCAT", FT_UINT8, BASE_DEC, VALS(value_map_72), 0x0, NULL, HFILL } },
{ &expand_var_420, { "SAM", "asterix.4_1_13_060_uap_extended_SAM", FT_UINT8, BASE_DEC, VALS(value_map_73), 0x0, NULL, HFILL } },
{ &expand_var_421, { "VCD", "asterix.4_1_13_060_uap_extended_VCD", FT_UINT8, BASE_DEC, VALS(value_map_74), 0x0, NULL, HFILL } },
{ &expand_var_422, { "CHAM", "asterix.4_1_13_060_uap_extended_CHAM", FT_UINT8, BASE_DEC, VALS(value_map_75), 0x0, NULL, HFILL } },
{ &expand_var_423, { "DSAM", "asterix.4_1_13_060_uap_extended_DSAM", FT_UINT8, BASE_DEC, VALS(value_map_76), 0x0, NULL, HFILL } },
{ &expand_var_424, { "FX", "asterix.4_1_13_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_425, { "DBPSMARR", "asterix.4_1_13_060_uap_extended_DBPSMARR", FT_UINT8, BASE_DEC, VALS(value_map_77), 0x0, NULL, HFILL } },
{ &expand_var_426, { "DBPSMDEP", "asterix.4_1_13_060_uap_extended_DBPSMDEP", FT_UINT8, BASE_DEC, VALS(value_map_78), 0x0, NULL, HFILL } },
{ &expand_var_427, { "DBPSMTL", "asterix.4_1_13_060_uap_extended_DBPSMTL", FT_UINT8, BASE_DEC, VALS(value_map_79), 0x0, NULL, HFILL } },
{ &expand_var_428, { "VRAMCRM", "asterix.4_1_13_060_uap_extended_VRAMCRM", FT_UINT8, BASE_DEC, VALS(value_map_80), 0x0, NULL, HFILL } },
{ &expand_var_429, { "VRAMVTM", "asterix.4_1_13_060_uap_extended_VRAMVTM", FT_UINT8, BASE_DEC, VALS(value_map_81), 0x0, NULL, HFILL } },
{ &expand_var_430, { "VRAMVRM", "asterix.4_1_13_060_uap_extended_VRAMVRM", FT_UINT8, BASE_DEC, VALS(value_map_82), 0x0, NULL, HFILL } },
{ &expand_var_431, { "HAMHD", "asterix.4_1_13_060_uap_extended_HAMHD", FT_UINT8, BASE_DEC, VALS(value_map_83), 0x0, NULL, HFILL } },
{ &expand_var_432, { "FX", "asterix.4_1_13_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_433, { "HAMRD", "asterix.4_1_13_060_uap_extended_HAMRD", FT_UINT8, BASE_DEC, VALS(value_map_84), 0x0, NULL, HFILL } },
{ &expand_var_434, { "HAMVD", "asterix.4_1_13_060_uap_extended_HAMVD", FT_UINT8, BASE_DEC, VALS(value_map_85), 0x0, NULL, HFILL } },
{ &expand_var_435, { "HVI", "asterix.4_1_13_060_uap_extended_HVI", FT_UINT8, BASE_DEC, VALS(value_map_86), 0x0, NULL, HFILL } },
{ &expand_var_436, { "LTW", "asterix.4_1_13_060_uap_extended_LTW", FT_UINT8, BASE_DEC, VALS(value_map_87), 0x0, NULL, HFILL } },
{ &expand_var_437, { "VPM", "asterix.4_1_13_060_uap_extended_VPM", FT_UINT8, BASE_DEC, VALS(value_map_88), 0x0, NULL, HFILL } },
{ &expand_var_438, { "TTA", "asterix.4_1_13_060_uap_extended_TTA", FT_UINT8, BASE_DEC, VALS(value_map_89), 0x0, NULL, HFILL } },
{ &expand_var_439, { "CRA", "asterix.4_1_13_060_uap_extended_CRA", FT_UINT8, BASE_DEC, VALS(value_map_90), 0x0, NULL, HFILL } },
{ &expand_var_440, { "FX", "asterix.4_1_13_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_441, { "ASM", "asterix.4_1_13_060_uap_extended_ASM", FT_UINT8, BASE_DEC, VALS(value_map_91), 0x0, NULL, HFILL } },
{ &expand_var_442, { "IAVM", "asterix.4_1_13_060_uap_extended_IAVM", FT_UINT8, BASE_DEC, VALS(value_map_92), 0x0, NULL, HFILL } },
{ &expand_var_443, { "FTD", "asterix.4_1_13_060_uap_extended_FTD", FT_UINT8, BASE_DEC, VALS(value_map_93), 0x0, NULL, HFILL } },
{ &expand_var_444, { "ITD", "asterix.4_1_13_060_uap_extended_ITD", FT_UINT8, BASE_DEC, VALS(value_map_94), 0x0, NULL, HFILL } },
{ &expand_var_445, { "IIA", "asterix.4_1_13_060_uap_extended_IIA", FT_UINT8, BASE_DEC, VALS(value_map_95), 0x0, NULL, HFILL } },
{ &expand_var_446, { "SQW", "asterix.4_1_13_060_uap_extended_SQW", FT_UINT8, BASE_DEC, VALS(value_map_96), 0x0, NULL, HFILL } },
{ &expand_var_447, { "CUW", "asterix.4_1_13_060_uap_extended_CUW", FT_UINT8, BASE_DEC, VALS(value_map_97), 0x0, NULL, HFILL } },
{ &expand_var_448, { "FX", "asterix.4_1_13_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_449, { "CATC", "asterix.4_1_13_060_uap_extended_CATC", FT_UINT8, BASE_DEC, VALS(value_map_98), 0x0, NULL, HFILL } },
{ &expand_var_450, { "NOCLR", "asterix.4_1_13_060_uap_extended_NOCLR", FT_UINT8, BASE_DEC, VALS(value_map_99), 0x0, NULL, HFILL } },
{ &expand_var_451, { "NOMOV", "asterix.4_1_13_060_uap_extended_NOMOV", FT_UINT8, BASE_DEC, VALS(value_map_100), 0x0, NULL, HFILL } },
{ &expand_var_452, { "NOH", "asterix.4_1_13_060_uap_extended_NOH", FT_UINT8, BASE_DEC, VALS(value_map_101), 0x0, NULL, HFILL } },
{ &expand_var_453, { "WRTY", "asterix.4_1_13_060_uap_extended_WRTY", FT_UINT8, BASE_DEC, VALS(value_map_102), 0x0, NULL, HFILL } },
{ &expand_var_454, { "STOCC", "asterix.4_1_13_060_uap_extended_STOCC", FT_UINT8, BASE_DEC, VALS(value_map_103), 0x0, NULL, HFILL } },
{ &expand_var_455, { "ONGOING", "asterix.4_1_13_060_uap_extended_ONGOING", FT_UINT8, BASE_DEC, VALS(value_map_104), 0x0, NULL, HFILL } },
{ &expand_var_456, { "FX", "asterix.4_1_13_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_457, { "NTZ", "asterix.4_1_13_060_uap_extended_NTZ", FT_UINT8, BASE_DEC, VALS(value_map_147), 0x0, NULL, HFILL } },
{ &expand_var_458, { "FX", "asterix.4_1_13_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_459, { "030 : Track Number 1", "asterix.4_1_13_030_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_460, { "170 : Aircraft Identification and Characteristics 1", "asterix.4_1_13_170_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_461, { "120 : Conflict Characteristics", "asterix.4_1_13_120_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_462, { "070 : Conflict Timing and Separation", "asterix.4_1_13_070_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_463, { "076 : Vertical Deviation [ft]", "asterix.4_1_13_076_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_464, { "074 : Longitudinal Deviation [m]", "asterix.4_1_13_074_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_465, { "075 : Transversal Distance Deviation [m]", "asterix.4_1_13_075_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_466, { "100 : Area Definition", "asterix.4_1_13_100_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_467, { "035 : Track Number 2", "asterix.4_1_13_035_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_468, { "171 : Aircraft Identification and Characteristics 2", "asterix.4_1_13_171_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_469, { "110 : FDPS Sector Control Identification", "asterix.4_1_13_110_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_470, { "RE : Reserved Expansion Field", "asterix.4_1_13_19_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_471, { "SP : Special Purpose Field", "asterix.4_1_13_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_472, { "010 : Data Source Identifier", "asterix.8_1_2_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_473, { "000 : Message Type", "asterix.8_1_2_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_148), 0x0, NULL, HFILL } },
{ &expand_var_474, { "020 : Vector Qualifier", "asterix.8_1_2_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_475, { "ORG", "asterix.8_1_2_020_uap_extended_ORG", FT_UINT8, BASE_DEC, VALS(value_map_149), 0x0, NULL, HFILL } },
{ &expand_var_476, { "I(Intensity Level)", "asterix.8_1_2_020_uap_extended_I", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_477, { "S(Shading Orientation with Respect to North)", "asterix.8_1_2_020_uap_extended_S", FT_UINT8, BASE_DEC, VALS(value_map_150), 0x0, NULL, HFILL } },
{ &expand_var_478, { "FX", "asterix.8_1_2_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_479, { "TST", "asterix.8_1_2_020_uap_extended_TST", FT_UINT8, BASE_DEC, VALS(value_map_151), 0x0, NULL, HFILL } },
{ &expand_var_480, { "ER", "asterix.8_1_2_020_uap_extended_ER", FT_UINT8, BASE_DEC, VALS(value_map_152), 0x0, NULL, HFILL } },
{ &expand_var_481, { "FX", "asterix.8_1_2_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_482, { "036 : Sequence of Cartesian Vectors in SPF Notation", "asterix.8_1_2_036_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_483, { "036 : Sequence of Cartesian Vectors in SPF Notation", "asterix.8_1_2_036_rep5_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_484, { "X : X-Component", "asterix.8_1_2_036_rep5_group_178", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_485, { "Y : Y-Component", "asterix.8_1_2_036_rep5_group_179", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_486, { "LENGTH : Length", "asterix.8_1_2_036_rep5_group_180", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_487, { "034 : Sequence of Polar Vectors in SPF Notation", "asterix.8_1_2_034_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_488, { "034 : Sequence of Polar Vectors in SPF Notation", "asterix.8_1_2_034_rep6_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_489, { "STR : Start Range", "asterix.8_1_2_034_rep6_group_175", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_490, { "ENDR : End Range", "asterix.8_1_2_034_rep6_group_176", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_491, { "AZ : Azimuth [°]", "asterix.8_1_2_034_rep6_group_177", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_492, { "040 : Contour Identifier", "asterix.8_1_2_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_493, { "ORG", "asterix.8_1_2_040_uap_group_170", FT_UINT8, BASE_DEC, VALS(value_map_149), 0x0, NULL, HFILL } },
{ &expand_var_494, { "I : Intensity Level", "asterix.8_1_2_040_uap_group_185", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_495, { "FSTLST", "asterix.8_1_2_040_uap_group_186", FT_UINT8, BASE_DEC, VALS(value_map_154), 0x0, NULL, HFILL } },
{ &expand_var_496, { "CSN : Contour Serial Number", "asterix.8_1_2_040_uap_group_187", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_497, { "050 : Sequence of Contour Points in SPF Notation", "asterix.8_1_2_050_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_498, { "050 : Sequence of Contour Points in SPF Notation", "asterix.8_1_2_050_rep7_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_499, { "X1", "asterix.8_1_2_050_rep7_group_188", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_500, { "Y1", "asterix.8_1_2_050_rep7_group_189", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_501, { "090 : Time of Day [s]", "asterix.8_1_2_090_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_502, { "100 : Processing Status", "asterix.8_1_2_100_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_503, { "F(Scaling Factor)", "asterix.8_1_2_100_uap_extended_F", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_504, { "R(Current Reduction Stage in Use)", "asterix.8_1_2_100_uap_extended_R", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_505, { "Q(Processing Parameters)", "asterix.8_1_2_100_uap_extended_Q", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_506, { "FX", "asterix.8_1_2_100_uap_extended_100_FX_23", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_507, { "110 : Station Configuration Status", "asterix.8_1_2_110_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_508, { "120 : Total Number of Items Constituting One Weather Picture", "asterix.8_1_2_120_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_509, { "038 : Sequence of Weather Vectors in SPF Notation", "asterix.8_1_2_038_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_510, { "038 : Sequence of Weather Vectors in SPF Notation", "asterix.8_1_2_038_rep8_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_511, { "X1 : X1-Component", "asterix.8_1_2_038_rep8_group_181", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_512, { "Y1 : Y1-Component", "asterix.8_1_2_038_rep8_group_182", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_513, { "X2 : X2-Component", "asterix.8_1_2_038_rep8_group_183", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_514, { "Y2 : Y2-Component", "asterix.8_1_2_038_rep8_group_184", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_515, { "SP : Special Purpose Field", "asterix.8_1_2_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_516, { "010 : Data Source Identifier", "asterix.8_1_3_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_517, { "000 : Message Type", "asterix.8_1_3_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_148), 0x0, NULL, HFILL } },
{ &expand_var_518, { "020 : Vector Qualifier", "asterix.8_1_3_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_519, { "036 : Sequence of Cartesian Vectors in SPF Notation", "asterix.8_1_3_036_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_520, { "034 : Sequence of Polar Vectors in SPF Notation", "asterix.8_1_3_034_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_521, { "040 : Contour Identifier", "asterix.8_1_3_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_522, { "050 : Sequence of Contour Points in SPF Notation", "asterix.8_1_3_050_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_523, { "090 : Time of Day [s]", "asterix.8_1_3_090_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_524, { "100 : Processing Status", "asterix.8_1_3_100_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_525, { "110 : Station Configuration Status", "asterix.8_1_3_110_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_526, { "120 : Total Number of Items Constituting One Weather Picture", "asterix.8_1_3_120_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_527, { "038 : Sequence of Weather Vectors in SPF Notation", "asterix.8_1_3_038_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_528, { "SP : Special Purpose Field", "asterix.8_1_3_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_529, { "010 : Data Source Identifier", "asterix.9_2_1_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_530, { "000 : Message Type", "asterix.9_2_1_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_155), 0x0, NULL, HFILL } },
{ &expand_var_531, { "020 : Vector Qualifier", "asterix.9_2_1_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_532, { "ORG", "asterix.9_2_1_020_uap_extended_ORG", FT_UINT8, BASE_DEC, VALS(value_map_149), 0x0, NULL, HFILL } },
{ &expand_var_533, { "I(Intensity Level)", "asterix.9_2_1_020_uap_extended_I", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_534, { "S(Shading Orientation with Respect to North)", "asterix.9_2_1_020_uap_extended_S", FT_UINT8, BASE_DEC, VALS(value_map_150), 0x0, NULL, HFILL } },
{ &expand_var_535, { "FX", "asterix.9_2_1_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_536, { "030 : Sequence of Cartesian Vectors", "asterix.9_2_1_030_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_537, { "030 : Sequence of Cartesian Vectors", "asterix.9_2_1_030_rep9_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_538, { "X : X-coordinate", "asterix.9_2_1_030_rep9_group_193", FT_INT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_539, { "Y : Y-coordinate", "asterix.9_2_1_030_rep9_group_194", FT_INT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_540, { "L : Vector Length", "asterix.9_2_1_030_rep9_group_195", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_541, { "060 : Synchronisation/Control Signal", "asterix.9_2_1_060_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_542, { "SN(Step Number)", "asterix.9_2_1_060_uap_extended_SN", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_543, { "FX", "asterix.9_2_1_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_544, { "070 : Time of Day [s]", "asterix.9_2_1_070_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_545, { "080 : Processing Status", "asterix.9_2_1_080_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_546, { "090 : Radar Configuration and Status", "asterix.9_2_1_090_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_547, { "090 : Radar Configuration and Status", "asterix.9_2_1_090_rep10_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_548, { "SAC : SAC of Radar Concerned", "asterix.9_2_1_090_rep10_group_197", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_549, { "SIC : SIC of Radar Concerned", "asterix.9_2_1_090_rep10_group_198", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_550, { "CP : Circular Polarisation", "asterix.9_2_1_090_rep10_group_199", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_551, { "WO : Weather Channel Overload", "asterix.9_2_1_090_rep10_group_200", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_552, { "R : Reduction Step in Use By Radar  Concerned", "asterix.9_2_1_090_rep10_group_201", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_553, { "100 : Vector Count", "asterix.9_2_1_100_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_554, { "010 : Data Source Identifier", "asterix.10_1_1_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_555, { "000 : Message Type", "asterix.10_1_1_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_156), 0x0, NULL, HFILL } },
{ &expand_var_556, { "020 : Target Report Descriptor", "asterix.10_1_1_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_557, { "TYP", "asterix.10_1_1_020_uap_extended_TYP", FT_UINT8, BASE_DEC, VALS(value_map_157), 0x0, NULL, HFILL } },
{ &expand_var_558, { "DCR", "asterix.10_1_1_020_uap_extended_DCR", FT_UINT8, BASE_DEC, VALS(value_map_158), 0x0, NULL, HFILL } },
{ &expand_var_559, { "CHN", "asterix.10_1_1_020_uap_extended_CHN", FT_UINT8, BASE_DEC, VALS(value_map_159), 0x0, NULL, HFILL } },
{ &expand_var_560, { "GBS", "asterix.10_1_1_020_uap_extended_GBS", FT_UINT8, BASE_DEC, VALS(value_map_160), 0x0, NULL, HFILL } },
{ &expand_var_561, { "CRT", "asterix.10_1_1_020_uap_extended_CRT", FT_UINT8, BASE_DEC, VALS(value_map_161), 0x0, NULL, HFILL } },
{ &expand_var_562, { "FX", "asterix.10_1_1_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_563, { "SIM", "asterix.10_1_1_020_uap_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_162), 0x0, NULL, HFILL } },
{ &expand_var_564, { "TST", "asterix.10_1_1_020_uap_extended_TST", FT_UINT8, BASE_DEC, VALS(value_map_163), 0x0, NULL, HFILL } },
{ &expand_var_565, { "RAB", "asterix.10_1_1_020_uap_extended_RAB", FT_UINT8, BASE_DEC, VALS(value_map_164), 0x0, NULL, HFILL } },
{ &expand_var_566, { "LOP", "asterix.10_1_1_020_uap_extended_LOP", FT_UINT8, BASE_DEC, VALS(value_map_165), 0x0, NULL, HFILL } },
{ &expand_var_567, { "TOT", "asterix.10_1_1_020_uap_extended_TOT", FT_UINT8, BASE_DEC, VALS(value_map_166), 0x0, NULL, HFILL } },
{ &expand_var_568, { "FX", "asterix.10_1_1_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_569, { "SPI", "asterix.10_1_1_020_uap_extended_SPI", FT_UINT8, BASE_DEC, VALS(value_map_167), 0x0, NULL, HFILL } },
{ &expand_var_570, { "FX", "asterix.10_1_1_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_571, { "140 : Time of Day [s]", "asterix.10_1_1_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_572, { "041 : Position in WGS-84 Co-ordinates", "asterix.10_1_1_041_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_573, { "LAT : Latitude [°]", "asterix.10_1_1_041_uap_group_215", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_574, { "LON : Longitude [°]", "asterix.10_1_1_041_uap_group_216", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_575, { "040 : Measured Position in Polar Co-ordinates", "asterix.10_1_1_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_576, { "RHO : RHO [m]", "asterix.10_1_1_040_uap_group_213", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_577, { "TH : Theta [°]", "asterix.10_1_1_040_uap_group_214", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_578, { "042 : Position in Cartesian Co-ordinates", "asterix.10_1_1_042_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_579, { "X : X Coordinate [m]", "asterix.10_1_1_042_uap_group_217", FT_INT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_580, { "Y : Y Coordinate [m]", "asterix.10_1_1_042_uap_group_218", FT_INT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_581, { "200 : Calculated Track Velocity in Polar Co-ordinates", "asterix.10_1_1_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_582, { "GSP : Ground Speed [NM/s]", "asterix.10_1_1_200_uap_group_234", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_583, { "TRA : Track Angle [°]", "asterix.10_1_1_200_uap_group_235", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_584, { "202 : Calculated Track Velocity in Cartesian Co-ordinates", "asterix.10_1_1_202_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_585, { "VX : X Velocity [m/s]", "asterix.10_1_1_202_uap_group_236", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_586, { "VY : Y Velocity [m/s]", "asterix.10_1_1_202_uap_group_237", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_587, { "161 : Track Number", "asterix.10_1_1_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_588, { "TRK : Track Number", "asterix.10_1_1_161_uap_group_224", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_589, { "170 : Track Status", "asterix.10_1_1_170_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_590, { "CNF", "asterix.10_1_1_170_uap_extended_CNF", FT_UINT8, BASE_DEC, VALS(value_map_173), 0x0, NULL, HFILL } },
{ &expand_var_591, { "TRE", "asterix.10_1_1_170_uap_extended_TRE", FT_UINT8, BASE_DEC, VALS(value_map_46), 0x0, NULL, HFILL } },
{ &expand_var_592, { "CST", "asterix.10_1_1_170_uap_extended_CST", FT_UINT8, BASE_DEC, VALS(value_map_174), 0x0, NULL, HFILL } },
{ &expand_var_593, { "MAH", "asterix.10_1_1_170_uap_extended_MAH", FT_UINT8, BASE_DEC, VALS(value_map_175), 0x0, NULL, HFILL } },
{ &expand_var_594, { "TCC", "asterix.10_1_1_170_uap_extended_TCC", FT_UINT8, BASE_DEC, VALS(value_map_176), 0x0, NULL, HFILL } },
{ &expand_var_595, { "STH", "asterix.10_1_1_170_uap_extended_STH", FT_UINT8, BASE_DEC, VALS(value_map_177), 0x0, NULL, HFILL } },
{ &expand_var_596, { "FX", "asterix.10_1_1_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_597, { "TOM", "asterix.10_1_1_170_uap_extended_TOM", FT_UINT8, BASE_DEC, VALS(value_map_178), 0x0, NULL, HFILL } },
{ &expand_var_598, { "DOU", "asterix.10_1_1_170_uap_extended_DOU", FT_UINT8, BASE_DEC, VALS(value_map_179), 0x0, NULL, HFILL } },
{ &expand_var_599, { "MRS", "asterix.10_1_1_170_uap_extended_MRS", FT_UINT8, BASE_DEC, VALS(value_map_180), 0x0, NULL, HFILL } },
{ &expand_var_600, { "FX", "asterix.10_1_1_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_601, { "GHO", "asterix.10_1_1_170_uap_extended_GHO", FT_UINT8, BASE_DEC, VALS(value_map_45), 0x0, NULL, HFILL } },
{ &expand_var_602, { "FX", "asterix.10_1_1_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_603, { "060 : Mode-3/A Code in Octal Representation", "asterix.10_1_1_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_604, { "V : Validated", "asterix.10_1_1_060_uap_group_219", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_605, { "G : Garbled", "asterix.10_1_1_060_uap_group_220", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_606, { "L", "asterix.10_1_1_060_uap_group_221", FT_UINT8, BASE_DEC, VALS(value_map_171), 0x0, NULL, HFILL } },
{ &expand_var_607, { "MODE3A : Mode-3/A Reply in Octal Representation", "asterix.10_1_1_060_uap_group_222", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_608, { "220 : Target Address", "asterix.10_1_1_220_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_609, { "245 : Target Identification", "asterix.10_1_1_245_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_610, { "STI", "asterix.10_1_1_245_uap_group_240", FT_UINT8, BASE_DEC, VALS(value_map_183), 0x0, NULL, HFILL } },
{ &expand_var_611, { "CHR : Characters 1-8 (Coded on 6 Bits Each) Defining Target Identification", "asterix.10_1_1_245_uap_group_241", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_612, { "250 : Mode S MB Data", "asterix.10_1_1_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_613, { "250 : Mode S MB Data", "asterix.10_1_1_250_rep11_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_614, { "MBDATA", "asterix.10_1_1_250_rep11_group_242", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_615, { "BDS1", "asterix.10_1_1_250_rep11_group_243", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_616, { "BDS2", "asterix.10_1_1_250_rep11_group_244", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_617, { "300 : Vehicle Fleet Identification", "asterix.10_1_1_300_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_186), 0x0, NULL, HFILL } },
{ &expand_var_618, { "090 : Flight Level in Binary Representation", "asterix.10_1_1_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_619, { "V : Validated", "asterix.10_1_1_090_uap_group_219", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_620, { "G : Garbled", "asterix.10_1_1_090_uap_group_220", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_621, { "FL : Flight Level [FL]", "asterix.10_1_1_090_uap_group_223", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_622, { "091 : Measured Height [ft]", "asterix.10_1_1_091_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_623, { "270 : Target Size and Orientation", "asterix.10_1_1_270_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_624, { "LENGTH(Length) [m]", "asterix.10_1_1_270_uap_extended_LENGTH", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_625, { "FX", "asterix.10_1_1_270_uap_extended_270_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_626, { "ORIENTATION(Orientation) [°]", "asterix.10_1_1_270_uap_extended_ORIENTATION", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_627, { "FX", "asterix.10_1_1_270_uap_extended_270_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_628, { "WIDTH(Width) [m]", "asterix.10_1_1_270_uap_extended_WIDTH", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_629, { "FX", "asterix.10_1_1_270_uap_extended_270_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_630, { "550 : System Status", "asterix.10_1_1_550_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_631, { "NOGO : Operational Release Status of the System", "asterix.10_1_1_550_uap_group_255", FT_UINT8, BASE_DEC, VALS(value_map_191), 0x0, NULL, HFILL } },
{ &expand_var_632, { "OVL : Overload Indicator", "asterix.10_1_1_550_uap_group_256", FT_UINT8, BASE_DEC, VALS(value_map_192), 0x0, NULL, HFILL } },
{ &expand_var_633, { "TSV : Time Source Validity", "asterix.10_1_1_550_uap_group_257", FT_UINT8, BASE_DEC, VALS(value_map_193), 0x0, NULL, HFILL } },
{ &expand_var_634, { "DIV", "asterix.10_1_1_550_uap_group_258", FT_UINT8, BASE_DEC, VALS(value_map_194), 0x0, NULL, HFILL } },
{ &expand_var_635, { "TTF", "asterix.10_1_1_550_uap_group_259", FT_UINT8, BASE_DEC, VALS(value_map_195), 0x0, NULL, HFILL } },
{ &expand_var_636, { "310 : Pre-programmed Message", "asterix.10_1_1_310_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_637, { "TRB", "asterix.10_1_1_310_uap_group_250", FT_UINT8, BASE_DEC, VALS(value_map_187), 0x0, NULL, HFILL } },
{ &expand_var_638, { "MSG", "asterix.10_1_1_310_uap_group_251", FT_UINT8, BASE_DEC, VALS(value_map_188), 0x0, NULL, HFILL } },
{ &expand_var_639, { "500 : Standard Deviation of Position", "asterix.10_1_1_500_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_640, { "DEVX : Standard Deviation of X Component [m]", "asterix.10_1_1_500_uap_group_252", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_641, { "DEVY : Standard Deviation of Y Component [m]", "asterix.10_1_1_500_uap_group_253", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_642, { "COVXY : Covariance in Two’s Complement Form [m]", "asterix.10_1_1_500_uap_group_254", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_643, { "280 : Presence", "asterix.10_1_1_280_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_644, { "280 : Presence", "asterix.10_1_1_280_rep12_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_645, { "DRHO [m]", "asterix.10_1_1_280_rep12_group_248", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_646, { "DTHETA [°]", "asterix.10_1_1_280_rep12_group_249", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_647, { "131 : Amplitude of Primary Plot", "asterix.10_1_1_131_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_648, { "210 : Calculated Acceleration", "asterix.10_1_1_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_649, { "AX : X Acceleration [m/s²]", "asterix.10_1_1_210_uap_group_238", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_650, { "AY : Y Acceleration [m/s²]", "asterix.10_1_1_210_uap_group_239", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_651, { "SP : Special Purpose Field", "asterix.10_1_1_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_652, { "RE : Reserved Expansion Field", "asterix.10_1_1_27_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_653, { "010 : Data Source Identifier", "asterix.11_1_2_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_654, { "SAC : System Area Code Fixed to Zero", "asterix.11_1_2_010_uap_group_260", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_655, { "SIC : System Identification Code", "asterix.11_1_2_010_uap_group_2", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_656, { "000 : Message Type", "asterix.11_1_2_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_196), 0x0, NULL, HFILL } },
{ &expand_var_657, { "015 : Service Identification", "asterix.11_1_2_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_658, { "140 : Time of Track Information [s]", "asterix.11_1_2_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_659, { "041 : Position in WGS-84 Coordinates", "asterix.11_1_2_041_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_660, { "LAT : Latitude in WGS-84 in Two's Complement [°]", "asterix.11_1_2_041_uap_group_261", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_661, { "LON : Longitude in WGS-84 in Two's Complement [°]", "asterix.11_1_2_041_uap_group_262", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_662, { "042 : Calculated Position in Cartesian Co-ordinates", "asterix.11_1_2_042_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_663, { "X : X-Component [m]", "asterix.11_1_2_042_uap_group_263", FT_INT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_664, { "Y : Y-Component [m]", "asterix.11_1_2_042_uap_group_264", FT_INT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_665, { "202 : Calculated Track Velocity in Cartesian Coordinates", "asterix.11_1_2_202_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_666, { "VX : Vx [m/s]", "asterix.11_1_2_202_uap_group_285", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_667, { "VY : Vy [m/s]", "asterix.11_1_2_202_uap_group_286", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_668, { "210 : Calculated Acceleration", "asterix.11_1_2_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_669, { "AX : Ax [m/s²]", "asterix.11_1_2_210_uap_group_287", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_670, { "AY : Ay [m/s²]", "asterix.11_1_2_210_uap_group_288", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_671, { "060 : Mode-3/A Code in Octal Representation", "asterix.11_1_2_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_672, { "MOD3A : Mode-3/A Reply in Octal Representation", "asterix.11_1_2_060_uap_group_265", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_673, { "245 : Target Identification", "asterix.11_1_2_245_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_674, { "STI", "asterix.11_1_2_245_uap_group_240", FT_UINT8, BASE_DEC, VALS(value_map_183), 0x0, NULL, HFILL } },
{ &expand_var_675, { "TID : Target Identification", "asterix.11_1_2_245_uap_group_289", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_676, { "380 : Mode-S / ADS-B Related Data", "asterix.11_1_2_380_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_677, { "MB : BDS", "asterix.11_1_2_380_448_compound_448_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_678, { "MB : BDS", "asterix.11_1_2_380_rep13_element", FT_BYTES, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_679, { "ADR : 24 Bits Aircraft Address", "asterix.11_1_2_380_449_compound_449_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_680, { "COMACAS : Communications/ACAS Capability and Flight Status", "asterix.11_1_2_380_460_compound_460_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_681, { "COM : Communications Capability of the Transponder", "asterix.11_1_2_380_460_compound_460_group_292", FT_UINT8, BASE_DEC, VALS(value_map_221), 0x0, NULL, HFILL } },
{ &expand_var_682, { "STAT : Flight Status", "asterix.11_1_2_380_460_compound_460_group_293", FT_UINT8, BASE_DEC, VALS(value_map_222), 0x0, NULL, HFILL } },
{ &expand_var_683, { "SSC : Specific Service Capability", "asterix.11_1_2_380_460_compound_460_group_294", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_684, { "ARC : Altitude Reporting Capability", "asterix.11_1_2_380_460_compound_460_group_295", FT_UINT8, BASE_DEC, VALS(value_map_224), 0x0, NULL, HFILL } },
{ &expand_var_685, { "AIC : Aircraft Identification Capability", "asterix.11_1_2_380_460_compound_460_group_296", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_686, { "B1A : BDS 1,0 Bit 16", "asterix.11_1_2_380_460_compound_460_group_297", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_687, { "B1B : BDS 1,0 Bit 37/40", "asterix.11_1_2_380_460_compound_460_group_298", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_688, { "AC : ACAS Operational", "asterix.11_1_2_380_460_compound_460_group_299", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_689, { "MN : Multiple Navigational Aids Operating", "asterix.11_1_2_380_460_compound_460_group_300", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_690, { "DC : Differential Correction", "asterix.11_1_2_380_460_compound_460_group_301", FT_UINT8, BASE_DEC, VALS(value_map_225), 0x0, NULL, HFILL } },
{ &expand_var_691, { "ACT : Aircraft Derived Aircraft Type", "asterix.11_1_2_380_461_compound_461_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_692, { "ECAT : Emitter Category", "asterix.11_1_2_380_462_compound_462_element", FT_UINT8, BASE_DEC, VALS(value_map_226), 0x0, NULL, HFILL } },
{ &expand_var_693, { "AVTECH : Available Technologies", "asterix.11_1_2_380_466_compound_466_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_694, { "VDL : VDL Mode 4", "asterix.11_1_2_380_466_compound_466_group_302", FT_UINT8, BASE_DEC, VALS(value_map_227), 0x0, NULL, HFILL } },
{ &expand_var_695, { "MDS : Mode S", "asterix.11_1_2_380_466_compound_466_group_303", FT_UINT8, BASE_DEC, VALS(value_map_228), 0x0, NULL, HFILL } },
{ &expand_var_696, { "UAT : UAT", "asterix.11_1_2_380_466_compound_466_group_304", FT_UINT8, BASE_DEC, VALS(value_map_229), 0x0, NULL, HFILL } },
{ &expand_var_697, { "161 : Track Number", "asterix.11_1_2_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_698, { "FTN : Fusion Track Number", "asterix.11_1_2_161_uap_group_268", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_699, { "170 : Track Status", "asterix.11_1_2_170_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_700, { "MON", "asterix.11_1_2_170_uap_extended_MON", FT_UINT8, BASE_DEC, VALS(value_map_198), 0x0, NULL, HFILL } },
{ &expand_var_701, { "GBS", "asterix.11_1_2_170_uap_extended_GBS", FT_UINT8, BASE_DEC, VALS(value_map_199), 0x0, NULL, HFILL } },
{ &expand_var_702, { "MRH", "asterix.11_1_2_170_uap_extended_MRH", FT_UINT8, BASE_DEC, VALS(value_map_200), 0x0, NULL, HFILL } },
{ &expand_var_703, { "SRC", "asterix.11_1_2_170_uap_extended_SRC", FT_UINT8, BASE_DEC, VALS(value_map_201), 0x0, NULL, HFILL } },
{ &expand_var_704, { "CNF", "asterix.11_1_2_170_uap_extended_CNF", FT_UINT8, BASE_DEC, VALS(value_map_202), 0x0, NULL, HFILL } },
{ &expand_var_705, { "FX", "asterix.11_1_2_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_706, { "SIM", "asterix.11_1_2_170_uap_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_203), 0x0, NULL, HFILL } },
{ &expand_var_707, { "TSE", "asterix.11_1_2_170_uap_extended_TSE", FT_UINT8, BASE_DEC, VALS(value_map_204), 0x0, NULL, HFILL } },
{ &expand_var_708, { "TSB", "asterix.11_1_2_170_uap_extended_TSB", FT_UINT8, BASE_DEC, VALS(value_map_205), 0x0, NULL, HFILL } },
{ &expand_var_709, { "FRIFOE", "asterix.11_1_2_170_uap_extended_FRIFOE", FT_UINT8, BASE_DEC, VALS(value_map_206), 0x0, NULL, HFILL } },
{ &expand_var_710, { "ME", "asterix.11_1_2_170_uap_extended_ME", FT_UINT8, BASE_DEC, VALS(value_map_207), 0x0, NULL, HFILL } },
{ &expand_var_711, { "MI", "asterix.11_1_2_170_uap_extended_MI", FT_UINT8, BASE_DEC, VALS(value_map_208), 0x0, NULL, HFILL } },
{ &expand_var_712, { "FX", "asterix.11_1_2_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_713, { "AMA", "asterix.11_1_2_170_uap_extended_AMA", FT_UINT8, BASE_DEC, VALS(value_map_209), 0x0, NULL, HFILL } },
{ &expand_var_714, { "SPI", "asterix.11_1_2_170_uap_extended_SPI", FT_UINT8, BASE_DEC, VALS(value_map_210), 0x0, NULL, HFILL } },
{ &expand_var_715, { "CST", "asterix.11_1_2_170_uap_extended_CST", FT_UINT8, BASE_DEC, VALS(value_map_211), 0x0, NULL, HFILL } },
{ &expand_var_716, { "FPC", "asterix.11_1_2_170_uap_extended_FPC", FT_UINT8, BASE_DEC, VALS(value_map_212), 0x0, NULL, HFILL } },
{ &expand_var_717, { "AFF", "asterix.11_1_2_170_uap_extended_AFF", FT_UINT8, BASE_DEC, VALS(value_map_213), 0x0, NULL, HFILL } },
{ &expand_var_718, { "FX", "asterix.11_1_2_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_719, { "290 : System Track Update Ages", "asterix.11_1_2_290_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_720, { "PSR : Age of The Last Primary Detection Used to Update the Track [s]", "asterix.11_1_2_290_431_compound_431_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_721, { "SSR : Age of the Last Secondary Detection Used to Update the Track [s]", "asterix.11_1_2_290_432_compound_432_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_722, { "MDA : Age of the Last Mode A Detection Used to Update the Track [s]", "asterix.11_1_2_290_433_compound_433_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_723, { "MFL : Age of the Last Mode C Detection Used to Update the Track [s]", "asterix.11_1_2_290_434_compound_434_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_724, { "MDS : Age of the Last Mode S Detection Used to Update the Track [s]", "asterix.11_1_2_290_435_compound_435_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_725, { "ADS : Age of the Last ADS Report Used to Update the Track [s]", "asterix.11_1_2_290_436_compound_436_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_726, { "ADB : Age of the Last ADS-B Report Used to Update the Track [s]", "asterix.11_1_2_290_437_compound_437_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_727, { "MD1 : Age of the Last Valid Mode 1 Used to Update the Track [s]", "asterix.11_1_2_290_438_compound_438_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_728, { "MD2 : Age of the Last Mode 2 Used to Update the Track [s]", "asterix.11_1_2_290_439_compound_439_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_729, { "LOP : Age of the Last Magentic Loop Detection [s]", "asterix.11_1_2_290_440_compound_440_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_730, { "TRK : Actual Track Age Since First Occurrence [s]", "asterix.11_1_2_290_441_compound_441_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_731, { "MUL : Age of the Last Multilateration Detection [s]", "asterix.11_1_2_290_442_compound_442_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_732, { "430 : Phase of Flight", "asterix.11_1_2_430_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_237), 0x0, NULL, HFILL } },
{ &expand_var_733, { "090 : Measured Flight Level [FL]", "asterix.11_1_2_090_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_734, { "093 : Calculated Track Barometric Altitude", "asterix.11_1_2_093_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_735, { "QNH : QNH Correction Applied", "asterix.11_1_2_093_uap_group_266", FT_UINT8, BASE_DEC, VALS(value_map_197), 0x0, NULL, HFILL } },
{ &expand_var_736, { "CTBA : Calculated Track Barometric Altitude [FL]", "asterix.11_1_2_093_uap_group_267", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_737, { "092 : Calculated Track Geometric Altitude [ft]", "asterix.11_1_2_092_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_738, { "215 : Calculated Rate Of Climb/Descent [ft/min]", "asterix.11_1_2_215_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_739, { "270 : Target Size and Orientation", "asterix.11_1_2_270_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_740, { "390 : Flight Plan Related Data", "asterix.11_1_2_390_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_741, { "FPPSID : FPPS Identification Tag", "asterix.11_1_2_390_469_compound_469_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_742, { "SAC : System Area Code", "asterix.11_1_2_390_469_compound_469_group_1", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_743, { "SIC : System Identity Code", "asterix.11_1_2_390_469_compound_469_group_305", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_744, { "CSN : Callsign", "asterix.11_1_2_390_470_compound_470_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_745, { "IFPSFLIGHTID : IFPS_FLIGHT_ID", "asterix.11_1_2_390_473_compound_473_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_746, { "TYP : IFPS Flight ID Type", "asterix.11_1_2_390_473_compound_473_group_306", FT_UINT8, BASE_DEC, VALS(value_map_230), 0x0, NULL, HFILL } },
{ &expand_var_747, { "NBR : IFPS Flight ID Number", "asterix.11_1_2_390_473_compound_473_group_307", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_748, { "FLIGHTCAT : Flight Category", "asterix.11_1_2_390_477_compound_477_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_749, { "GATOAT : Flight Type", "asterix.11_1_2_390_477_compound_477_group_308", FT_UINT8, BASE_DEC, VALS(value_map_135), 0x0, NULL, HFILL } },
{ &expand_var_750, { "FR1FR2 : Flight Rules", "asterix.11_1_2_390_477_compound_477_group_156", FT_UINT8, BASE_DEC, VALS(value_map_136), 0x0, NULL, HFILL } },
{ &expand_var_751, { "RVSM : RVSM", "asterix.11_1_2_390_477_compound_477_group_309", FT_UINT8, BASE_DEC, VALS(value_map_137), 0x0, NULL, HFILL } },
{ &expand_var_752, { "HPR : Flight Priority", "asterix.11_1_2_390_477_compound_477_group_310", FT_UINT8, BASE_DEC, VALS(value_map_138), 0x0, NULL, HFILL } },
{ &expand_var_753, { "TOA : Type of Aircraft", "asterix.11_1_2_390_478_compound_478_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_754, { "WTC : Wake Turbulence Category", "asterix.11_1_2_390_479_compound_479_element", FT_UINT8, BASE_DEC, VALS(value_map_231), 0x0, NULL, HFILL } },
{ &expand_var_755, { "ADEP : Departure Airport", "asterix.11_1_2_390_480_compound_480_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_756, { "ADES : Destination Airport", "asterix.11_1_2_390_481_compound_481_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_757, { "RWY : Runway Designation", "asterix.11_1_2_390_482_compound_482_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_758, { "CFL : Current Cleared Flight Level [FL]", "asterix.11_1_2_390_483_compound_483_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_759, { "CCP : Current Control Position", "asterix.11_1_2_390_486_compound_486_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_760, { "CENTRE : 8-bit Group Identification Code", "asterix.11_1_2_390_486_compound_486_group_311", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_761, { "POSITION : 8-bit Control Position Identification Code", "asterix.11_1_2_390_486_compound_486_group_312", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_762, { "TOD : Time of Departure", "asterix.11_1_2_390_493_compound_493_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_763, { "TOD : Time of Departure", "asterix.11_1_2_390_rep14_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_764, { "TYP : Time Type", "asterix.11_1_2_390_rep14_group_313", FT_UINT8, BASE_DEC, VALS(value_map_232), 0x0, NULL, HFILL } },
{ &expand_var_765, { "DAY : Day", "asterix.11_1_2_390_rep14_group_314", FT_UINT8, BASE_DEC, VALS(value_map_233), 0x0, NULL, HFILL } },
{ &expand_var_766, { "HOR : Hours, from 0 to 23", "asterix.11_1_2_390_rep14_group_315", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_767, { "MIN : Minutes, from 0 to 59", "asterix.11_1_2_390_rep14_group_316", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_768, { "AVS : Seconds Available", "asterix.11_1_2_390_rep14_group_317", FT_UINT8, BASE_DEC, VALS(value_map_234), 0x0, NULL, HFILL } },
{ &expand_var_769, { "SEC : Seconds, from 0 to 59", "asterix.11_1_2_390_rep14_group_318", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_770, { "AST : Aircraft Stand", "asterix.11_1_2_390_494_compound_494_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_771, { "STS : Stand Status", "asterix.11_1_2_390_497_compound_497_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_772, { "EMP : Stand Empty", "asterix.11_1_2_390_497_compound_497_group_319", FT_UINT8, BASE_DEC, VALS(value_map_235), 0x0, NULL, HFILL } },
{ &expand_var_773, { "AVL : Stand Available", "asterix.11_1_2_390_497_compound_497_group_320", FT_UINT8, BASE_DEC, VALS(value_map_236), 0x0, NULL, HFILL } },
{ &expand_var_774, { "300 : Vehicle Fleet Identification", "asterix.11_1_2_300_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_218), 0x0, NULL, HFILL } },
{ &expand_var_775, { "310 : Pre-programmed Message", "asterix.11_1_2_310_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_776, { "TRB : In Trouble", "asterix.11_1_2_310_uap_group_290", FT_UINT8, BASE_DEC, VALS(value_map_187), 0x0, NULL, HFILL } },
{ &expand_var_777, { "MSG : Message", "asterix.11_1_2_310_uap_group_291", FT_UINT8, BASE_DEC, VALS(value_map_219), 0x0, NULL, HFILL } },
{ &expand_var_778, { "500 : Estimated Accuracies", "asterix.11_1_2_500_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_779, { "APC : Estimated Accuracy Of Track Position (Cartesian)", "asterix.11_1_2_500_502_compound_502_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_780, { "X : Estimated Accuracy of the Calculated Position of X Component [m]", "asterix.11_1_2_500_502_compound_502_group_321", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_781, { "Y : Estimated Accuracy of the Calculated Position of Y Component [m]", "asterix.11_1_2_500_502_compound_502_group_322", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_782, { "APW : Estimated Accuracy Of Track Position (WGS84)", "asterix.11_1_2_500_505_compound_505_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_783, { "LAT : APW Latitude Component Accuracy [°]", "asterix.11_1_2_500_505_compound_505_group_323", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_784, { "LON : APW Longitude Component Accuracy [°]", "asterix.11_1_2_500_505_compound_505_group_324", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_785, { "ATH : Estimated Accuracy Of Track Height [m]", "asterix.11_1_2_500_506_compound_506_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_786, { "AVC : Estimated Accuracy Of Track Velocity (Cartesian)", "asterix.11_1_2_500_509_compound_509_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_787, { "X : Estimated Accuracy of the Calculated Velocity of X Component [m/s]", "asterix.11_1_2_500_509_compound_509_group_325", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_788, { "Y : Estimated Accuracy of the Calculated Velocity of Y Component [m/s]", "asterix.11_1_2_500_509_compound_509_group_326", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_789, { "ARC : Estimated Accuracy Of Rate Of Climb / Descent [m/s]", "asterix.11_1_2_500_510_compound_510_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_790, { "AAC : Estimated Accuracy Of Acceleration (Cartesian)", "asterix.11_1_2_500_513_compound_513_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_791, { "X : Estimated Accuracy Of Acceleration of X Component [m/s²]", "asterix.11_1_2_500_513_compound_513_group_327", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_792, { "Y : Estimated Accuracy Of Acceleration of Y Component [m/s²]", "asterix.11_1_2_500_513_compound_513_group_328", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_793, { "600 : Alert Messages", "asterix.11_1_2_600_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_794, { "ACK : Alert Acknowleged", "asterix.11_1_2_600_uap_group_329", FT_UINT8, BASE_DEC, VALS(value_map_241), 0x0, NULL, HFILL } },
{ &expand_var_795, { "SVR : Alert Severity", "asterix.11_1_2_600_uap_group_330", FT_UINT8, BASE_DEC, VALS(value_map_242), 0x0, NULL, HFILL } },
{ &expand_var_796, { "AT : Alert Type", "asterix.11_1_2_600_uap_group_331", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_797, { "AN : Alert Number", "asterix.11_1_2_600_uap_group_332", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_798, { "605 : Tracks in Alert", "asterix.11_1_2_605_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_799, { "605 : Tracks in Alert", "asterix.11_1_2_605_rep15_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_800, { "FTN : Fusion Track Number", "asterix.11_1_2_605_rep15_group_333", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_801, { "610 : Holdbar Status", "asterix.11_1_2_610_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_802, { "610 : Holdbar Status", "asterix.11_1_2_610_rep16_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_803, { "BKN : Bank Number", "asterix.11_1_2_610_rep16_group_334", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_804, { "I1 : Indicator 1", "asterix.11_1_2_610_rep16_group_335", FT_UINT8, BASE_DEC, VALS(value_map_243), 0x0, NULL, HFILL } },
{ &expand_var_805, { "I2 : Indicator 2", "asterix.11_1_2_610_rep16_group_336", FT_UINT8, BASE_DEC, VALS(value_map_243), 0x0, NULL, HFILL } },
{ &expand_var_806, { "I3 : Indicator 3", "asterix.11_1_2_610_rep16_group_337", FT_UINT8, BASE_DEC, VALS(value_map_243), 0x0, NULL, HFILL } },
{ &expand_var_807, { "I4 : Indicator 4", "asterix.11_1_2_610_rep16_group_338", FT_UINT8, BASE_DEC, VALS(value_map_243), 0x0, NULL, HFILL } },
{ &expand_var_808, { "I5 : Indicator 5", "asterix.11_1_2_610_rep16_group_339", FT_UINT8, BASE_DEC, VALS(value_map_243), 0x0, NULL, HFILL } },
{ &expand_var_809, { "I6 : Indicator 6", "asterix.11_1_2_610_rep16_group_340", FT_UINT8, BASE_DEC, VALS(value_map_243), 0x0, NULL, HFILL } },
{ &expand_var_810, { "I7 : Indicator 7", "asterix.11_1_2_610_rep16_group_341", FT_UINT8, BASE_DEC, VALS(value_map_243), 0x0, NULL, HFILL } },
{ &expand_var_811, { "I8 : Indicator 8", "asterix.11_1_2_610_rep16_group_342", FT_UINT8, BASE_DEC, VALS(value_map_243), 0x0, NULL, HFILL } },
{ &expand_var_812, { "I9 : Indicator 9", "asterix.11_1_2_610_rep16_group_343", FT_UINT8, BASE_DEC, VALS(value_map_243), 0x0, NULL, HFILL } },
{ &expand_var_813, { "I10 : Indicator 10", "asterix.11_1_2_610_rep16_group_344", FT_UINT8, BASE_DEC, VALS(value_map_243), 0x0, NULL, HFILL } },
{ &expand_var_814, { "I11 : Indicator 11", "asterix.11_1_2_610_rep16_group_345", FT_UINT8, BASE_DEC, VALS(value_map_243), 0x0, NULL, HFILL } },
{ &expand_var_815, { "I12 : Indicator 12", "asterix.11_1_2_610_rep16_group_346", FT_UINT8, BASE_DEC, VALS(value_map_243), 0x0, NULL, HFILL } },
{ &expand_var_816, { "SP : Special Purpose Field", "asterix.11_1_2_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_817, { "RE : Reserved Expansion Field", "asterix.11_1_2_28_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_818, { "010 : Data Source Identifier", "asterix.11_1_3_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_819, { "000 : Message Type", "asterix.11_1_3_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_196), 0x0, NULL, HFILL } },
{ &expand_var_820, { "015 : Service Identification", "asterix.11_1_3_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_821, { "140 : Time of Track Information [s]", "asterix.11_1_3_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_822, { "041 : Position in WGS-84 Coordinates", "asterix.11_1_3_041_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_823, { "042 : Calculated Position in Cartesian Co-ordinates", "asterix.11_1_3_042_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_824, { "202 : Calculated Track Velocity in Cartesian Coordinates", "asterix.11_1_3_202_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_825, { "VX : Vx [m/s]", "asterix.11_1_3_202_uap_group_354", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_826, { "VY : Vy [m/s]", "asterix.11_1_3_202_uap_group_355", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_827, { "210 : Calculated Acceleration", "asterix.11_1_3_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_828, { "AX : Ax [m/s²]", "asterix.11_1_3_210_uap_group_356", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_829, { "AY : Ay [m/s²]", "asterix.11_1_3_210_uap_group_357", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_830, { "060 : Mode-3/A Code in Octal Representation", "asterix.11_1_3_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_831, { "245 : Target Identification", "asterix.11_1_3_245_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_832, { "STI", "asterix.11_1_3_245_uap_group_358", FT_UINT8, BASE_DEC, VALS(value_map_183), 0x0, NULL, HFILL } },
{ &expand_var_833, { "TID : Target Identification", "asterix.11_1_3_245_uap_group_359", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_834, { "380 : Mode-S / ADS-B Related Data", "asterix.11_1_3_380_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_835, { "MB : BDS", "asterix.11_1_3_380_448_compound_448_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_836, { "ADR : 24 Bits Aircraft Address", "asterix.11_1_3_380_449_compound_449_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_837, { "COMACAS : Communications/ACAS Capability and Flight Status", "asterix.11_1_3_380_563_compound_563_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_838, { "COM : Communications Capability of the Transponder", "asterix.11_1_3_380_563_compound_563_group_292", FT_UINT8, BASE_DEC, VALS(value_map_221), 0x0, NULL, HFILL } },
{ &expand_var_839, { "STAT : Flight Status", "asterix.11_1_3_380_563_compound_563_group_360", FT_UINT8, BASE_DEC, VALS(value_map_251), 0x0, NULL, HFILL } },
{ &expand_var_840, { "SSC : Specific Service Capability", "asterix.11_1_3_380_563_compound_563_group_294", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_841, { "ARC : Altitude Reporting Capability", "asterix.11_1_3_380_563_compound_563_group_295", FT_UINT8, BASE_DEC, VALS(value_map_224), 0x0, NULL, HFILL } },
{ &expand_var_842, { "AIC : Aircraft Identification Capability", "asterix.11_1_3_380_563_compound_563_group_296", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_843, { "B1A : BDS 1,0 Bit 16", "asterix.11_1_3_380_563_compound_563_group_297", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_844, { "B1B : BDS 1,0 Bit 37/40", "asterix.11_1_3_380_563_compound_563_group_298", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_845, { "AC : ACAS Operational", "asterix.11_1_3_380_563_compound_563_group_299", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_846, { "MN : Multiple Navigational Aids Operating", "asterix.11_1_3_380_563_compound_563_group_300", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_847, { "DC : Differential Correction", "asterix.11_1_3_380_563_compound_563_group_301", FT_UINT8, BASE_DEC, VALS(value_map_225), 0x0, NULL, HFILL } },
{ &expand_var_848, { "ACT : Aircraft Derived Aircraft Type", "asterix.11_1_3_380_461_compound_461_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_849, { "ECAT : Emitter Category", "asterix.11_1_3_380_462_compound_462_element", FT_UINT8, BASE_DEC, VALS(value_map_226), 0x0, NULL, HFILL } },
{ &expand_var_850, { "AVTECH : Available Technologies", "asterix.11_1_3_380_466_compound_466_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_851, { "161 : Track Number", "asterix.11_1_3_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_852, { "170 : Track Status", "asterix.11_1_3_170_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_853, { "MON", "asterix.11_1_3_170_uap_extended_MON", FT_UINT8, BASE_DEC, VALS(value_map_198), 0x0, NULL, HFILL } },
{ &expand_var_854, { "GBS", "asterix.11_1_3_170_uap_extended_GBS", FT_UINT8, BASE_DEC, VALS(value_map_199), 0x0, NULL, HFILL } },
{ &expand_var_855, { "MRH", "asterix.11_1_3_170_uap_extended_MRH", FT_UINT8, BASE_DEC, VALS(value_map_200), 0x0, NULL, HFILL } },
{ &expand_var_856, { "SRC", "asterix.11_1_3_170_uap_extended_SRC", FT_UINT8, BASE_DEC, VALS(value_map_201), 0x0, NULL, HFILL } },
{ &expand_var_857, { "CNF", "asterix.11_1_3_170_uap_extended_CNF", FT_UINT8, BASE_DEC, VALS(value_map_202), 0x0, NULL, HFILL } },
{ &expand_var_858, { "FX", "asterix.11_1_3_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_859, { "SIM", "asterix.11_1_3_170_uap_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_203), 0x0, NULL, HFILL } },
{ &expand_var_860, { "TSE", "asterix.11_1_3_170_uap_extended_TSE", FT_UINT8, BASE_DEC, VALS(value_map_204), 0x0, NULL, HFILL } },
{ &expand_var_861, { "TSB", "asterix.11_1_3_170_uap_extended_TSB", FT_UINT8, BASE_DEC, VALS(value_map_205), 0x0, NULL, HFILL } },
{ &expand_var_862, { "FRIFOE", "asterix.11_1_3_170_uap_extended_FRIFOE", FT_UINT8, BASE_DEC, VALS(value_map_206), 0x0, NULL, HFILL } },
{ &expand_var_863, { "ME", "asterix.11_1_3_170_uap_extended_ME", FT_UINT8, BASE_DEC, VALS(value_map_207), 0x0, NULL, HFILL } },
{ &expand_var_864, { "MI", "asterix.11_1_3_170_uap_extended_MI", FT_UINT8, BASE_DEC, VALS(value_map_208), 0x0, NULL, HFILL } },
{ &expand_var_865, { "FX", "asterix.11_1_3_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_866, { "AMA", "asterix.11_1_3_170_uap_extended_AMA", FT_UINT8, BASE_DEC, VALS(value_map_209), 0x0, NULL, HFILL } },
{ &expand_var_867, { "SPI", "asterix.11_1_3_170_uap_extended_SPI", FT_UINT8, BASE_DEC, VALS(value_map_210), 0x0, NULL, HFILL } },
{ &expand_var_868, { "CST", "asterix.11_1_3_170_uap_extended_CST", FT_UINT8, BASE_DEC, VALS(value_map_211), 0x0, NULL, HFILL } },
{ &expand_var_869, { "FPC", "asterix.11_1_3_170_uap_extended_FPC", FT_UINT8, BASE_DEC, VALS(value_map_212), 0x0, NULL, HFILL } },
{ &expand_var_870, { "AFF", "asterix.11_1_3_170_uap_extended_AFF", FT_UINT8, BASE_DEC, VALS(value_map_213), 0x0, NULL, HFILL } },
{ &expand_var_871, { "FX", "asterix.11_1_3_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_872, { "PSR", "asterix.11_1_3_170_uap_extended_PSR", FT_UINT8, BASE_DEC, VALS(value_map_245), 0x0, NULL, HFILL } },
{ &expand_var_873, { "SSR", "asterix.11_1_3_170_uap_extended_SSR", FT_UINT8, BASE_DEC, VALS(value_map_246), 0x0, NULL, HFILL } },
{ &expand_var_874, { "MDS", "asterix.11_1_3_170_uap_extended_MDS", FT_UINT8, BASE_DEC, VALS(value_map_247), 0x0, NULL, HFILL } },
{ &expand_var_875, { "ADS", "asterix.11_1_3_170_uap_extended_ADS", FT_UINT8, BASE_DEC, VALS(value_map_248), 0x0, NULL, HFILL } },
{ &expand_var_876, { "SUC", "asterix.11_1_3_170_uap_extended_SUC", FT_UINT8, BASE_DEC, VALS(value_map_249), 0x0, NULL, HFILL } },
{ &expand_var_877, { "AAC", "asterix.11_1_3_170_uap_extended_AAC", FT_UINT8, BASE_DEC, VALS(value_map_250), 0x0, NULL, HFILL } },
{ &expand_var_878, { "FX", "asterix.11_1_3_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_879, { "290 : System Track Update Ages", "asterix.11_1_3_290_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_880, { "PSR : Age of the Last Primary Report Used to Update the Track [s]", "asterix.11_1_3_290_555_compound_555_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_881, { "SSR : Age of the Last Secondary Report Used to Update the Track [s]", "asterix.11_1_3_290_556_compound_556_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_882, { "MDA : Age of the Last Valid Mode A Report Used to Update the Track [s]", "asterix.11_1_3_290_557_compound_557_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_883, { "MFL : Age of the Last Valid and Credible Mode C Used to Update the Track [s]", "asterix.11_1_3_290_558_compound_558_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_884, { "MDS : Age of the Last Mode S Report Used to Update the Track [s]", "asterix.11_1_3_290_559_compound_559_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_885, { "ADS : Age of the Last ADS Report Used to Update the Track [s]", "asterix.11_1_3_290_436_compound_436_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_886, { "ADB : Age of the Last ADS-B Report Used to Update the Track [s]", "asterix.11_1_3_290_437_compound_437_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_887, { "MD1 : Age of the Last Valid Mode 1 Used to Update the Track [s]", "asterix.11_1_3_290_438_compound_438_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_888, { "MD2 : Age of the Last Valid Mode 2 Used to Update the Track [s]", "asterix.11_1_3_290_560_compound_560_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_889, { "LOP : Age of the Last Magentic Loop Detection [s]", "asterix.11_1_3_290_440_compound_440_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_890, { "TRK : Actual Track Age Since First Occurrence [s]", "asterix.11_1_3_290_441_compound_441_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_891, { "MUL : Age of the Last Multilateration Detection [s]", "asterix.11_1_3_290_442_compound_442_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_892, { "430 : Phase of Flight", "asterix.11_1_3_430_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_237), 0x0, NULL, HFILL } },
{ &expand_var_893, { "090 : Measured Flight Level [FL]", "asterix.11_1_3_090_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_894, { "093 : Calculated Track Barometric Altitude", "asterix.11_1_3_093_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_895, { "QNH : QNH Correction Applied", "asterix.11_1_3_093_uap_group_347", FT_UINT8, BASE_DEC, VALS(value_map_244), 0x0, NULL, HFILL } },
{ &expand_var_896, { "CTBA : Calculated Track Barometric Altitude [FL]", "asterix.11_1_3_093_uap_group_267", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_897, { "092 : Calculated Track Geometric Altitude [ft]", "asterix.11_1_3_092_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_898, { "215 : Calculated Rate Of Climb/Descent [ft/min]", "asterix.11_1_3_215_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_899, { "270 : Target Size and Orientation", "asterix.11_1_3_270_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_900, { "390 : Flight Plan Related Data", "asterix.11_1_3_390_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_901, { "FPPSID : FPPS Identification Tag", "asterix.11_1_3_390_469_compound_469_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_902, { "CSN : Callsign", "asterix.11_1_3_390_470_compound_470_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_903, { "IFPSFLIGHTID : IFPS_FLIGHT_ID", "asterix.11_1_3_390_473_compound_473_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_904, { "FLIGHTCAT : Flight Category", "asterix.11_1_3_390_566_compound_566_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_905, { "GATOAT : Flight Type", "asterix.11_1_3_390_566_compound_566_group_308", FT_UINT8, BASE_DEC, VALS(value_map_135), 0x0, NULL, HFILL } },
{ &expand_var_906, { "FR1FR2 : Flight Rules", "asterix.11_1_3_390_566_compound_566_group_361", FT_UINT8, BASE_DEC, VALS(value_map_252), 0x0, NULL, HFILL } },
{ &expand_var_907, { "RVSM : RVSM", "asterix.11_1_3_390_566_compound_566_group_309", FT_UINT8, BASE_DEC, VALS(value_map_137), 0x0, NULL, HFILL } },
{ &expand_var_908, { "HPR : Flight Priority", "asterix.11_1_3_390_566_compound_566_group_310", FT_UINT8, BASE_DEC, VALS(value_map_138), 0x0, NULL, HFILL } },
{ &expand_var_909, { "TOA : Type of Aircraft", "asterix.11_1_3_390_478_compound_478_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_910, { "WTC : Wake Turbulence Category", "asterix.11_1_3_390_479_compound_479_element", FT_UINT8, BASE_DEC, VALS(value_map_231), 0x0, NULL, HFILL } },
{ &expand_var_911, { "ADEP : Departure Airport", "asterix.11_1_3_390_480_compound_480_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_912, { "ADES : Destination Airport", "asterix.11_1_3_390_481_compound_481_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_913, { "RWY : Runway Designation", "asterix.11_1_3_390_482_compound_482_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_914, { "CFL : Current Cleared Flight Level [FL]", "asterix.11_1_3_390_483_compound_483_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_915, { "CCP : Current Control Position", "asterix.11_1_3_390_486_compound_486_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_916, { "TOD : Time of Departure", "asterix.11_1_3_390_493_compound_493_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_917, { "AST : Aircraft Stand", "asterix.11_1_3_390_494_compound_494_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_918, { "STS : Stand Status", "asterix.11_1_3_390_497_compound_497_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_919, { "300 : Vehicle Fleet Identification", "asterix.11_1_3_300_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_218), 0x0, NULL, HFILL } },
{ &expand_var_920, { "310 : Pre-programmed Message", "asterix.11_1_3_310_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_921, { "500 : Estimated Accuracies", "asterix.11_1_3_500_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_922, { "600 : Alert Messages", "asterix.11_1_3_600_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_923, { "605 : Tracks in Alert", "asterix.11_1_3_605_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_924, { "610 : Holdbar Status", "asterix.11_1_3_610_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_925, { "SP : Special Purpose Field", "asterix.11_1_3_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_926, { "RE : Reserved Expansion Field", "asterix.11_1_3_28_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_927, { "010 : Data Source Identifier", "asterix.15_1_0_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_928, { "000 : Message Type", "asterix.15_1_0_000_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_929, { "MT : Message Type", "asterix.15_1_0_000_uap_group_362", FT_UINT8, BASE_DEC, VALS(value_map_253), 0x0, NULL, HFILL } },
{ &expand_var_930, { "RG : Report Generation", "asterix.15_1_0_000_uap_group_363", FT_UINT8, BASE_DEC, VALS(value_map_254), 0x0, NULL, HFILL } },
{ &expand_var_931, { "015 : Service Identification", "asterix.15_1_0_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_932, { "020 : Target Report Descriptor", "asterix.15_1_0_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_933, { "MOMU(Mono-Static Target Report or Multi-Static Target Report)", "asterix.15_1_0_020_uap_extended_MOMU", FT_UINT8, BASE_DEC, VALS(value_map_255), 0x0, NULL, HFILL } },
{ &expand_var_934, { "TTAX(Target Taxonomy)", "asterix.15_1_0_020_uap_extended_TTAX", FT_UINT8, BASE_DEC, VALS(value_map_256), 0x0, NULL, HFILL } },
{ &expand_var_935, { "SCD(Scanning Direction)", "asterix.15_1_0_020_uap_extended_SCD", FT_UINT8, BASE_DEC, VALS(value_map_257), 0x0, NULL, HFILL } },
{ &expand_var_936, { "FX", "asterix.15_1_0_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_937, { "030 : Warning/Error Conditions", "asterix.15_1_0_030_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_938, { "145 : Time of Applicability [s]", "asterix.15_1_0_145_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_939, { "161 : Track/Plot Number", "asterix.15_1_0_161_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_940, { "170 : Track/Plot Status", "asterix.15_1_0_170_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_941, { "BIZ", "asterix.15_1_0_170_uap_extended_BIZ", FT_UINT8, BASE_DEC, VALS(value_map_258), 0x0, NULL, HFILL } },
{ &expand_var_942, { "BAZ", "asterix.15_1_0_170_uap_extended_BAZ", FT_UINT8, BASE_DEC, VALS(value_map_259), 0x0, NULL, HFILL } },
{ &expand_var_943, { "TUR", "asterix.15_1_0_170_uap_extended_TUR", FT_UINT8, BASE_DEC, VALS(value_map_260), 0x0, NULL, HFILL } },
{ &expand_var_944, { "CSTP(Coasted - Position)", "asterix.15_1_0_170_uap_extended_CSTP", FT_UINT8, BASE_DEC, VALS(value_map_261), 0x0, NULL, HFILL } },
{ &expand_var_945, { "CSTH(Coasted – Height)", "asterix.15_1_0_170_uap_extended_CSTH", FT_UINT8, BASE_DEC, VALS(value_map_261), 0x0, NULL, HFILL } },
{ &expand_var_946, { "CNF(Confirmed vs. Tentative Track)", "asterix.15_1_0_170_uap_extended_CNF", FT_UINT8, BASE_DEC, VALS(value_map_262), 0x0, NULL, HFILL } },
{ &expand_var_947, { "FX", "asterix.15_1_0_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_948, { "050 : Update Period", "asterix.15_1_0_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_949, { "UPD : Update Period [s]", "asterix.15_1_0_050_uap_group_367", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_950, { "270 : Target Size & Orientation", "asterix.15_1_0_270_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_951, { "LEN : Target Length [m]", "asterix.15_1_0_270_587_compound_587_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_952, { "WDT : Target Width [m]", "asterix.15_1_0_270_588_compound_588_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_953, { "HGT : Target Height [m]", "asterix.15_1_0_270_589_compound_589_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_954, { "ORT : Target Orientation [°]", "asterix.15_1_0_270_590_compound_590_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_955, { "300 : Object Classification", "asterix.15_1_0_300_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_956, { "300 : Object Classification", "asterix.15_1_0_300_rep17_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_957, { "CLS : Classification", "asterix.15_1_0_300_rep17_group_374", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_958, { "PRB : Probability", "asterix.15_1_0_300_rep17_group_375", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_959, { "400 : Measurement Identifier", "asterix.15_1_0_400_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_960, { "PID : Pair Identifier", "asterix.15_1_0_400_uap_group_376", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_961, { "ON : Observation Number", "asterix.15_1_0_400_uap_group_377", FT_UINT24, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_962, { "600 : Horizontal Position Information", "asterix.15_1_0_600_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_963, { "P84 : Horizontal Position in WGS-84 Coordinates", "asterix.15_1_0_600_601_compound_601_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_964, { "LATITUDE [°]", "asterix.15_1_0_600_601_compound_601_group_378", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_965, { "LONGITUDE [°]", "asterix.15_1_0_600_601_compound_601_group_379", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_966, { "HPR : Horizontal Position Resolution", "asterix.15_1_0_600_605_compound_605_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_967, { "RSHPX [m]", "asterix.15_1_0_600_605_compound_605_group_380", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_968, { "RSHPY [m]", "asterix.15_1_0_600_605_compound_605_group_381", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_969, { "CORSHPXY []", "asterix.15_1_0_600_605_compound_605_group_382", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_970, { "HPP : Horizontal Position Precision", "asterix.15_1_0_600_609_compound_609_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_971, { "SDHPX [m]", "asterix.15_1_0_600_609_compound_609_group_383", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_972, { "SDHPY [m]", "asterix.15_1_0_600_609_compound_609_group_384", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_973, { "COSDHPXY []", "asterix.15_1_0_600_609_compound_609_group_385", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_974, { "601 : Geometric Height Information", "asterix.15_1_0_601_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_975, { "GH : Geometric Height (WGS-84) [m]", "asterix.15_1_0_601_611_compound_611_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_976, { "RSGH : Geometric Height Resolution [m]", "asterix.15_1_0_601_612_compound_612_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_977, { "SDGH : Geometric Height Precision [m]", "asterix.15_1_0_601_613_compound_613_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_978, { "CI6 : Confidence Interval for Geometric Height (67%)", "asterix.15_1_0_601_616_compound_616_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_979, { "UCI6 [m]", "asterix.15_1_0_601_616_compound_616_group_386", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_980, { "LCI6 [m]", "asterix.15_1_0_601_616_compound_616_group_387", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_981, { "CI9 : Confidence Interval for Geometric Height (95%)", "asterix.15_1_0_601_619_compound_619_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_982, { "UCI9 [m]", "asterix.15_1_0_601_619_compound_619_group_388", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_983, { "LCI9 [m]", "asterix.15_1_0_601_619_compound_619_group_389", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_984, { "COGHHP : Correlation of Geometric Height and Horizontal Position", "asterix.15_1_0_601_622_compound_622_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_985, { "X []", "asterix.15_1_0_601_622_compound_622_group_390", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_986, { "Y []", "asterix.15_1_0_601_622_compound_622_group_391", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_987, { "COGHHV : Correlation of Geometric Height and Horizontal Velocity", "asterix.15_1_0_601_623_compound_623_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_988, { "COGHHA : Correlation of Geometric Height and Horizontal Acceleration", "asterix.15_1_0_601_624_compound_624_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_989, { "602 : Horizontal Velocity Information", "asterix.15_1_0_602_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_990, { "HV : Horizontal Velocity Vector", "asterix.15_1_0_602_628_compound_628_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_991, { "X [m/s]", "asterix.15_1_0_602_628_compound_628_group_392", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_992, { "Y [m/s]", "asterix.15_1_0_602_628_compound_628_group_393", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_993, { "RSHV : Horizontal Velocity Resolution", "asterix.15_1_0_602_632_compound_632_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_994, { "X [m/s]", "asterix.15_1_0_602_632_compound_632_group_394", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_995, { "Y [m/s]", "asterix.15_1_0_602_632_compound_632_group_395", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_996, { "CORSHVXY []", "asterix.15_1_0_602_632_compound_632_group_396", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_997, { "SDHV : Horizontal Velocity Precision", "asterix.15_1_0_602_634_compound_634_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_998, { "X [m/s]", "asterix.15_1_0_602_634_compound_634_group_394", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_999, { "Y [m/s]", "asterix.15_1_0_602_634_compound_634_group_395", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1000, { "COHVXY []", "asterix.15_1_0_602_634_compound_634_group_397", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1001, { "COHVHP : Correlation of Horizontal Velocity and Horizontal Position", "asterix.15_1_0_602_639_compound_639_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1002, { "COHVXHPX []", "asterix.15_1_0_602_639_compound_639_group_398", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1003, { "COHVXHPY []", "asterix.15_1_0_602_639_compound_639_group_399", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1004, { "COHVYHPX []", "asterix.15_1_0_602_639_compound_639_group_400", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1005, { "COHVYHPY []", "asterix.15_1_0_602_639_compound_639_group_401", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1006, { "603 : Horizontal Acceleration Information", "asterix.15_1_0_603_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1007, { "HA : Horizontal Acceleration Vector", "asterix.15_1_0_603_643_compound_643_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1008, { "X [m/s²]", "asterix.15_1_0_603_643_compound_643_group_402", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1009, { "Y [m/s²]", "asterix.15_1_0_603_643_compound_643_group_403", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1010, { "SDHA : Horizontal Acceleration Precision", "asterix.15_1_0_603_647_compound_647_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1011, { "X [m/s²]", "asterix.15_1_0_603_647_compound_647_group_404", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1012, { "Y [m/s²]", "asterix.15_1_0_603_647_compound_647_group_405", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1013, { "COHAXY []", "asterix.15_1_0_603_647_compound_647_group_406", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1014, { "COHAHP : Correlation of Horizontal Acceleration and Horizontal Position", "asterix.15_1_0_603_652_compound_652_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1015, { "COHAXHPX []", "asterix.15_1_0_603_652_compound_652_group_407", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1016, { "COHAXHPY []", "asterix.15_1_0_603_652_compound_652_group_408", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1017, { "COHAYHPX []", "asterix.15_1_0_603_652_compound_652_group_409", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1018, { "COAYHPY []", "asterix.15_1_0_603_652_compound_652_group_410", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1019, { "COHAHV : Correlation of Horizontal Acceleration and Horizontal Velocity", "asterix.15_1_0_603_657_compound_657_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1020, { "COHAXHVX []", "asterix.15_1_0_603_657_compound_657_group_411", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1021, { "COHAXHVY []", "asterix.15_1_0_603_657_compound_657_group_412", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1022, { "COHAYHVX []", "asterix.15_1_0_603_657_compound_657_group_413", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1023, { "COHAYHVY []", "asterix.15_1_0_603_657_compound_657_group_414", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1024, { "604 : Vertical Velocity Information", "asterix.15_1_0_604_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1025, { "VV : Vertical Velocity [m/s]", "asterix.15_1_0_604_659_compound_659_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1026, { "RSVV : Vertical Velocity Resolution [m/s]", "asterix.15_1_0_604_660_compound_660_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1027, { "SDVV : Vertical Velocity Precision", "asterix.15_1_0_604_663_compound_663_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1028, { "SDVV [m/s]", "asterix.15_1_0_604_663_compound_663_group_415", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1029, { "COVVGH []", "asterix.15_1_0_604_663_compound_663_group_416", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1030, { "COVVHP : Correlation of Vertical Velocity and Horizontal Position", "asterix.15_1_0_604_664_compound_664_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1031, { "COVVHV : Correlation of Vertical Velocity and Horizontal Velocity", "asterix.15_1_0_604_665_compound_665_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1032, { "COVVHA : Correlation of Vertical Velocity and Horizontal Acceleration", "asterix.15_1_0_604_666_compound_666_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1033, { "605 : Vertical Velocity Information", "asterix.15_1_0_605_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1034, { "VA : Vertical Acceleration [m/s²]", "asterix.15_1_0_605_668_compound_668_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1035, { "RSVA : Vertical Acceleration Precision", "asterix.15_1_0_605_672_compound_672_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1036, { "SDVA [m/s²]", "asterix.15_1_0_605_672_compound_672_group_417", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1037, { "COVAGH []", "asterix.15_1_0_605_672_compound_672_group_418", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1038, { "COVAVV []", "asterix.15_1_0_605_672_compound_672_group_419", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1039, { "COVAHP : Correlation of Vertical Acceleration and Horizontal Position", "asterix.15_1_0_605_673_compound_673_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1040, { "COVAHV : Correlation of Vertical Acceleration and Horizontal Velocity", "asterix.15_1_0_605_674_compound_674_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1041, { "COVAHA : Correlation of Vertical Acceleration and Horizontal Acceleration", "asterix.15_1_0_605_675_compound_675_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1042, { "480 : Associations", "asterix.15_1_0_480_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1043, { "480 : Associations", "asterix.15_1_0_480_rep18_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1044, { "625 : Range Information", "asterix.15_1_0_625_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1045, { "R : Range [m]", "asterix.15_1_0_625_677_compound_677_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1046, { "RSR : Range Resolution [m]", "asterix.15_1_0_625_678_compound_678_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1047, { "SDR : Range Precision [m]", "asterix.15_1_0_625_679_compound_679_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1048, { "RR : Range Rate [m/s]", "asterix.15_1_0_625_680_compound_680_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1049, { "RSRR : Range Rate Resolution [m/s]", "asterix.15_1_0_625_681_compound_681_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1050, { "SDRR : Range Rate Precision", "asterix.15_1_0_625_684_compound_684_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1051, { "SDRR [m/s]", "asterix.15_1_0_625_684_compound_684_group_420", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1052, { "CORRR []", "asterix.15_1_0_625_684_compound_684_group_421", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1053, { "RA : Range Acceleration [m/s²]", "asterix.15_1_0_625_685_compound_685_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1054, { "SDRA : Range Acceleration Precision", "asterix.15_1_0_625_689_compound_689_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1055, { "SDRA [m/s²]", "asterix.15_1_0_625_689_compound_689_group_422", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1056, { "CORAR []", "asterix.15_1_0_625_689_compound_689_group_423", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1057, { "CORARR []", "asterix.15_1_0_625_689_compound_689_group_424", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1058, { "626 : Doppler Information", "asterix.15_1_0_626_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1059, { "DV : Doppler Velocity [m/s]", "asterix.15_1_0_626_691_compound_691_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1060, { "SDDV : Precision of Doppler Velocity [m/s]", "asterix.15_1_0_626_692_compound_692_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1061, { "DA : Doppler Acceleration [m/s²]", "asterix.15_1_0_626_693_compound_693_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1062, { "SDDA : Precision of Doppler Acceleration", "asterix.15_1_0_626_696_compound_696_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1063, { "SDDA [m/s²]", "asterix.15_1_0_626_696_compound_696_group_425", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1064, { "CODADV []", "asterix.15_1_0_626_696_compound_696_group_426", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1065, { "CODVR : Correlation of Doppler Velocity and Range []", "asterix.15_1_0_626_697_compound_697_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1066, { "CODVRR : Correlation of Doppler Velocity and Range Rate []", "asterix.15_1_0_626_698_compound_698_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1067, { "CODVRA : Correlation of Doppler Velocity and Range Acceleration []", "asterix.15_1_0_626_699_compound_699_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1068, { "CODAR : Correlation of Doppler Acceleration and Range []", "asterix.15_1_0_626_700_compound_700_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1069, { "CODARR : Correlation of Doppler Acceleration and Range Rate []", "asterix.15_1_0_626_701_compound_701_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1070, { "CODARA : Correlation of Doppler Acceleration and Range Acceleration []", "asterix.15_1_0_626_702_compound_702_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1071, { "627 : Azimuth Information", "asterix.15_1_0_627_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1072, { "AZ : Azimuth [°]", "asterix.15_1_0_627_261_compound_261_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1073, { "RSAZ : Azimuth Resolution [°]", "asterix.15_1_0_627_704_compound_704_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1074, { "SDASZ : Standard Deviation of Azimuth [°]", "asterix.15_1_0_627_705_compound_705_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1075, { "AZR : Azimuth Rate [°]", "asterix.15_1_0_627_706_compound_706_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1076, { "SDAZR : Standard Deviation of Azimuth Rate", "asterix.15_1_0_627_709_compound_709_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1077, { "SDAZR [°]", "asterix.15_1_0_627_709_compound_709_group_427", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1078, { "COAZRAZ []", "asterix.15_1_0_627_709_compound_709_group_428", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1079, { "AZEX : Azimuth Extent", "asterix.15_1_0_627_712_compound_712_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1080, { "S [°]", "asterix.15_1_0_627_712_compound_712_group_429", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1081, { "E [°]", "asterix.15_1_0_627_712_compound_712_group_430", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1082, { "628 : Elevation Information", "asterix.15_1_0_628_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1083, { "EL : Elevation [°]", "asterix.15_1_0_628_714_compound_714_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1084, { "RSEL : Elevation Resolution [°]", "asterix.15_1_0_628_715_compound_715_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1085, { "SDEL : Standard Deviation of Elevation [°]", "asterix.15_1_0_628_716_compound_716_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1086, { "ER : Elevation Rate [°/s]", "asterix.15_1_0_628_717_compound_717_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1087, { "SDER : Standard Deviation of Elevation Rate", "asterix.15_1_0_628_720_compound_720_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1088, { "SDELR [°/s]", "asterix.15_1_0_628_720_compound_720_group_431", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1089, { "COELREL []", "asterix.15_1_0_628_720_compound_720_group_432", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1090, { "ELEX : Elevation Extent", "asterix.15_1_0_628_723_compound_723_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1091, { "S [°]", "asterix.15_1_0_628_723_compound_723_group_433", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1092, { "E [°]", "asterix.15_1_0_628_723_compound_723_group_434", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1093, { "630 : Path Quality", "asterix.15_1_0_630_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1094, { "DPP : Direct Path - Power [dB]", "asterix.15_1_0_630_725_compound_725_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1095, { "DPS : Direct Path - Signal to Noise Ratio (SNR) [dB]", "asterix.15_1_0_630_726_compound_726_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1096, { "RPP : Reflected Path - Power", "asterix.15_1_0_630_728_compound_728_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1097, { "RPP [dB]", "asterix.15_1_0_630_728_compound_728_group_436", FT_INT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1098, { "RPS : Reflected Path - Signal to Noise Ratio (SNR) [dB]", "asterix.15_1_0_630_729_compound_729_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1099, { "631 : Contour (Azimuth, Elevation Angle, Range Extent)", "asterix.15_1_0_631_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1100, { "631 : Contour (Azimuth, Elevation Angle, Range Extent)", "asterix.15_1_0_631_rep19_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1101, { "AZCON [°]", "asterix.15_1_0_631_rep19_group_437", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1102, { "ELCON [°]", "asterix.15_1_0_631_rep19_group_438", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1103, { "RGCONSTOP [m]", "asterix.15_1_0_631_rep19_group_439", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1104, { "RGCONSTART [m]", "asterix.15_1_0_631_rep19_group_440", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1105, { "SP : Special Purpose Field", "asterix.15_1_0_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1106, { "010 : Data Source Identifier", "asterix.15_1_1_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1107, { "000 : Message Type", "asterix.15_1_1_000_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1108, { "015 : Service Identification", "asterix.15_1_1_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1109, { "020 : Target Report Descriptor", "asterix.15_1_1_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1110, { "030 : Warning/Error Conditions", "asterix.15_1_1_030_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1111, { "145 : Time of Applicability [s]", "asterix.15_1_1_145_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1112, { "161 : Track/Plot Number", "asterix.15_1_1_161_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1113, { "170 : Track/Plot Status", "asterix.15_1_1_170_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1114, { "050 : Update Period", "asterix.15_1_1_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1115, { "270 : Target Size & Orientation", "asterix.15_1_1_270_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1116, { "300 : Object Classification", "asterix.15_1_1_300_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1117, { "400 : Measurement Identifier", "asterix.15_1_1_400_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1118, { "600 : Horizontal Position Information", "asterix.15_1_1_600_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1119, { "601 : Geometric Height Information", "asterix.15_1_1_601_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1120, { "602 : Horizontal Velocity Information", "asterix.15_1_1_602_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1121, { "603 : Horizontal Acceleration Information", "asterix.15_1_1_603_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1122, { "604 : Vertical Velocity Information", "asterix.15_1_1_604_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1123, { "605 : Vertical Velocity Information", "asterix.15_1_1_605_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1124, { "480 : Associations", "asterix.15_1_1_480_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1125, { "625 : Range Information", "asterix.15_1_1_625_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1126, { "626 : Doppler Information", "asterix.15_1_1_626_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1127, { "627 : Azimuth Information", "asterix.15_1_1_627_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1128, { "628 : Elevation Information", "asterix.15_1_1_628_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1129, { "630 : Path Quality", "asterix.15_1_1_630_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1130, { "631 : Contour (Azimuth, Elevation Angle, Range Extent)", "asterix.15_1_1_631_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1131, { "SP : Special Purpose Field", "asterix.15_1_1_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1132, { "010 : Data Source Identifier", "asterix.15_1_2_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1133, { "000 : Message Type", "asterix.15_1_2_000_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1134, { "015 : Service Identification", "asterix.15_1_2_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1135, { "020 : Target Report Descriptor", "asterix.15_1_2_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1136, { "030 : Warning/Error Conditions", "asterix.15_1_2_030_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1137, { "145 : Time of Applicability [s]", "asterix.15_1_2_145_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1138, { "161 : Track/Plot Number", "asterix.15_1_2_161_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1139, { "170 : Track/Plot Status", "asterix.15_1_2_170_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1140, { "050 : Update Period", "asterix.15_1_2_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1141, { "270 : Target Size & Orientation", "asterix.15_1_2_270_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1142, { "300 : Object Classification", "asterix.15_1_2_300_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1143, { "400 : Measurement Identifier", "asterix.15_1_2_400_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1144, { "600 : Horizontal Position Information", "asterix.15_1_2_600_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1145, { "601 : Geometric Height Information", "asterix.15_1_2_601_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1146, { "602 : Horizontal Velocity Information", "asterix.15_1_2_602_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1147, { "603 : Horizontal Acceleration Information", "asterix.15_1_2_603_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1148, { "604 : Vertical Velocity Information", "asterix.15_1_2_604_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1149, { "605 : Vertical Velocity Information", "asterix.15_1_2_605_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1150, { "480 : Associations", "asterix.15_1_2_480_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1151, { "625 : Range Information", "asterix.15_1_2_625_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1152, { "626 : Doppler Information", "asterix.15_1_2_626_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1153, { "627 : Azimuth Information", "asterix.15_1_2_627_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1154, { "628 : Elevation Information", "asterix.15_1_2_628_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1155, { "630 : Path Quality", "asterix.15_1_2_630_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1156, { "631 : Contour (Azimuth, Elevation Angle, Range Extent)", "asterix.15_1_2_631_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1157, { "SP : Special Purpose Field", "asterix.15_1_2_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1158, { "010 : Data Source Identifier", "asterix.16_1_0_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1159, { "015 : Service Identification", "asterix.16_1_0_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1160, { "000 : Message Type", "asterix.16_1_0_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_283), 0x0, NULL, HFILL } },
{ &expand_var_1161, { "140 : Time of Day [s]", "asterix.16_1_0_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1162, { "200 : System Configuration Reporting Period [s]", "asterix.16_1_0_200_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1163, { "300 : Pair Identification", "asterix.16_1_0_300_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1164, { "300 : Pair Identification", "asterix.16_1_0_300_rep20_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1165, { "PID : Pair Identification", "asterix.16_1_0_300_rep20_group_441", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1166, { "TID : Transmitter Identification", "asterix.16_1_0_300_rep20_group_442", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1167, { "RID : Receiver Identification", "asterix.16_1_0_300_rep20_group_443", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1168, { "400 : Position of the System Reference Point", "asterix.16_1_0_400_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1169, { "LAT : Latitude [°]", "asterix.16_1_0_400_uap_group_444", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1170, { "LON : Longitude [°]", "asterix.16_1_0_400_uap_group_445", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1171, { "405 : Height of System Reference Point [m]", "asterix.16_1_0_405_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1172, { "410 : Transmitter Properties", "asterix.16_1_0_410_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1173, { "410 : Transmitter Properties", "asterix.16_1_0_410_rep21_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1174, { "TID : Transmitter ID", "asterix.16_1_0_410_rep21_group_446", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1175, { "LAT : Latitude [°]", "asterix.16_1_0_410_rep21_group_444", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1176, { "LON : Longitude [°]", "asterix.16_1_0_410_rep21_group_445", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1177, { "ALT : Altitude [m]", "asterix.16_1_0_410_rep21_group_447", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1178, { "TTO : Transmission Time Offset [ns]", "asterix.16_1_0_410_rep21_group_448", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1179, { "ATO : Accuracy of Transmission Time Offset [ns]", "asterix.16_1_0_410_rep21_group_449", FT_UINT24, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1180, { "PCI : Parallel Transmitter Index", "asterix.16_1_0_410_rep21_group_450", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1181, { "420 : Receiver Properties", "asterix.16_1_0_420_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1182, { "420 : Receiver Properties", "asterix.16_1_0_420_rep22_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1183, { "RID : Receiver Component ID", "asterix.16_1_0_420_rep22_group_451", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1184, { "LAT : Latitude [°]", "asterix.16_1_0_420_rep22_group_444", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1185, { "LON : Longitude [°]", "asterix.16_1_0_420_rep22_group_445", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1186, { "ALT : Altitude [m]", "asterix.16_1_0_420_rep22_group_447", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1187, { "SP : Special Purpose Field", "asterix.16_1_0_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1188, { "010 : Data Source Identifier", "asterix.17_1_3_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1189, { "012 : Data Destination Identifier", "asterix.17_1_3_012_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1190, { "000 : Message Type", "asterix.17_1_3_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_287), 0x0, NULL, HFILL } },
{ &expand_var_1191, { "350 : Cluster Station/Node List", "asterix.17_1_3_350_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1192, { "220 : Aircraft Address", "asterix.17_1_3_220_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1193, { "221 : Duplicate Address Reference Number (DRN)", "asterix.17_1_3_221_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1194, { "140 : Time of Day [s]", "asterix.17_1_3_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1195, { "045 : Calculated Position in WGS-84 Coordinates", "asterix.17_1_3_045_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1196, { "LAT : Latitude [°]", "asterix.17_1_3_045_uap_group_452", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1197, { "LON : Longitude [°]", "asterix.17_1_3_045_uap_group_453", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1198, { "070 : Mode 3/A Code in Octal Representation", "asterix.17_1_3_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1199, { "V", "asterix.17_1_3_070_uap_group_454", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_1200, { "G", "asterix.17_1_3_070_uap_group_457", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_1201, { "L", "asterix.17_1_3_070_uap_group_458", FT_UINT8, BASE_DEC, VALS(value_map_289), 0x0, NULL, HFILL } },
{ &expand_var_1202, { "MODE3A : Mode 3/A Reply in Octal Representation", "asterix.17_1_3_070_uap_group_459", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1203, { "050 : Flight Level in Binary Representation", "asterix.17_1_3_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1204, { "V", "asterix.17_1_3_050_uap_group_454", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_1205, { "G", "asterix.17_1_3_050_uap_group_455", FT_UINT8, BASE_DEC, VALS(value_map_288), 0x0, NULL, HFILL } },
{ &expand_var_1206, { "ALT : Altitude [FL]", "asterix.17_1_3_050_uap_group_456", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1207, { "200 : Track Velocity in Polar Co-ordinates", "asterix.17_1_3_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1208, { "GSP : Calculated Groundspeed [NM/s]", "asterix.17_1_3_200_uap_group_460", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1209, { "HDG : Calculated Heading [°]", "asterix.17_1_3_200_uap_group_461", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1210, { "230 : Transponder Capability", "asterix.17_1_3_230_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1211, { "CA : Communications Capability of the Transponder", "asterix.17_1_3_230_uap_group_462", FT_UINT8, BASE_DEC, VALS(value_map_290), 0x0, NULL, HFILL } },
{ &expand_var_1212, { "SI : SI/II-capabilities of the Transponder", "asterix.17_1_3_230_uap_group_463", FT_UINT8, BASE_DEC, VALS(value_map_291), 0x0, NULL, HFILL } },
{ &expand_var_1213, { "240 : Track Status", "asterix.17_1_3_240_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1214, { "CST : Track Coasted", "asterix.17_1_3_240_uap_group_464", FT_UINT8, BASE_DEC, VALS(value_map_292), 0x0, NULL, HFILL } },
{ &expand_var_1215, { "FLT : Flight Level Tracking", "asterix.17_1_3_240_uap_group_465", FT_UINT8, BASE_DEC, VALS(value_map_293), 0x0, NULL, HFILL } },
{ &expand_var_1216, { "210 : Mode S Address List", "asterix.17_1_3_210_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1217, { "210 : Mode S Address List", "asterix.17_1_3_210_rep23_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1218, { "360 : Cluster Controller Command State", "asterix.17_1_3_360_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1219, { "SP : Special Purpose Field", "asterix.17_1_3_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1220, { "036 : Data Source Identifier", "asterix.18_1_7_036_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1221, { "037 : Data Destination Identifier", "asterix.18_1_7_037_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1222, { "000 : Message Type", "asterix.18_1_7_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_294), 0x0, NULL, HFILL } },
{ &expand_var_1223, { "001 : Result", "asterix.18_1_7_001_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1224, { "CAUSE : Cause", "asterix.18_1_7_001_uap_group_466", FT_UINT8, BASE_DEC, VALS(value_map_295), 0x0, NULL, HFILL } },
{ &expand_var_1225, { "DIAG : Diagnostic", "asterix.18_1_7_001_uap_group_467", FT_UINT8, BASE_DEC, VALS(value_map_296), 0x0, NULL, HFILL } },
{ &expand_var_1226, { "005 : Mode S Address", "asterix.18_1_7_005_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1227, { "016 : Packet Number", "asterix.18_1_7_016_uap_element", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1228, { "017 : Packet Number List", "asterix.18_1_7_017_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1229, { "017 : Packet Number List", "asterix.18_1_7_017_rep24_element", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1230, { "018 : Mode S Packet Properties", "asterix.18_1_7_018_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1231, { "PR : Mode S Packet Internal Priority", "asterix.18_1_7_018_uap_group_499", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1232, { "PT : Packet Type", "asterix.18_1_7_018_uap_group_500", FT_UINT8, BASE_DEC, VALS(value_map_321), 0x0, NULL, HFILL } },
{ &expand_var_1233, { "019 : Mode S Packet", "asterix.18_1_7_019_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1234, { "028 : GICB Extraction Periodicity [s]", "asterix.18_1_7_028_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1235, { "030 : GICB Properties", "asterix.18_1_7_030_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1236, { "PRIORITY : GICB Priority", "asterix.18_1_7_030_uap_group_506", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1237, { "PC : Periodicity Constraint", "asterix.18_1_7_030_uap_group_507", FT_UINT8, BASE_DEC, VALS(value_map_322), 0x0, NULL, HFILL } },
{ &expand_var_1238, { "AU : Asynchronous Update", "asterix.18_1_7_030_uap_group_508", FT_UINT8, BASE_DEC, VALS(value_map_323), 0x0, NULL, HFILL } },
{ &expand_var_1239, { "NE : Non Extraction", "asterix.18_1_7_030_uap_group_509", FT_UINT8, BASE_DEC, VALS(value_map_324), 0x0, NULL, HFILL } },
{ &expand_var_1240, { "RD : Reply Destination", "asterix.18_1_7_030_uap_group_510", FT_UINT8, BASE_DEC, VALS(value_map_325), 0x0, NULL, HFILL } },
{ &expand_var_1241, { "025 : GICB Number", "asterix.18_1_7_025_uap_element", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1242, { "027 : BDS Code", "asterix.18_1_7_027_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1243, { "029 : GICB Extracted", "asterix.18_1_7_029_uap_element", FT_BYTES, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1244, { "002 : Time of Day [s]", "asterix.18_1_7_002_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1245, { "006 : Mode S Address List", "asterix.18_1_7_006_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1246, { "007 : Aircraft Data Link Command", "asterix.18_1_7_007_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1247, { "UM : Uplink Mask", "asterix.18_1_7_007_uap_group_470", FT_UINT8, BASE_DEC, VALS(value_map_297), 0x0, NULL, HFILL } },
{ &expand_var_1248, { "DM : Downlink Mask", "asterix.18_1_7_007_uap_group_471", FT_UINT8, BASE_DEC, VALS(value_map_298), 0x0, NULL, HFILL } },
{ &expand_var_1249, { "UC : Uplink Command", "asterix.18_1_7_007_uap_group_472", FT_UINT8, BASE_DEC, VALS(value_map_299), 0x0, NULL, HFILL } },
{ &expand_var_1250, { "DC : Downlink Command", "asterix.18_1_7_007_uap_group_473", FT_UINT8, BASE_DEC, VALS(value_map_300), 0x0, NULL, HFILL } },
{ &expand_var_1251, { "008 : Aircraft Data Link Status", "asterix.18_1_7_008_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1252, { "UDS(Uplink Default Status)", "asterix.18_1_7_008_uap_extended_UDS", FT_UINT8, BASE_DEC, VALS(value_map_301), 0x0, NULL, HFILL } },
{ &expand_var_1253, { "DDS(Downlink Default Status)", "asterix.18_1_7_008_uap_extended_DDS", FT_UINT8, BASE_DEC, VALS(value_map_302), 0x0, NULL, HFILL } },
{ &expand_var_1254, { "UCS(Uplink Current Status)", "asterix.18_1_7_008_uap_extended_UCS", FT_UINT8, BASE_DEC, VALS(value_map_301), 0x0, NULL, HFILL } },
{ &expand_var_1255, { "DCS(Downlink Current Status)", "asterix.18_1_7_008_uap_extended_DCS", FT_UINT8, BASE_DEC, VALS(value_map_302), 0x0, NULL, HFILL } },
{ &expand_var_1256, { "EI(Exit Indication)", "asterix.18_1_7_008_uap_extended_EI", FT_UINT8, BASE_DEC, VALS(value_map_303), 0x0, NULL, HFILL } },
{ &expand_var_1257, { "FX", "asterix.18_1_7_008_uap_extended_008_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1258, { "IC(Interrogator Control)", "asterix.18_1_7_008_uap_extended_IC", FT_UINT8, BASE_DEC, VALS(value_map_304), 0x0, NULL, HFILL } },
{ &expand_var_1259, { "FX", "asterix.18_1_7_008_uap_extended_008_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1260, { "009 : Aircraft Data Link Report Request", "asterix.18_1_7_009_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1261, { "SR", "asterix.18_1_7_009_uap_extended_SR", FT_UINT8, BASE_DEC, VALS(value_map_305), 0x0, NULL, HFILL } },
{ &expand_var_1262, { "AR", "asterix.18_1_7_009_uap_extended_AR", FT_UINT8, BASE_DEC, VALS(value_map_306), 0x0, NULL, HFILL } },
{ &expand_var_1263, { "ER", "asterix.18_1_7_009_uap_extended_ER", FT_UINT8, BASE_DEC, VALS(value_map_307), 0x0, NULL, HFILL } },
{ &expand_var_1264, { "FR", "asterix.18_1_7_009_uap_extended_FR", FT_UINT8, BASE_DEC, VALS(value_map_308), 0x0, NULL, HFILL } },
{ &expand_var_1265, { "MR", "asterix.18_1_7_009_uap_extended_MR", FT_UINT8, BASE_DEC, VALS(value_map_309), 0x0, NULL, HFILL } },
{ &expand_var_1266, { "PR", "asterix.18_1_7_009_uap_extended_PR", FT_UINT8, BASE_DEC, VALS(value_map_310), 0x0, NULL, HFILL } },
{ &expand_var_1267, { "CR", "asterix.18_1_7_009_uap_extended_CR", FT_UINT8, BASE_DEC, VALS(value_map_311), 0x0, NULL, HFILL } },
{ &expand_var_1268, { "FX", "asterix.18_1_7_009_uap_extended_009_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1269, { "ID", "asterix.18_1_7_009_uap_extended_ID", FT_UINT8, BASE_DEC, VALS(value_map_312), 0x0, NULL, HFILL } },
{ &expand_var_1270, { "MA", "asterix.18_1_7_009_uap_extended_MA", FT_UINT8, BASE_DEC, VALS(value_map_313), 0x0, NULL, HFILL } },
{ &expand_var_1271, { "SP", "asterix.18_1_7_009_uap_extended_SP", FT_UINT8, BASE_DEC, VALS(value_map_314), 0x0, NULL, HFILL } },
{ &expand_var_1272, { "HG", "asterix.18_1_7_009_uap_extended_HG", FT_UINT8, BASE_DEC, VALS(value_map_315), 0x0, NULL, HFILL } },
{ &expand_var_1273, { "HD", "asterix.18_1_7_009_uap_extended_HD", FT_UINT8, BASE_DEC, VALS(value_map_316), 0x0, NULL, HFILL } },
{ &expand_var_1274, { "FX", "asterix.18_1_7_009_uap_extended_009_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1275, { "010 : Transponder Communications Capability", "asterix.18_1_7_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1276, { "COM : Communications Capability of the Transponder", "asterix.18_1_7_010_uap_group_492", FT_UINT8, BASE_DEC, VALS(value_map_317), 0x0, NULL, HFILL } },
{ &expand_var_1277, { "011 : Capability Report", "asterix.18_1_7_011_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1278, { "014 : Aircraft Position in Polar Co-ordinates", "asterix.18_1_7_014_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1279, { "RHO [NM]", "asterix.18_1_7_014_uap_group_495", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1280, { "THETA [°]", "asterix.18_1_7_014_uap_group_496", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1281, { "015 : Aircraft Position in Cartesian Co-ordinates", "asterix.18_1_7_015_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1282, { "X : X-Component [NM]", "asterix.18_1_7_015_uap_group_497", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1283, { "Y : Y-Component [NM]", "asterix.18_1_7_015_uap_group_498", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1284, { "020 : Broadcast Number", "asterix.18_1_7_020_uap_element", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1285, { "021 : Broadcast Properties", "asterix.18_1_7_021_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1286, { "PRIORITY : Priority", "asterix.18_1_7_021_uap_group_501", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1287, { "POWER : Power", "asterix.18_1_7_021_uap_group_502", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1288, { "DURATION : Duration [s]", "asterix.18_1_7_021_uap_group_503", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1289, { "COVERAGE : Coverage", "asterix.18_1_7_021_uap_group_504", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1290, { "022 : Broadcast Prefix", "asterix.18_1_7_022_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1291, { "PREFIX : Prefix Field", "asterix.18_1_7_022_uap_group_505", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1292, { "023 : Uplink or Downlink Broadcast", "asterix.18_1_7_023_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1293, { "004 : II Code", "asterix.18_1_7_004_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1294, { "PREVIOUSII : Former II Code", "asterix.18_1_7_004_uap_group_468", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1295, { "CURRENTII : Current II Code", "asterix.18_1_7_004_uap_group_469", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1296, { "031 : Aircraft Identity", "asterix.18_1_7_031_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1297, { "032 : Aircraft Mode A", "asterix.18_1_7_032_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1298, { "V", "asterix.18_1_7_032_uap_group_454", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_1299, { "G", "asterix.18_1_7_032_uap_group_457", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_1300, { "L", "asterix.18_1_7_032_uap_group_511", FT_UINT8, BASE_DEC, VALS(value_map_171), 0x0, NULL, HFILL } },
{ &expand_var_1301, { "MOD3A", "asterix.18_1_7_032_uap_group_512", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1302, { "033 : Aircraft Height", "asterix.18_1_7_033_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1303, { "V", "asterix.18_1_7_033_uap_group_454", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_1304, { "G", "asterix.18_1_7_033_uap_group_457", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_1305, { "FL : Flight Level [FL]", "asterix.18_1_7_033_uap_group_513", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1306, { "034 : Aircraft Speed [NM/s]", "asterix.18_1_7_034_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1307, { "035 : Aircraft Heading [°]", "asterix.18_1_7_035_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1308, { "012 : Aircraft Coverage Quality Factor", "asterix.18_1_7_012_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1309, { "FS : Flight Status", "asterix.18_1_7_012_uap_group_493", FT_UINT8, BASE_DEC, VALS(value_map_318), 0x0, NULL, HFILL } },
{ &expand_var_1310, { "CQF : Aircraft CQF", "asterix.18_1_7_012_uap_group_494", FT_UINT8, BASE_DEC, VALS(value_map_319), 0x0, NULL, HFILL } },
{ &expand_var_1311, { "013 : Aircraft CQF Calculation Method", "asterix.18_1_7_013_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1312, { "036 : Data Source Identifier", "asterix.18_1_8_036_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1313, { "037 : Data Destination Identifier", "asterix.18_1_8_037_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1314, { "000 : Message Type", "asterix.18_1_8_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_294), 0x0, NULL, HFILL } },
{ &expand_var_1315, { "001 : Result", "asterix.18_1_8_001_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1316, { "005 : Mode S Address", "asterix.18_1_8_005_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1317, { "016 : Packet Number", "asterix.18_1_8_016_uap_element", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1318, { "017 : Packet Number List", "asterix.18_1_8_017_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1319, { "018 : Mode S Packet Properties", "asterix.18_1_8_018_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1320, { "019 : Mode S Packet", "asterix.18_1_8_019_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1321, { "028 : GICB Extraction Periodicity [s]", "asterix.18_1_8_028_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1322, { "030 : GICB Properties", "asterix.18_1_8_030_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1323, { "025 : GICB Number", "asterix.18_1_8_025_uap_element", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1324, { "027 : BDS Code", "asterix.18_1_8_027_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1325, { "029 : GICB Extracted", "asterix.18_1_8_029_uap_element", FT_BYTES, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1326, { "002 : Time of Day [s]", "asterix.18_1_8_002_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1327, { "006 : Mode S Address List", "asterix.18_1_8_006_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1328, { "007 : Aircraft Data Link Command", "asterix.18_1_8_007_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1329, { "008 : Aircraft Data Link Status", "asterix.18_1_8_008_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1330, { "009 : Aircraft Data Link Report Request", "asterix.18_1_8_009_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1331, { "010 : Transponder Communications Capability", "asterix.18_1_8_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1332, { "011 : Capability Report", "asterix.18_1_8_011_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1333, { "014 : Aircraft Position in Polar Co-ordinates", "asterix.18_1_8_014_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1334, { "015 : Aircraft Position in Cartesian Co-ordinates", "asterix.18_1_8_015_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1335, { "020 : Broadcast Number", "asterix.18_1_8_020_uap_element", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1336, { "021 : Broadcast Properties", "asterix.18_1_8_021_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1337, { "022 : Broadcast Prefix", "asterix.18_1_8_022_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1338, { "023 : Uplink or Downlink Broadcast", "asterix.18_1_8_023_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1339, { "004 : II Code", "asterix.18_1_8_004_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1340, { "031 : Aircraft Identity", "asterix.18_1_8_031_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1341, { "032 : Aircraft Mode A", "asterix.18_1_8_032_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1342, { "033 : Aircraft Height", "asterix.18_1_8_033_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1343, { "034 : Aircraft Speed [NM/s]", "asterix.18_1_8_034_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1344, { "035 : Aircraft Heading [°]", "asterix.18_1_8_035_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1345, { "012 : Aircraft Coverage Quality Factor", "asterix.18_1_8_012_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1346, { "013 : Aircraft CQF Calculation Method", "asterix.18_1_8_013_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1347, { "010 : Data Source Identifier", "asterix.19_1_3_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1348, { "000 : Message Type", "asterix.19_1_3_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_326), 0x0, NULL, HFILL } },
{ &expand_var_1349, { "140 : Time of Day [s]", "asterix.19_1_3_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1350, { "550 : System Status", "asterix.19_1_3_550_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1351, { "NOGO : Operational Release Status of the System", "asterix.19_1_3_550_uap_group_514", FT_UINT8, BASE_DEC, VALS(value_map_327), 0x0, NULL, HFILL } },
{ &expand_var_1352, { "OVL : Overload Indicator", "asterix.19_1_3_550_uap_group_256", FT_UINT8, BASE_DEC, VALS(value_map_192), 0x0, NULL, HFILL } },
{ &expand_var_1353, { "TSV : Time Source Validity", "asterix.19_1_3_550_uap_group_257", FT_UINT8, BASE_DEC, VALS(value_map_193), 0x0, NULL, HFILL } },
{ &expand_var_1354, { "TTF : Test Target", "asterix.19_1_3_550_uap_group_515", FT_UINT8, BASE_DEC, VALS(value_map_195), 0x0, NULL, HFILL } },
{ &expand_var_1355, { "551 : Tracking Processor Detailed Status", "asterix.19_1_3_551_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1356, { "TP1A", "asterix.19_1_3_551_uap_group_516", FT_UINT8, BASE_DEC, VALS(value_map_328), 0x0, NULL, HFILL } },
{ &expand_var_1357, { "TP1B", "asterix.19_1_3_551_uap_group_517", FT_UINT8, BASE_DEC, VALS(value_map_329), 0x0, NULL, HFILL } },
{ &expand_var_1358, { "TP2A", "asterix.19_1_3_551_uap_group_518", FT_UINT8, BASE_DEC, VALS(value_map_328), 0x0, NULL, HFILL } },
{ &expand_var_1359, { "TP2B", "asterix.19_1_3_551_uap_group_519", FT_UINT8, BASE_DEC, VALS(value_map_329), 0x0, NULL, HFILL } },
{ &expand_var_1360, { "TP3A", "asterix.19_1_3_551_uap_group_520", FT_UINT8, BASE_DEC, VALS(value_map_328), 0x0, NULL, HFILL } },
{ &expand_var_1361, { "TP3B", "asterix.19_1_3_551_uap_group_521", FT_UINT8, BASE_DEC, VALS(value_map_329), 0x0, NULL, HFILL } },
{ &expand_var_1362, { "TP4A", "asterix.19_1_3_551_uap_group_522", FT_UINT8, BASE_DEC, VALS(value_map_328), 0x0, NULL, HFILL } },
{ &expand_var_1363, { "TP4B", "asterix.19_1_3_551_uap_group_523", FT_UINT8, BASE_DEC, VALS(value_map_329), 0x0, NULL, HFILL } },
{ &expand_var_1364, { "552 : Remote Sensor Detailed Status", "asterix.19_1_3_552_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1365, { "552 : Remote Sensor Detailed Status", "asterix.19_1_3_552_rep25_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1366, { "RSI : 8-bit Identification Number of RS", "asterix.19_1_3_552_rep25_group_524", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1367, { "RS1090 : Receiver 1090 MHz", "asterix.19_1_3_552_rep25_group_525", FT_UINT8, BASE_DEC, VALS(value_map_330), 0x0, NULL, HFILL } },
{ &expand_var_1368, { "TX1030 : Transmitter 1030 MHz", "asterix.19_1_3_552_rep25_group_526", FT_UINT8, BASE_DEC, VALS(value_map_330), 0x0, NULL, HFILL } },
{ &expand_var_1369, { "TX1090 : Transmitter 1090 MHz", "asterix.19_1_3_552_rep25_group_527", FT_UINT8, BASE_DEC, VALS(value_map_330), 0x0, NULL, HFILL } },
{ &expand_var_1370, { "RSS : RS Status", "asterix.19_1_3_552_rep25_group_528", FT_UINT8, BASE_DEC, VALS(value_map_329), 0x0, NULL, HFILL } },
{ &expand_var_1371, { "RSO : RS Operational", "asterix.19_1_3_552_rep25_group_529", FT_UINT8, BASE_DEC, VALS(value_map_331), 0x0, NULL, HFILL } },
{ &expand_var_1372, { "553 : Reference Transponder Detailed Status", "asterix.19_1_3_553_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1373, { "REFTR1(Ref Trans 1 Status)", "asterix.19_1_3_553_uap_extended_REFTR1", FT_UINT8, BASE_DEC, VALS(value_map_332), 0x0, NULL, HFILL } },
{ &expand_var_1374, { "REFTR2(Ref Trans 2 Status)", "asterix.19_1_3_553_uap_extended_REFTR2", FT_UINT8, BASE_DEC, VALS(value_map_332), 0x0, NULL, HFILL } },
{ &expand_var_1375, { "FX", "asterix.19_1_3_553_uap_extended_553_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1376, { "REFTR3(Ref Trans 3 Status)", "asterix.19_1_3_553_uap_extended_REFTR3", FT_UINT8, BASE_DEC, VALS(value_map_332), 0x0, NULL, HFILL } },
{ &expand_var_1377, { "REFTR4(Ref Trans 4 Status)", "asterix.19_1_3_553_uap_extended_REFTR4", FT_UINT8, BASE_DEC, VALS(value_map_332), 0x0, NULL, HFILL } },
{ &expand_var_1378, { "FX", "asterix.19_1_3_553_uap_extended_553_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1379, { "600 : Position of the MLT System Reference Point", "asterix.19_1_3_600_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1380, { "LAT : Latitude [°]", "asterix.19_1_3_600_uap_group_534", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1381, { "LON : Longitude [°]", "asterix.19_1_3_600_uap_group_535", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1382, { "610 : Height of the MLT System Reference Point [m]", "asterix.19_1_3_610_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1383, { "620 : WGS-84 Undulation [m]", "asterix.19_1_3_620_uap_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1384, { "RE : Reserved Expansion Field", "asterix.19_1_3_12_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1385, { "SP : Special Purpose Field", "asterix.19_1_3_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1386, { "010 : Data Source Identifier", "asterix.20_1_9_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1387, { "020 : Target Report Descriptor", "asterix.20_1_9_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1388, { "SSR", "asterix.20_1_9_020_uap_extended_SSR", FT_UINT8, BASE_DEC, VALS(value_map_334), 0x0, NULL, HFILL } },
{ &expand_var_1389, { "MS", "asterix.20_1_9_020_uap_extended_MS", FT_UINT8, BASE_DEC, VALS(value_map_335), 0x0, NULL, HFILL } },
{ &expand_var_1390, { "HF", "asterix.20_1_9_020_uap_extended_HF", FT_UINT8, BASE_DEC, VALS(value_map_336), 0x0, NULL, HFILL } },
{ &expand_var_1391, { "VDL4", "asterix.20_1_9_020_uap_extended_VDL4", FT_UINT8, BASE_DEC, VALS(value_map_337), 0x0, NULL, HFILL } },
{ &expand_var_1392, { "UAT", "asterix.20_1_9_020_uap_extended_UAT", FT_UINT8, BASE_DEC, VALS(value_map_338), 0x0, NULL, HFILL } },
{ &expand_var_1393, { "DME", "asterix.20_1_9_020_uap_extended_DME", FT_UINT8, BASE_DEC, VALS(value_map_339), 0x0, NULL, HFILL } },
{ &expand_var_1394, { "OT", "asterix.20_1_9_020_uap_extended_OT", FT_UINT8, BASE_DEC, VALS(value_map_340), 0x0, NULL, HFILL } },
{ &expand_var_1395, { "FX", "asterix.20_1_9_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1396, { "RAB", "asterix.20_1_9_020_uap_extended_RAB", FT_UINT8, BASE_DEC, VALS(value_map_341), 0x0, NULL, HFILL } },
{ &expand_var_1397, { "SPI", "asterix.20_1_9_020_uap_extended_SPI", FT_UINT8, BASE_DEC, VALS(value_map_167), 0x0, NULL, HFILL } },
{ &expand_var_1398, { "CHN", "asterix.20_1_9_020_uap_extended_CHN", FT_UINT8, BASE_DEC, VALS(value_map_159), 0x0, NULL, HFILL } },
{ &expand_var_1399, { "GBS", "asterix.20_1_9_020_uap_extended_GBS", FT_UINT8, BASE_DEC, VALS(value_map_160), 0x0, NULL, HFILL } },
{ &expand_var_1400, { "CRT", "asterix.20_1_9_020_uap_extended_CRT", FT_UINT8, BASE_DEC, VALS(value_map_161), 0x0, NULL, HFILL } },
{ &expand_var_1401, { "SIM", "asterix.20_1_9_020_uap_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_162), 0x0, NULL, HFILL } },
{ &expand_var_1402, { "TST", "asterix.20_1_9_020_uap_extended_TST", FT_UINT8, BASE_DEC, VALS(value_map_163), 0x0, NULL, HFILL } },
{ &expand_var_1403, { "FX", "asterix.20_1_9_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1404, { "140 : Time of Day [s]", "asterix.20_1_9_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1405, { "041 : Position In WGS-84 Coordinates", "asterix.20_1_9_041_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1406, { "LAT : Latitude [°]", "asterix.20_1_9_041_uap_group_550", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1407, { "LON : Longitude [°]", "asterix.20_1_9_041_uap_group_551", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1408, { "042 : Position in Cartesian Coordinates", "asterix.20_1_9_042_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1409, { "X : X-coordinate [m]", "asterix.20_1_9_042_uap_group_552", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1410, { "Y : Y-coordinate [m]", "asterix.20_1_9_042_uap_group_553", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1411, { "161 : Track Number", "asterix.20_1_9_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1412, { "TRN : Track Number", "asterix.20_1_9_161_uap_group_574", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1413, { "170 : Track Status", "asterix.20_1_9_170_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1414, { "CNF", "asterix.20_1_9_170_uap_extended_CNF", FT_UINT8, BASE_DEC, VALS(value_map_346), 0x0, NULL, HFILL } },
{ &expand_var_1415, { "TRE", "asterix.20_1_9_170_uap_extended_TRE", FT_UINT8, BASE_DEC, VALS(value_map_46), 0x0, NULL, HFILL } },
{ &expand_var_1416, { "CST", "asterix.20_1_9_170_uap_extended_CST", FT_UINT8, BASE_DEC, VALS(value_map_261), 0x0, NULL, HFILL } },
{ &expand_var_1417, { "CDM", "asterix.20_1_9_170_uap_extended_CDM", FT_UINT8, BASE_DEC, VALS(value_map_139), 0x0, NULL, HFILL } },
{ &expand_var_1418, { "MAH", "asterix.20_1_9_170_uap_extended_MAH", FT_UINT8, BASE_DEC, VALS(value_map_175), 0x0, NULL, HFILL } },
{ &expand_var_1419, { "STH", "asterix.20_1_9_170_uap_extended_STH", FT_UINT8, BASE_DEC, VALS(value_map_177), 0x0, NULL, HFILL } },
{ &expand_var_1420, { "FX", "asterix.20_1_9_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1421, { "GHO", "asterix.20_1_9_170_uap_extended_GHO", FT_UINT8, BASE_DEC, VALS(value_map_45), 0x0, NULL, HFILL } },
{ &expand_var_1422, { "FX", "asterix.20_1_9_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1423, { "070 : Mode-3/A Code in Octal Representation", "asterix.20_1_9_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1424, { "V : Validated", "asterix.20_1_9_070_uap_group_554", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_1425, { "G : Garbled", "asterix.20_1_9_070_uap_group_555", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_1426, { "L", "asterix.20_1_9_070_uap_group_560", FT_UINT8, BASE_DEC, VALS(value_map_345), 0x0, NULL, HFILL } },
{ &expand_var_1427, { "MODE3A : Mode-3/A Reply in Octal Representation", "asterix.20_1_9_070_uap_group_37", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1428, { "202 : Calculated Track Velocity in Cartesian Coordinates", "asterix.20_1_9_202_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1429, { "VX [m/s]", "asterix.20_1_9_202_uap_group_580", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1430, { "VY [m/s]", "asterix.20_1_9_202_uap_group_581", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1431, { "090 : Flight Level in Binary Representation", "asterix.20_1_9_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1432, { "V : Validated", "asterix.20_1_9_090_uap_group_554", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_1433, { "G : Garbled", "asterix.20_1_9_090_uap_group_555", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_1434, { "FL : Flight Level [FL]", "asterix.20_1_9_090_uap_group_561", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1435, { "100 : Mode C Code", "asterix.20_1_9_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1436, { "V : Validated", "asterix.20_1_9_100_uap_group_554", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_1437, { "G : Garbled", "asterix.20_1_9_100_uap_group_555", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_1438, { "MODEC : Mode-C Reply in Gray Notation", "asterix.20_1_9_100_uap_group_39", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1439, { "QC1 : Quality Pulse C1", "asterix.20_1_9_100_uap_group_562", FT_UINT8, BASE_DEC, VALS(value_map_28), 0x0, NULL, HFILL } },
{ &expand_var_1440, { "QA1 : Quality Pulse A1", "asterix.20_1_9_100_uap_group_563", FT_UINT8, BASE_DEC, VALS(value_map_22), 0x0, NULL, HFILL } },
{ &expand_var_1441, { "QC2 : Quality Pulse C2", "asterix.20_1_9_100_uap_group_564", FT_UINT8, BASE_DEC, VALS(value_map_27), 0x0, NULL, HFILL } },
{ &expand_var_1442, { "QA2 : Quality Pulse A2", "asterix.20_1_9_100_uap_group_565", FT_UINT8, BASE_DEC, VALS(value_map_21), 0x0, NULL, HFILL } },
{ &expand_var_1443, { "QC4 : Quality Pulse C4", "asterix.20_1_9_100_uap_group_566", FT_UINT8, BASE_DEC, VALS(value_map_26), 0x0, NULL, HFILL } },
{ &expand_var_1444, { "QA4 : Quality Pulse A4", "asterix.20_1_9_100_uap_group_567", FT_UINT8, BASE_DEC, VALS(value_map_20), 0x0, NULL, HFILL } },
{ &expand_var_1445, { "QB1 : Quality Pulse B1", "asterix.20_1_9_100_uap_group_568", FT_UINT8, BASE_DEC, VALS(value_map_25), 0x0, NULL, HFILL } },
{ &expand_var_1446, { "QD1 : Quality Pulse D1", "asterix.20_1_9_100_uap_group_569", FT_UINT8, BASE_DEC, VALS(value_map_31), 0x0, NULL, HFILL } },
{ &expand_var_1447, { "QB2 : Quality Pulse B2", "asterix.20_1_9_100_uap_group_570", FT_UINT8, BASE_DEC, VALS(value_map_24), 0x0, NULL, HFILL } },
{ &expand_var_1448, { "QD2 : Quality Pulse D2", "asterix.20_1_9_100_uap_group_571", FT_UINT8, BASE_DEC, VALS(value_map_24), 0x0, NULL, HFILL } },
{ &expand_var_1449, { "QB4 : Quality Pulse B4", "asterix.20_1_9_100_uap_group_572", FT_UINT8, BASE_DEC, VALS(value_map_23), 0x0, NULL, HFILL } },
{ &expand_var_1450, { "QD4 : Quality Pulse D4", "asterix.20_1_9_100_uap_group_573", FT_UINT8, BASE_DEC, VALS(value_map_29), 0x0, NULL, HFILL } },
{ &expand_var_1451, { "220 : Target Address", "asterix.20_1_9_220_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1452, { "245 : Target Identification", "asterix.20_1_9_245_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1453, { "STI", "asterix.20_1_9_245_uap_group_591", FT_UINT8, BASE_DEC, VALS(value_map_348), 0x0, NULL, HFILL } },
{ &expand_var_1454, { "CHR : Characters 1-8 (coded on 6 Bits Each) Defining Target Identification", "asterix.20_1_9_245_uap_group_592", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1455, { "110 : Measured Height (Local Cartesian Coordinates) [ft]", "asterix.20_1_9_110_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1456, { "105 : Geometric Height (WGS-84) [ft]", "asterix.20_1_9_105_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1457, { "210 : Calculated Acceleration", "asterix.20_1_9_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1458, { "AX [m/s²]", "asterix.20_1_9_210_uap_group_582", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1459, { "AY [m/s²]", "asterix.20_1_9_210_uap_group_583", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1460, { "300 : Vehicle Fleet Identification", "asterix.20_1_9_300_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_186), 0x0, NULL, HFILL } },
{ &expand_var_1461, { "310 : Pre-programmed Message", "asterix.20_1_9_310_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1462, { "TRB", "asterix.20_1_9_310_uap_group_250", FT_UINT8, BASE_DEC, VALS(value_map_187), 0x0, NULL, HFILL } },
{ &expand_var_1463, { "MSG", "asterix.20_1_9_310_uap_group_596", FT_UINT8, BASE_DEC, VALS(value_map_219), 0x0, NULL, HFILL } },
{ &expand_var_1464, { "500 : Position Accuracy", "asterix.20_1_9_500_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1465, { "DOP : DOP of Position", "asterix.20_1_9_500_990_compound_990_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1466, { "X : DOP (X-Component) []", "asterix.20_1_9_500_990_compound_990_group_605", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1467, { "Y : DOP (Y-Component) []", "asterix.20_1_9_500_990_compound_990_group_606", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1468, { "XY : DOP (Correlation XY) []", "asterix.20_1_9_500_990_compound_990_group_607", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1469, { "SDP : Standard Deviation of Position", "asterix.20_1_9_500_994_compound_994_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1470, { "X : SDP (X-Component) [m]", "asterix.20_1_9_500_994_compound_994_group_608", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1471, { "Y : SDP (Y-Component) [m]", "asterix.20_1_9_500_994_compound_994_group_609", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1472, { "XY : SDP (Correlation XY) []", "asterix.20_1_9_500_994_compound_994_group_610", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1473, { "SDH : Standard Deviation of Geometric Height (WGS 84) [m]", "asterix.20_1_9_500_995_compound_995_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1474, { "400 : Contributing Devices", "asterix.20_1_9_400_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1475, { "400 : Contributing Devices", "asterix.20_1_9_400_rep26_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1476, { "BIT1 : TU1/RU1 Contribution", "asterix.20_1_9_400_rep26_group_597", FT_UINT8, BASE_DEC, VALS(value_map_349), 0x0, NULL, HFILL } },
{ &expand_var_1477, { "BIT2 : TU2/RU2 Contribution", "asterix.20_1_9_400_rep26_group_598", FT_UINT8, BASE_DEC, VALS(value_map_350), 0x0, NULL, HFILL } },
{ &expand_var_1478, { "BIT3 : TU3/RU3 Contribution", "asterix.20_1_9_400_rep26_group_599", FT_UINT8, BASE_DEC, VALS(value_map_351), 0x0, NULL, HFILL } },
{ &expand_var_1479, { "BIT4 : TU4/RU4 Contribution", "asterix.20_1_9_400_rep26_group_600", FT_UINT8, BASE_DEC, VALS(value_map_352), 0x0, NULL, HFILL } },
{ &expand_var_1480, { "BIT5 : TU5/RU5 Contribution", "asterix.20_1_9_400_rep26_group_601", FT_UINT8, BASE_DEC, VALS(value_map_353), 0x0, NULL, HFILL } },
{ &expand_var_1481, { "BIT6 : TU6/RU6 Contribution", "asterix.20_1_9_400_rep26_group_602", FT_UINT8, BASE_DEC, VALS(value_map_354), 0x0, NULL, HFILL } },
{ &expand_var_1482, { "BIT7 : TU7/RU7 Contribution", "asterix.20_1_9_400_rep26_group_603", FT_UINT8, BASE_DEC, VALS(value_map_355), 0x0, NULL, HFILL } },
{ &expand_var_1483, { "BIT8 : TU8/RU8 Contribution", "asterix.20_1_9_400_rep26_group_604", FT_UINT8, BASE_DEC, VALS(value_map_356), 0x0, NULL, HFILL } },
{ &expand_var_1484, { "250 : Mode S MB Data", "asterix.20_1_9_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1485, { "250 : Mode S MB Data", "asterix.20_1_9_250_rep27_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1486, { "MBDATA : 56-bit Message Conveying Mode S Comm B Message Data", "asterix.20_1_9_250_rep27_group_593", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1487, { "BDS1 : Comm B Data Buffer Store 1 Address", "asterix.20_1_9_250_rep27_group_594", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1488, { "BDS2 : Comm B Data Buffer Store 2 Address", "asterix.20_1_9_250_rep27_group_595", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1489, { "230 : Communications/ACAS Capability and Flight Status", "asterix.20_1_9_230_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1490, { "COM : Communications Capability of the Transponder", "asterix.20_1_9_230_uap_group_584", FT_UINT8, BASE_DEC, VALS(value_map_221), 0x0, NULL, HFILL } },
{ &expand_var_1491, { "STAT : Flight Status", "asterix.20_1_9_230_uap_group_585", FT_UINT8, BASE_DEC, VALS(value_map_347), 0x0, NULL, HFILL } },
{ &expand_var_1492, { "MSSC : Mode-S Specific Service Capability", "asterix.20_1_9_230_uap_group_586", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_1493, { "ARC : Altitude Reporting Capability", "asterix.20_1_9_230_uap_group_587", FT_UINT8, BASE_DEC, VALS(value_map_224), 0x0, NULL, HFILL } },
{ &expand_var_1494, { "AIC : Aircraft Identification Capability", "asterix.20_1_9_230_uap_group_588", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_1495, { "B1A : BDS 1,0 Bit 16", "asterix.20_1_9_230_uap_group_589", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1496, { "B1B : BDS 1,0 Bits 37/40", "asterix.20_1_9_230_uap_group_590", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1497, { "260 : ACAS Resolution Advisory Report", "asterix.20_1_9_260_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1498, { "030 : Warning/Error Conditions", "asterix.20_1_9_030_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1499, { "030 : Warning/Error Conditions", "asterix.20_1_9_030_rep28_element", FT_UINT8, BASE_DEC, VALS(value_map_342), 0x0, NULL, HFILL } },
{ &expand_var_1500, { "055 : Mode-1 Code in Octal Representation", "asterix.20_1_9_055_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1501, { "V : Validated", "asterix.20_1_9_055_uap_group_554", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_1502, { "G : Garbled", "asterix.20_1_9_055_uap_group_555", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_1503, { "L", "asterix.20_1_9_055_uap_group_558", FT_UINT8, BASE_DEC, VALS(value_map_344), 0x0, NULL, HFILL } },
{ &expand_var_1504, { "MODE1 : Mode-1 Code in Octal Representation", "asterix.20_1_9_055_uap_group_559", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1505, { "050 : Mode-2 Code in Octal Representation", "asterix.20_1_9_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1506, { "V : Validated", "asterix.20_1_9_050_uap_group_554", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_1507, { "G : Garbled", "asterix.20_1_9_050_uap_group_555", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_1508, { "L", "asterix.20_1_9_050_uap_group_556", FT_UINT8, BASE_DEC, VALS(value_map_343), 0x0, NULL, HFILL } },
{ &expand_var_1509, { "MODE2 : Mode-2 Reply in Octal Representation", "asterix.20_1_9_050_uap_group_557", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1510, { "RE : Reserved Expansion Field", "asterix.20_1_9_26_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1511, { "SP : Special Purpose Field", "asterix.20_1_9_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1512, { "010 : Data Source Identifier", "asterix.20_1_10_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1513, { "020 : Target Report Descriptor", "asterix.20_1_10_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1514, { "SSR", "asterix.20_1_10_020_uap_extended_SSR", FT_UINT8, BASE_DEC, VALS(value_map_334), 0x0, NULL, HFILL } },
{ &expand_var_1515, { "MS", "asterix.20_1_10_020_uap_extended_MS", FT_UINT8, BASE_DEC, VALS(value_map_335), 0x0, NULL, HFILL } },
{ &expand_var_1516, { "HF", "asterix.20_1_10_020_uap_extended_HF", FT_UINT8, BASE_DEC, VALS(value_map_336), 0x0, NULL, HFILL } },
{ &expand_var_1517, { "VDL4", "asterix.20_1_10_020_uap_extended_VDL4", FT_UINT8, BASE_DEC, VALS(value_map_337), 0x0, NULL, HFILL } },
{ &expand_var_1518, { "UAT", "asterix.20_1_10_020_uap_extended_UAT", FT_UINT8, BASE_DEC, VALS(value_map_338), 0x0, NULL, HFILL } },
{ &expand_var_1519, { "DME", "asterix.20_1_10_020_uap_extended_DME", FT_UINT8, BASE_DEC, VALS(value_map_339), 0x0, NULL, HFILL } },
{ &expand_var_1520, { "OT", "asterix.20_1_10_020_uap_extended_OT", FT_UINT8, BASE_DEC, VALS(value_map_340), 0x0, NULL, HFILL } },
{ &expand_var_1521, { "FX", "asterix.20_1_10_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1522, { "RAB", "asterix.20_1_10_020_uap_extended_RAB", FT_UINT8, BASE_DEC, VALS(value_map_341), 0x0, NULL, HFILL } },
{ &expand_var_1523, { "SPI", "asterix.20_1_10_020_uap_extended_SPI", FT_UINT8, BASE_DEC, VALS(value_map_167), 0x0, NULL, HFILL } },
{ &expand_var_1524, { "CHN", "asterix.20_1_10_020_uap_extended_CHN", FT_UINT8, BASE_DEC, VALS(value_map_159), 0x0, NULL, HFILL } },
{ &expand_var_1525, { "GBS", "asterix.20_1_10_020_uap_extended_GBS", FT_UINT8, BASE_DEC, VALS(value_map_160), 0x0, NULL, HFILL } },
{ &expand_var_1526, { "CRT", "asterix.20_1_10_020_uap_extended_CRT", FT_UINT8, BASE_DEC, VALS(value_map_161), 0x0, NULL, HFILL } },
{ &expand_var_1527, { "SIM", "asterix.20_1_10_020_uap_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_162), 0x0, NULL, HFILL } },
{ &expand_var_1528, { "TST", "asterix.20_1_10_020_uap_extended_TST", FT_UINT8, BASE_DEC, VALS(value_map_163), 0x0, NULL, HFILL } },
{ &expand_var_1529, { "FX", "asterix.20_1_10_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1530, { "CF", "asterix.20_1_10_020_uap_extended_CF", FT_UINT8, BASE_DEC, VALS(value_map_358), 0x0, NULL, HFILL } },
{ &expand_var_1531, { "FX", "asterix.20_1_10_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1532, { "140 : Time of Day [s]", "asterix.20_1_10_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1533, { "041 : Position In WGS-84 Coordinates", "asterix.20_1_10_041_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1534, { "042 : Position in Cartesian Coordinates", "asterix.20_1_10_042_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1535, { "161 : Track Number", "asterix.20_1_10_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1536, { "170 : Track Status", "asterix.20_1_10_170_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1537, { "CNF", "asterix.20_1_10_170_uap_extended_CNF", FT_UINT8, BASE_DEC, VALS(value_map_346), 0x0, NULL, HFILL } },
{ &expand_var_1538, { "TRE", "asterix.20_1_10_170_uap_extended_TRE", FT_UINT8, BASE_DEC, VALS(value_map_46), 0x0, NULL, HFILL } },
{ &expand_var_1539, { "CST", "asterix.20_1_10_170_uap_extended_CST", FT_UINT8, BASE_DEC, VALS(value_map_359), 0x0, NULL, HFILL } },
{ &expand_var_1540, { "CDM", "asterix.20_1_10_170_uap_extended_CDM", FT_UINT8, BASE_DEC, VALS(value_map_139), 0x0, NULL, HFILL } },
{ &expand_var_1541, { "MAH", "asterix.20_1_10_170_uap_extended_MAH", FT_UINT8, BASE_DEC, VALS(value_map_175), 0x0, NULL, HFILL } },
{ &expand_var_1542, { "STH", "asterix.20_1_10_170_uap_extended_STH", FT_UINT8, BASE_DEC, VALS(value_map_177), 0x0, NULL, HFILL } },
{ &expand_var_1543, { "FX", "asterix.20_1_10_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1544, { "GHO", "asterix.20_1_10_170_uap_extended_GHO", FT_UINT8, BASE_DEC, VALS(value_map_45), 0x0, NULL, HFILL } },
{ &expand_var_1545, { "FX", "asterix.20_1_10_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1546, { "070 : Mode-3/A Code in Octal Representation", "asterix.20_1_10_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1547, { "202 : Calculated Track Velocity in Cartesian Coordinates", "asterix.20_1_10_202_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1548, { "090 : Flight Level in Binary Representation", "asterix.20_1_10_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1549, { "100 : Mode C Code", "asterix.20_1_10_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1550, { "220 : Target Address", "asterix.20_1_10_220_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1551, { "245 : Target Identification", "asterix.20_1_10_245_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1552, { "110 : Measured Height (Local Cartesian Coordinates) [ft]", "asterix.20_1_10_110_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1553, { "105 : Geometric Height (WGS-84) [ft]", "asterix.20_1_10_105_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1554, { "210 : Calculated Acceleration", "asterix.20_1_10_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1555, { "300 : Vehicle Fleet Identification", "asterix.20_1_10_300_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_186), 0x0, NULL, HFILL } },
{ &expand_var_1556, { "310 : Pre-programmed Message", "asterix.20_1_10_310_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1557, { "500 : Position Accuracy", "asterix.20_1_10_500_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1558, { "400 : Contributing Devices", "asterix.20_1_10_400_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1559, { "250 : BDS Register Data", "asterix.20_1_10_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1560, { "250 : BDS Register Data", "asterix.20_1_10_250_rep29_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1561, { "BDSREGISTER : 56-bit Message Conveying Mode S Comm B Message Data", "asterix.20_1_10_250_rep29_group_613", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1562, { "BDS1 : Comm B Data Buffer Store 1 Address", "asterix.20_1_10_250_rep29_group_594", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1563, { "BDS2 : Comm B Data Buffer Store 2 Address", "asterix.20_1_10_250_rep29_group_595", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1564, { "230 : Communications/ACAS Capability and Flight Status", "asterix.20_1_10_230_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1565, { "260 : ACAS Resolution Advisory Report", "asterix.20_1_10_260_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1566, { "030 : Warning/Error Conditions", "asterix.20_1_10_030_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1567, { "055 : Mode-1 Code in Octal Representation", "asterix.20_1_10_055_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1568, { "050 : Mode-2 Code in Octal Representation", "asterix.20_1_10_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1569, { "RE : Reserved Expansion Field", "asterix.20_1_10_26_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1570, { "SP : Special Purpose Field", "asterix.20_1_10_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1571, { "010 : Data Source Identifier", "asterix.20_1_11_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1572, { "020 : Target Report Descriptor", "asterix.20_1_11_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1573, { "140 : Time of Day [s]", "asterix.20_1_11_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1574, { "041 : Position In WGS-84 Coordinates", "asterix.20_1_11_041_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1575, { "042 : Position in Cartesian Coordinates", "asterix.20_1_11_042_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1576, { "161 : Track Number", "asterix.20_1_11_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1577, { "170 : Track Status", "asterix.20_1_11_170_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1578, { "070 : Mode-3/A Code in Octal Representation", "asterix.20_1_11_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1579, { "202 : Calculated Track Velocity in Cartesian Coordinates", "asterix.20_1_11_202_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1580, { "090 : Flight Level in Binary Representation", "asterix.20_1_11_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1581, { "100 : Mode C Code", "asterix.20_1_11_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1582, { "220 : Target Address", "asterix.20_1_11_220_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1583, { "245 : Target Identification", "asterix.20_1_11_245_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1584, { "110 : Measured Height (Local Cartesian Coordinates) [ft]", "asterix.20_1_11_110_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1585, { "105 : Geometric Height (WGS-84) [ft]", "asterix.20_1_11_105_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1586, { "210 : Calculated Acceleration", "asterix.20_1_11_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1587, { "300 : Vehicle Fleet Identification", "asterix.20_1_11_300_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_186), 0x0, NULL, HFILL } },
{ &expand_var_1588, { "310 : Pre-programmed Message", "asterix.20_1_11_310_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1589, { "500 : Position Accuracy", "asterix.20_1_11_500_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1590, { "400 : Contributing Devices", "asterix.20_1_11_400_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1591, { "250 : BDS Register Data", "asterix.20_1_11_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1592, { "250 : BDS Register Data", "asterix.20_1_11_250_rep30_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1593, { "BDSDATA : 56-bit Message Conveying BDS Register Data", "asterix.20_1_11_250_rep30_group_615", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1594, { "BDS1 : BDS Register Address 1", "asterix.20_1_11_250_rep30_group_616", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1595, { "BDS2 : BDS Register Address 2", "asterix.20_1_11_250_rep30_group_617", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1596, { "230 : Communications/ACAS Capability and Flight Status", "asterix.20_1_11_230_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1597, { "COM : Communications Capability of the Transponder", "asterix.20_1_11_230_uap_group_584", FT_UINT8, BASE_DEC, VALS(value_map_221), 0x0, NULL, HFILL } },
{ &expand_var_1598, { "STAT : Flight Status", "asterix.20_1_11_230_uap_group_585", FT_UINT8, BASE_DEC, VALS(value_map_347), 0x0, NULL, HFILL } },
{ &expand_var_1599, { "CASEVN : CAS Extended Version Number", "asterix.20_1_11_230_uap_group_614", FT_UINT8, BASE_DEC, VALS(value_map_360), 0x0, NULL, HFILL } },
{ &expand_var_1600, { "MSSC : Mode-S Specific Service Capability", "asterix.20_1_11_230_uap_group_586", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_1601, { "ARC : Altitude Reporting Capability", "asterix.20_1_11_230_uap_group_587", FT_UINT8, BASE_DEC, VALS(value_map_224), 0x0, NULL, HFILL } },
{ &expand_var_1602, { "AIC : Aircraft Identification Capability", "asterix.20_1_11_230_uap_group_588", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_1603, { "B1A : BDS 1,0 Bit 16", "asterix.20_1_11_230_uap_group_589", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1604, { "B1B : BDS 1,0 Bits 37/40", "asterix.20_1_11_230_uap_group_590", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1605, { "260 : ACAS Resolution Advisory Report", "asterix.20_1_11_260_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1606, { "030 : Warning/Error Conditions", "asterix.20_1_11_030_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1607, { "055 : Mode-1 Code in Octal Representation", "asterix.20_1_11_055_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1608, { "050 : Mode-2 Code in Octal Representation", "asterix.20_1_11_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1609, { "RE : Reserved Expansion Field", "asterix.20_1_11_26_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1610, { "SP : Special Purpose Field", "asterix.20_1_11_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1611, { "010 : Data Source Identification", "asterix.21_0_23_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1612, { "040 : Target Report Descriptor", "asterix.21_0_23_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1613, { "DCR : Differential Correction", "asterix.21_0_23_040_uap_group_618", FT_UINT8, BASE_DEC, VALS(value_map_158), 0x0, NULL, HFILL } },
{ &expand_var_1614, { "GBS : Ground Bit Setting", "asterix.21_0_23_040_uap_group_619", FT_UINT8, BASE_DEC, VALS(value_map_363), 0x0, NULL, HFILL } },
{ &expand_var_1615, { "SIM : Simulated Target", "asterix.21_0_23_040_uap_group_620", FT_UINT8, BASE_DEC, VALS(value_map_162), 0x0, NULL, HFILL } },
{ &expand_var_1616, { "TST : Test Target", "asterix.21_0_23_040_uap_group_621", FT_UINT8, BASE_DEC, VALS(value_map_163), 0x0, NULL, HFILL } },
{ &expand_var_1617, { "RAB : Report Type", "asterix.21_0_23_040_uap_group_622", FT_UINT8, BASE_DEC, VALS(value_map_164), 0x0, NULL, HFILL } },
{ &expand_var_1618, { "SAA : Selected Altitude Available", "asterix.21_0_23_040_uap_group_623", FT_UINT8, BASE_DEC, VALS(value_map_364), 0x0, NULL, HFILL } },
{ &expand_var_1619, { "SPI : Special Position Identification", "asterix.21_0_23_040_uap_group_624", FT_UINT8, BASE_DEC, VALS(value_map_167), 0x0, NULL, HFILL } },
{ &expand_var_1620, { "ATP : Address Type", "asterix.21_0_23_040_uap_group_625", FT_UINT8, BASE_DEC, VALS(value_map_365), 0x0, NULL, HFILL } },
{ &expand_var_1621, { "ARC : Altitude Reporting Capability", "asterix.21_0_23_040_uap_group_626", FT_UINT8, BASE_DEC, VALS(value_map_366), 0x0, NULL, HFILL } },
{ &expand_var_1622, { "030 : Time of Day [s]", "asterix.21_0_23_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1623, { "130 : Position in WGS-84 Co-ordinates", "asterix.21_0_23_130_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1624, { "LAT : Latitude [°]", "asterix.21_0_23_130_uap_group_645", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1625, { "LON : Longitude [°]", "asterix.21_0_23_130_uap_group_646", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1626, { "080 : Target Address", "asterix.21_0_23_080_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1627, { "140 : Geometric Altitude [ft]", "asterix.21_0_23_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1628, { "090 : Figure of Merit", "asterix.21_0_23_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1629, { "AC : ACAS Capabilities", "asterix.21_0_23_090_uap_group_627", FT_UINT8, BASE_DEC, VALS(value_map_367), 0x0, NULL, HFILL } },
{ &expand_var_1630, { "MN : Multiple Navigation Aids", "asterix.21_0_23_090_uap_group_628", FT_UINT8, BASE_DEC, VALS(value_map_368), 0x0, NULL, HFILL } },
{ &expand_var_1631, { "DC : Differencial Correction", "asterix.21_0_23_090_uap_group_629", FT_UINT8, BASE_DEC, VALS(value_map_369), 0x0, NULL, HFILL } },
{ &expand_var_1632, { "PA : Position Accuracy []", "asterix.21_0_23_090_uap_group_630", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1633, { "210 : Link Technology Indicator", "asterix.21_0_23_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1634, { "DTI : Cockpit Display of Traffic Information", "asterix.21_0_23_210_uap_group_659", FT_UINT8, BASE_DEC, VALS(value_map_391), 0x0, NULL, HFILL } },
{ &expand_var_1635, { "MDS : Mode-S Extended Squitter", "asterix.21_0_23_210_uap_group_660", FT_UINT8, BASE_DEC, VALS(value_map_392), 0x0, NULL, HFILL } },
{ &expand_var_1636, { "UAT : UAT", "asterix.21_0_23_210_uap_group_661", FT_UINT8, BASE_DEC, VALS(value_map_392), 0x0, NULL, HFILL } },
{ &expand_var_1637, { "VDL : VDL Mode 4", "asterix.21_0_23_210_uap_group_662", FT_UINT8, BASE_DEC, VALS(value_map_392), 0x0, NULL, HFILL } },
{ &expand_var_1638, { "OTR : Other Technology", "asterix.21_0_23_210_uap_group_663", FT_UINT8, BASE_DEC, VALS(value_map_392), 0x0, NULL, HFILL } },
{ &expand_var_1639, { "230 : Roll Angle [°]", "asterix.21_0_23_230_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1640, { "145 : Flight Level [FL]", "asterix.21_0_23_145_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1641, { "150 : Air Speed", "asterix.21_0_23_150_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1642, { "IM", "asterix.21_0_23_150_uap_group_653", FT_UINT8, BASE_DEC, VALS(value_map_385), 0x0, NULL, HFILL } },
{ &expand_var_1643, { "AS : Air Speed (IAS or Mach)", "asterix.21_0_23_150_uap_group_654", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1644, { "151 : True Airspeed [kt]", "asterix.21_0_23_151_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1645, { "152 : Magnetic Heading [°]", "asterix.21_0_23_152_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1646, { "155 : Barometric Vertical Rate [ft/min]", "asterix.21_0_23_155_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1647, { "157 : Geometric Vertical Rate [ft/min]", "asterix.21_0_23_157_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1648, { "160 : Ground Vector", "asterix.21_0_23_160_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1649, { "GS : Ground Speed in Two's Complement Form Referenced to WGS84 [NM/s]", "asterix.21_0_23_160_uap_group_655", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1650, { "TA : Track Angle [°]", "asterix.21_0_23_160_uap_group_656", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1651, { "165 : Rate Of Turn", "asterix.21_0_23_165_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1652, { "TI(Turn Indicator)", "asterix.21_0_23_165_uap_extended_TI", FT_UINT8, BASE_DEC, VALS(value_map_388), 0x0, NULL, HFILL } },
{ &expand_var_1653, { "FX", "asterix.21_0_23_165_uap_extended_165_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1654, { "ROT(Rate of Turn) [°/s]", "asterix.21_0_23_165_uap_extended_ROT", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1655, { "FX", "asterix.21_0_23_165_uap_extended_165_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1656, { "170 : Target Identification", "asterix.21_0_23_170_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1657, { "095 : Velocity Accuracy", "asterix.21_0_23_095_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1658, { "032 : Time of Day Accuracy [s]", "asterix.21_0_23_032_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1659, { "200 : Target Status", "asterix.21_0_23_200_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_390), 0x0, NULL, HFILL } },
{ &expand_var_1660, { "020 : Emitter Category", "asterix.21_0_23_020_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_361), 0x0, NULL, HFILL } },
{ &expand_var_1661, { "220 : Met Information", "asterix.21_0_23_220_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1662, { "WS : Wind Speed [kt]", "asterix.21_0_23_220_1080_compound_1080_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1663, { "WD : Wind Direction [°]", "asterix.21_0_23_220_1081_compound_1081_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1664, { "TMP : Temperature [°C]", "asterix.21_0_23_220_1082_compound_1082_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1665, { "TRB : Turbulence", "asterix.21_0_23_220_1083_compound_1083_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1666, { "146 : Intermediate State Selected Altitude", "asterix.21_0_23_146_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1667, { "SAS : Source Availability", "asterix.21_0_23_146_uap_group_647", FT_UINT8, BASE_DEC, VALS(value_map_382), 0x0, NULL, HFILL } },
{ &expand_var_1668, { "SRC : Source", "asterix.21_0_23_146_uap_group_648", FT_UINT8, BASE_DEC, VALS(value_map_383), 0x0, NULL, HFILL } },
{ &expand_var_1669, { "ALT : Altitude [ft]", "asterix.21_0_23_146_uap_group_649", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1670, { "148 : Final State Selected Altitude", "asterix.21_0_23_148_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1671, { "MV : Manage Vertical Mode", "asterix.21_0_23_148_uap_group_650", FT_UINT8, BASE_DEC, VALS(value_map_384), 0x0, NULL, HFILL } },
{ &expand_var_1672, { "AH : Altitude Hold Mode", "asterix.21_0_23_148_uap_group_651", FT_UINT8, BASE_DEC, VALS(value_map_384), 0x0, NULL, HFILL } },
{ &expand_var_1673, { "AM : Approach Mode", "asterix.21_0_23_148_uap_group_652", FT_UINT8, BASE_DEC, VALS(value_map_384), 0x0, NULL, HFILL } },
{ &expand_var_1674, { "ALT : Altitude [ft]", "asterix.21_0_23_148_uap_group_649", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1675, { "110 : Trajectory Intent", "asterix.21_0_23_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1676, { "TIS : Trajectory Intent Status", "asterix.21_0_23_110_1031_compound_1031_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1677, { "NAV", "asterix.21_0_23_110_1031_compound_1031_extended_NAV", FT_UINT8, BASE_DEC, VALS(value_map_371), 0x0, NULL, HFILL } },
{ &expand_var_1678, { "NVB", "asterix.21_0_23_110_1031_compound_1031_extended_NVB", FT_UINT8, BASE_DEC, VALS(value_map_372), 0x0, NULL, HFILL } },
{ &expand_var_1679, { "FX", "asterix.21_0_23_110_1031_compound_1031_extended_TIS_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1680, { "TID : Trajectory Intent Data", "asterix.21_0_23_110_1044_compound_1044_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1681, { "TID : Trajectory Intent Data", "asterix.21_0_23_110_rep31_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1682, { "TCA", "asterix.21_0_23_110_rep31_group_633", FT_UINT8, BASE_DEC, VALS(value_map_373), 0x0, NULL, HFILL } },
{ &expand_var_1683, { "NC", "asterix.21_0_23_110_rep31_group_634", FT_UINT8, BASE_DEC, VALS(value_map_374), 0x0, NULL, HFILL } },
{ &expand_var_1684, { "TCPN", "asterix.21_0_23_110_rep31_group_635", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1685, { "ALT : Altitude in Two's Complement Form [ft]", "asterix.21_0_23_110_rep31_group_636", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1686, { "LAT : In WGS.84 in Two's Complement [°]", "asterix.21_0_23_110_rep31_group_637", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1687, { "LON : In WGS.84 in Two's Complement [°]", "asterix.21_0_23_110_rep31_group_638", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1688, { "PT : Point Type", "asterix.21_0_23_110_rep31_group_639", FT_UINT8, BASE_DEC, VALS(value_map_377), 0x0, NULL, HFILL } },
{ &expand_var_1689, { "TD", "asterix.21_0_23_110_rep31_group_640", FT_UINT8, BASE_DEC, VALS(value_map_378), 0x0, NULL, HFILL } },
{ &expand_var_1690, { "TRA", "asterix.21_0_23_110_rep31_group_641", FT_UINT8, BASE_DEC, VALS(value_map_379), 0x0, NULL, HFILL } },
{ &expand_var_1691, { "TOA", "asterix.21_0_23_110_rep31_group_642", FT_UINT8, BASE_DEC, VALS(value_map_380), 0x0, NULL, HFILL } },
{ &expand_var_1692, { "TOV : Time Over Point [s]", "asterix.21_0_23_110_rep31_group_643", FT_UINT24, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1693, { "TTR : TCP Turn Radius [NM]", "asterix.21_0_23_110_rep31_group_644", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1694, { "RE : Reserved Expansion Field", "asterix.21_0_23_33_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1695, { "SP : Special Purpose Field", "asterix.21_0_23_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1696, { "010 : Data Source Identification", "asterix.21_0_24_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1697, { "040 : Target Report Descriptor", "asterix.21_0_24_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1698, { "030 : Time of Day [s]", "asterix.21_0_24_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1699, { "130 : Position in WGS-84 Co-ordinates", "asterix.21_0_24_130_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1700, { "LAT : Latitude [°]", "asterix.21_0_24_130_uap_group_664", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1701, { "LON : Longitude [°]", "asterix.21_0_24_130_uap_group_665", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1702, { "080 : Target Address", "asterix.21_0_24_080_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1703, { "140 : Geometric Altitude [ft]", "asterix.21_0_24_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1704, { "090 : Figure of Merit", "asterix.21_0_24_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1705, { "210 : Link Technology Indicator", "asterix.21_0_24_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1706, { "230 : Roll Angle [°]", "asterix.21_0_24_230_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1707, { "145 : Flight Level [FL]", "asterix.21_0_24_145_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1708, { "150 : Air Speed", "asterix.21_0_24_150_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1709, { "151 : True Airspeed [kt]", "asterix.21_0_24_151_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1710, { "152 : Magnetic Heading [°]", "asterix.21_0_24_152_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1711, { "155 : Barometric Vertical Rate [ft/min]", "asterix.21_0_24_155_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1712, { "157 : Geometric Vertical Rate [ft/min]", "asterix.21_0_24_157_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1713, { "160 : Ground Vector", "asterix.21_0_24_160_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1714, { "165 : Rate Of Turn", "asterix.21_0_24_165_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1715, { "170 : Target Identification", "asterix.21_0_24_170_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1716, { "095 : Velocity Accuracy", "asterix.21_0_24_095_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1717, { "032 : Time of Day Accuracy [s]", "asterix.21_0_24_032_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1718, { "200 : Target Status", "asterix.21_0_24_200_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_390), 0x0, NULL, HFILL } },
{ &expand_var_1719, { "020 : Emitter Category", "asterix.21_0_24_020_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_361), 0x0, NULL, HFILL } },
{ &expand_var_1720, { "220 : Met Information", "asterix.21_0_24_220_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1721, { "146 : Intermediate State Selected Altitude", "asterix.21_0_24_146_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1722, { "148 : Final State Selected Altitude", "asterix.21_0_24_148_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1723, { "110 : Trajectory Intent", "asterix.21_0_24_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1724, { "RE : Reserved Expansion Field", "asterix.21_0_24_33_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1725, { "SP : Special Purpose Field", "asterix.21_0_24_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1726, { "010 : Data Source Identification", "asterix.21_0_25_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1727, { "040 : Target Report Descriptor", "asterix.21_0_25_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1728, { "030 : Time of Day [s]", "asterix.21_0_25_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1729, { "130 : Position in WGS-84 Co-ordinates", "asterix.21_0_25_130_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1730, { "080 : Target Address", "asterix.21_0_25_080_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1731, { "140 : Geometric Altitude [ft]", "asterix.21_0_25_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1732, { "090 : Figure of Merit", "asterix.21_0_25_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1733, { "210 : Link Technology Indicator", "asterix.21_0_25_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1734, { "230 : Roll Angle [°]", "asterix.21_0_25_230_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1735, { "145 : Flight Level [FL]", "asterix.21_0_25_145_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1736, { "150 : Air Speed", "asterix.21_0_25_150_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1737, { "151 : True Airspeed [kt]", "asterix.21_0_25_151_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1738, { "152 : Magnetic Heading [°]", "asterix.21_0_25_152_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1739, { "155 : Barometric Vertical Rate [ft/min]", "asterix.21_0_25_155_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1740, { "157 : Geometric Vertical Rate [ft/min]", "asterix.21_0_25_157_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1741, { "160 : Ground Vector", "asterix.21_0_25_160_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1742, { "165 : Rate Of Turn", "asterix.21_0_25_165_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1743, { "170 : Target Identification", "asterix.21_0_25_170_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1744, { "095 : Velocity Accuracy", "asterix.21_0_25_095_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1745, { "032 : Time of Day Accuracy [s]", "asterix.21_0_25_032_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1746, { "200 : Target Status", "asterix.21_0_25_200_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_390), 0x0, NULL, HFILL } },
{ &expand_var_1747, { "020 : Emitter Category", "asterix.21_0_25_020_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_361), 0x0, NULL, HFILL } },
{ &expand_var_1748, { "220 : Met Information", "asterix.21_0_25_220_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1749, { "146 : Intermediate State Selected Altitude", "asterix.21_0_25_146_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1750, { "148 : Final State Selected Altitude", "asterix.21_0_25_148_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1751, { "110 : Trajectory Intent", "asterix.21_0_25_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1752, { "RE : Reserved Expansion Field", "asterix.21_0_25_33_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1753, { "SP : Special Purpose Field", "asterix.21_0_25_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1754, { "010 : Data Source Identification", "asterix.21_0_26_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1755, { "040 : Target Report Descriptor", "asterix.21_0_26_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1756, { "030 : Time of Day [s]", "asterix.21_0_26_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1757, { "130 : Position in WGS-84 Co-ordinates", "asterix.21_0_26_130_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1758, { "080 : Target Address", "asterix.21_0_26_080_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1759, { "140 : Geometric Altitude [ft]", "asterix.21_0_26_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1760, { "090 : Figure of Merit", "asterix.21_0_26_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1761, { "210 : Link Technology Indicator", "asterix.21_0_26_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1762, { "230 : Roll Angle [°]", "asterix.21_0_26_230_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1763, { "145 : Flight Level [FL]", "asterix.21_0_26_145_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1764, { "150 : Air Speed", "asterix.21_0_26_150_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1765, { "151 : True Airspeed [kt]", "asterix.21_0_26_151_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1766, { "152 : Magnetic Heading [°]", "asterix.21_0_26_152_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1767, { "155 : Barometric Vertical Rate [ft/min]", "asterix.21_0_26_155_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1768, { "157 : Geometric Vertical Rate [ft/min]", "asterix.21_0_26_157_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1769, { "160 : Ground Vector", "asterix.21_0_26_160_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1770, { "165 : Rate Of Turn", "asterix.21_0_26_165_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1771, { "170 : Target Identification", "asterix.21_0_26_170_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1772, { "095 : Velocity Accuracy", "asterix.21_0_26_095_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1773, { "032 : Time of Day Accuracy [s]", "asterix.21_0_26_032_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1774, { "200 : Target Status", "asterix.21_0_26_200_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_390), 0x0, NULL, HFILL } },
{ &expand_var_1775, { "020 : Emitter Category", "asterix.21_0_26_020_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_361), 0x0, NULL, HFILL } },
{ &expand_var_1776, { "220 : Met Information", "asterix.21_0_26_220_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1777, { "146 : Intermediate State Selected Altitude", "asterix.21_0_26_146_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1778, { "148 : Final State Selected Altitude", "asterix.21_0_26_148_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1779, { "110 : Trajectory Intent", "asterix.21_0_26_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1780, { "070 : Mode 3/A Code in Octal Representation", "asterix.21_0_26_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1781, { "V", "asterix.21_0_26_070_uap_group_454", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_1782, { "G", "asterix.21_0_26_070_uap_group_457", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_1783, { "L", "asterix.21_0_26_070_uap_group_666", FT_UINT8, BASE_DEC, VALS(value_map_396), 0x0, NULL, HFILL } },
{ &expand_var_1784, { "MODE3A : Mode-3/A Reply in Octal Representation", "asterix.21_0_26_070_uap_group_667", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1785, { "131 : Signal Amplitude", "asterix.21_0_26_131_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1786, { "RE : Reserved Expansion Field", "asterix.21_0_26_33_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1787, { "SP : Special Purpose Field", "asterix.21_0_26_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1788, { "BPS : Barometric Pressure Setting", "asterix.21_1_4_1094_re_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1789, { "BPS : Barometric Pressure Setting [hPa]", "asterix.21_1_4_1094_re_group_668", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1790, { "SH : Selected Heading", "asterix.21_1_4_1098_re_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1791, { "HDR : Horizontal Reference Direction", "asterix.21_1_4_1098_re_group_669", FT_UINT8, BASE_DEC, VALS(value_map_398), 0x0, NULL, HFILL } },
{ &expand_var_1792, { "STAT : Selected Heading Status", "asterix.21_1_4_1098_re_group_670", FT_UINT8, BASE_DEC, VALS(value_map_399), 0x0, NULL, HFILL } },
{ &expand_var_1793, { "SH : Selected Heading [°]", "asterix.21_1_4_1098_re_group_671", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1794, { "NAV : Navigation Mode", "asterix.21_1_4_1103_re_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1795, { "AP : Autopilot", "asterix.21_1_4_1103_re_group_672", FT_UINT8, BASE_DEC, VALS(value_map_401), 0x0, NULL, HFILL } },
{ &expand_var_1796, { "VN : Vertical Navigation", "asterix.21_1_4_1103_re_group_673", FT_UINT8, BASE_DEC, VALS(value_map_402), 0x0, NULL, HFILL } },
{ &expand_var_1797, { "AH : Altitude Hold", "asterix.21_1_4_1103_re_group_674", FT_UINT8, BASE_DEC, VALS(value_map_403), 0x0, NULL, HFILL } },
{ &expand_var_1798, { "AM : Approach Mode", "asterix.21_1_4_1103_re_group_675", FT_UINT8, BASE_DEC, VALS(value_map_404), 0x0, NULL, HFILL } },
{ &expand_var_1799, { "GAO : GPS Antenna Offset", "asterix.21_1_4_1104_re_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1800, { "SGV : Surface Ground Vector", "asterix.21_1_4_1111_re_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1801, { "STP", "asterix.21_1_4_1111_re_extended_STP", FT_UINT8, BASE_DEC, VALS(value_map_405), 0x0, NULL, HFILL } },
{ &expand_var_1802, { "HTS", "asterix.21_1_4_1111_re_extended_HTS", FT_UINT8, BASE_DEC, VALS(value_map_406), 0x0, NULL, HFILL } },
{ &expand_var_1803, { "HTT", "asterix.21_1_4_1111_re_extended_HTT", FT_UINT8, BASE_DEC, VALS(value_map_407), 0x0, NULL, HFILL } },
{ &expand_var_1804, { "HRD", "asterix.21_1_4_1111_re_extended_HRD", FT_UINT8, BASE_DEC, VALS(value_map_398), 0x0, NULL, HFILL } },
{ &expand_var_1805, { "GSS(Ground Speed) [kt]", "asterix.21_1_4_1111_re_extended_GSS", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1806, { "FX", "asterix.21_1_4_1111_re_extended_SGV_FX_15", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1807, { "HGT(Heading/Ground Track Information) [°]", "asterix.21_1_4_1111_re_extended_HGT", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1808, { "FX", "asterix.21_1_4_1111_re_extended_SGV_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1809, { "STA : Aircraft Status", "asterix.21_1_4_1114_re_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1810, { "ES", "asterix.21_1_4_1114_re_extended_ES", FT_UINT8, BASE_DEC, VALS(value_map_409), 0x0, NULL, HFILL } },
{ &expand_var_1811, { "UAT", "asterix.21_1_4_1114_re_extended_UAT", FT_UINT8, BASE_DEC, VALS(value_map_410), 0x0, NULL, HFILL } },
{ &expand_var_1812, { "FX", "asterix.21_1_4_1114_re_extended_STA_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1813, { "TNH : True North Heading [°]", "asterix.21_1_4_1115_re_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1814, { "MES : Military Extended Squitter", "asterix.21_1_4_1143_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1815, { "SUM : Mode 5 Summary", "asterix.21_1_4_1143_1124_compound_1124_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1816, { "M5", "asterix.21_1_4_1143_1124_compound_1124_group_684", FT_UINT8, BASE_DEC, VALS(value_map_411), 0x0, NULL, HFILL } },
{ &expand_var_1817, { "ID", "asterix.21_1_4_1143_1124_compound_1124_group_685", FT_UINT8, BASE_DEC, VALS(value_map_412), 0x0, NULL, HFILL } },
{ &expand_var_1818, { "DA", "asterix.21_1_4_1143_1124_compound_1124_group_686", FT_UINT8, BASE_DEC, VALS(value_map_413), 0x0, NULL, HFILL } },
{ &expand_var_1819, { "M1", "asterix.21_1_4_1143_1124_compound_1124_group_687", FT_UINT8, BASE_DEC, VALS(value_map_414), 0x0, NULL, HFILL } },
{ &expand_var_1820, { "M2", "asterix.21_1_4_1143_1124_compound_1124_group_688", FT_UINT8, BASE_DEC, VALS(value_map_415), 0x0, NULL, HFILL } },
{ &expand_var_1821, { "M3", "asterix.21_1_4_1143_1124_compound_1124_group_689", FT_UINT8, BASE_DEC, VALS(value_map_416), 0x0, NULL, HFILL } },
{ &expand_var_1822, { "MC", "asterix.21_1_4_1143_1124_compound_1124_group_690", FT_UINT8, BASE_DEC, VALS(value_map_417), 0x0, NULL, HFILL } },
{ &expand_var_1823, { "PO", "asterix.21_1_4_1143_1124_compound_1124_group_691", FT_UINT8, BASE_DEC, VALS(value_map_418), 0x0, NULL, HFILL } },
{ &expand_var_1824, { "PNO : Mode 5 PIN / National Origin", "asterix.21_1_4_1143_1127_compound_1127_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1825, { "PIN : PIN Code", "asterix.21_1_4_1143_1127_compound_1127_group_692", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1826, { "NO : National Origin Code", "asterix.21_1_4_1143_1127_compound_1127_group_693", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1827, { "EM1 : Extended Mode 1 Code in Octal Representation", "asterix.21_1_4_1143_1130_compound_1130_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1828, { "V", "asterix.21_1_4_1143_1130_compound_1130_group_454", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_1829, { "L", "asterix.21_1_4_1143_1130_compound_1130_group_694", FT_UINT8, BASE_DEC, VALS(value_map_419), 0x0, NULL, HFILL } },
{ &expand_var_1830, { "EM1 : Extended Mode 1 Code in Octal Representation", "asterix.21_1_4_1143_1130_compound_1130_group_695", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1831, { "XP : X Pulse Presence", "asterix.21_1_4_1143_1137_compound_1137_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1832, { "XP : X-pulse from Mode 5 PIN Reply/report", "asterix.21_1_4_1143_1137_compound_1137_group_696", FT_UINT8, BASE_DEC, VALS(value_map_420), 0x0, NULL, HFILL } },
{ &expand_var_1833, { "X5 : X-pulse from Mode 5 Data Reply or Report", "asterix.21_1_4_1143_1137_compound_1137_group_697", FT_UINT8, BASE_DEC, VALS(value_map_421), 0x0, NULL, HFILL } },
{ &expand_var_1834, { "XC : X-pulse from Mode C Reply", "asterix.21_1_4_1143_1137_compound_1137_group_698", FT_UINT8, BASE_DEC, VALS(value_map_422), 0x0, NULL, HFILL } },
{ &expand_var_1835, { "X3 : X-pulse from Mode 3/A Reply", "asterix.21_1_4_1143_1137_compound_1137_group_699", FT_UINT8, BASE_DEC, VALS(value_map_423), 0x0, NULL, HFILL } },
{ &expand_var_1836, { "X2 : X-pulse from Mode 2 Reply", "asterix.21_1_4_1143_1137_compound_1137_group_700", FT_UINT8, BASE_DEC, VALS(value_map_424), 0x0, NULL, HFILL } },
{ &expand_var_1837, { "X1 : X-pulse from Mode 1 Reply", "asterix.21_1_4_1143_1137_compound_1137_group_701", FT_UINT8, BASE_DEC, VALS(value_map_425), 0x0, NULL, HFILL } },
{ &expand_var_1838, { "FOM : Figure of Merit", "asterix.21_1_4_1143_1139_compound_1139_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1839, { "FOM : Figure of Merit", "asterix.21_1_4_1143_1139_compound_1139_group_702", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1840, { "M2 : Mode 2 Code in Octal Representation", "asterix.21_1_4_1143_1142_compound_1142_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1841, { "V", "asterix.21_1_4_1143_1142_compound_1142_group_454", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_1842, { "L", "asterix.21_1_4_1143_1142_compound_1142_group_703", FT_UINT8, BASE_DEC, VALS(value_map_18), 0x0, NULL, HFILL } },
{ &expand_var_1843, { "MODE2 : Mode 2 Code in Octal Representation", "asterix.21_1_4_1143_1142_compound_1142_group_704", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1844, { "BPS : Barometric Pressure Setting", "asterix.21_1_5_1094_re_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1845, { "SH : Selected Heading", "asterix.21_1_5_1098_re_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1846, { "NAV : Navigation Mode", "asterix.21_1_5_1147_re_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1847, { "AP : Autopilot", "asterix.21_1_5_1147_re_group_672", FT_UINT8, BASE_DEC, VALS(value_map_401), 0x0, NULL, HFILL } },
{ &expand_var_1848, { "VN : Vertical Navigation", "asterix.21_1_5_1147_re_group_673", FT_UINT8, BASE_DEC, VALS(value_map_402), 0x0, NULL, HFILL } },
{ &expand_var_1849, { "AH : Altitude Hold", "asterix.21_1_5_1147_re_group_674", FT_UINT8, BASE_DEC, VALS(value_map_403), 0x0, NULL, HFILL } },
{ &expand_var_1850, { "AM : Approach Mode", "asterix.21_1_5_1147_re_group_675", FT_UINT8, BASE_DEC, VALS(value_map_404), 0x0, NULL, HFILL } },
{ &expand_var_1851, { "MFM : Status of MCP/FCU Mode Bits", "asterix.21_1_5_1147_re_group_707", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1852, { "EP : Element Populated Bit", "asterix.21_1_5_1147_re_group_705", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_1853, { "VAL : Value", "asterix.21_1_5_1147_re_group_706", FT_UINT8, BASE_DEC, VALS(value_map_426), 0x0, NULL, HFILL } },
{ &expand_var_1854, { "GAO : GPS Antenna Offset", "asterix.21_1_5_1104_re_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1855, { "SGV : Surface Ground Vector", "asterix.21_1_5_1111_re_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1856, { "STA : Aircraft Status", "asterix.21_1_5_1182_re_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1857, { "ES(ES IN Capability)", "asterix.21_1_5_1182_re_extended_ES", FT_UINT8, BASE_DEC, VALS(value_map_409), 0x0, NULL, HFILL } },
{ &expand_var_1858, { "UAT(UAT IN Capability)", "asterix.21_1_5_1182_re_extended_UAT", FT_UINT8, BASE_DEC, VALS(value_map_410), 0x0, NULL, HFILL } },
{ &expand_var_1859, { "EP : Element Populated Bit", "asterix.21_1_5_1182_re_extended_710", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_1860, { "VAL : Value", "asterix.21_1_5_1182_re_extended_711", FT_UINT8, BASE_DEC, VALS(value_map_427), 0x0, NULL, HFILL } },
{ &expand_var_1861, { "EP : Element Populated Bit", "asterix.21_1_5_1182_re_extended_713", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_1862, { "VAL : Value", "asterix.21_1_5_1182_re_extended_714", FT_UINT8, BASE_DEC, VALS(value_map_428), 0x0, NULL, HFILL } },
{ &expand_var_1863, { "FX", "asterix.21_1_5_1182_re_extended_STA_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1864, { "EP : Element Populated Bit", "asterix.21_1_5_1182_re_extended_716", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_1865, { "VAL : Value", "asterix.21_1_5_1182_re_extended_717", FT_UINT8, BASE_DEC, VALS(value_map_429), 0x0, NULL, HFILL } },
{ &expand_var_1866, { "EP : Element Populated Bit", "asterix.21_1_5_1182_re_extended_719", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_1867, { "VAL : Value", "asterix.21_1_5_1182_re_extended_720", FT_UINT8, BASE_DEC, VALS(value_map_430), 0x0, NULL, HFILL } },
{ &expand_var_1868, { "FX", "asterix.21_1_5_1182_re_extended_STA_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1869, { "EP : Element Populated Bit", "asterix.21_1_5_1182_re_extended_722", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_1870, { "VAL : Value", "asterix.21_1_5_1182_re_extended_723", FT_UINT8, BASE_DEC, VALS(value_map_431), 0x0, NULL, HFILL } },
{ &expand_var_1871, { "EP : Element Populated Bit", "asterix.21_1_5_1182_re_extended_725", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_1872, { "VAL : Value", "asterix.21_1_5_1182_re_extended_726", FT_UINT8, BASE_DEC, VALS(value_map_432), 0x0, NULL, HFILL } },
{ &expand_var_1873, { "EP : Element Populated Bit", "asterix.21_1_5_1182_re_extended_719", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_1874, { "VAL : Value", "asterix.21_1_5_1182_re_extended_728", FT_UINT8, BASE_DEC, VALS(value_map_433), 0x0, NULL, HFILL } },
{ &expand_var_1875, { "FX", "asterix.21_1_5_1182_re_extended_STA_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1876, { "EP : Element Populated Bit", "asterix.21_1_5_1182_re_extended_713", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_1877, { "VAL : Value", "asterix.21_1_5_1182_re_extended_730", FT_UINT8, BASE_DEC, VALS(value_map_434), 0x0, NULL, HFILL } },
{ &expand_var_1878, { "EP : Element Populated Bit", "asterix.21_1_5_1182_re_extended_166", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_1879, { "VAL : Value", "asterix.21_1_5_1182_re_extended_732", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1880, { "FX", "asterix.21_1_5_1182_re_extended_STA_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1881, { "EP : Element Populated Bit", "asterix.21_1_5_1182_re_extended_705", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_1882, { "VAL : Value", "asterix.21_1_5_1182_re_extended_734", FT_UINT8, BASE_DEC, VALS(value_map_435), 0x0, NULL, HFILL } },
{ &expand_var_1883, { "EP : Element Population Bit", "asterix.21_1_5_1182_re_extended_736", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_1884, { "VAL : Value", "asterix.21_1_5_1182_re_extended_737", FT_UINT8, BASE_DEC, VALS(value_map_436), 0x0, NULL, HFILL } },
{ &expand_var_1885, { "FX", "asterix.21_1_5_1182_re_extended_STA_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1886, { "EP : Element Populated Bit", "asterix.21_1_5_1182_re_extended_739", FT_UINT8, BASE_DEC, VALS(value_map_437), 0x0, NULL, HFILL } },
{ &expand_var_1887, { "VAL : Value", "asterix.21_1_5_1182_re_extended_740", FT_UINT8, BASE_DEC, VALS(value_map_438), 0x0, NULL, HFILL } },
{ &expand_var_1888, { "FX", "asterix.21_1_5_1182_re_extended_STA_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1889, { "TNH : True North Heading [°]", "asterix.21_1_5_1183_re_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1890, { "MES : Military Extended Squitter", "asterix.21_1_5_1143_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1891, { "010 : Data Source Identification", "asterix.21_2_1_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1892, { "040 : Target Report Descriptor", "asterix.21_2_1_040_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1893, { "ATP(Address Type)", "asterix.21_2_1_040_uap_extended_ATP", FT_UINT8, BASE_DEC, VALS(value_map_448), 0x0, NULL, HFILL } },
{ &expand_var_1894, { "ARC(Altitude Reporting Capability)", "asterix.21_2_1_040_uap_extended_ARC", FT_UINT8, BASE_DEC, VALS(value_map_449), 0x0, NULL, HFILL } },
{ &expand_var_1895, { "RC(Range Check)", "asterix.21_2_1_040_uap_extended_RC", FT_UINT8, BASE_DEC, VALS(value_map_450), 0x0, NULL, HFILL } },
{ &expand_var_1896, { "RAB(Report Type)", "asterix.21_2_1_040_uap_extended_RAB", FT_UINT8, BASE_DEC, VALS(value_map_164), 0x0, NULL, HFILL } },
{ &expand_var_1897, { "FX", "asterix.21_2_1_040_uap_extended_040_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1898, { "DCR(Differential Correction)", "asterix.21_2_1_040_uap_extended_DCR", FT_UINT8, BASE_DEC, VALS(value_map_158), 0x0, NULL, HFILL } },
{ &expand_var_1899, { "GBS(Ground Bit Setting)", "asterix.21_2_1_040_uap_extended_GBS", FT_UINT8, BASE_DEC, VALS(value_map_363), 0x0, NULL, HFILL } },
{ &expand_var_1900, { "SIM(Simulated Target)", "asterix.21_2_1_040_uap_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_162), 0x0, NULL, HFILL } },
{ &expand_var_1901, { "TST(Test Target)", "asterix.21_2_1_040_uap_extended_TST", FT_UINT8, BASE_DEC, VALS(value_map_163), 0x0, NULL, HFILL } },
{ &expand_var_1902, { "SAA(Selected Altitude Available)", "asterix.21_2_1_040_uap_extended_SAA", FT_UINT8, BASE_DEC, VALS(value_map_364), 0x0, NULL, HFILL } },
{ &expand_var_1903, { "CL(Confidence Level)", "asterix.21_2_1_040_uap_extended_CL", FT_UINT8, BASE_DEC, VALS(value_map_451), 0x0, NULL, HFILL } },
{ &expand_var_1904, { "FX", "asterix.21_2_1_040_uap_extended_040_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1905, { "IPC(Independent Position Check)", "asterix.21_2_1_040_uap_extended_IPC", FT_UINT8, BASE_DEC, VALS(value_map_452), 0x0, NULL, HFILL } },
{ &expand_var_1906, { "NOGO(No-go Bit Status)", "asterix.21_2_1_040_uap_extended_NOGO", FT_UINT8, BASE_DEC, VALS(value_map_453), 0x0, NULL, HFILL } },
{ &expand_var_1907, { "CPR(Compact Position Reporting)", "asterix.21_2_1_040_uap_extended_CPR", FT_UINT8, BASE_DEC, VALS(value_map_454), 0x0, NULL, HFILL } },
{ &expand_var_1908, { "LDPJ(Local Decoding Position Jump)", "asterix.21_2_1_040_uap_extended_LDPJ", FT_UINT8, BASE_DEC, VALS(value_map_455), 0x0, NULL, HFILL } },
{ &expand_var_1909, { "RCF(Range Check)", "asterix.21_2_1_040_uap_extended_RCF", FT_UINT8, BASE_DEC, VALS(value_map_456), 0x0, NULL, HFILL } },
{ &expand_var_1910, { "FX", "asterix.21_2_1_040_uap_extended_040_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1911, { "161 : Track Number", "asterix.21_2_1_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1912, { "TRNUM : Track Number", "asterix.21_2_1_161_uap_group_788", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1913, { "015 : Service Identification", "asterix.21_2_1_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1914, { "071 : Time of Applicability for Position [s]", "asterix.21_2_1_071_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1915, { "130 : Position in WGS-84 Co-ordinates", "asterix.21_2_1_130_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1916, { "131 : High-Resolution Position in WGS-84 Co-ordinates", "asterix.21_2_1_131_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1917, { "LAT : Latitude [°]", "asterix.21_2_1_131_uap_group_776", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1918, { "LON : Longitude [°]", "asterix.21_2_1_131_uap_group_777", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1919, { "072 : Time of Applicability for Velocity [s]", "asterix.21_2_1_072_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1920, { "150 : Air Speed", "asterix.21_2_1_150_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1921, { "151 : True Airspeed", "asterix.21_2_1_151_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1922, { "RE : Range Exceeded Indicator", "asterix.21_2_1_151_uap_group_782", FT_UINT8, BASE_DEC, VALS(value_map_462), 0x0, NULL, HFILL } },
{ &expand_var_1923, { "TAS : True Air Speed [kt]", "asterix.21_2_1_151_uap_group_783", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1924, { "080 : Target Address", "asterix.21_2_1_080_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1925, { "073 : Time of Message Reception for Position [s]", "asterix.21_2_1_073_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1926, { "074 : Time of Message Reception of Position-High Precision", "asterix.21_2_1_074_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1927, { "FSI : Full Second Indication", "asterix.21_2_1_074_uap_group_764", FT_UINT8, BASE_DEC, VALS(value_map_457), 0x0, NULL, HFILL } },
{ &expand_var_1928, { "TOMRP : Fractional Part of the Time of Message Reception for Position in the Ground Station [s]", "asterix.21_2_1_074_uap_group_765", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1929, { "075 : Time of Message Reception for Velocity [s]", "asterix.21_2_1_075_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1930, { "076 : Time of Message Reception of Velocity-High Precision", "asterix.21_2_1_076_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1931, { "FSI : Full Second Indication", "asterix.21_2_1_076_uap_group_766", FT_UINT8, BASE_DEC, VALS(value_map_459), 0x0, NULL, HFILL } },
{ &expand_var_1932, { "TOMRP : Fractional Part of the Time of Message Reception for Position in the Ground Station [s]", "asterix.21_2_1_076_uap_group_765", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1933, { "140 : Geometric Height [ft]", "asterix.21_2_1_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1934, { "090 : Quality Indicators", "asterix.21_2_1_090_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1935, { "NUCRNACV(Navigation Uncertainty Category for Velocity NUCr or the Navigation Accuracy Category for Velocity NACv)", "asterix.21_2_1_090_uap_extended_NUCRNACV", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1936, { "NUCPNIC(Navigation Uncertainty Category for Position NUCp or Navigation Integrity Category NIC)", "asterix.21_2_1_090_uap_extended_NUCPNIC", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1937, { "FX", "asterix.21_2_1_090_uap_extended_090_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1938, { "NICBARO(Navigation Integrity Category for Barometric Altitude)", "asterix.21_2_1_090_uap_extended_NICBARO", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1939, { "SIL(Surveillance (version 1) or Source (version 2) Integrity Level)", "asterix.21_2_1_090_uap_extended_SIL", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1940, { "NACP(Navigation Accuracy Category for Position)", "asterix.21_2_1_090_uap_extended_NACP", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1941, { "FX", "asterix.21_2_1_090_uap_extended_090_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1942, { "SILS(SIL-Supplement)", "asterix.21_2_1_090_uap_extended_SILS", FT_UINT8, BASE_DEC, VALS(value_map_460), 0x0, NULL, HFILL } },
{ &expand_var_1943, { "SDA(Horizontal Position System Design Assurance Level (as Defined in Version 2))", "asterix.21_2_1_090_uap_extended_SDA", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1944, { "GVA(Geometric Altitude Accuracy)", "asterix.21_2_1_090_uap_extended_GVA", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1945, { "FX", "asterix.21_2_1_090_uap_extended_090_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1946, { "PIC(Position Integrity Category)", "asterix.21_2_1_090_uap_extended_PIC", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1947, { "FX", "asterix.21_2_1_090_uap_extended_090_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1948, { "210 : MOPS Version", "asterix.21_2_1_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1949, { "VNS : Version Not Supported", "asterix.21_2_1_210_uap_group_794", FT_UINT8, BASE_DEC, VALS(value_map_468), 0x0, NULL, HFILL } },
{ &expand_var_1950, { "VN : Version Number", "asterix.21_2_1_210_uap_group_795", FT_UINT8, BASE_DEC, VALS(value_map_469), 0x0, NULL, HFILL } },
{ &expand_var_1951, { "LTT : Link Technology Type", "asterix.21_2_1_210_uap_group_796", FT_UINT8, BASE_DEC, VALS(value_map_470), 0x0, NULL, HFILL } },
{ &expand_var_1952, { "070 : Mode 3/A Code in Octal Representation", "asterix.21_2_1_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1953, { "MODE3A : Mode-3/A Reply in Octal Representation", "asterix.21_2_1_070_uap_group_222", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1954, { "230 : Roll Angle [°]", "asterix.21_2_1_230_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1955, { "145 : Flight Level [FL]", "asterix.21_2_1_145_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1956, { "152 : Magnetic Heading [°]", "asterix.21_2_1_152_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1957, { "200 : Target Status", "asterix.21_2_1_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1958, { "ICF : Intent Change Flag (see Note)", "asterix.21_2_1_200_uap_group_790", FT_UINT8, BASE_DEC, VALS(value_map_464), 0x0, NULL, HFILL } },
{ &expand_var_1959, { "LNAV : LNAV Mode", "asterix.21_2_1_200_uap_group_791", FT_UINT8, BASE_DEC, VALS(value_map_465), 0x0, NULL, HFILL } },
{ &expand_var_1960, { "PS : Priority Status", "asterix.21_2_1_200_uap_group_792", FT_UINT8, BASE_DEC, VALS(value_map_466), 0x0, NULL, HFILL } },
{ &expand_var_1961, { "SS : Surveillance Status", "asterix.21_2_1_200_uap_group_793", FT_UINT8, BASE_DEC, VALS(value_map_467), 0x0, NULL, HFILL } },
{ &expand_var_1962, { "155 : Barometric Vertical Rate", "asterix.21_2_1_155_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1963, { "RE : Range Exceeded Indicator", "asterix.21_2_1_155_uap_group_782", FT_UINT8, BASE_DEC, VALS(value_map_462), 0x0, NULL, HFILL } },
{ &expand_var_1964, { "BVR : Barometric Vertical Rate [ft/min]", "asterix.21_2_1_155_uap_group_784", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1965, { "157 : Geometric Vertical Rate", "asterix.21_2_1_157_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1966, { "RE : Range Exceeded Indicator", "asterix.21_2_1_157_uap_group_782", FT_UINT8, BASE_DEC, VALS(value_map_462), 0x0, NULL, HFILL } },
{ &expand_var_1967, { "GVR : Geometric Vertical Rate [ft/min]", "asterix.21_2_1_157_uap_group_785", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1968, { "160 : Airborne Ground Vector", "asterix.21_2_1_160_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1969, { "RE : Range Exceeded Indicator", "asterix.21_2_1_160_uap_group_782", FT_UINT8, BASE_DEC, VALS(value_map_462), 0x0, NULL, HFILL } },
{ &expand_var_1970, { "GS : Ground Speed Referenced to WGS-84 [NM/s]", "asterix.21_2_1_160_uap_group_786", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1971, { "TA : Track Angle Clockwise Reference to True North [°]", "asterix.21_2_1_160_uap_group_787", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1972, { "165 : Track Angle Rate", "asterix.21_2_1_165_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1973, { "TAR : Track Angle Rate [°/s]", "asterix.21_2_1_165_uap_group_789", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1974, { "077 : Time of ASTERIX Report Transmission [s]", "asterix.21_2_1_077_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1975, { "170 : Target Identification", "asterix.21_2_1_170_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1976, { "020 : Emitter Category", "asterix.21_2_1_020_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_447), 0x0, NULL, HFILL } },
{ &expand_var_1977, { "220 : Met Information", "asterix.21_2_1_220_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1978, { "146 : Selected Altitude", "asterix.21_2_1_146_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1979, { "SAS : Source Availability", "asterix.21_2_1_146_uap_group_647", FT_UINT8, BASE_DEC, VALS(value_map_382), 0x0, NULL, HFILL } },
{ &expand_var_1980, { "S : Source", "asterix.21_2_1_146_uap_group_778", FT_UINT8, BASE_DEC, VALS(value_map_383), 0x0, NULL, HFILL } },
{ &expand_var_1981, { "ALT : Altitude [ft]", "asterix.21_2_1_146_uap_group_649", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1982, { "148 : Final State Selected Altitude", "asterix.21_2_1_148_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1983, { "MV : Manage Vertical Mode", "asterix.21_2_1_148_uap_group_779", FT_UINT8, BASE_DEC, VALS(value_map_461), 0x0, NULL, HFILL } },
{ &expand_var_1984, { "AH : Altitude Hold Mode", "asterix.21_2_1_148_uap_group_780", FT_UINT8, BASE_DEC, VALS(value_map_461), 0x0, NULL, HFILL } },
{ &expand_var_1985, { "AM : Approach Mode", "asterix.21_2_1_148_uap_group_781", FT_UINT8, BASE_DEC, VALS(value_map_461), 0x0, NULL, HFILL } },
{ &expand_var_1986, { "ALT : Altitude [ft]", "asterix.21_2_1_148_uap_group_649", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1987, { "110 : Trajectory Intent", "asterix.21_2_1_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1988, { "016 : Service Management [s]", "asterix.21_2_1_016_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1989, { "008 : Aircraft Operational Status", "asterix.21_2_1_008_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1990, { "RA : TCAS Resolution Advisory Active", "asterix.21_2_1_008_uap_group_742", FT_UINT8, BASE_DEC, VALS(value_map_439), 0x0, NULL, HFILL } },
{ &expand_var_1991, { "TC : Target Trajectory Change Report Capability", "asterix.21_2_1_008_uap_group_743", FT_UINT8, BASE_DEC, VALS(value_map_440), 0x0, NULL, HFILL } },
{ &expand_var_1992, { "TS : Target State Report Capability", "asterix.21_2_1_008_uap_group_744", FT_UINT8, BASE_DEC, VALS(value_map_441), 0x0, NULL, HFILL } },
{ &expand_var_1993, { "ARV : Air-Referenced Velocity Report Capability", "asterix.21_2_1_008_uap_group_745", FT_UINT8, BASE_DEC, VALS(value_map_442), 0x0, NULL, HFILL } },
{ &expand_var_1994, { "CDTIA : Cockpit Display of Traffic Information Airborne", "asterix.21_2_1_008_uap_group_746", FT_UINT8, BASE_DEC, VALS(value_map_443), 0x0, NULL, HFILL } },
{ &expand_var_1995, { "NOTTCAS : TCAS System Status", "asterix.21_2_1_008_uap_group_747", FT_UINT8, BASE_DEC, VALS(value_map_444), 0x0, NULL, HFILL } },
{ &expand_var_1996, { "SA : Single Antenna", "asterix.21_2_1_008_uap_group_748", FT_UINT8, BASE_DEC, VALS(value_map_445), 0x0, NULL, HFILL } },
{ &expand_var_1997, { "271 : Surface Capabilities and Characteristics", "asterix.21_2_1_271_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_1998, { "POA(Position Offset Applied)", "asterix.21_2_1_271_uap_extended_POA", FT_UINT8, BASE_DEC, VALS(value_map_471), 0x0, NULL, HFILL } },
{ &expand_var_1999, { "CDTIS(Cockpit Display of Traffic Information Surface)", "asterix.21_2_1_271_uap_extended_CDTIS", FT_UINT8, BASE_DEC, VALS(value_map_443), 0x0, NULL, HFILL } },
{ &expand_var_2000, { "B2LOW(Class B2 Transmit Power Less Than 70 Watts)", "asterix.21_2_1_271_uap_extended_B2LOW", FT_UINT8, BASE_DEC, VALS(value_map_472), 0x0, NULL, HFILL } },
{ &expand_var_2001, { "RAS(Receiving ATC Services)", "asterix.21_2_1_271_uap_extended_RAS", FT_UINT8, BASE_DEC, VALS(value_map_473), 0x0, NULL, HFILL } },
{ &expand_var_2002, { "IDENT(Setting of IDENT Switch)", "asterix.21_2_1_271_uap_extended_IDENT", FT_UINT8, BASE_DEC, VALS(value_map_474), 0x0, NULL, HFILL } },
{ &expand_var_2003, { "FX", "asterix.21_2_1_271_uap_extended_271_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2004, { "LW(Length and Width of the Aircraft)", "asterix.21_2_1_271_uap_extended_LW", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2005, { "132 : Message Amplitude [dBm]", "asterix.21_2_1_132_uap_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2006, { "250 : Mode S MB Data", "asterix.21_2_1_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2007, { "260 : ACAS Resolution Advisory Report", "asterix.21_2_1_260_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2008, { "TYP : Message Type (= 28 for 1090 ES, Version 2)", "asterix.21_2_1_260_uap_group_797", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2009, { "STYP : Message Sub-type (= 2 for 1090 ES, Version 2)", "asterix.21_2_1_260_uap_group_798", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2010, { "ARA : Active Resolution Advisories", "asterix.21_2_1_260_uap_group_799", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2011, { "RAC : RAC (RA Complement) Record", "asterix.21_2_1_260_uap_group_800", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2012, { "RAT : RA Terminated", "asterix.21_2_1_260_uap_group_801", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2013, { "MTE : Multiple Threat Encounter", "asterix.21_2_1_260_uap_group_802", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2014, { "TTI : Threat Type Indicator", "asterix.21_2_1_260_uap_group_803", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2015, { "TID : Threat Identity Data", "asterix.21_2_1_260_uap_group_804", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2016, { "400 : Receiver ID", "asterix.21_2_1_400_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2017, { "295 : Data Ages", "asterix.21_2_1_295_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2018, { "AOS : Aircraft Operational Status Age [s]", "asterix.21_2_1_295_1284_compound_1284_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2019, { "TRD : Target Report Descriptor Age [s]", "asterix.21_2_1_295_1285_compound_1285_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2020, { "M3A : Mode 3/A Age [s]", "asterix.21_2_1_295_1286_compound_1286_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2021, { "QI : Quality Indicators Age [s]", "asterix.21_2_1_295_1287_compound_1287_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2022, { "TI1 : Trajectory Intent Age [s]", "asterix.21_2_1_295_1288_compound_1288_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2023, { "MAM : Message Amplitude Age [s]", "asterix.21_2_1_295_1289_compound_1289_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2024, { "GH : Geometric Height Age [s]", "asterix.21_2_1_295_1290_compound_1290_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2025, { "FL : Flight Level Age [s]", "asterix.21_2_1_295_1291_compound_1291_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2026, { "ISA : Intermediate State Selected Altitude Age [s]", "asterix.21_2_1_295_1292_compound_1292_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2027, { "FSA : Final State Selected Altitude Age [s]", "asterix.21_2_1_295_1293_compound_1293_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2028, { "AS : Air Speed Age [s]", "asterix.21_2_1_295_1294_compound_1294_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2029, { "TAS : True Air Speed Age [s]", "asterix.21_2_1_295_1295_compound_1295_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2030, { "MH : Magnetic Heading Age [s]", "asterix.21_2_1_295_1296_compound_1296_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2031, { "BVR : Barometric Vertical Rate Age [s]", "asterix.21_2_1_295_1297_compound_1297_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2032, { "GVR : Geometric Vertical Rate Age [s]", "asterix.21_2_1_295_1298_compound_1298_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2033, { "GV : Ground Vector Age [s]", "asterix.21_2_1_295_1299_compound_1299_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2034, { "TAR : Track Angle Rate Age [s]", "asterix.21_2_1_295_1300_compound_1300_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2035, { "TI2 : Target Identification Age [s]", "asterix.21_2_1_295_1301_compound_1301_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2036, { "TS : Target Status Age [s]", "asterix.21_2_1_295_1302_compound_1302_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2037, { "MET : Met Information Age [s]", "asterix.21_2_1_295_1303_compound_1303_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2038, { "ROA : Roll Angle Age [s]", "asterix.21_2_1_295_1304_compound_1304_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2039, { "ARA : ACAS Resolution Advisory Age [s]", "asterix.21_2_1_295_1305_compound_1305_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2040, { "SCC : Surface Capabilities and Characteristics Age [s]", "asterix.21_2_1_295_1306_compound_1306_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2041, { "RE : Reserved Expansion Field", "asterix.21_2_1_47_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2042, { "SP : Special Purpose Field", "asterix.21_2_1_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2043, { "010 : Data Source Identification", "asterix.21_2_2_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2044, { "040 : Target Report Descriptor", "asterix.21_2_2_040_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2045, { "161 : Track Number", "asterix.21_2_2_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2046, { "015 : Service Identification", "asterix.21_2_2_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2047, { "071 : Time of Applicability for Position [s]", "asterix.21_2_2_071_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2048, { "130 : Position in WGS-84 Co-ordinates", "asterix.21_2_2_130_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2049, { "131 : High-Resolution Position in WGS-84 Co-ordinates", "asterix.21_2_2_131_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2050, { "072 : Time of Applicability for Velocity [s]", "asterix.21_2_2_072_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2051, { "150 : Air Speed", "asterix.21_2_2_150_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2052, { "151 : True Airspeed", "asterix.21_2_2_151_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2053, { "080 : Target Address", "asterix.21_2_2_080_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2054, { "073 : Time of Message Reception for Position [s]", "asterix.21_2_2_073_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2055, { "074 : Time of Message Reception of Position-High Precision", "asterix.21_2_2_074_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2056, { "075 : Time of Message Reception for Velocity [s]", "asterix.21_2_2_075_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2057, { "076 : Time of Message Reception of Velocity-High Precision", "asterix.21_2_2_076_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2058, { "140 : Geometric Height [ft]", "asterix.21_2_2_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2059, { "090 : Quality Indicators", "asterix.21_2_2_090_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2060, { "210 : MOPS Version", "asterix.21_2_2_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2061, { "070 : Mode 3/A Code in Octal Representation", "asterix.21_2_2_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2062, { "230 : Roll Angle [°]", "asterix.21_2_2_230_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2063, { "145 : Flight Level [FL]", "asterix.21_2_2_145_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2064, { "152 : Magnetic Heading [°]", "asterix.21_2_2_152_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2065, { "200 : Target Status", "asterix.21_2_2_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2066, { "ICF : Intent Change Flag (see Note)", "asterix.21_2_2_200_uap_group_790", FT_UINT8, BASE_DEC, VALS(value_map_464), 0x0, NULL, HFILL } },
{ &expand_var_2067, { "LNAV : LNAV Mode", "asterix.21_2_2_200_uap_group_791", FT_UINT8, BASE_DEC, VALS(value_map_465), 0x0, NULL, HFILL } },
{ &expand_var_2068, { "ME : Military Emergency", "asterix.21_2_2_200_uap_group_811", FT_UINT8, BASE_DEC, VALS(value_map_476), 0x0, NULL, HFILL } },
{ &expand_var_2069, { "PS : Priority Status", "asterix.21_2_2_200_uap_group_792", FT_UINT8, BASE_DEC, VALS(value_map_466), 0x0, NULL, HFILL } },
{ &expand_var_2070, { "SS : Surveillance Status", "asterix.21_2_2_200_uap_group_793", FT_UINT8, BASE_DEC, VALS(value_map_467), 0x0, NULL, HFILL } },
{ &expand_var_2071, { "155 : Barometric Vertical Rate", "asterix.21_2_2_155_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2072, { "157 : Geometric Vertical Rate", "asterix.21_2_2_157_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2073, { "160 : Airborne Ground Vector", "asterix.21_2_2_160_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2074, { "165 : Track Angle Rate", "asterix.21_2_2_165_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2075, { "077 : Time of ASTERIX Report Transmission [s]", "asterix.21_2_2_077_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2076, { "170 : Target Identification", "asterix.21_2_2_170_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2077, { "020 : Emitter Category", "asterix.21_2_2_020_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_447), 0x0, NULL, HFILL } },
{ &expand_var_2078, { "220 : Met Information", "asterix.21_2_2_220_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2079, { "146 : Selected Altitude", "asterix.21_2_2_146_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2080, { "148 : Final State Selected Altitude", "asterix.21_2_2_148_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2081, { "110 : Trajectory Intent", "asterix.21_2_2_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2082, { "016 : Service Management [s]", "asterix.21_2_2_016_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2083, { "008 : Aircraft Operational Status", "asterix.21_2_2_008_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2084, { "271 : Surface Capabilities and Characteristics", "asterix.21_2_2_271_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2085, { "POA(Position Offset Applied)", "asterix.21_2_2_271_uap_extended_POA", FT_UINT8, BASE_DEC, VALS(value_map_471), 0x0, NULL, HFILL } },
{ &expand_var_2086, { "CDTIS(Cockpit Display of Traffic Information Surface)", "asterix.21_2_2_271_uap_extended_CDTIS", FT_UINT8, BASE_DEC, VALS(value_map_443), 0x0, NULL, HFILL } },
{ &expand_var_2087, { "B2LOW(Class B2 Transmit Power Less Than 70 Watts)", "asterix.21_2_2_271_uap_extended_B2LOW", FT_UINT8, BASE_DEC, VALS(value_map_472), 0x0, NULL, HFILL } },
{ &expand_var_2088, { "RAS(Receiving ATC Services)", "asterix.21_2_2_271_uap_extended_RAS", FT_UINT8, BASE_DEC, VALS(value_map_473), 0x0, NULL, HFILL } },
{ &expand_var_2089, { "IDENT(Setting of IDENT Switch)", "asterix.21_2_2_271_uap_extended_IDENT", FT_UINT8, BASE_DEC, VALS(value_map_474), 0x0, NULL, HFILL } },
{ &expand_var_2090, { "FX", "asterix.21_2_2_271_uap_extended_271_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2091, { "LW(Length and Width of the Aircraft)", "asterix.21_2_2_271_uap_extended_LW", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2092, { "FX", "asterix.21_2_2_271_uap_extended_271_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2093, { "132 : Message Amplitude [dBm]", "asterix.21_2_2_132_uap_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2094, { "250 : Mode S MB Data", "asterix.21_2_2_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2095, { "260 : ACAS Resolution Advisory Report", "asterix.21_2_2_260_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2096, { "400 : Receiver ID", "asterix.21_2_2_400_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2097, { "295 : Data Ages", "asterix.21_2_2_295_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2098, { "RE : Reserved Expansion Field", "asterix.21_2_2_47_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2099, { "SP : Special Purpose Field", "asterix.21_2_2_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2100, { "010 : Data Source Identification", "asterix.21_2_3_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2101, { "040 : Target Report Descriptor", "asterix.21_2_3_040_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2102, { "ATP(Address Type)", "asterix.21_2_3_040_uap_extended_ATP", FT_UINT8, BASE_DEC, VALS(value_map_448), 0x0, NULL, HFILL } },
{ &expand_var_2103, { "ARC(Altitude Reporting Capability)", "asterix.21_2_3_040_uap_extended_ARC", FT_UINT8, BASE_DEC, VALS(value_map_449), 0x0, NULL, HFILL } },
{ &expand_var_2104, { "RC(Range Check)", "asterix.21_2_3_040_uap_extended_RC", FT_UINT8, BASE_DEC, VALS(value_map_450), 0x0, NULL, HFILL } },
{ &expand_var_2105, { "RAB(Report Type)", "asterix.21_2_3_040_uap_extended_RAB", FT_UINT8, BASE_DEC, VALS(value_map_164), 0x0, NULL, HFILL } },
{ &expand_var_2106, { "FX", "asterix.21_2_3_040_uap_extended_040_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2107, { "DCR(Differential Correction)", "asterix.21_2_3_040_uap_extended_DCR", FT_UINT8, BASE_DEC, VALS(value_map_158), 0x0, NULL, HFILL } },
{ &expand_var_2108, { "GBS(Ground Bit Setting)", "asterix.21_2_3_040_uap_extended_GBS", FT_UINT8, BASE_DEC, VALS(value_map_363), 0x0, NULL, HFILL } },
{ &expand_var_2109, { "SIM(Simulated Target)", "asterix.21_2_3_040_uap_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_162), 0x0, NULL, HFILL } },
{ &expand_var_2110, { "TST(Test Target)", "asterix.21_2_3_040_uap_extended_TST", FT_UINT8, BASE_DEC, VALS(value_map_163), 0x0, NULL, HFILL } },
{ &expand_var_2111, { "SAA(Selected Altitude Available)", "asterix.21_2_3_040_uap_extended_SAA", FT_UINT8, BASE_DEC, VALS(value_map_364), 0x0, NULL, HFILL } },
{ &expand_var_2112, { "CL(Confidence Level)", "asterix.21_2_3_040_uap_extended_CL", FT_UINT8, BASE_DEC, VALS(value_map_451), 0x0, NULL, HFILL } },
{ &expand_var_2113, { "FX", "asterix.21_2_3_040_uap_extended_040_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2114, { "LLC(List Lookup Check)", "asterix.21_2_3_040_uap_extended_LLC", FT_UINT8, BASE_DEC, VALS(value_map_477), 0x0, NULL, HFILL } },
{ &expand_var_2115, { "IPC(Independent Position Check)", "asterix.21_2_3_040_uap_extended_IPC", FT_UINT8, BASE_DEC, VALS(value_map_452), 0x0, NULL, HFILL } },
{ &expand_var_2116, { "NOGO(No-go Bit Status)", "asterix.21_2_3_040_uap_extended_NOGO", FT_UINT8, BASE_DEC, VALS(value_map_453), 0x0, NULL, HFILL } },
{ &expand_var_2117, { "CPR(Compact Position Reporting)", "asterix.21_2_3_040_uap_extended_CPR", FT_UINT8, BASE_DEC, VALS(value_map_454), 0x0, NULL, HFILL } },
{ &expand_var_2118, { "LDPJ(Local Decoding Position Jump)", "asterix.21_2_3_040_uap_extended_LDPJ", FT_UINT8, BASE_DEC, VALS(value_map_455), 0x0, NULL, HFILL } },
{ &expand_var_2119, { "RCF(Range Check)", "asterix.21_2_3_040_uap_extended_RCF", FT_UINT8, BASE_DEC, VALS(value_map_456), 0x0, NULL, HFILL } },
{ &expand_var_2120, { "FX", "asterix.21_2_3_040_uap_extended_040_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2121, { "161 : Track Number", "asterix.21_2_3_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2122, { "015 : Service Identification", "asterix.21_2_3_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2123, { "071 : Time of Applicability for Position [s]", "asterix.21_2_3_071_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2124, { "130 : Position in WGS-84 Co-ordinates", "asterix.21_2_3_130_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2125, { "131 : High-Resolution Position in WGS-84 Co-ordinates", "asterix.21_2_3_131_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2126, { "072 : Time of Applicability for Velocity [s]", "asterix.21_2_3_072_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2127, { "150 : Air Speed", "asterix.21_2_3_150_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2128, { "151 : True Airspeed", "asterix.21_2_3_151_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2129, { "080 : Target Address", "asterix.21_2_3_080_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2130, { "073 : Time of Message Reception for Position [s]", "asterix.21_2_3_073_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2131, { "074 : Time of Message Reception of Position-High Precision", "asterix.21_2_3_074_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2132, { "075 : Time of Message Reception for Velocity [s]", "asterix.21_2_3_075_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2133, { "076 : Time of Message Reception of Velocity-High Precision", "asterix.21_2_3_076_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2134, { "140 : Geometric Height [ft]", "asterix.21_2_3_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2135, { "090 : Quality Indicators", "asterix.21_2_3_090_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2136, { "210 : MOPS Version", "asterix.21_2_3_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2137, { "070 : Mode 3/A Code in Octal Representation", "asterix.21_2_3_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2138, { "230 : Roll Angle [°]", "asterix.21_2_3_230_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2139, { "145 : Flight Level [FL]", "asterix.21_2_3_145_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2140, { "152 : Magnetic Heading [°]", "asterix.21_2_3_152_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2141, { "200 : Target Status", "asterix.21_2_3_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2142, { "155 : Barometric Vertical Rate", "asterix.21_2_3_155_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2143, { "157 : Geometric Vertical Rate", "asterix.21_2_3_157_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2144, { "160 : Airborne Ground Vector", "asterix.21_2_3_160_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2145, { "165 : Track Angle Rate", "asterix.21_2_3_165_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2146, { "077 : Time of ASTERIX Report Transmission [s]", "asterix.21_2_3_077_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2147, { "170 : Target Identification", "asterix.21_2_3_170_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2148, { "020 : Emitter Category", "asterix.21_2_3_020_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_447), 0x0, NULL, HFILL } },
{ &expand_var_2149, { "220 : Met Information", "asterix.21_2_3_220_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2150, { "146 : Selected Altitude", "asterix.21_2_3_146_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2151, { "148 : Final State Selected Altitude", "asterix.21_2_3_148_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2152, { "110 : Trajectory Intent", "asterix.21_2_3_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2153, { "016 : Service Management [s]", "asterix.21_2_3_016_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2154, { "008 : Aircraft Operational Status", "asterix.21_2_3_008_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2155, { "271 : Surface Capabilities and Characteristics", "asterix.21_2_3_271_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2156, { "132 : Message Amplitude [dBm]", "asterix.21_2_3_132_uap_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2157, { "250 : Mode S MB Data", "asterix.21_2_3_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2158, { "260 : ACAS Resolution Advisory Report", "asterix.21_2_3_260_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2159, { "400 : Receiver ID", "asterix.21_2_3_400_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2160, { "295 : Data Ages", "asterix.21_2_3_295_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2161, { "RE : Reserved Expansion Field", "asterix.21_2_3_47_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2162, { "SP : Special Purpose Field", "asterix.21_2_3_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2163, { "010 : Data Source Identification", "asterix.21_2_4_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2164, { "040 : Target Report Descriptor", "asterix.21_2_4_040_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2165, { "161 : Track Number", "asterix.21_2_4_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2166, { "015 : Service Identification", "asterix.21_2_4_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2167, { "071 : Time of Applicability for Position [s]", "asterix.21_2_4_071_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2168, { "130 : Position in WGS-84 Co-ordinates", "asterix.21_2_4_130_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2169, { "131 : High-Resolution Position in WGS-84 Co-ordinates", "asterix.21_2_4_131_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2170, { "072 : Time of Applicability for Velocity [s]", "asterix.21_2_4_072_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2171, { "150 : Air Speed", "asterix.21_2_4_150_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2172, { "151 : True Airspeed", "asterix.21_2_4_151_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2173, { "080 : Target Address", "asterix.21_2_4_080_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2174, { "073 : Time of Message Reception for Position [s]", "asterix.21_2_4_073_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2175, { "074 : Time of Message Reception of Position-High Precision", "asterix.21_2_4_074_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2176, { "075 : Time of Message Reception for Velocity [s]", "asterix.21_2_4_075_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2177, { "076 : Time of Message Reception of Velocity-High Precision", "asterix.21_2_4_076_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2178, { "140 : Geometric Height [ft]", "asterix.21_2_4_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2179, { "090 : Quality Indicators", "asterix.21_2_4_090_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2180, { "210 : MOPS Version", "asterix.21_2_4_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2181, { "070 : Mode 3/A Code in Octal Representation", "asterix.21_2_4_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2182, { "230 : Roll Angle [°]", "asterix.21_2_4_230_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2183, { "145 : Flight Level [FL]", "asterix.21_2_4_145_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2184, { "152 : Magnetic Heading [°]", "asterix.21_2_4_152_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2185, { "200 : Target Status", "asterix.21_2_4_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2186, { "155 : Barometric Vertical Rate", "asterix.21_2_4_155_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2187, { "157 : Geometric Vertical Rate", "asterix.21_2_4_157_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2188, { "160 : Airborne Ground Vector", "asterix.21_2_4_160_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2189, { "165 : Track Angle Rate", "asterix.21_2_4_165_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2190, { "077 : Time of ASTERIX Report Transmission [s]", "asterix.21_2_4_077_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2191, { "170 : Target Identification", "asterix.21_2_4_170_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2192, { "020 : Emitter Category", "asterix.21_2_4_020_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_447), 0x0, NULL, HFILL } },
{ &expand_var_2193, { "220 : Met Information", "asterix.21_2_4_220_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2194, { "146 : Selected Altitude", "asterix.21_2_4_146_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2195, { "148 : Final State Selected Altitude", "asterix.21_2_4_148_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2196, { "110 : Trajectory Intent", "asterix.21_2_4_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2197, { "016 : Service Management [s]", "asterix.21_2_4_016_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2198, { "008 : Aircraft Operational Status", "asterix.21_2_4_008_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2199, { "271 : Surface Capabilities and Characteristics", "asterix.21_2_4_271_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2200, { "132 : Message Amplitude [dBm]", "asterix.21_2_4_132_uap_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2201, { "250 : Mode S MB Data", "asterix.21_2_4_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2202, { "260 : ACAS Resolution Advisory Report", "asterix.21_2_4_260_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2203, { "400 : Receiver ID", "asterix.21_2_4_400_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2204, { "295 : Data Ages", "asterix.21_2_4_295_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2205, { "RE : Reserved Expansion Field", "asterix.21_2_4_47_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2206, { "SP : Special Purpose Field", "asterix.21_2_4_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2207, { "010 : Data Source Identification", "asterix.21_2_5_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2208, { "040 : Target Report Descriptor", "asterix.21_2_5_040_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2209, { "161 : Track Number", "asterix.21_2_5_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2210, { "015 : Service Identification", "asterix.21_2_5_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2211, { "071 : Time of Applicability for Position [s]", "asterix.21_2_5_071_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2212, { "130 : Position in WGS-84 Co-ordinates", "asterix.21_2_5_130_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2213, { "131 : High-Resolution Position in WGS-84 Co-ordinates", "asterix.21_2_5_131_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2214, { "072 : Time of Applicability for Velocity [s]", "asterix.21_2_5_072_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2215, { "150 : Air Speed", "asterix.21_2_5_150_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2216, { "151 : True Airspeed", "asterix.21_2_5_151_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2217, { "080 : Target Address", "asterix.21_2_5_080_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2218, { "073 : Time of Message Reception for Position [s]", "asterix.21_2_5_073_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2219, { "074 : Time of Message Reception of Position-High Precision", "asterix.21_2_5_074_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2220, { "075 : Time of Message Reception for Velocity [s]", "asterix.21_2_5_075_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2221, { "076 : Time of Message Reception of Velocity-High Precision", "asterix.21_2_5_076_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2222, { "140 : Geometric Height [ft]", "asterix.21_2_5_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2223, { "090 : Quality Indicators", "asterix.21_2_5_090_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2224, { "210 : MOPS Version", "asterix.21_2_5_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2225, { "VNS : Version Not Supported", "asterix.21_2_5_210_uap_group_794", FT_UINT8, BASE_DEC, VALS(value_map_468), 0x0, NULL, HFILL } },
{ &expand_var_2226, { "VN : Version Number", "asterix.21_2_5_210_uap_group_814", FT_UINT8, BASE_DEC, VALS(value_map_478), 0x0, NULL, HFILL } },
{ &expand_var_2227, { "LTT : Link Technology Type", "asterix.21_2_5_210_uap_group_796", FT_UINT8, BASE_DEC, VALS(value_map_470), 0x0, NULL, HFILL } },
{ &expand_var_2228, { "070 : Mode 3/A Code in Octal Representation", "asterix.21_2_5_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2229, { "230 : Roll Angle [°]", "asterix.21_2_5_230_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2230, { "145 : Flight Level [FL]", "asterix.21_2_5_145_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2231, { "152 : Magnetic Heading [°]", "asterix.21_2_5_152_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2232, { "200 : Target Status", "asterix.21_2_5_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2233, { "155 : Barometric Vertical Rate", "asterix.21_2_5_155_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2234, { "157 : Geometric Vertical Rate", "asterix.21_2_5_157_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2235, { "160 : Airborne Ground Vector", "asterix.21_2_5_160_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2236, { "165 : Track Angle Rate", "asterix.21_2_5_165_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2237, { "077 : Time of ASTERIX Report Transmission [s]", "asterix.21_2_5_077_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2238, { "170 : Target Identification", "asterix.21_2_5_170_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2239, { "020 : Emitter Category", "asterix.21_2_5_020_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_447), 0x0, NULL, HFILL } },
{ &expand_var_2240, { "220 : Met Information", "asterix.21_2_5_220_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2241, { "146 : Selected Altitude", "asterix.21_2_5_146_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2242, { "148 : Final State Selected Altitude", "asterix.21_2_5_148_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2243, { "110 : Trajectory Intent", "asterix.21_2_5_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2244, { "016 : Service Management [s]", "asterix.21_2_5_016_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2245, { "008 : Aircraft Operational Status", "asterix.21_2_5_008_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2246, { "271 : Surface Capabilities and Characteristics", "asterix.21_2_5_271_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2247, { "132 : Message Amplitude [dBm]", "asterix.21_2_5_132_uap_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2248, { "250 : Mode S MB Data", "asterix.21_2_5_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2249, { "260 : ACAS Resolution Advisory Report", "asterix.21_2_5_260_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2250, { "400 : Receiver ID", "asterix.21_2_5_400_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2251, { "295 : Data Ages", "asterix.21_2_5_295_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2252, { "RE : Reserved Expansion Field", "asterix.21_2_5_47_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2253, { "SP : Special Purpose Field", "asterix.21_2_5_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2254, { "010 : Data Source Identification", "asterix.21_2_6_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2255, { "040 : Target Report Descriptor", "asterix.21_2_6_040_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2256, { "ATP(Address Type)", "asterix.21_2_6_040_uap_extended_ATP", FT_UINT8, BASE_DEC, VALS(value_map_448), 0x0, NULL, HFILL } },
{ &expand_var_2257, { "ARC(Altitude Reporting Capability)", "asterix.21_2_6_040_uap_extended_ARC", FT_UINT8, BASE_DEC, VALS(value_map_449), 0x0, NULL, HFILL } },
{ &expand_var_2258, { "RC(Range Check)", "asterix.21_2_6_040_uap_extended_RC", FT_UINT8, BASE_DEC, VALS(value_map_450), 0x0, NULL, HFILL } },
{ &expand_var_2259, { "RAB(Report Type)", "asterix.21_2_6_040_uap_extended_RAB", FT_UINT8, BASE_DEC, VALS(value_map_164), 0x0, NULL, HFILL } },
{ &expand_var_2260, { "FX", "asterix.21_2_6_040_uap_extended_040_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2261, { "DCR(Differential Correction)", "asterix.21_2_6_040_uap_extended_DCR", FT_UINT8, BASE_DEC, VALS(value_map_158), 0x0, NULL, HFILL } },
{ &expand_var_2262, { "GBS(Ground Bit Setting)", "asterix.21_2_6_040_uap_extended_GBS", FT_UINT8, BASE_DEC, VALS(value_map_363), 0x0, NULL, HFILL } },
{ &expand_var_2263, { "SIM(Simulated Target)", "asterix.21_2_6_040_uap_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_162), 0x0, NULL, HFILL } },
{ &expand_var_2264, { "TST(Test Target)", "asterix.21_2_6_040_uap_extended_TST", FT_UINT8, BASE_DEC, VALS(value_map_163), 0x0, NULL, HFILL } },
{ &expand_var_2265, { "SAA(Selected Altitude Available)", "asterix.21_2_6_040_uap_extended_SAA", FT_UINT8, BASE_DEC, VALS(value_map_364), 0x0, NULL, HFILL } },
{ &expand_var_2266, { "CL(Confidence Level)", "asterix.21_2_6_040_uap_extended_CL", FT_UINT8, BASE_DEC, VALS(value_map_451), 0x0, NULL, HFILL } },
{ &expand_var_2267, { "FX", "asterix.21_2_6_040_uap_extended_040_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2268, { "LLC(List Lookup Check)", "asterix.21_2_6_040_uap_extended_LLC", FT_UINT8, BASE_DEC, VALS(value_map_477), 0x0, NULL, HFILL } },
{ &expand_var_2269, { "IPC(Independent Position Check)", "asterix.21_2_6_040_uap_extended_IPC", FT_UINT8, BASE_DEC, VALS(value_map_452), 0x0, NULL, HFILL } },
{ &expand_var_2270, { "NOGO(No-go Bit Status)", "asterix.21_2_6_040_uap_extended_NOGO", FT_UINT8, BASE_DEC, VALS(value_map_453), 0x0, NULL, HFILL } },
{ &expand_var_2271, { "CPR(Compact Position Reporting)", "asterix.21_2_6_040_uap_extended_CPR", FT_UINT8, BASE_DEC, VALS(value_map_454), 0x0, NULL, HFILL } },
{ &expand_var_2272, { "LDPJ(Local Decoding Position Jump)", "asterix.21_2_6_040_uap_extended_LDPJ", FT_UINT8, BASE_DEC, VALS(value_map_455), 0x0, NULL, HFILL } },
{ &expand_var_2273, { "RCF(Range Check)", "asterix.21_2_6_040_uap_extended_RCF", FT_UINT8, BASE_DEC, VALS(value_map_456), 0x0, NULL, HFILL } },
{ &expand_var_2274, { "FX", "asterix.21_2_6_040_uap_extended_040_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2275, { "EP : Element Populated Bit", "asterix.21_2_6_040_uap_extended_713", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_2276, { "VAL : Value", "asterix.21_2_6_040_uap_extended_815", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2277, { "FX", "asterix.21_2_6_040_uap_extended_040_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2278, { "EP : Element Populated Bit", "asterix.21_2_6_040_uap_extended_705", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_2279, { "VAL : Value", "asterix.21_2_6_040_uap_extended_817", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2280, { "FX", "asterix.21_2_6_040_uap_extended_040_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2281, { "161 : Track Number", "asterix.21_2_6_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2282, { "015 : Service Identification", "asterix.21_2_6_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2283, { "071 : Time of Applicability for Position [s]", "asterix.21_2_6_071_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2284, { "130 : Position in WGS-84 Co-ordinates", "asterix.21_2_6_130_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2285, { "131 : High-Resolution Position in WGS-84 Co-ordinates", "asterix.21_2_6_131_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2286, { "072 : Time of Applicability for Velocity [s]", "asterix.21_2_6_072_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2287, { "150 : Air Speed", "asterix.21_2_6_150_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2288, { "151 : True Airspeed", "asterix.21_2_6_151_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2289, { "080 : Target Address", "asterix.21_2_6_080_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2290, { "073 : Time of Message Reception for Position [s]", "asterix.21_2_6_073_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2291, { "074 : Time of Message Reception of Position-High Precision", "asterix.21_2_6_074_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2292, { "FSI : Full Second Indication", "asterix.21_2_6_074_uap_group_820", FT_UINT8, BASE_DEC, VALS(value_map_457), 0x0, NULL, HFILL } },
{ &expand_var_2293, { "TOMRP : Fractional Part of the Time of Message Reception for Position in the Ground Station [s]", "asterix.21_2_6_074_uap_group_821", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2294, { "075 : Time of Message Reception for Velocity [s]", "asterix.21_2_6_075_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2295, { "076 : Time of Message Reception of Velocity-High Precision", "asterix.21_2_6_076_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2296, { "FSI : Full Second Indication", "asterix.21_2_6_076_uap_group_822", FT_UINT8, BASE_DEC, VALS(value_map_459), 0x0, NULL, HFILL } },
{ &expand_var_2297, { "TOMRP : Fractional Part of the Time of Message Reception for Position in the Ground Station [s]", "asterix.21_2_6_076_uap_group_821", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2298, { "140 : Geometric Height [ft]", "asterix.21_2_6_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2299, { "090 : Quality Indicators", "asterix.21_2_6_090_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2300, { "210 : MOPS Version", "asterix.21_2_6_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2301, { "070 : Mode 3/A Code in Octal Representation", "asterix.21_2_6_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2302, { "MODE3A : Mode-3/A Reply in Octal Representation", "asterix.21_2_6_070_uap_group_819", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2303, { "230 : Roll Angle [°]", "asterix.21_2_6_230_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2304, { "145 : Flight Level [FL]", "asterix.21_2_6_145_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2305, { "152 : Magnetic Heading [°]", "asterix.21_2_6_152_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2306, { "200 : Target Status", "asterix.21_2_6_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2307, { "155 : Barometric Vertical Rate", "asterix.21_2_6_155_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2308, { "157 : Geometric Vertical Rate", "asterix.21_2_6_157_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2309, { "160 : Airborne Ground Vector", "asterix.21_2_6_160_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2310, { "165 : Track Angle Rate", "asterix.21_2_6_165_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2311, { "077 : Time of ASTERIX Report Transmission [s]", "asterix.21_2_6_077_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2312, { "170 : Target Identification", "asterix.21_2_6_170_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2313, { "020 : Emitter Category", "asterix.21_2_6_020_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_447), 0x0, NULL, HFILL } },
{ &expand_var_2314, { "220 : Met Information", "asterix.21_2_6_220_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2315, { "146 : Selected Altitude", "asterix.21_2_6_146_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2316, { "148 : Final State Selected Altitude", "asterix.21_2_6_148_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2317, { "110 : Trajectory Intent", "asterix.21_2_6_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2318, { "016 : Service Management [s]", "asterix.21_2_6_016_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2319, { "008 : Aircraft Operational Status", "asterix.21_2_6_008_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2320, { "271 : Surface Capabilities and Characteristics", "asterix.21_2_6_271_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2321, { "132 : Message Amplitude [dBm]", "asterix.21_2_6_132_uap_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2322, { "250 : Mode S MB Data", "asterix.21_2_6_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2323, { "260 : ACAS Resolution Advisory Report", "asterix.21_2_6_260_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2324, { "400 : Receiver ID", "asterix.21_2_6_400_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2325, { "295 : Data Ages", "asterix.21_2_6_295_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2326, { "AOS : Aircraft Operational Status Age [s]", "asterix.21_2_6_295_1284_compound_1284_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2327, { "TRD : Target Report Descriptor Age [s]", "asterix.21_2_6_295_1285_compound_1285_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2328, { "M3A : Mode 3/A Age [s]", "asterix.21_2_6_295_1286_compound_1286_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2329, { "QI : Quality Indicators Age [s]", "asterix.21_2_6_295_1287_compound_1287_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2330, { "TI1 : Trajectory Intent Age [s]", "asterix.21_2_6_295_1288_compound_1288_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2331, { "MAM : Message Amplitude Age [s]", "asterix.21_2_6_295_1289_compound_1289_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2332, { "GH : Geometric Height Age [s]", "asterix.21_2_6_295_1290_compound_1290_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2333, { "FL : Flight Level Age [s]", "asterix.21_2_6_295_1291_compound_1291_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2334, { "SAL : Selected Altitude Age [s]", "asterix.21_2_6_295_1335_compound_1335_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2335, { "FSA : Final State Selected Altitude Age [s]", "asterix.21_2_6_295_1293_compound_1293_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2336, { "AS : Air Speed Age [s]", "asterix.21_2_6_295_1294_compound_1294_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2337, { "TAS : True Air Speed Age [s]", "asterix.21_2_6_295_1295_compound_1295_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2338, { "MH : Magnetic Heading Age [s]", "asterix.21_2_6_295_1296_compound_1296_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2339, { "BVR : Barometric Vertical Rate Age [s]", "asterix.21_2_6_295_1297_compound_1297_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2340, { "GVR : Geometric Vertical Rate Age [s]", "asterix.21_2_6_295_1298_compound_1298_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2341, { "GV : Ground Vector Age [s]", "asterix.21_2_6_295_1299_compound_1299_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2342, { "TAR : Track Angle Rate Age [s]", "asterix.21_2_6_295_1300_compound_1300_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2343, { "TI2 : Target Identification Age [s]", "asterix.21_2_6_295_1301_compound_1301_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2344, { "TS : Target Status Age [s]", "asterix.21_2_6_295_1302_compound_1302_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2345, { "MET : Met Information Age [s]", "asterix.21_2_6_295_1303_compound_1303_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2346, { "ROA : Roll Angle Age [s]", "asterix.21_2_6_295_1304_compound_1304_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2347, { "ARA : ACAS Resolution Advisory Age [s]", "asterix.21_2_6_295_1305_compound_1305_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2348, { "SCC : Surface Capabilities and Characteristics Age [s]", "asterix.21_2_6_295_1306_compound_1306_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2349, { "RE : Reserved Expansion Field", "asterix.21_2_6_47_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2350, { "SP : Special Purpose Field", "asterix.21_2_6_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2351, { "010 : Data Source Identification", "asterix.21_2_7_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2352, { "040 : Target Report Descriptor", "asterix.21_2_7_040_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2353, { "161 : Track Number", "asterix.21_2_7_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2354, { "015 : Service Identification", "asterix.21_2_7_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2355, { "071 : Time of Applicability for Position [s]", "asterix.21_2_7_071_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2356, { "130 : Position in WGS-84 Co-ordinates", "asterix.21_2_7_130_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2357, { "131 : High-Resolution Position in WGS-84 Co-ordinates", "asterix.21_2_7_131_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2358, { "072 : Time of Applicability for Velocity [s]", "asterix.21_2_7_072_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2359, { "150 : Air Speed", "asterix.21_2_7_150_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2360, { "151 : True Airspeed", "asterix.21_2_7_151_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2361, { "080 : Target Address", "asterix.21_2_7_080_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2362, { "073 : Time of Message Reception for Position [s]", "asterix.21_2_7_073_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2363, { "074 : Time of Message Reception of Position-High Precision", "asterix.21_2_7_074_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2364, { "075 : Time of Message Reception for Velocity [s]", "asterix.21_2_7_075_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2365, { "076 : Time of Message Reception of Velocity-High Precision", "asterix.21_2_7_076_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2366, { "140 : Geometric Height [ft]", "asterix.21_2_7_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2367, { "090 : Quality Indicators", "asterix.21_2_7_090_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2368, { "NUCRNACV(Navigation Uncertainty Category for Velocity NUCr or the Navigation Accuracy Category for Velocity NACv)", "asterix.21_2_7_090_uap_extended_NUCRNACV", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2369, { "NUCPNIC(Navigation Uncertainty Category for Position NUCp or Navigation Integrity Category NIC)", "asterix.21_2_7_090_uap_extended_NUCPNIC", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2370, { "FX", "asterix.21_2_7_090_uap_extended_090_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2371, { "NICBARO(Navigation Integrity Category for Barometric Altitude)", "asterix.21_2_7_090_uap_extended_NICBARO", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2372, { "SIL(Surveillance (version 1) or Source (version 2) Integrity Level)", "asterix.21_2_7_090_uap_extended_SIL", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2373, { "NACP(Navigation Accuracy Category for Position)", "asterix.21_2_7_090_uap_extended_NACP", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2374, { "FX", "asterix.21_2_7_090_uap_extended_090_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2375, { "SILS(SIL-Supplement)", "asterix.21_2_7_090_uap_extended_SILS", FT_UINT8, BASE_DEC, VALS(value_map_460), 0x0, NULL, HFILL } },
{ &expand_var_2376, { "SDA(Horizontal Position System Design Assurance Level (as Defined in Version 2))", "asterix.21_2_7_090_uap_extended_SDA", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2377, { "GVA(Geometric Altitude Accuracy)", "asterix.21_2_7_090_uap_extended_GVA", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2378, { "FX", "asterix.21_2_7_090_uap_extended_090_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2379, { "PIC(Position Integrity Category)", "asterix.21_2_7_090_uap_extended_PIC", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2380, { "SRC(Source of the PIC)", "asterix.21_2_7_090_uap_extended_SRC", FT_UINT8, BASE_DEC, VALS(value_map_479), 0x0, NULL, HFILL } },
{ &expand_var_2381, { "FX", "asterix.21_2_7_090_uap_extended_090_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2382, { "EP : VAL_STATE Element Populated Bit", "asterix.21_2_7_090_uap_extended_824", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_2383, { "VAL : VAL_STATE Value", "asterix.21_2_7_090_uap_extended_825", FT_UINT8, BASE_DEC, VALS(value_map_480), 0x0, NULL, HFILL } },
{ &expand_var_2384, { "VD(Validation Distance Availability)", "asterix.21_2_7_090_uap_extended_VD", FT_UINT8, BASE_DEC, VALS(value_map_481), 0x0, NULL, HFILL } },
{ &expand_var_2385, { "VQ(Validation Distance Quality Availability)", "asterix.21_2_7_090_uap_extended_VQ", FT_UINT8, BASE_DEC, VALS(value_map_481), 0x0, NULL, HFILL } },
{ &expand_var_2386, { "FX", "asterix.21_2_7_090_uap_extended_090_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2387, { "VALDISTP1(Position Validation Distance P1) [m]", "asterix.21_2_7_090_uap_extended_VALDISTP1", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2388, { "FX", "asterix.21_2_7_090_uap_extended_090_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2389, { "VALDISTP2(Position Validation Distance P2) [m]", "asterix.21_2_7_090_uap_extended_VALDISTP2", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2390, { "FX", "asterix.21_2_7_090_uap_extended_090_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2391, { "VALDISTQUALP1(Position Validation Distance Quality P1) [m]", "asterix.21_2_7_090_uap_extended_VALDISTQUALP1", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2392, { "FX", "asterix.21_2_7_090_uap_extended_090_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2393, { "VALDISTQUALP2(Position Validation Distance Quality P2) [m]", "asterix.21_2_7_090_uap_extended_VALDISTQUALP2", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2394, { "FX", "asterix.21_2_7_090_uap_extended_090_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2395, { "210 : MOPS Version", "asterix.21_2_7_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2396, { "070 : Mode 3/A Code in Octal Representation", "asterix.21_2_7_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2397, { "230 : Roll Angle [°]", "asterix.21_2_7_230_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2398, { "145 : Flight Level [FL]", "asterix.21_2_7_145_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2399, { "152 : Magnetic Heading [°]", "asterix.21_2_7_152_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2400, { "200 : Target Status", "asterix.21_2_7_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2401, { "155 : Barometric Vertical Rate", "asterix.21_2_7_155_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2402, { "157 : Geometric Vertical Rate", "asterix.21_2_7_157_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2403, { "160 : Airborne Ground Vector", "asterix.21_2_7_160_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2404, { "165 : Track Angle Rate", "asterix.21_2_7_165_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2405, { "077 : Time of ASTERIX Report Transmission [s]", "asterix.21_2_7_077_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2406, { "170 : Target Identification", "asterix.21_2_7_170_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2407, { "020 : Emitter Category", "asterix.21_2_7_020_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_447), 0x0, NULL, HFILL } },
{ &expand_var_2408, { "220 : Met Information", "asterix.21_2_7_220_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2409, { "146 : Selected Altitude", "asterix.21_2_7_146_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2410, { "148 : Final State Selected Altitude", "asterix.21_2_7_148_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2411, { "110 : Trajectory Intent", "asterix.21_2_7_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2412, { "016 : Service Management [s]", "asterix.21_2_7_016_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2413, { "008 : Aircraft Operational Status", "asterix.21_2_7_008_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2414, { "271 : Surface Capabilities and Characteristics", "asterix.21_2_7_271_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2415, { "132 : Message Amplitude [dBm]", "asterix.21_2_7_132_uap_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2416, { "250 : Mode S MB Data", "asterix.21_2_7_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2417, { "260 : ACAS Resolution Advisory Report", "asterix.21_2_7_260_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2418, { "400 : Receiver ID", "asterix.21_2_7_400_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2419, { "295 : Data Ages", "asterix.21_2_7_295_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2420, { "RE : Reserved Expansion Field", "asterix.21_2_7_47_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2421, { "SP : Special Purpose Field", "asterix.21_2_7_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2422, { "010 : Data Source Identifier", "asterix.23_1_2_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2423, { "000 : Report Type", "asterix.23_1_2_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_483), 0x0, NULL, HFILL } },
{ &expand_var_2424, { "015 : Service Type and Identification", "asterix.23_1_2_015_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2425, { "SID : Service Identification", "asterix.23_1_2_015_uap_group_833", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2426, { "STYP : Type of Service", "asterix.23_1_2_015_uap_group_834", FT_UINT8, BASE_DEC, VALS(value_map_484), 0x0, NULL, HFILL } },
{ &expand_var_2427, { "070 : Time of Day [s]", "asterix.23_1_2_070_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2428, { "100 : Ground Station Status", "asterix.23_1_2_100_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2429, { "NOGO(Operational Release Status of the Data)", "asterix.23_1_2_100_uap_extended_NOGO", FT_UINT8, BASE_DEC, VALS(value_map_485), 0x0, NULL, HFILL } },
{ &expand_var_2430, { "ODP(Data Processor Overload Indicator)", "asterix.23_1_2_100_uap_extended_ODP", FT_UINT8, BASE_DEC, VALS(value_map_486), 0x0, NULL, HFILL } },
{ &expand_var_2431, { "OXT(Ground Interface Data Communications Overload)", "asterix.23_1_2_100_uap_extended_OXT", FT_UINT8, BASE_DEC, VALS(value_map_487), 0x0, NULL, HFILL } },
{ &expand_var_2432, { "MSC(Monitoring System Connected Status)", "asterix.23_1_2_100_uap_extended_MSC", FT_UINT8, BASE_DEC, VALS(value_map_488), 0x0, NULL, HFILL } },
{ &expand_var_2433, { "TSV(Time Source Validity)", "asterix.23_1_2_100_uap_extended_TSV", FT_UINT8, BASE_DEC, VALS(value_map_193), 0x0, NULL, HFILL } },
{ &expand_var_2434, { "SPO(Indication of Spoofing Attack)", "asterix.23_1_2_100_uap_extended_SPO", FT_UINT8, BASE_DEC, VALS(value_map_489), 0x0, NULL, HFILL } },
{ &expand_var_2435, { "RN(Renumbering Indication for Track ID)", "asterix.23_1_2_100_uap_extended_RN", FT_UINT8, BASE_DEC, VALS(value_map_490), 0x0, NULL, HFILL } },
{ &expand_var_2436, { "FX", "asterix.23_1_2_100_uap_extended_100_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2437, { "GSSP(Ground Station Status Reporting Period) [s]", "asterix.23_1_2_100_uap_extended_GSSP", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2438, { "FX", "asterix.23_1_2_100_uap_extended_100_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2439, { "101 : Service Configuration", "asterix.23_1_2_101_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2440, { "RP(Report Period for Category 021 Reports) [s]", "asterix.23_1_2_101_uap_extended_RP", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2441, { "SC(Service Class)", "asterix.23_1_2_101_uap_extended_SC", FT_UINT8, BASE_DEC, VALS(value_map_491), 0x0, NULL, HFILL } },
{ &expand_var_2442, { "FX", "asterix.23_1_2_101_uap_extended_101_FX_15", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2443, { "SSRP(Service Status Reporting Period) [s]", "asterix.23_1_2_101_uap_extended_SSRP", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2444, { "FX", "asterix.23_1_2_101_uap_extended_101_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2445, { "200 : Operational Range [NM]", "asterix.23_1_2_200_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2446, { "110 : Service Status", "asterix.23_1_2_110_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2447, { "STAT(Status of the Service)", "asterix.23_1_2_110_uap_extended_STAT", FT_UINT8, BASE_DEC, VALS(value_map_492), 0x0, NULL, HFILL } },
{ &expand_var_2448, { "FX", "asterix.23_1_2_110_uap_extended_110_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2449, { "120 : Service Statistics", "asterix.23_1_2_120_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2450, { "120 : Service Statistics", "asterix.23_1_2_120_rep32_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2451, { "TYPE : Type of Report Counter", "asterix.23_1_2_120_rep32_group_847", FT_UINT8, BASE_DEC, VALS(value_map_493), 0x0, NULL, HFILL } },
{ &expand_var_2452, { "REF : Reference from which the Messages Are Countered", "asterix.23_1_2_120_rep32_group_848", FT_UINT8, BASE_DEC, VALS(value_map_494), 0x0, NULL, HFILL } },
{ &expand_var_2453, { "CV : 32-bit Counter Value", "asterix.23_1_2_120_rep32_group_849", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2454, { "RE : Reserved Expansion Field", "asterix.23_1_2_12_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2455, { "SP : Special Purpose Field", "asterix.23_1_2_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2456, { "010 : Data Source Identifier", "asterix.23_1_3_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2457, { "000 : Report Type", "asterix.23_1_3_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_483), 0x0, NULL, HFILL } },
{ &expand_var_2458, { "015 : Service Type and Identification", "asterix.23_1_3_015_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2459, { "070 : Time of Day [s]", "asterix.23_1_3_070_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2460, { "100 : Ground Station Status", "asterix.23_1_3_100_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2461, { "101 : Service Configuration", "asterix.23_1_3_101_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2462, { "200 : Operational Range [NM]", "asterix.23_1_3_200_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2463, { "110 : Service Status", "asterix.23_1_3_110_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2464, { "120 : Service Statistics", "asterix.23_1_3_120_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2465, { "RE : Reserved Expansion Field", "asterix.23_1_3_12_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2466, { "SP : Special Purpose Field", "asterix.23_1_3_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2467, { "010 : Data Source Identifier", "asterix.25_1_5_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2468, { "000 : Report Type", "asterix.25_1_5_000_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2469, { "RTYP : Report Type", "asterix.25_1_5_000_uap_group_850", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2470, { "RG : Report Generation", "asterix.25_1_5_000_uap_group_363", FT_UINT8, BASE_DEC, VALS(value_map_254), 0x0, NULL, HFILL } },
{ &expand_var_2471, { "200 : Message Identification", "asterix.25_1_5_200_uap_element", FT_UINT24, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2472, { "015 : Service Identification", "asterix.25_1_5_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2473, { "020 : Service Designator", "asterix.25_1_5_020_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2474, { "070 : Time of Day [s]", "asterix.25_1_5_070_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2475, { "100 : System and Service Status", "asterix.25_1_5_100_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2476, { "NOGO", "asterix.25_1_5_100_uap_extended_NOGO", FT_UINT8, BASE_DEC, VALS(value_map_485), 0x0, NULL, HFILL } },
{ &expand_var_2477, { "OPS", "asterix.25_1_5_100_uap_extended_OPS", FT_UINT8, BASE_DEC, VALS(value_map_496), 0x0, NULL, HFILL } },
{ &expand_var_2478, { "SSTAT", "asterix.25_1_5_100_uap_extended_SSTAT", FT_UINT8, BASE_DEC, VALS(value_map_497), 0x0, NULL, HFILL } },
{ &expand_var_2479, { "FX", "asterix.25_1_5_100_uap_extended_100_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2480, { "SYSTAT", "asterix.25_1_5_100_uap_extended_SYSTAT", FT_UINT8, BASE_DEC, VALS(value_map_498), 0x0, NULL, HFILL } },
{ &expand_var_2481, { "SESTAT", "asterix.25_1_5_100_uap_extended_SESTAT", FT_UINT8, BASE_DEC, VALS(value_map_499), 0x0, NULL, HFILL } },
{ &expand_var_2482, { "FX", "asterix.25_1_5_100_uap_extended_100_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2483, { "105 : System and Service Error Codes", "asterix.25_1_5_105_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2484, { "105 : System and Service Error Codes", "asterix.25_1_5_105_rep33_element", FT_UINT8, BASE_DEC, VALS(value_map_500), 0x0, NULL, HFILL } },
{ &expand_var_2485, { "120 : Component Status", "asterix.25_1_5_120_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2486, { "120 : Component Status", "asterix.25_1_5_120_rep34_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2487, { "CID : Component ID", "asterix.25_1_5_120_rep34_group_856", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2488, { "ERRC : Error Code", "asterix.25_1_5_120_rep34_group_857", FT_UINT8, BASE_DEC, VALS(value_map_501), 0x0, NULL, HFILL } },
{ &expand_var_2489, { "CS : Component State/Mode", "asterix.25_1_5_120_rep34_group_858", FT_UINT8, BASE_DEC, VALS(value_map_502), 0x0, NULL, HFILL } },
{ &expand_var_2490, { "140 : Service Statistics", "asterix.25_1_5_140_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2491, { "140 : Service Statistics", "asterix.25_1_5_140_rep35_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2492, { "TYPE : Type of Report Counter", "asterix.25_1_5_140_rep35_group_859", FT_UINT8, BASE_DEC, VALS(value_map_503), 0x0, NULL, HFILL } },
{ &expand_var_2493, { "REF : Reference from which the Messages Are Counted", "asterix.25_1_5_140_rep35_group_860", FT_UINT8, BASE_DEC, VALS(value_map_504), 0x0, NULL, HFILL } },
{ &expand_var_2494, { "COUNT : Counter Value", "asterix.25_1_5_140_rep35_group_861", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2495, { "SP : Special Purpose Field", "asterix.25_1_5_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2496, { "600 : Position of the System Reference Point", "asterix.25_1_5_600_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2497, { "LAT : Latitude [°]", "asterix.25_1_5_600_uap_group_862", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2498, { "LON : Longitude [°]", "asterix.25_1_5_600_uap_group_863", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2499, { "610 : Height of the System Reference Point [m]", "asterix.25_1_5_610_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2500, { "010 : Server Identification Tag", "asterix.32_1_1_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2501, { "015 : User Number", "asterix.32_1_1_015_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2502, { "018 : Data Source Identification Tag", "asterix.32_1_1_018_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2503, { "035 : Type of Message", "asterix.32_1_1_035_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2504, { "FAMILY", "asterix.32_1_1_035_uap_group_864", FT_UINT8, BASE_DEC, VALS(value_map_506), 0x0, NULL, HFILL } },
{ &expand_var_2505, { "NATURE", "asterix.32_1_1_035_uap_group_865", FT_UINT8, BASE_DEC, VALS(value_map_507), 0x0, NULL, HFILL } },
{ &expand_var_2506, { "020 : Time of ASTERIX Report Generation [s]", "asterix.32_1_1_020_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2507, { "040 : Track Number", "asterix.32_1_1_040_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2508, { "050 : Composed Track Number", "asterix.32_1_1_050_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2509, { "SUI(System Unit Identification)", "asterix.32_1_1_050_uap_extended_SUI", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2510, { "STN(System Track Number)", "asterix.32_1_1_050_uap_extended_STN", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2511, { "FX", "asterix.32_1_1_050_uap_extended_050_FX_23", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2512, { "060 : Track Mode 3/A", "asterix.32_1_1_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2513, { "MODE3A : (Mode 3/A Code) 4 Digits, Octal Representation", "asterix.32_1_1_060_uap_group_868", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2514, { "400 : Callsign", "asterix.32_1_1_400_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2515, { "410 : Plan Number", "asterix.32_1_1_410_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2516, { "420 : Flight Category", "asterix.32_1_1_420_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2517, { "GATOAT", "asterix.32_1_1_420_uap_group_869", FT_UINT8, BASE_DEC, VALS(value_map_135), 0x0, NULL, HFILL } },
{ &expand_var_2518, { "FR1FR2", "asterix.32_1_1_420_uap_group_870", FT_UINT8, BASE_DEC, VALS(value_map_136), 0x0, NULL, HFILL } },
{ &expand_var_2519, { "SP3", "asterix.32_1_1_420_uap_group_871", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2520, { "SP2", "asterix.32_1_1_420_uap_group_872", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2521, { "SP1", "asterix.32_1_1_420_uap_group_873", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2522, { "440 : Departure Aerodrome", "asterix.32_1_1_440_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2523, { "450 : Destination Aerodrome", "asterix.32_1_1_450_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2524, { "480 : Current Cleared Flight Level [FL]", "asterix.32_1_1_480_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2525, { "490 : Current Control Position", "asterix.32_1_1_490_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2526, { "CEN : Centre", "asterix.32_1_1_490_uap_group_878", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2527, { "POS : Position", "asterix.32_1_1_490_uap_group_879", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2528, { "430 : Type of Aircraft", "asterix.32_1_1_430_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2529, { "435 : Wake Turbulence Category", "asterix.32_1_1_435_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_231), 0x0, NULL, HFILL } },
{ &expand_var_2530, { "460 : Allocated SSR Codes", "asterix.32_1_1_460_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2531, { "460 : Allocated SSR Codes", "asterix.32_1_1_460_rep36_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2532, { "OCT1 : 1st Octal Digit", "asterix.32_1_1_460_rep36_group_874", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2533, { "OCT2 : 2nd Octal Digit", "asterix.32_1_1_460_rep36_group_875", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2534, { "OCT3 : 3rd Octal Digit", "asterix.32_1_1_460_rep36_group_876", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2535, { "OCT4 : 4th Octal Digit", "asterix.32_1_1_460_rep36_group_877", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2536, { "500 : Supplementary Flight Data", "asterix.32_1_1_500_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2537, { "IFI : IFPS FLIGHT ID", "asterix.32_1_1_500_1432_compound_1432_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2538, { "TYP", "asterix.32_1_1_500_1432_compound_1432_group_880", FT_UINT8, BASE_DEC, VALS(value_map_508), 0x0, NULL, HFILL } },
{ &expand_var_2539, { "NBR", "asterix.32_1_1_500_1432_compound_1432_group_881", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2540, { "RVP : RVSM & Flight Priority", "asterix.32_1_1_500_1435_compound_1435_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2541, { "RVSM", "asterix.32_1_1_500_1435_compound_1435_group_882", FT_UINT8, BASE_DEC, VALS(value_map_509), 0x0, NULL, HFILL } },
{ &expand_var_2542, { "HPR", "asterix.32_1_1_500_1435_compound_1435_group_883", FT_UINT8, BASE_DEC, VALS(value_map_138), 0x0, NULL, HFILL } },
{ &expand_var_2543, { "RDS : Runway Designation", "asterix.32_1_1_500_1439_compound_1439_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2544, { "NU1 : First Number", "asterix.32_1_1_500_1439_compound_1439_group_884", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2545, { "NU2 : Second Number", "asterix.32_1_1_500_1439_compound_1439_group_885", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2546, { "LTR : Letter", "asterix.32_1_1_500_1439_compound_1439_group_886", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2547, { "TOD : Time of Departure / Arrival", "asterix.32_1_1_500_1446_compound_1446_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2548, { "TOD : Time of Departure / Arrival", "asterix.32_1_1_500_rep37_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2549, { "TYP", "asterix.32_1_1_500_rep37_group_887", FT_UINT8, BASE_DEC, VALS(value_map_510), 0x0, NULL, HFILL } },
{ &expand_var_2550, { "DAY", "asterix.32_1_1_500_rep37_group_888", FT_UINT8, BASE_DEC, VALS(value_map_511), 0x0, NULL, HFILL } },
{ &expand_var_2551, { "HOR", "asterix.32_1_1_500_rep37_group_889", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2552, { "MIN", "asterix.32_1_1_500_rep37_group_890", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2553, { "AVS", "asterix.32_1_1_500_rep37_group_891", FT_UINT8, BASE_DEC, VALS(value_map_234), 0x0, NULL, HFILL } },
{ &expand_var_2554, { "SEC", "asterix.32_1_1_500_rep37_group_892", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2555, { "AST : Aircraft Stand", "asterix.32_1_1_500_494_compound_494_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2556, { "STS : Stand Status", "asterix.32_1_1_500_1449_compound_1449_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2557, { "EMP", "asterix.32_1_1_500_1449_compound_1449_group_893", FT_UINT8, BASE_DEC, VALS(value_map_512), 0x0, NULL, HFILL } },
{ &expand_var_2558, { "AVL", "asterix.32_1_1_500_1449_compound_1449_group_894", FT_UINT8, BASE_DEC, VALS(value_map_513), 0x0, NULL, HFILL } },
{ &expand_var_2559, { "SID : Standard Instrument Departure", "asterix.32_1_1_500_1450_compound_1450_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2560, { "STAR : Standard Instrument Arrival", "asterix.32_1_1_500_1451_compound_1451_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2561, { "RE : Reserved Expansion Field", "asterix.32_1_1_20_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2562, { "010 : Server Identification Tag", "asterix.32_1_2_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2563, { "015 : User Number", "asterix.32_1_2_015_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2564, { "018 : Data Source Identification Tag", "asterix.32_1_2_018_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2565, { "035 : Type of Message", "asterix.32_1_2_035_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2566, { "FAMILY", "asterix.32_1_2_035_uap_group_895", FT_UINT8, BASE_DEC, VALS(value_map_514), 0x0, NULL, HFILL } },
{ &expand_var_2567, { "NATURE", "asterix.32_1_2_035_uap_group_896", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2568, { "020 : Time of ASTERIX Report Generation [s]", "asterix.32_1_2_020_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2569, { "040 : Track Number", "asterix.32_1_2_040_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2570, { "050 : Composed Track Number", "asterix.32_1_2_050_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2571, { "060 : Track Mode 3/A", "asterix.32_1_2_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2572, { "400 : Callsign", "asterix.32_1_2_400_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2573, { "410 : Plan Number", "asterix.32_1_2_410_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2574, { "420 : Flight Category", "asterix.32_1_2_420_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2575, { "440 : Departure Aerodrome", "asterix.32_1_2_440_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2576, { "450 : Destination Aerodrome", "asterix.32_1_2_450_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2577, { "480 : Current Cleared Flight Level [FL]", "asterix.32_1_2_480_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2578, { "490 : Current Control Position", "asterix.32_1_2_490_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2579, { "430 : Type of Aircraft", "asterix.32_1_2_430_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2580, { "435 : Wake Turbulence Category", "asterix.32_1_2_435_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_231), 0x0, NULL, HFILL } },
{ &expand_var_2581, { "460 : Allocated SSR Codes", "asterix.32_1_2_460_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2582, { "500 : Supplementary Flight Data", "asterix.32_1_2_500_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2583, { "RE : Reserved Expansion Field", "asterix.32_1_2_20_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2584, { "010 : Data Source Identifier", "asterix.34_1_27_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2585, { "000 : Message Type", "asterix.34_1_27_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_515), 0x0, NULL, HFILL } },
{ &expand_var_2586, { "030 : Time of Day [s]", "asterix.34_1_27_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2587, { "020 : Sector Number [°]", "asterix.34_1_27_020_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2588, { "041 : Antenna Rotation Speed [s]", "asterix.34_1_27_041_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2589, { "050 : System Configuration and Status", "asterix.34_1_27_050_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2590, { "COM : Common Part", "asterix.34_1_27_050_1464_compound_1464_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2591, { "NOGO : Operational Release Status of the System", "asterix.34_1_27_050_1464_compound_1464_group_897", FT_UINT8, BASE_DEC, VALS(value_map_516), 0x0, NULL, HFILL } },
{ &expand_var_2592, { "RDPC : Radar Data Processor Chain Selection Status", "asterix.34_1_27_050_1464_compound_1464_group_898", FT_UINT8, BASE_DEC, VALS(value_map_517), 0x0, NULL, HFILL } },
{ &expand_var_2593, { "RDPR : Event to Signal a Reset/restart of the Selected Radar Data Processor Chain, I.e. Expect a New Assignment of Track Numbers", "asterix.34_1_27_050_1464_compound_1464_group_899", FT_UINT8, BASE_DEC, VALS(value_map_518), 0x0, NULL, HFILL } },
{ &expand_var_2594, { "OVLRDP : Radar Data Processor Overload Indicator", "asterix.34_1_27_050_1464_compound_1464_group_900", FT_UINT8, BASE_DEC, VALS(value_map_519), 0x0, NULL, HFILL } },
{ &expand_var_2595, { "OVLXMT : Transmission Subsystem Overload Status", "asterix.34_1_27_050_1464_compound_1464_group_901", FT_UINT8, BASE_DEC, VALS(value_map_487), 0x0, NULL, HFILL } },
{ &expand_var_2596, { "MSC : Monitoring System Connected Status", "asterix.34_1_27_050_1464_compound_1464_group_902", FT_UINT8, BASE_DEC, VALS(value_map_520), 0x0, NULL, HFILL } },
{ &expand_var_2597, { "TSV : Time Source Validity", "asterix.34_1_27_050_1464_compound_1464_group_903", FT_UINT8, BASE_DEC, VALS(value_map_193), 0x0, NULL, HFILL } },
{ &expand_var_2598, { "PSR : Specific Status Information for a PSR Sensor", "asterix.34_1_27_050_1469_compound_1469_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2599, { "ANT : Selected Antenna", "asterix.34_1_27_050_1469_compound_1469_group_904", FT_UINT8, BASE_DEC, VALS(value_map_521), 0x0, NULL, HFILL } },
{ &expand_var_2600, { "CHAB : Channel A/B Selection Status", "asterix.34_1_27_050_1469_compound_1469_group_905", FT_UINT8, BASE_DEC, VALS(value_map_522), 0x0, NULL, HFILL } },
{ &expand_var_2601, { "OVL : Overload Condition", "asterix.34_1_27_050_1469_compound_1469_group_906", FT_UINT8, BASE_DEC, VALS(value_map_192), 0x0, NULL, HFILL } },
{ &expand_var_2602, { "MSC : Monitoring System Connected Status", "asterix.34_1_27_050_1469_compound_1469_group_907", FT_UINT8, BASE_DEC, VALS(value_map_520), 0x0, NULL, HFILL } },
{ &expand_var_2603, { "SSR : Specific Status Information for a SSR Sensor", "asterix.34_1_27_050_1472_compound_1472_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2604, { "ANT : Selected Antenna", "asterix.34_1_27_050_1472_compound_1472_group_904", FT_UINT8, BASE_DEC, VALS(value_map_521), 0x0, NULL, HFILL } },
{ &expand_var_2605, { "CHAB : Channel A/B Selection Status", "asterix.34_1_27_050_1472_compound_1472_group_908", FT_UINT8, BASE_DEC, VALS(value_map_523), 0x0, NULL, HFILL } },
{ &expand_var_2606, { "OVL : Overload Condition", "asterix.34_1_27_050_1472_compound_1472_group_906", FT_UINT8, BASE_DEC, VALS(value_map_192), 0x0, NULL, HFILL } },
{ &expand_var_2607, { "MSC : Monitoring System Connected Status:", "asterix.34_1_27_050_1472_compound_1472_group_909", FT_UINT8, BASE_DEC, VALS(value_map_520), 0x0, NULL, HFILL } },
{ &expand_var_2608, { "MDS : Specific Status Information for a Mode S Sensor", "asterix.34_1_27_050_1479_compound_1479_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2609, { "ANT : Selected Antenna", "asterix.34_1_27_050_1479_compound_1479_group_904", FT_UINT8, BASE_DEC, VALS(value_map_521), 0x0, NULL, HFILL } },
{ &expand_var_2610, { "CHAB : Channel A/B Selection Status", "asterix.34_1_27_050_1479_compound_1479_group_910", FT_UINT8, BASE_DEC, VALS(value_map_524), 0x0, NULL, HFILL } },
{ &expand_var_2611, { "OVLSUR : Overload Condition", "asterix.34_1_27_050_1479_compound_1479_group_911", FT_UINT8, BASE_DEC, VALS(value_map_192), 0x0, NULL, HFILL } },
{ &expand_var_2612, { "MSC : Monitoring System Connected Status:", "asterix.34_1_27_050_1479_compound_1479_group_909", FT_UINT8, BASE_DEC, VALS(value_map_520), 0x0, NULL, HFILL } },
{ &expand_var_2613, { "SCF : Channel A/B Selection Status for Surveillance Co-ordination Function", "asterix.34_1_27_050_1479_compound_1479_group_912", FT_UINT8, BASE_DEC, VALS(value_map_525), 0x0, NULL, HFILL } },
{ &expand_var_2614, { "DLF : Channel A/B Selection Status for Data Link Function", "asterix.34_1_27_050_1479_compound_1479_group_913", FT_UINT8, BASE_DEC, VALS(value_map_525), 0x0, NULL, HFILL } },
{ &expand_var_2615, { "OVLSCF : Overload in Surveillance Co-ordination Function", "asterix.34_1_27_050_1479_compound_1479_group_914", FT_UINT8, BASE_DEC, VALS(value_map_192), 0x0, NULL, HFILL } },
{ &expand_var_2616, { "OVLDLF : Overload in Data Link Function", "asterix.34_1_27_050_1479_compound_1479_group_915", FT_UINT8, BASE_DEC, VALS(value_map_192), 0x0, NULL, HFILL } },
{ &expand_var_2617, { "060 : System Processing Mode", "asterix.34_1_27_060_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2618, { "COM : Common Part", "asterix.34_1_27_060_1483_compound_1483_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2619, { "REDRDP : Reduction Steps in Use for An Overload of the RDP", "asterix.34_1_27_060_1483_compound_1483_group_916", FT_UINT8, BASE_DEC, VALS(value_map_526), 0x0, NULL, HFILL } },
{ &expand_var_2620, { "REDXMT : Reduction Steps in Use for An Overload of the Transmission Subsystem", "asterix.34_1_27_060_1483_compound_1483_group_917", FT_UINT8, BASE_DEC, VALS(value_map_526), 0x0, NULL, HFILL } },
{ &expand_var_2621, { "PSR : Specific Processing Mode Information for a PSR Sensor", "asterix.34_1_27_060_1487_compound_1487_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2622, { "POL : Polarization in Use by PSR", "asterix.34_1_27_060_1487_compound_1487_group_918", FT_UINT8, BASE_DEC, VALS(value_map_527), 0x0, NULL, HFILL } },
{ &expand_var_2623, { "REDRAD : Reduction Steps in Use as Result of An Overload Within the PSR Subsystem", "asterix.34_1_27_060_1487_compound_1487_group_919", FT_UINT8, BASE_DEC, VALS(value_map_526), 0x0, NULL, HFILL } },
{ &expand_var_2624, { "STC : Sensitivity Time Control Map in Use", "asterix.34_1_27_060_1487_compound_1487_group_920", FT_UINT8, BASE_DEC, VALS(value_map_528), 0x0, NULL, HFILL } },
{ &expand_var_2625, { "SSR : Specific Processing Mode Information for a SSR Sensor", "asterix.34_1_27_060_1489_compound_1489_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2626, { "REDRAD : Reduction Steps in Use as Result of An Overload Within the SSR Subsystem", "asterix.34_1_27_060_1489_compound_1489_group_921", FT_UINT8, BASE_DEC, VALS(value_map_526), 0x0, NULL, HFILL } },
{ &expand_var_2627, { "MDS : Specific Processing Mode Information for a Mode S Sensor", "asterix.34_1_27_060_1492_compound_1492_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2628, { "REDRAD : Reduction Steps in Use as Result of An Overload Within the Mode S Subsystem", "asterix.34_1_27_060_1492_compound_1492_group_922", FT_UINT8, BASE_DEC, VALS(value_map_526), 0x0, NULL, HFILL } },
{ &expand_var_2629, { "CLU : Cluster State", "asterix.34_1_27_060_1492_compound_1492_group_923", FT_UINT8, BASE_DEC, VALS(value_map_529), 0x0, NULL, HFILL } },
{ &expand_var_2630, { "070 : Message Count Values", "asterix.34_1_27_070_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2631, { "070 : Message Count Values", "asterix.34_1_27_070_rep38_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2632, { "TYP : Type of Message Counter", "asterix.34_1_27_070_rep38_group_924", FT_UINT8, BASE_DEC, VALS(value_map_530), 0x0, NULL, HFILL } },
{ &expand_var_2633, { "COUNT : COUNTER", "asterix.34_1_27_070_rep38_group_925", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2634, { "100 : Generic Polar Window", "asterix.34_1_27_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2635, { "RHOST : Rho Start [NM]", "asterix.34_1_27_100_uap_group_928", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2636, { "RHOEND : Rho End [NM]", "asterix.34_1_27_100_uap_group_929", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2637, { "THETAST : Theta Start [°]", "asterix.34_1_27_100_uap_group_930", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2638, { "THETAEND : Theta End [°]", "asterix.34_1_27_100_uap_group_931", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2639, { "110 : Data Filter", "asterix.34_1_27_110_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_531), 0x0, NULL, HFILL } },
{ &expand_var_2640, { "120 : 3D-Position Of Data Source", "asterix.34_1_27_120_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2641, { "HGT : Height of Data Source [m]", "asterix.34_1_27_120_uap_group_932", FT_INT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2642, { "LAT : Latitude [°]", "asterix.34_1_27_120_uap_group_645", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2643, { "LON : Longitude [°]", "asterix.34_1_27_120_uap_group_646", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2644, { "090 : Collimation Error", "asterix.34_1_27_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2645, { "RNG : Range Error [NM]", "asterix.34_1_27_090_uap_group_926", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2646, { "AZM : Azimuth Error [°]", "asterix.34_1_27_090_uap_group_927", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2647, { "RE : Reserved Expansion Field", "asterix.34_1_27_12_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2648, { "SP : Special Purpose Field", "asterix.34_1_27_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2649, { "010 : Data Source Identifier", "asterix.34_1_28_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2650, { "000 : Message Type", "asterix.34_1_28_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_532), 0x0, NULL, HFILL } },
{ &expand_var_2651, { "030 : Time of Day [s]", "asterix.34_1_28_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2652, { "020 : Sector Number [°]", "asterix.34_1_28_020_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2653, { "041 : Antenna Rotation Speed [s]", "asterix.34_1_28_041_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2654, { "050 : System Configuration and Status", "asterix.34_1_28_050_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2655, { "060 : System Processing Mode", "asterix.34_1_28_060_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2656, { "070 : Message Count Values", "asterix.34_1_28_070_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2657, { "070 : Message Count Values", "asterix.34_1_28_070_rep39_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2658, { "TYP : Type of Message Counter", "asterix.34_1_28_070_rep39_group_933", FT_UINT8, BASE_DEC, VALS(value_map_533), 0x0, NULL, HFILL } },
{ &expand_var_2659, { "COUNT : COUNTER", "asterix.34_1_28_070_rep39_group_925", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2660, { "100 : Generic Polar Window", "asterix.34_1_28_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2661, { "110 : Data Filter", "asterix.34_1_28_110_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_531), 0x0, NULL, HFILL } },
{ &expand_var_2662, { "120 : 3D-Position Of Data Source", "asterix.34_1_28_120_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2663, { "090 : Collimation Error", "asterix.34_1_28_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2664, { "RE : Reserved Expansion Field", "asterix.34_1_28_12_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2665, { "SP : Special Purpose Field", "asterix.34_1_28_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2666, { "010 : Data Source Identifier", "asterix.34_1_29_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2667, { "000 : Message Type", "asterix.34_1_29_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_534), 0x0, NULL, HFILL } },
{ &expand_var_2668, { "030 : Time of Day [s]", "asterix.34_1_29_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2669, { "020 : Sector Number [°]", "asterix.34_1_29_020_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2670, { "041 : Antenna Rotation Speed [s]", "asterix.34_1_29_041_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2671, { "050 : System Configuration and Status", "asterix.34_1_29_050_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2672, { "060 : System Processing Mode", "asterix.34_1_29_060_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2673, { "070 : Message Count Values", "asterix.34_1_29_070_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2674, { "100 : Generic Polar Window", "asterix.34_1_29_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2675, { "110 : Data Filter", "asterix.34_1_29_110_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_531), 0x0, NULL, HFILL } },
{ &expand_var_2676, { "120 : 3D-Position Of Data Source", "asterix.34_1_29_120_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2677, { "090 : Collimation Error", "asterix.34_1_29_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2678, { "RE : Reserved Expansion Field", "asterix.34_1_29_12_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2679, { "SP : Special Purpose Field", "asterix.34_1_29_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2680, { "MD5 : Mode 5 Reports", "asterix.48_1_11_1532_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2681, { "SUM : Mode 5 Summary", "asterix.48_1_11_1532_1514_compound_1514_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2682, { "M5", "asterix.48_1_11_1532_1514_compound_1514_group_684", FT_UINT8, BASE_DEC, VALS(value_map_411), 0x0, NULL, HFILL } },
{ &expand_var_2683, { "ID", "asterix.48_1_11_1532_1514_compound_1514_group_685", FT_UINT8, BASE_DEC, VALS(value_map_412), 0x0, NULL, HFILL } },
{ &expand_var_2684, { "DA", "asterix.48_1_11_1532_1514_compound_1514_group_934", FT_UINT8, BASE_DEC, VALS(value_map_535), 0x0, NULL, HFILL } },
{ &expand_var_2685, { "M1", "asterix.48_1_11_1532_1514_compound_1514_group_687", FT_UINT8, BASE_DEC, VALS(value_map_414), 0x0, NULL, HFILL } },
{ &expand_var_2686, { "M2", "asterix.48_1_11_1532_1514_compound_1514_group_688", FT_UINT8, BASE_DEC, VALS(value_map_415), 0x0, NULL, HFILL } },
{ &expand_var_2687, { "M3", "asterix.48_1_11_1532_1514_compound_1514_group_689", FT_UINT8, BASE_DEC, VALS(value_map_416), 0x0, NULL, HFILL } },
{ &expand_var_2688, { "MC", "asterix.48_1_11_1532_1514_compound_1514_group_935", FT_UINT8, BASE_DEC, VALS(value_map_536), 0x0, NULL, HFILL } },
{ &expand_var_2689, { "PMN : PIN/ National Origin/Mission Code", "asterix.48_1_11_1532_1518_compound_1518_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2690, { "PIN : PIN Code", "asterix.48_1_11_1532_1518_compound_1518_group_692", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2691, { "NAV : Validity of NAT", "asterix.48_1_11_1532_1518_compound_1518_group_936", FT_UINT8, BASE_DEC, VALS(value_map_537), 0x0, NULL, HFILL } },
{ &expand_var_2692, { "NAT : National Origin", "asterix.48_1_11_1532_1518_compound_1518_group_937", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2693, { "MIS : Mission Code", "asterix.48_1_11_1532_1518_compound_1518_group_938", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2694, { "POS : Mode 5 Reported Position", "asterix.48_1_11_1532_1521_compound_1521_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2695, { "LAT : Latitude in WGS 84 [°]", "asterix.48_1_11_1532_1521_compound_1521_group_939", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2696, { "LON : Longitude in WGS 84 [°]", "asterix.48_1_11_1532_1521_compound_1521_group_940", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2697, { "GA : Mode 5 GNSS-derived Altitude", "asterix.48_1_11_1532_1524_compound_1524_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2698, { "RES", "asterix.48_1_11_1532_1524_compound_1524_group_941", FT_UINT8, BASE_DEC, VALS(value_map_538), 0x0, NULL, HFILL } },
{ &expand_var_2699, { "GA [ft]", "asterix.48_1_11_1532_1524_compound_1524_group_942", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2700, { "EM1 : Extended Mode 1 Code in Octal Representation", "asterix.48_1_11_1532_1527_compound_1527_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2701, { "V", "asterix.48_1_11_1532_1527_compound_1527_group_943", FT_UINT8, BASE_DEC, VALS(value_map_539), 0x0, NULL, HFILL } },
{ &expand_var_2702, { "G", "asterix.48_1_11_1532_1527_compound_1527_group_457", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_2703, { "L", "asterix.48_1_11_1532_1527_compound_1527_group_944", FT_UINT8, BASE_DEC, VALS(value_map_540), 0x0, NULL, HFILL } },
{ &expand_var_2704, { "EM1 : Extended Mode 1 Code in Octal Representation", "asterix.48_1_11_1532_1527_compound_1527_group_695", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2705, { "TOS : Time Offset for POS and GA [s]", "asterix.48_1_11_1532_1528_compound_1528_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2706, { "XP : X Pulse Presence", "asterix.48_1_11_1532_1531_compound_1531_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2707, { "XP : X-pulse from Mode 5 PIN Reply/Report", "asterix.48_1_11_1532_1531_compound_1531_group_945", FT_UINT8, BASE_DEC, VALS(value_map_420), 0x0, NULL, HFILL } },
{ &expand_var_2708, { "X5 : X-pulse from Mode 5 Data Reply or Report", "asterix.48_1_11_1532_1531_compound_1531_group_697", FT_UINT8, BASE_DEC, VALS(value_map_421), 0x0, NULL, HFILL } },
{ &expand_var_2709, { "XC : X-pulse from Mode C Reply", "asterix.48_1_11_1532_1531_compound_1531_group_698", FT_UINT8, BASE_DEC, VALS(value_map_422), 0x0, NULL, HFILL } },
{ &expand_var_2710, { "X3 : X-pulse from Mode 3/A Reply", "asterix.48_1_11_1532_1531_compound_1531_group_699", FT_UINT8, BASE_DEC, VALS(value_map_423), 0x0, NULL, HFILL } },
{ &expand_var_2711, { "X2 : X-pulse from Mode 2 Reply", "asterix.48_1_11_1532_1531_compound_1531_group_946", FT_UINT8, BASE_DEC, VALS(value_map_541), 0x0, NULL, HFILL } },
{ &expand_var_2712, { "X1 : X-pulse from Mode 1 Reply", "asterix.48_1_11_1532_1531_compound_1531_group_701", FT_UINT8, BASE_DEC, VALS(value_map_425), 0x0, NULL, HFILL } },
{ &expand_var_2713, { "M5N : Mode 5 Reports, New Format", "asterix.48_1_11_1538_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2714, { "SUM : Mode 5 Summary", "asterix.48_1_11_1538_1514_compound_1514_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2715, { "PMN : PIN/ National Origin/Mission Code", "asterix.48_1_11_1538_1535_compound_1535_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2716, { "PIN : PIN Code", "asterix.48_1_11_1538_1535_compound_1535_group_692", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2717, { "NOV : Validity of NO", "asterix.48_1_11_1538_1535_compound_1535_group_947", FT_UINT8, BASE_DEC, VALS(value_map_537), 0x0, NULL, HFILL } },
{ &expand_var_2718, { "NO : National Origin", "asterix.48_1_11_1538_1535_compound_1535_group_948", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2719, { "POS : Mode 5 Reported Position", "asterix.48_1_11_1538_1521_compound_1521_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2720, { "GA : Mode 5 GNSS-derived Altitude", "asterix.48_1_11_1538_1524_compound_1524_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2721, { "EM1 : Extended Mode 1 Code in Octal Representation", "asterix.48_1_11_1538_1527_compound_1527_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2722, { "TOS : Time Offset for POS and GA [s]", "asterix.48_1_11_1538_1528_compound_1528_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2723, { "XP : X Pulse Presence", "asterix.48_1_11_1538_1531_compound_1531_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2724, { "FOM : Figure of Merit", "asterix.48_1_11_1538_1537_compound_1537_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2725, { "FOM", "asterix.48_1_11_1538_1537_compound_1537_group_949", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2726, { "M4E : Extended Mode 4 Report", "asterix.48_1_11_1540_re_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2727, { "FOEFRI(Indication Foe/Friend (Mode4))", "asterix.48_1_11_1540_re_extended_FOEFRI", FT_UINT8, BASE_DEC, VALS(value_map_542), 0x0, NULL, HFILL } },
{ &expand_var_2728, { "FX", "asterix.48_1_11_1540_re_extended_M4E_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2729, { "RPC : Radar Plot Characteristics", "asterix.48_1_11_1545_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2730, { "SCO : Score", "asterix.48_1_11_1545_1541_compound_1541_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2731, { "SRC : Signal/Clutter Ratio [dB]", "asterix.48_1_11_1545_1542_compound_1542_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2732, { "RW : Range Width [NM]", "asterix.48_1_11_1545_1543_compound_1543_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2733, { "AR : Ambiguous Range [NM]", "asterix.48_1_11_1545_1544_compound_1544_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2734, { "ERR : Extended Range Report [NM]", "asterix.48_1_11_1546_re_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2735, { "RTC : Radar Track Characteristics", "asterix.48_1_11_1597_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2736, { "PTL : Plot/Track Link", "asterix.48_1_11_1597_1553_compound_1553_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2737, { "SCN : Track / SCN Association", "asterix.48_1_11_1597_1553_compound_1553_group_951", FT_UINT8, BASE_DEC, VALS(value_map_544), 0x0, NULL, HFILL } },
{ &expand_var_2738, { "RC : Roll Call Component", "asterix.48_1_11_1597_1553_compound_1553_group_952", FT_UINT8, BASE_DEC, VALS(value_map_545), 0x0, NULL, HFILL } },
{ &expand_var_2739, { "AC : All Call Component", "asterix.48_1_11_1597_1553_compound_1553_group_953", FT_UINT8, BASE_DEC, VALS(value_map_546), 0x0, NULL, HFILL } },
{ &expand_var_2740, { "SSR : SSR Component", "asterix.48_1_11_1597_1553_compound_1553_group_954", FT_UINT8, BASE_DEC, VALS(value_map_547), 0x0, NULL, HFILL } },
{ &expand_var_2741, { "PSR : PSR Component", "asterix.48_1_11_1597_1553_compound_1553_group_955", FT_UINT8, BASE_DEC, VALS(value_map_548), 0x0, NULL, HFILL } },
{ &expand_var_2742, { "PLOTNR", "asterix.48_1_11_1597_1553_compound_1553_group_956", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2743, { "ATL : ADS-B/Track Link", "asterix.48_1_11_1597_1554_compound_1554_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2744, { "ATL : ADS-B/Track Link", "asterix.48_1_11_1597_rep40_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2745, { "TRN : Turn State [%]", "asterix.48_1_11_1597_1555_compound_1555_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2746, { "NPP : Next Predicted Position", "asterix.48_1_11_1597_1567_compound_1567_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2747, { "PREDRHO : Predicted Range [NM]", "asterix.48_1_11_1597_1567_compound_1567_group_957", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2748, { "PREDTHETA : Predicted Azimuth [°]", "asterix.48_1_11_1597_1567_compound_1567_group_958", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2749, { "EVOLRHOSTART : Predicted Closest Range [NM]", "asterix.48_1_11_1597_1567_compound_1567_group_959", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2750, { "EVOLRHOEND : Predicted Largest Range [NM]", "asterix.48_1_11_1597_1567_compound_1567_group_960", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2751, { "EVOLTHETASTART : Predicted Smallest Azimuth [°]", "asterix.48_1_11_1597_1567_compound_1567_group_961", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2752, { "EVOLTHETAEND : Predicted Largest Azimuth [°]", "asterix.48_1_11_1597_1567_compound_1567_group_962", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2753, { "NOISERHOSTART : Predicted Closest Range [NM]", "asterix.48_1_11_1597_1567_compound_1567_group_963", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2754, { "NOISERHOEND : Predicted Largest Range [NM]", "asterix.48_1_11_1597_1567_compound_1567_group_964", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2755, { "NOISETHETASTART : Predicted Smallest Azimuth [°]", "asterix.48_1_11_1597_1567_compound_1567_group_965", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2756, { "NOISETHETAEND : Predicted Largest Azimuth [°]", "asterix.48_1_11_1597_1567_compound_1567_group_966", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2757, { "PREDTIME : Predicted Detection Time [s]", "asterix.48_1_11_1597_1567_compound_1567_group_967", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2758, { "DLK : Data Link Characteristics", "asterix.48_1_11_1597_1571_compound_1571_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2759, { "DLK : Data Link Characteristics", "asterix.48_1_11_1597_rep41_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2760, { "TYPE", "asterix.48_1_11_1597_rep41_group_968", FT_UINT8, BASE_DEC, VALS(value_map_550), 0x0, NULL, HFILL } },
{ &expand_var_2761, { "ORIGIN", "asterix.48_1_11_1597_rep41_group_969", FT_UINT8, BASE_DEC, VALS(value_map_551), 0x0, NULL, HFILL } },
{ &expand_var_2762, { "STATE", "asterix.48_1_11_1597_rep41_group_970", FT_UINT8, BASE_DEC, VALS(value_map_552), 0x0, NULL, HFILL } },
{ &expand_var_2763, { "LCK : Lockout Characteristics", "asterix.48_1_11_1597_1574_compound_1574_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2764, { "LS : Lockout State", "asterix.48_1_11_1597_1574_compound_1574_group_971", FT_UINT8, BASE_DEC, VALS(value_map_553), 0x0, NULL, HFILL } },
{ &expand_var_2765, { "LOCTIM : Lockout Time [ms]", "asterix.48_1_11_1597_1574_compound_1574_group_972", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2766, { "TC : Transition Code", "asterix.48_1_11_1597_1581_compound_1581_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2767, { "TCOUNT1", "asterix.48_1_11_1597_1581_compound_1581_group_973", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2768, { "TCODE1", "asterix.48_1_11_1597_1581_compound_1581_group_974", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2769, { "TCOUNT2", "asterix.48_1_11_1597_1581_compound_1581_group_975", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2770, { "TCODE2", "asterix.48_1_11_1597_1581_compound_1581_group_976", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2771, { "TCOUNT3", "asterix.48_1_11_1597_1581_compound_1581_group_977", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2772, { "TCODE3", "asterix.48_1_11_1597_1581_compound_1581_group_978", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2773, { "TLC : Track Life Cycle", "asterix.48_1_11_1597_1585_compound_1585_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2774, { "ACQI", "asterix.48_1_11_1597_1585_compound_1585_group_979", FT_UINT8, BASE_DEC, VALS(value_map_555), 0x0, NULL, HFILL } },
{ &expand_var_2775, { "TRKUPDCTR", "asterix.48_1_11_1597_1585_compound_1585_group_980", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2776, { "LASTTRKUPD [ms]", "asterix.48_1_11_1597_1585_compound_1585_group_981", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2777, { "ASI : Adjacent Sensor Information", "asterix.48_1_11_1597_1592_compound_1592_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2778, { "ASI : Adjacent Sensor Information", "asterix.48_1_11_1597_rep42_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2779, { "SACADJS : SAC of the Adjacent Sensor", "asterix.48_1_11_1597_rep42_group_982", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2780, { "SICADJS : SIC of the Adjacent Sensor", "asterix.48_1_11_1597_rep42_group_983", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2781, { "TIMEOFDAYSCN : Absolute Timestamp in UTC Provided by the SCN [s]", "asterix.48_1_11_1597_rep42_group_984", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2782, { "DATAUSE : Use of Adjacent Sensor Data", "asterix.48_1_11_1597_rep42_group_985", FT_UINT8, BASE_DEC, VALS(value_map_556), 0x0, NULL, HFILL } },
{ &expand_var_2783, { "DRNA : DRN Availability", "asterix.48_1_11_1597_rep42_group_986", FT_UINT8, BASE_DEC, VALS(value_map_557), 0x0, NULL, HFILL } },
{ &expand_var_2784, { "DRN", "asterix.48_1_11_1597_rep42_group_987", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2785, { "TES : Track Extrapolation Source", "asterix.48_1_11_1597_1593_compound_1593_element", FT_UINT8, BASE_DEC, VALS(value_map_558), 0x0, NULL, HFILL } },
{ &expand_var_2786, { "IR : Identity Requested", "asterix.48_1_11_1597_1596_compound_1596_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2787, { "IR", "asterix.48_1_11_1597_1596_compound_1596_group_988", FT_UINT8, BASE_DEC, VALS(value_map_559), 0x0, NULL, HFILL } },
{ &expand_var_2788, { "M3A : Age of Mode 3/A Code (I048/070) [s]", "asterix.48_1_11_1597_1596_compound_1596_group_989", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2789, { "CPC : Common and Plot Characteristics", "asterix.48_1_11_1612_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2790, { "PNB : Plot Number", "asterix.48_1_11_1612_1598_compound_1598_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2791, { "RPL : Replies/Plot Link", "asterix.48_1_11_1612_1601_compound_1601_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2792, { "RPL : Replies/Plot Link", "asterix.48_1_11_1612_rep43_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2793, { "TYPE : Reply Type", "asterix.48_1_11_1612_rep43_group_990", FT_UINT8, BASE_DEC, VALS(value_map_560), 0x0, NULL, HFILL } },
{ &expand_var_2794, { "REPLYNBR", "asterix.48_1_11_1612_rep43_group_991", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2795, { "SNB : Scan Number", "asterix.48_1_11_1612_1602_compound_1602_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2796, { "DATE : Common and Plot Characteristics Date", "asterix.48_1_11_1612_1611_compound_1611_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2797, { "Y1", "asterix.48_1_11_1612_1611_compound_1611_group_992", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2798, { "Y2", "asterix.48_1_11_1612_1611_compound_1611_group_993", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2799, { "Y3", "asterix.48_1_11_1612_1611_compound_1611_group_994", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2800, { "Y4", "asterix.48_1_11_1612_1611_compound_1611_group_995", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2801, { "M1", "asterix.48_1_11_1612_1611_compound_1611_group_996", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2802, { "M2", "asterix.48_1_11_1612_1611_compound_1611_group_997", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2803, { "D1", "asterix.48_1_11_1612_1611_compound_1611_group_998", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2804, { "D2", "asterix.48_1_11_1612_1611_compound_1611_group_999", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2805, { "MD5 : Mode 5 Reports", "asterix.48_1_12_1532_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2806, { "M5N : Mode 5 Reports, New Format", "asterix.48_1_12_1538_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2807, { "M4E : Extended Mode 4 Report", "asterix.48_1_12_1540_re_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2808, { "RPC : Radar Plot Characteristics", "asterix.48_1_12_1545_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2809, { "ERR : Extended Range Report [NM]", "asterix.48_1_12_1546_re_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2810, { "RTC : Radar Track Characteristics", "asterix.48_1_12_1597_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2811, { "CPC : Common and Plot Characteristics", "asterix.48_1_12_1612_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2812, { "GEN48 : Generic Category 048 Data", "asterix.48_1_12_1621_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2813, { "ALTM2 : Alternative Mode 2 Code", "asterix.48_1_12_1621_1615_compound_1615_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2814, { "V", "asterix.48_1_12_1621_1615_compound_1615_group_454", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_2815, { "G", "asterix.48_1_12_1621_1615_compound_1615_group_457", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_2816, { "L", "asterix.48_1_12_1621_1615_compound_1615_group_1000", FT_UINT8, BASE_DEC, VALS(value_map_561), 0x0, NULL, HFILL } },
{ &expand_var_2817, { "ALTM2 : Mode-2 Code in Octal Representation", "asterix.48_1_12_1621_1615_compound_1615_group_1001", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2818, { "ALTM3 : Alternative Mode 3/A", "asterix.48_1_12_1621_1618_compound_1618_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2819, { "V", "asterix.48_1_12_1621_1618_compound_1618_group_454", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_2820, { "G", "asterix.48_1_12_1621_1618_compound_1618_group_457", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_2821, { "L", "asterix.48_1_12_1621_1618_compound_1618_group_1002", FT_UINT8, BASE_DEC, VALS(value_map_562), 0x0, NULL, HFILL } },
{ &expand_var_2822, { "ALTM3 : Mode-3/A Code in Octal Representation", "asterix.48_1_12_1621_1618_compound_1618_group_1003", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2823, { "ALTFL : Alternative Flight Level", "asterix.48_1_12_1621_1620_compound_1620_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2824, { "V", "asterix.48_1_12_1621_1620_compound_1620_group_454", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_2825, { "G", "asterix.48_1_12_1621_1620_compound_1620_group_457", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_2826, { "ALTFL : Flight Level in Two's Complement Form [ALTFL]", "asterix.48_1_12_1621_1620_compound_1620_group_1004", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2827, { "MD5 : Mode 5 Reports", "asterix.48_1_13_1532_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2828, { "M5N : Mode 5 Reports, New Format", "asterix.48_1_13_1538_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2829, { "M4E : Extended Mode 4 Report", "asterix.48_1_13_1540_re_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2830, { "RPC : Radar Plot Characteristics", "asterix.48_1_13_1545_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2831, { "ERR : Extended Range Report [NM]", "asterix.48_1_13_1546_re_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2832, { "RTC : Radar Track Characteristics", "asterix.48_1_13_1597_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2833, { "CPC : Common and Plot Characteristics", "asterix.48_1_13_1612_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2834, { "GEN48 : Generic Category 048 Data", "asterix.48_1_13_1626_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2835, { "ALTM2 : Alternative Mode 2 Code", "asterix.48_1_13_1626_1615_compound_1615_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2836, { "ALTM3 : Alternative Mode 3/A", "asterix.48_1_13_1626_1618_compound_1618_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2837, { "ALTFL : Alternative Flight Level", "asterix.48_1_13_1626_1620_compound_1620_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2838, { "RCSDB : Radar Cross Section", "asterix.48_1_13_1626_1623_compound_1623_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2839, { "RCSDB [dBm²]", "asterix.48_1_13_1626_1623_compound_1623_group_1005", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2840, { "RCSM : Radar Cross Section", "asterix.48_1_13_1626_1625_compound_1625_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2841, { "RCSM [m²]", "asterix.48_1_13_1626_1625_compound_1625_group_1006", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2842, { "010 : Data Source Identifier", "asterix.48_1_27_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2843, { "140 : Time of Day [s]", "asterix.48_1_27_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2844, { "020 : Target Report Descriptor", "asterix.48_1_27_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2845, { "TYP", "asterix.48_1_27_020_uap_extended_TYP", FT_UINT8, BASE_DEC, VALS(value_map_566), 0x0, NULL, HFILL } },
{ &expand_var_2846, { "SIM", "asterix.48_1_27_020_uap_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_162), 0x0, NULL, HFILL } },
{ &expand_var_2847, { "RDP", "asterix.48_1_27_020_uap_extended_RDP", FT_UINT8, BASE_DEC, VALS(value_map_567), 0x0, NULL, HFILL } },
{ &expand_var_2848, { "SPI", "asterix.48_1_27_020_uap_extended_SPI", FT_UINT8, BASE_DEC, VALS(value_map_167), 0x0, NULL, HFILL } },
{ &expand_var_2849, { "RAB", "asterix.48_1_27_020_uap_extended_RAB", FT_UINT8, BASE_DEC, VALS(value_map_568), 0x0, NULL, HFILL } },
{ &expand_var_2850, { "FX", "asterix.48_1_27_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2851, { "TST", "asterix.48_1_27_020_uap_extended_TST", FT_UINT8, BASE_DEC, VALS(value_map_569), 0x0, NULL, HFILL } },
{ &expand_var_2852, { "ERR", "asterix.48_1_27_020_uap_extended_ERR", FT_UINT8, BASE_DEC, VALS(value_map_570), 0x0, NULL, HFILL } },
{ &expand_var_2853, { "XPP", "asterix.48_1_27_020_uap_extended_XPP", FT_UINT8, BASE_DEC, VALS(value_map_571), 0x0, NULL, HFILL } },
{ &expand_var_2854, { "ME", "asterix.48_1_27_020_uap_extended_ME", FT_UINT8, BASE_DEC, VALS(value_map_476), 0x0, NULL, HFILL } },
{ &expand_var_2855, { "MI", "asterix.48_1_27_020_uap_extended_MI", FT_UINT8, BASE_DEC, VALS(value_map_572), 0x0, NULL, HFILL } },
{ &expand_var_2856, { "FOEFRI", "asterix.48_1_27_020_uap_extended_FOEFRI", FT_UINT8, BASE_DEC, VALS(value_map_573), 0x0, NULL, HFILL } },
{ &expand_var_2857, { "FX", "asterix.48_1_27_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2858, { "040 : Measured Position in Polar Co-ordinates", "asterix.48_1_27_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2859, { "RHO [NM]", "asterix.48_1_27_040_uap_group_1018", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2860, { "THETA [°]", "asterix.48_1_27_040_uap_group_15", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2861, { "070 : Mode-3/A Code in Octal Representation", "asterix.48_1_27_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2862, { "V", "asterix.48_1_27_070_uap_group_18", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_2863, { "G", "asterix.48_1_27_070_uap_group_19", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_2864, { "L", "asterix.48_1_27_070_uap_group_1027", FT_UINT8, BASE_DEC, VALS(value_map_171), 0x0, NULL, HFILL } },
{ &expand_var_2865, { "MODE3A : Mode-3/A Reply in Octal Representation", "asterix.48_1_27_070_uap_group_37", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2866, { "090 : Flight Level in Binary Representation", "asterix.48_1_27_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2867, { "V", "asterix.48_1_27_090_uap_group_18", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_2868, { "G", "asterix.48_1_27_090_uap_group_19", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_2869, { "FL [FL]", "asterix.48_1_27_090_uap_group_1028", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2870, { "130 : Radar Plot Characteristics", "asterix.48_1_27_130_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2871, { "SRL : SSR Plot Runlength [°]", "asterix.48_1_27_130_1667_compound_1667_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2872, { "SRR : Number of Received Replies for (M)SSR", "asterix.48_1_27_130_1668_compound_1668_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2873, { "SAM : Amplitude of (M)SSR Reply [dBm]", "asterix.48_1_27_130_1669_compound_1669_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2874, { "PRL : Primary Plot Runlength [°]", "asterix.48_1_27_130_1670_compound_1670_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2875, { "PAM : Amplitude of Primary Plot [dBm]", "asterix.48_1_27_130_1671_compound_1671_element", FT_INT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2876, { "RPD : Difference in Range Between PSR and SSR Plot [NM]", "asterix.48_1_27_130_1672_compound_1672_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2877, { "APD : Difference in Azimuth Between PSR and SSR Plot [°]", "asterix.48_1_27_130_1673_compound_1673_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2878, { "220 : Aircraft Address", "asterix.48_1_27_220_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2879, { "240 : Aircraft Identification", "asterix.48_1_27_240_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2880, { "250 : Mode S MB Data", "asterix.48_1_27_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2881, { "250 : Mode S MB Data", "asterix.48_1_27_250_rep44_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2882, { "MBDATA : Mode S Comm B Message Data", "asterix.48_1_27_250_rep44_group_1052", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2883, { "BDS1 : Comm B Data Buffer Store 1 Address", "asterix.48_1_27_250_rep44_group_594", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2884, { "BDS2 : Comm B Data Buffer Store 2 Address", "asterix.48_1_27_250_rep44_group_595", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2885, { "161 : Track Number", "asterix.48_1_27_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2886, { "TRN : Track Number", "asterix.48_1_27_161_uap_group_1035", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2887, { "042 : Calculated Position in Cartesian Co-ordinates", "asterix.48_1_27_042_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2888, { "X : X-Component [NM]", "asterix.48_1_27_042_uap_group_1019", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2889, { "Y : X-Component [NM]", "asterix.48_1_27_042_uap_group_1020", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2890, { "200 : Calculated Track Velocity in Polar Co-ordinates", "asterix.48_1_27_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2891, { "170 : Track Status", "asterix.48_1_27_170_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2892, { "CNF(Confirmed Vs. Tentative Track)", "asterix.48_1_27_170_uap_extended_CNF", FT_UINT8, BASE_DEC, VALS(value_map_262), 0x0, NULL, HFILL } },
{ &expand_var_2893, { "RAD(Type of Sensor(s) Maintaining Track)", "asterix.48_1_27_170_uap_extended_RAD", FT_UINT8, BASE_DEC, VALS(value_map_582), 0x0, NULL, HFILL } },
{ &expand_var_2894, { "DOU(Signals Level of Confidence in Plot to Track Association Process)", "asterix.48_1_27_170_uap_extended_DOU", FT_UINT8, BASE_DEC, VALS(value_map_583), 0x0, NULL, HFILL } },
{ &expand_var_2895, { "MAH(Manoeuvre Detection in Horizontal Sense)", "asterix.48_1_27_170_uap_extended_MAH", FT_UINT8, BASE_DEC, VALS(value_map_584), 0x0, NULL, HFILL } },
{ &expand_var_2896, { "CDM(Climbing / Descending Mode)", "asterix.48_1_27_170_uap_extended_CDM", FT_UINT8, BASE_DEC, VALS(value_map_585), 0x0, NULL, HFILL } },
{ &expand_var_2897, { "FX", "asterix.48_1_27_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2898, { "TRE(Signal for End_of_Track)", "asterix.48_1_27_170_uap_extended_TRE", FT_UINT8, BASE_DEC, VALS(value_map_586), 0x0, NULL, HFILL } },
{ &expand_var_2899, { "GHO(Ghost Vs. True Target)", "asterix.48_1_27_170_uap_extended_GHO", FT_UINT8, BASE_DEC, VALS(value_map_587), 0x0, NULL, HFILL } },
{ &expand_var_2900, { "SUP(Track Maintained with Track Information from Neighbouring Node B on the Cluster, or Network)", "asterix.48_1_27_170_uap_extended_SUP", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_2901, { "TCC(Type of Plot Coordinate Transformation Mechanism:)", "asterix.48_1_27_170_uap_extended_TCC", FT_UINT8, BASE_DEC, VALS(value_map_588), 0x0, NULL, HFILL } },
{ &expand_var_2902, { "FX", "asterix.48_1_27_170_uap_extended_170_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2903, { "210 : Track Quality", "asterix.48_1_27_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2904, { "SIGX : Sigma (X)) Standard Deviation on the Horizontal Axis of the Local Grid System [NM]", "asterix.48_1_27_210_uap_group_1045", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2905, { "SIGY : Sigma (Y)) Standard Deviation on the Vertical Axis of the Local Grid System [NM]", "asterix.48_1_27_210_uap_group_1046", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2906, { "SIGV : Sigma (V)) Standard Deviation on the Groundspeed Within the Local Grid System [NM/s]", "asterix.48_1_27_210_uap_group_1047", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2907, { "SIGH : Sigma (H)) Standard Deviation on the Heading Within the Local Grid System [°]", "asterix.48_1_27_210_uap_group_1048", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2908, { "030 : Warning/Error Conditions and Target Classification", "asterix.48_1_27_030_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2909, { "030 : Warning/Error Conditions and Target Classification", "asterix.48_1_27_030_rep45_element", FT_UINT8, BASE_DEC, VALS(value_map_574), 0x0, NULL, HFILL } },
{ &expand_var_2910, { "080 : Mode-3/A Code Confidence Indicator", "asterix.48_1_27_080_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2911, { "100 : Mode-C Code and Code Confidence Indicator", "asterix.48_1_27_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2912, { "110 : Height Measured by a 3D Radar", "asterix.48_1_27_110_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2913, { "3DH : 3D Height, in Binary Notation. Negative Values Are Expressed in Two's Complement [ft]", "asterix.48_1_27_110_uap_group_1029", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2914, { "120 : Radial Doppler Speed", "asterix.48_1_27_120_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2915, { "CAL : Calculated Doppler Speed", "asterix.48_1_27_120_1661_compound_1661_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2916, { "D", "asterix.48_1_27_120_1661_compound_1661_group_1030", FT_UINT8, BASE_DEC, VALS(value_map_576), 0x0, NULL, HFILL } },
{ &expand_var_2917, { "CAL : Calculated Doppler Speed, Coded in Two's Complement [m/s]", "asterix.48_1_27_120_1661_compound_1661_group_1031", FT_INT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2918, { "RDS : Raw Doppler Speed", "asterix.48_1_27_120_1665_compound_1665_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2919, { "RDS : Raw Doppler Speed", "asterix.48_1_27_120_rep46_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2920, { "DOP : Doppler Speed [m/s]", "asterix.48_1_27_120_rep46_group_1032", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2921, { "AMB : Ambiguity Range [m/s]", "asterix.48_1_27_120_rep46_group_1033", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2922, { "FRQ : Transmitter Frequency [MHz]", "asterix.48_1_27_120_rep46_group_1034", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2923, { "230 : Communications/ACAS Capability and Flight Status", "asterix.48_1_27_230_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2924, { "COM : Communications Capability of the Transponder", "asterix.48_1_27_230_uap_group_1049", FT_UINT8, BASE_DEC, VALS(value_map_590), 0x0, NULL, HFILL } },
{ &expand_var_2925, { "STAT : Flight Status", "asterix.48_1_27_230_uap_group_1050", FT_UINT8, BASE_DEC, VALS(value_map_591), 0x0, NULL, HFILL } },
{ &expand_var_2926, { "SI : SI/II Transponder Capability", "asterix.48_1_27_230_uap_group_1051", FT_UINT8, BASE_DEC, VALS(value_map_592), 0x0, NULL, HFILL } },
{ &expand_var_2927, { "MSSC : Mode-S Specific Service Capability", "asterix.48_1_27_230_uap_group_586", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_2928, { "ARC : Altitude Reporting Capability", "asterix.48_1_27_230_uap_group_587", FT_UINT8, BASE_DEC, VALS(value_map_224), 0x0, NULL, HFILL } },
{ &expand_var_2929, { "AIC : Aircraft Identification Capability", "asterix.48_1_27_230_uap_group_588", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_2930, { "B1A : BDS 1,0 Bit 16", "asterix.48_1_27_230_uap_group_589", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2931, { "B1B : BDS 1,0 Bits 37/40", "asterix.48_1_27_230_uap_group_590", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2932, { "260 : ACAS Resolution Advisory Report", "asterix.48_1_27_260_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2933, { "055 : Mode-1 Code in Octal Representation", "asterix.48_1_27_055_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2934, { "V", "asterix.48_1_27_055_uap_group_18", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_2935, { "G", "asterix.48_1_27_055_uap_group_19", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_2936, { "L", "asterix.48_1_27_055_uap_group_1021", FT_UINT8, BASE_DEC, VALS(value_map_575), 0x0, NULL, HFILL } },
{ &expand_var_2937, { "MODE1 : Mode-1 Code", "asterix.48_1_27_055_uap_group_1022", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2938, { "050 : Mode-2 Code in Octal Representation", "asterix.48_1_27_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2939, { "065 : Mode-1 Code Confidence Indicator", "asterix.48_1_27_065_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2940, { "QA4", "asterix.48_1_27_065_uap_group_1023", FT_UINT8, BASE_DEC, VALS(value_map_20), 0x0, NULL, HFILL } },
{ &expand_var_2941, { "QA2", "asterix.48_1_27_065_uap_group_1024", FT_UINT8, BASE_DEC, VALS(value_map_21), 0x0, NULL, HFILL } },
{ &expand_var_2942, { "QA1", "asterix.48_1_27_065_uap_group_40", FT_UINT8, BASE_DEC, VALS(value_map_22), 0x0, NULL, HFILL } },
{ &expand_var_2943, { "QB2", "asterix.48_1_27_065_uap_group_1025", FT_UINT8, BASE_DEC, VALS(value_map_24), 0x0, NULL, HFILL } },
{ &expand_var_2944, { "QB1", "asterix.48_1_27_065_uap_group_1026", FT_UINT8, BASE_DEC, VALS(value_map_25), 0x0, NULL, HFILL } },
{ &expand_var_2945, { "060 : Mode-2 Code Confidence Indicator", "asterix.48_1_27_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2946, { "SP : Special Purpose Field", "asterix.48_1_27_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2947, { "RE : Reserved Expansion Field", "asterix.48_1_27_27_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2948, { "010 : Data Source Identifier", "asterix.48_1_28_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2949, { "140 : Time of Day [s]", "asterix.48_1_28_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2950, { "020 : Target Report Descriptor", "asterix.48_1_28_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2951, { "040 : Measured Position in Polar Co-ordinates", "asterix.48_1_28_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2952, { "070 : Mode-3/A Code in Octal Representation", "asterix.48_1_28_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2953, { "090 : Flight Level in Binary Representation", "asterix.48_1_28_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2954, { "130 : Radar Plot Characteristics", "asterix.48_1_28_130_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2955, { "220 : Aircraft Address", "asterix.48_1_28_220_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2956, { "240 : Aircraft Identification", "asterix.48_1_28_240_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2957, { "250 : Mode S MB Data", "asterix.48_1_28_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2958, { "161 : Track Number", "asterix.48_1_28_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2959, { "042 : Calculated Position in Cartesian Co-ordinates", "asterix.48_1_28_042_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2960, { "200 : Calculated Track Velocity in Polar Co-ordinates", "asterix.48_1_28_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2961, { "170 : Track Status", "asterix.48_1_28_170_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2962, { "210 : Track Quality", "asterix.48_1_28_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2963, { "030 : Warning/Error Conditions and Target Classification", "asterix.48_1_28_030_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2964, { "030 : Warning/Error Conditions and Target Classification", "asterix.48_1_28_030_rep47_element", FT_UINT8, BASE_DEC, VALS(value_map_593), 0x0, NULL, HFILL } },
{ &expand_var_2965, { "080 : Mode-3/A Code Confidence Indicator", "asterix.48_1_28_080_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2966, { "100 : Mode-C Code and Code Confidence Indicator", "asterix.48_1_28_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2967, { "110 : Height Measured by a 3D Radar", "asterix.48_1_28_110_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2968, { "120 : Radial Doppler Speed", "asterix.48_1_28_120_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2969, { "230 : Communications/ACAS Capability and Flight Status", "asterix.48_1_28_230_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2970, { "260 : ACAS Resolution Advisory Report", "asterix.48_1_28_260_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2971, { "055 : Mode-1 Code in Octal Representation", "asterix.48_1_28_055_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2972, { "050 : Mode-2 Code in Octal Representation", "asterix.48_1_28_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2973, { "065 : Mode-1 Code Confidence Indicator", "asterix.48_1_28_065_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2974, { "060 : Mode-2 Code Confidence Indicator", "asterix.48_1_28_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2975, { "SP : Special Purpose Field", "asterix.48_1_28_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2976, { "RE : Reserved Expansion Field", "asterix.48_1_28_27_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2977, { "010 : Data Source Identifier", "asterix.48_1_29_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2978, { "140 : Time of Day [s]", "asterix.48_1_29_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2979, { "020 : Target Report Descriptor", "asterix.48_1_29_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2980, { "040 : Measured Position in Polar Co-ordinates", "asterix.48_1_29_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2981, { "070 : Mode-3/A Code in Octal Representation", "asterix.48_1_29_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2982, { "090 : Flight Level in Binary Representation", "asterix.48_1_29_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2983, { "130 : Radar Plot Characteristics", "asterix.48_1_29_130_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2984, { "220 : Aircraft Address", "asterix.48_1_29_220_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2985, { "240 : Aircraft Identification", "asterix.48_1_29_240_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2986, { "250 : BDS Register Data", "asterix.48_1_29_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2987, { "161 : Track Number", "asterix.48_1_29_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2988, { "042 : Calculated Position in Cartesian Co-ordinates", "asterix.48_1_29_042_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2989, { "200 : Calculated Track Velocity in Polar Co-ordinates", "asterix.48_1_29_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2990, { "170 : Track Status", "asterix.48_1_29_170_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2991, { "210 : Track Quality", "asterix.48_1_29_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2992, { "030 : Warning/Error Conditions and Target Classification", "asterix.48_1_29_030_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2993, { "080 : Mode-3/A Code Confidence Indicator", "asterix.48_1_29_080_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2994, { "100 : Mode-C Code and Code Confidence Indicator", "asterix.48_1_29_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2995, { "110 : Height Measured by a 3D Radar", "asterix.48_1_29_110_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2996, { "120 : Radial Doppler Speed", "asterix.48_1_29_120_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2997, { "230 : Communications/ACAS Capability and Flight Status", "asterix.48_1_29_230_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2998, { "260 : ACAS Resolution Advisory Report", "asterix.48_1_29_260_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_2999, { "055 : Mode-1 Code in Octal Representation", "asterix.48_1_29_055_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3000, { "050 : Mode-2 Code in Octal Representation", "asterix.48_1_29_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3001, { "065 : Mode-1 Code Confidence Indicator", "asterix.48_1_29_065_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3002, { "060 : Mode-2 Code Confidence Indicator", "asterix.48_1_29_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3003, { "SP : Special Purpose Field", "asterix.48_1_29_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3004, { "RE : Reserved Expansion Field", "asterix.48_1_29_27_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3005, { "010 : Data Source Identifier", "asterix.48_1_30_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3006, { "140 : Time of Day [s]", "asterix.48_1_30_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3007, { "020 : Target Report Descriptor", "asterix.48_1_30_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3008, { "040 : Measured Position in Polar Co-ordinates", "asterix.48_1_30_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3009, { "070 : Mode-3/A Code in Octal Representation", "asterix.48_1_30_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3010, { "090 : Flight Level in Binary Representation", "asterix.48_1_30_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3011, { "130 : Radar Plot Characteristics", "asterix.48_1_30_130_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3012, { "220 : Aircraft Address", "asterix.48_1_30_220_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3013, { "240 : Aircraft Identification", "asterix.48_1_30_240_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3014, { "250 : BDS Register Data", "asterix.48_1_30_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3015, { "161 : Track Number", "asterix.48_1_30_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3016, { "042 : Calculated Position in Cartesian Co-ordinates", "asterix.48_1_30_042_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3017, { "200 : Calculated Track Velocity in Polar Co-ordinates", "asterix.48_1_30_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3018, { "170 : Track Status", "asterix.48_1_30_170_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3019, { "210 : Track Quality", "asterix.48_1_30_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3020, { "030 : Warning/Error Conditions and Target Classification", "asterix.48_1_30_030_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3021, { "080 : Mode-3/A Code Confidence Indicator", "asterix.48_1_30_080_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3022, { "100 : Mode-C Code and Code Confidence Indicator", "asterix.48_1_30_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3023, { "110 : Height Measured by a 3D Radar", "asterix.48_1_30_110_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3024, { "120 : Radial Doppler Speed", "asterix.48_1_30_120_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3025, { "230 : Communications/ACAS Capability and Flight Status", "asterix.48_1_30_230_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3026, { "260 : ACAS Resolution Advisory Report", "asterix.48_1_30_260_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3027, { "055 : Mode-1 Code in Octal Representation", "asterix.48_1_30_055_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3028, { "050 : Mode-2 Code in Octal Representation", "asterix.48_1_30_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3029, { "065 : Mode-1 Code Confidence Indicator", "asterix.48_1_30_065_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3030, { "060 : Mode-2 Code Confidence Indicator", "asterix.48_1_30_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3031, { "SP : Special Purpose Field", "asterix.48_1_30_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3032, { "RE : Reserved Expansion Field", "asterix.48_1_30_27_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3033, { "010 : Data Source Identifier", "asterix.48_1_31_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3034, { "140 : Time of Day [s]", "asterix.48_1_31_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3035, { "020 : Target Report Descriptor", "asterix.48_1_31_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3036, { "TYP", "asterix.48_1_31_020_uap_extended_TYP", FT_UINT8, BASE_DEC, VALS(value_map_566), 0x0, NULL, HFILL } },
{ &expand_var_3037, { "SIM", "asterix.48_1_31_020_uap_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_162), 0x0, NULL, HFILL } },
{ &expand_var_3038, { "RDP", "asterix.48_1_31_020_uap_extended_RDP", FT_UINT8, BASE_DEC, VALS(value_map_567), 0x0, NULL, HFILL } },
{ &expand_var_3039, { "SPI", "asterix.48_1_31_020_uap_extended_SPI", FT_UINT8, BASE_DEC, VALS(value_map_167), 0x0, NULL, HFILL } },
{ &expand_var_3040, { "RAB", "asterix.48_1_31_020_uap_extended_RAB", FT_UINT8, BASE_DEC, VALS(value_map_568), 0x0, NULL, HFILL } },
{ &expand_var_3041, { "FX", "asterix.48_1_31_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3042, { "TST", "asterix.48_1_31_020_uap_extended_TST", FT_UINT8, BASE_DEC, VALS(value_map_569), 0x0, NULL, HFILL } },
{ &expand_var_3043, { "ERR", "asterix.48_1_31_020_uap_extended_ERR", FT_UINT8, BASE_DEC, VALS(value_map_570), 0x0, NULL, HFILL } },
{ &expand_var_3044, { "XPP", "asterix.48_1_31_020_uap_extended_XPP", FT_UINT8, BASE_DEC, VALS(value_map_571), 0x0, NULL, HFILL } },
{ &expand_var_3045, { "ME", "asterix.48_1_31_020_uap_extended_ME", FT_UINT8, BASE_DEC, VALS(value_map_476), 0x0, NULL, HFILL } },
{ &expand_var_3046, { "MI", "asterix.48_1_31_020_uap_extended_MI", FT_UINT8, BASE_DEC, VALS(value_map_572), 0x0, NULL, HFILL } },
{ &expand_var_3047, { "FOEFRI", "asterix.48_1_31_020_uap_extended_FOEFRI", FT_UINT8, BASE_DEC, VALS(value_map_573), 0x0, NULL, HFILL } },
{ &expand_var_3048, { "FX", "asterix.48_1_31_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3049, { "EP : ADSB Element Populated Bit", "asterix.48_1_31_020_uap_extended_1053", FT_UINT8, BASE_DEC, VALS(value_map_594), 0x0, NULL, HFILL } },
{ &expand_var_3050, { "VAL : On-Site ADS-B Information", "asterix.48_1_31_020_uap_extended_1054", FT_UINT8, BASE_DEC, VALS(value_map_595), 0x0, NULL, HFILL } },
{ &expand_var_3051, { "EP : SCN Element Populated Bit", "asterix.48_1_31_020_uap_extended_1056", FT_UINT8, BASE_DEC, VALS(value_map_596), 0x0, NULL, HFILL } },
{ &expand_var_3052, { "VAL : Surveillance Cluster Network Information", "asterix.48_1_31_020_uap_extended_1057", FT_UINT8, BASE_DEC, VALS(value_map_595), 0x0, NULL, HFILL } },
{ &expand_var_3053, { "EP : PAI Element Populated Bit", "asterix.48_1_31_020_uap_extended_1059", FT_UINT8, BASE_DEC, VALS(value_map_597), 0x0, NULL, HFILL } },
{ &expand_var_3054, { "VAL : Passive Acquisition Interface Information", "asterix.48_1_31_020_uap_extended_1060", FT_UINT8, BASE_DEC, VALS(value_map_595), 0x0, NULL, HFILL } },
{ &expand_var_3055, { "FX", "asterix.48_1_31_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3056, { "040 : Measured Position in Polar Co-ordinates", "asterix.48_1_31_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3057, { "070 : Mode-3/A Code in Octal Representation", "asterix.48_1_31_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3058, { "090 : Flight Level in Binary Representation", "asterix.48_1_31_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3059, { "130 : Radar Plot Characteristics", "asterix.48_1_31_130_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3060, { "220 : Aircraft Address", "asterix.48_1_31_220_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3061, { "240 : Aircraft Identification", "asterix.48_1_31_240_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3062, { "250 : BDS Register Data", "asterix.48_1_31_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3063, { "161 : Track Number", "asterix.48_1_31_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3064, { "042 : Calculated Position in Cartesian Co-ordinates", "asterix.48_1_31_042_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3065, { "200 : Calculated Track Velocity in Polar Co-ordinates", "asterix.48_1_31_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3066, { "170 : Track Status", "asterix.48_1_31_170_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3067, { "210 : Track Quality", "asterix.48_1_31_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3068, { "030 : Warning/Error Conditions and Target Classification", "asterix.48_1_31_030_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3069, { "030 : Warning/Error Conditions and Target Classification", "asterix.48_1_31_030_rep48_element", FT_UINT8, BASE_DEC, VALS(value_map_598), 0x0, NULL, HFILL } },
{ &expand_var_3070, { "080 : Mode-3/A Code Confidence Indicator", "asterix.48_1_31_080_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3071, { "100 : Mode-C Code and Code Confidence Indicator", "asterix.48_1_31_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3072, { "110 : Height Measured by a 3D Radar", "asterix.48_1_31_110_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3073, { "120 : Radial Doppler Speed", "asterix.48_1_31_120_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3074, { "230 : Communications/ACAS Capability and Flight Status", "asterix.48_1_31_230_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3075, { "260 : ACAS Resolution Advisory Report", "asterix.48_1_31_260_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3076, { "055 : Mode-1 Code in Octal Representation", "asterix.48_1_31_055_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3077, { "050 : Mode-2 Code in Octal Representation", "asterix.48_1_31_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3078, { "065 : Mode-1 Code Confidence Indicator", "asterix.48_1_31_065_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3079, { "060 : Mode-2 Code Confidence Indicator", "asterix.48_1_31_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3080, { "SP : Special Purpose Field", "asterix.48_1_31_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3081, { "RE : Reserved Expansion Field", "asterix.48_1_31_27_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3082, { "010 : Data Source Identifier", "asterix.48_1_32_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3083, { "140 : Time of Day [s]", "asterix.48_1_32_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3084, { "020 : Target Report Descriptor", "asterix.48_1_32_020_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3085, { "TYP", "asterix.48_1_32_020_uap_extended_TYP", FT_UINT8, BASE_DEC, VALS(value_map_566), 0x0, NULL, HFILL } },
{ &expand_var_3086, { "SIM", "asterix.48_1_32_020_uap_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_162), 0x0, NULL, HFILL } },
{ &expand_var_3087, { "RDP", "asterix.48_1_32_020_uap_extended_RDP", FT_UINT8, BASE_DEC, VALS(value_map_567), 0x0, NULL, HFILL } },
{ &expand_var_3088, { "SPI", "asterix.48_1_32_020_uap_extended_SPI", FT_UINT8, BASE_DEC, VALS(value_map_167), 0x0, NULL, HFILL } },
{ &expand_var_3089, { "RAB", "asterix.48_1_32_020_uap_extended_RAB", FT_UINT8, BASE_DEC, VALS(value_map_568), 0x0, NULL, HFILL } },
{ &expand_var_3090, { "FX", "asterix.48_1_32_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3091, { "TST", "asterix.48_1_32_020_uap_extended_TST", FT_UINT8, BASE_DEC, VALS(value_map_569), 0x0, NULL, HFILL } },
{ &expand_var_3092, { "ERR", "asterix.48_1_32_020_uap_extended_ERR", FT_UINT8, BASE_DEC, VALS(value_map_570), 0x0, NULL, HFILL } },
{ &expand_var_3093, { "XPP", "asterix.48_1_32_020_uap_extended_XPP", FT_UINT8, BASE_DEC, VALS(value_map_571), 0x0, NULL, HFILL } },
{ &expand_var_3094, { "ME", "asterix.48_1_32_020_uap_extended_ME", FT_UINT8, BASE_DEC, VALS(value_map_476), 0x0, NULL, HFILL } },
{ &expand_var_3095, { "MI", "asterix.48_1_32_020_uap_extended_MI", FT_UINT8, BASE_DEC, VALS(value_map_572), 0x0, NULL, HFILL } },
{ &expand_var_3096, { "FOEFRI", "asterix.48_1_32_020_uap_extended_FOEFRI", FT_UINT8, BASE_DEC, VALS(value_map_573), 0x0, NULL, HFILL } },
{ &expand_var_3097, { "FX", "asterix.48_1_32_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3098, { "EP : ADSB Element Populated Bit", "asterix.48_1_32_020_uap_extended_1053", FT_UINT8, BASE_DEC, VALS(value_map_594), 0x0, NULL, HFILL } },
{ &expand_var_3099, { "VAL : On-Site ADS-B Information", "asterix.48_1_32_020_uap_extended_1054", FT_UINT8, BASE_DEC, VALS(value_map_595), 0x0, NULL, HFILL } },
{ &expand_var_3100, { "EP : SCN Element Populated Bit", "asterix.48_1_32_020_uap_extended_1056", FT_UINT8, BASE_DEC, VALS(value_map_596), 0x0, NULL, HFILL } },
{ &expand_var_3101, { "VAL : Surveillance Cluster Network Information", "asterix.48_1_32_020_uap_extended_1057", FT_UINT8, BASE_DEC, VALS(value_map_595), 0x0, NULL, HFILL } },
{ &expand_var_3102, { "EP : PAI Element Populated Bit", "asterix.48_1_32_020_uap_extended_1059", FT_UINT8, BASE_DEC, VALS(value_map_597), 0x0, NULL, HFILL } },
{ &expand_var_3103, { "VAL : Passive Acquisition Interface Information", "asterix.48_1_32_020_uap_extended_1060", FT_UINT8, BASE_DEC, VALS(value_map_595), 0x0, NULL, HFILL } },
{ &expand_var_3104, { "FX", "asterix.48_1_32_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3105, { "EP : ACASXV Element Populated Bit", "asterix.48_1_32_020_uap_extended_1062", FT_UINT8, BASE_DEC, VALS(value_map_599), 0x0, NULL, HFILL } },
{ &expand_var_3106, { "VAL : ACAS Extended Version Value", "asterix.48_1_32_020_uap_extended_1063", FT_UINT8, BASE_DEC, VALS(value_map_600), 0x0, NULL, HFILL } },
{ &expand_var_3107, { "EP : POXPR Element Populated Bit", "asterix.48_1_32_020_uap_extended_1065", FT_UINT8, BASE_DEC, VALS(value_map_601), 0x0, NULL, HFILL } },
{ &expand_var_3108, { "VAL : PO Transpomder Capability", "asterix.48_1_32_020_uap_extended_1066", FT_UINT8, BASE_DEC, VALS(value_map_602), 0x0, NULL, HFILL } },
{ &expand_var_3109, { "FX", "asterix.48_1_32_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3110, { "EP : POACT Element Populated Bit", "asterix.48_1_32_020_uap_extended_1068", FT_UINT8, BASE_DEC, VALS(value_map_603), 0x0, NULL, HFILL } },
{ &expand_var_3111, { "VAL : POACT Active for Current Plot", "asterix.48_1_32_020_uap_extended_1069", FT_UINT8, BASE_DEC, VALS(value_map_604), 0x0, NULL, HFILL } },
{ &expand_var_3112, { "EP : DTFXPR Element Populated Bit", "asterix.48_1_32_020_uap_extended_1071", FT_UINT8, BASE_DEC, VALS(value_map_605), 0x0, NULL, HFILL } },
{ &expand_var_3113, { "VAL : Basic Dataflash Transponder Capability", "asterix.48_1_32_020_uap_extended_1072", FT_UINT8, BASE_DEC, VALS(value_map_606), 0x0, NULL, HFILL } },
{ &expand_var_3114, { "EP : DTFACT Element Populated Bit", "asterix.48_1_32_020_uap_extended_1074", FT_UINT8, BASE_DEC, VALS(value_map_607), 0x0, NULL, HFILL } },
{ &expand_var_3115, { "VAL : Basic Dataflash in Current Plot", "asterix.48_1_32_020_uap_extended_1075", FT_UINT8, BASE_DEC, VALS(value_map_608), 0x0, NULL, HFILL } },
{ &expand_var_3116, { "FX", "asterix.48_1_32_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3117, { "EP : IRMXPR Element Populated Bit", "asterix.48_1_32_020_uap_extended_1077", FT_UINT8, BASE_DEC, VALS(value_map_609), 0x0, NULL, HFILL } },
{ &expand_var_3118, { "VAL : Transponder IRM Capability", "asterix.48_1_32_020_uap_extended_1078", FT_UINT8, BASE_DEC, VALS(value_map_610), 0x0, NULL, HFILL } },
{ &expand_var_3119, { "EP : IRM Element Populated Bit", "asterix.48_1_32_020_uap_extended_1080", FT_UINT8, BASE_DEC, VALS(value_map_611), 0x0, NULL, HFILL } },
{ &expand_var_3120, { "VAL : IRM Active for Current Plot", "asterix.48_1_32_020_uap_extended_1081", FT_UINT8, BASE_DEC, VALS(value_map_612), 0x0, NULL, HFILL } },
{ &expand_var_3121, { "FX", "asterix.48_1_32_020_uap_extended_020_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3122, { "040 : Measured Position in Polar Co-ordinates", "asterix.48_1_32_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3123, { "070 : Mode-3/A Code in Octal Representation", "asterix.48_1_32_070_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3124, { "090 : Flight Level in Binary Representation", "asterix.48_1_32_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3125, { "V", "asterix.48_1_32_090_uap_group_18", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_3126, { "G", "asterix.48_1_32_090_uap_group_19", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_3127, { "FL [FL]", "asterix.48_1_32_090_uap_group_1083", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3128, { "130 : Radar Plot Characteristics", "asterix.48_1_32_130_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3129, { "220 : Aircraft Address", "asterix.48_1_32_220_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3130, { "240 : Aircraft Identification", "asterix.48_1_32_240_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3131, { "250 : BDS Register Data", "asterix.48_1_32_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3132, { "161 : Track Number", "asterix.48_1_32_161_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3133, { "042 : Calculated Position in Cartesian Co-ordinates", "asterix.48_1_32_042_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3134, { "200 : Calculated Track Velocity in Polar Co-ordinates", "asterix.48_1_32_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3135, { "170 : Track Status", "asterix.48_1_32_170_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3136, { "210 : Track Quality", "asterix.48_1_32_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3137, { "030 : Warning/Error Conditions and Target Classification", "asterix.48_1_32_030_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3138, { "030 : Warning/Error Conditions and Target Classification", "asterix.48_1_32_030_rep49_element", FT_UINT8, BASE_DEC, VALS(value_map_613), 0x0, NULL, HFILL } },
{ &expand_var_3139, { "080 : Mode-3/A Code Confidence Indicator", "asterix.48_1_32_080_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3140, { "100 : Mode-C Code and Code Confidence Indicator", "asterix.48_1_32_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3141, { "110 : Height Measured by a 3D Radar", "asterix.48_1_32_110_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3142, { "120 : Radial Doppler Speed", "asterix.48_1_32_120_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3143, { "230 : Communications/ACAS Capability and Flight Status", "asterix.48_1_32_230_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3144, { "260 : ACAS Resolution Advisory Report", "asterix.48_1_32_260_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3145, { "055 : Mode-1 Code in Octal Representation", "asterix.48_1_32_055_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3146, { "050 : Mode-2 Code in Octal Representation", "asterix.48_1_32_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3147, { "065 : Mode-1 Code Confidence Indicator", "asterix.48_1_32_065_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3148, { "060 : Mode-2 Code Confidence Indicator", "asterix.48_1_32_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3149, { "SP : Special Purpose Field", "asterix.48_1_32_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3150, { "RE : Reserved Expansion Field", "asterix.48_1_32_27_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3151, { "CST : Contributing Sensors With Local Tracknumbers", "asterix.62_1_2_1740_re_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3152, { "CST : Contributing Sensors With Local Tracknumbers", "asterix.62_1_2_1740_rep50_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3153, { "SAC : System Area Code", "asterix.62_1_2_1740_rep50_group_1", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3154, { "SIC : System Identification Code", "asterix.62_1_2_1740_rep50_group_2", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3155, { "TYP", "asterix.62_1_2_1740_rep50_group_1084", FT_UINT8, BASE_DEC, VALS(value_map_614), 0x0, NULL, HFILL } },
{ &expand_var_3156, { "LTN : Local Track Number", "asterix.62_1_2_1740_rep50_group_1085", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3157, { "CSN : Contributing Sensors No Local Tracknumbers", "asterix.62_1_2_1741_re_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3158, { "CSN : Contributing Sensors No Local Tracknumbers", "asterix.62_1_2_1741_rep51_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3159, { "SAC : System Area Code", "asterix.62_1_2_1741_rep51_group_1", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3160, { "SIC : System Identification Code", "asterix.62_1_2_1741_rep51_group_2", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3161, { "TYP", "asterix.62_1_2_1741_rep51_group_1084", FT_UINT8, BASE_DEC, VALS(value_map_614), 0x0, NULL, HFILL } },
{ &expand_var_3162, { "TVS : Calculated Track Velocity Relative to System Reference Point", "asterix.62_1_2_1744_re_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3163, { "VX [m/s]", "asterix.62_1_2_1744_re_group_1086", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3164, { "VY [m/s]", "asterix.62_1_2_1744_re_group_1087", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3165, { "STS : Supplementary Track Status", "asterix.62_1_2_1746_re_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3166, { "FDR(Flight Data Retained)", "asterix.62_1_2_1746_re_extended_FDR", FT_UINT8, BASE_DEC, VALS(value_map_615), 0x0, NULL, HFILL } },
{ &expand_var_3167, { "FX", "asterix.62_1_2_1746_re_extended_STS_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3168, { "CST : Contributing Sensors With Local Tracknumbers", "asterix.62_1_3_1740_re_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3169, { "CSN : Contributing Sensors No Local Tracknumbers", "asterix.62_1_3_1741_re_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3170, { "TVS : Calculated Track Velocity Relative to System Reference Point", "asterix.62_1_3_1744_re_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3171, { "STS : Supplementary Track Status", "asterix.62_1_3_1750_re_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3172, { "FDR(Flight Data Retained)", "asterix.62_1_3_1750_re_extended_FDR", FT_UINT8, BASE_DEC, VALS(value_map_615), 0x0, NULL, HFILL } },
{ &expand_var_3173, { "EP : LNAV Element Populated", "asterix.62_1_3_1750_re_extended_1089", FT_UINT8, BASE_DEC, VALS(value_map_616), 0x0, NULL, HFILL } },
{ &expand_var_3174, { "VAL : LNAV Mode", "asterix.62_1_3_1750_re_extended_1090", FT_UINT8, BASE_DEC, VALS(value_map_617), 0x0, NULL, HFILL } },
{ &expand_var_3175, { "FX", "asterix.62_1_3_1750_re_extended_STS_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3176, { "V3 : ADS-B Version 3 Data", "asterix.62_1_3_1778_re_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3177, { "PS3 : Priority Status for Version 3 ADS-B Systems", "asterix.62_1_3_1778_1753_compound_1753_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3178, { "EP : Priority Status for Version 3 ADS-B Systems Populated", "asterix.62_1_3_1778_1753_compound_1753_group_1092", FT_UINT8, BASE_DEC, VALS(value_map_618), 0x0, NULL, HFILL } },
{ &expand_var_3179, { "VAL : Priority Status for Version 3 ADS-B Systems", "asterix.62_1_3_1778_1753_compound_1753_group_1093", FT_UINT8, BASE_DEC, VALS(value_map_619), 0x0, NULL, HFILL } },
{ &expand_var_3180, { "AS : Aircraft Status", "asterix.62_1_3_1778_1765_compound_1765_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3181, { "RCE : Reduced Capability Equipment", "asterix.62_1_3_1778_1765_compound_1765_group_1095", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3182, { "EP : Element Populated Bit", "asterix.62_1_3_1778_1765_compound_1765_group_166", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_3183, { "VAL : Value", "asterix.62_1_3_1778_1765_compound_1765_group_1094", FT_UINT8, BASE_DEC, VALS(value_map_620), 0x0, NULL, HFILL } },
{ &expand_var_3184, { "RRL : Reply Rate Limiting", "asterix.62_1_3_1778_1765_compound_1765_group_1097", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3185, { "EP : Element Populated Bit", "asterix.62_1_3_1778_1765_compound_1765_group_719", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_3186, { "VAL : Value", "asterix.62_1_3_1778_1765_compound_1765_group_1096", FT_UINT8, BASE_DEC, VALS(value_map_428), 0x0, NULL, HFILL } },
{ &expand_var_3187, { "TPW : Transmit Power", "asterix.62_1_3_1778_1765_compound_1765_group_1099", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3188, { "EP : Element Populated Bit", "asterix.62_1_3_1778_1765_compound_1765_group_713", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_3189, { "VAL : Value", "asterix.62_1_3_1778_1765_compound_1765_group_1098", FT_UINT8, BASE_DEC, VALS(value_map_430), 0x0, NULL, HFILL } },
{ &expand_var_3190, { "TSI : Transponder Side Indication", "asterix.62_1_3_1778_1765_compound_1765_group_1101", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3191, { "EP : Element Populated Bit", "asterix.62_1_3_1778_1765_compound_1765_group_166", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_3192, { "VAL : Value", "asterix.62_1_3_1778_1765_compound_1765_group_1100", FT_UINT8, BASE_DEC, VALS(value_map_621), 0x0, NULL, HFILL } },
{ &expand_var_3193, { "TAO : Transponder Antenna Offset", "asterix.62_1_3_1778_1765_compound_1765_group_1104", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3194, { "EP : Element Populated Bit", "asterix.62_1_3_1778_1765_compound_1765_group_719", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_3195, { "RE : Range Exceeded", "asterix.62_1_3_1778_1765_compound_1765_group_1102", FT_UINT8, BASE_DEC, VALS(value_map_462), 0x0, NULL, HFILL } },
{ &expand_var_3196, { "VAL : Value", "asterix.62_1_3_1778_1765_compound_1765_group_1103", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3197, { "UAS : UAS/RPAS Status", "asterix.62_1_3_1778_1772_compound_1772_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3198, { "MUO : Manned / Unmanned Operation", "asterix.62_1_3_1778_1772_compound_1772_group_1106", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3199, { "EP : Element Populated Bit", "asterix.62_1_3_1778_1772_compound_1772_group_166", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_3200, { "VAL : Value", "asterix.62_1_3_1778_1772_compound_1772_group_1105", FT_UINT8, BASE_DEC, VALS(value_map_432), 0x0, NULL, HFILL } },
{ &expand_var_3201, { "DAA : Detect and Avoid Capabilities", "asterix.62_1_3_1778_1772_compound_1772_group_1108", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3202, { "EP : Element Populated Bit", "asterix.62_1_3_1778_1772_compound_1772_group_710", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_3203, { "VAL : Value", "asterix.62_1_3_1778_1772_compound_1772_group_1107", FT_UINT8, BASE_DEC, VALS(value_map_434), 0x0, NULL, HFILL } },
{ &expand_var_3204, { "RWC : Remain Well Clear", "asterix.62_1_3_1778_1772_compound_1772_group_1110", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3205, { "EP : Element Populated Bit", "asterix.62_1_3_1778_1772_compound_1772_group_713", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_3206, { "VAL : Value", "asterix.62_1_3_1778_1772_compound_1772_group_1109", FT_UINT8, BASE_DEC, VALS(value_map_433), 0x0, NULL, HFILL } },
{ &expand_var_3207, { "CASS : Collision Avoidance System Status", "asterix.62_1_3_1778_1777_compound_1777_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3208, { "SVH : Sense Vertical & Horizontal", "asterix.62_1_3_1778_1777_compound_1777_group_1112", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3209, { "EP : Element Populated Bit", "asterix.62_1_3_1778_1777_compound_1777_group_166", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_3210, { "VAL : Value", "asterix.62_1_3_1778_1777_compound_1777_group_1111", FT_UINT8, BASE_DEC, VALS(value_map_435), 0x0, NULL, HFILL } },
{ &expand_var_3211, { "CATC : CAS Type & Capability", "asterix.62_1_3_1778_1777_compound_1777_group_1114", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3212, { "EP : Element Populated Bit", "asterix.62_1_3_1778_1777_compound_1777_group_719", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_3213, { "VAL : Value", "asterix.62_1_3_1778_1777_compound_1777_group_1113", FT_UINT8, BASE_DEC, VALS(value_map_622), 0x0, NULL, HFILL } },
{ &expand_var_3214, { "010 : Data Source Identifier", "asterix.62_1_16_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3215, { "015 : Service Identification", "asterix.62_1_16_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3216, { "070 : Time Of Track Information [s]", "asterix.62_1_16_070_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3217, { "105 : Calculated Position In WGS-84 Co-ordinates", "asterix.62_1_16_105_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3218, { "LAT : Latitude [°]", "asterix.62_1_16_105_uap_group_1143", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3219, { "LON : Longitude [°]", "asterix.62_1_16_105_uap_group_1144", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3220, { "100 : Calculated Track Position (Cartesian)", "asterix.62_1_16_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3221, { "X : X Coordinate [m]", "asterix.62_1_16_100_uap_group_1141", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3222, { "Y : Y Coordinate [m]", "asterix.62_1_16_100_uap_group_1142", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3223, { "185 : Calculated Track Velocity (Cartesian)", "asterix.62_1_16_185_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3224, { "VX : Velocity (X-component) [m/s]", "asterix.62_1_16_185_uap_group_1157", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3225, { "VY : Velocity (Y-component) [m/s]", "asterix.62_1_16_185_uap_group_1158", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3226, { "210 : Calculated Acceleration (Cartesian)", "asterix.62_1_16_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3227, { "AX [m/s²]", "asterix.62_1_16_210_uap_group_1163", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3228, { "AY [m/s²]", "asterix.62_1_16_210_uap_group_1164", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3229, { "060 : Track Mode 3/A Code", "asterix.62_1_16_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3230, { "CH : Change in Mode 3/A", "asterix.62_1_16_060_uap_group_1115", FT_UINT8, BASE_DEC, VALS(value_map_623), 0x0, NULL, HFILL } },
{ &expand_var_3231, { "MODE3A : Mode-3/A Reply in Octal Representation", "asterix.62_1_16_060_uap_group_667", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3232, { "245 : Target Identification", "asterix.62_1_16_245_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3233, { "STI", "asterix.62_1_16_245_uap_group_1165", FT_UINT8, BASE_DEC, VALS(value_map_653), 0x0, NULL, HFILL } },
{ &expand_var_3234, { "CHR : Characters 1-8 (Coded on 6 Bits Each) Defining Target Identification", "asterix.62_1_16_245_uap_group_1166", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3235, { "380 : Aircraft Derived Data", "asterix.62_1_16_380_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3236, { "ADR : Target Address", "asterix.62_1_16_380_1913_compound_1913_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3237, { "ID : Target Identification", "asterix.62_1_16_380_1914_compound_1914_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3238, { "MHG : Magnetic Heading [°]", "asterix.62_1_16_380_1915_compound_1915_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3239, { "IAS : Indicated Airspeed/Mach No", "asterix.62_1_16_380_1918_compound_1918_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3240, { "IM", "asterix.62_1_16_380_1918_compound_1918_group_1176", FT_UINT8, BASE_DEC, VALS(value_map_657), 0x0, NULL, HFILL } },
{ &expand_var_3241, { "IAS", "asterix.62_1_16_380_1918_compound_1918_group_1177", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3242, { "TAS : True Airspeed [kt]", "asterix.62_1_16_380_1919_compound_1919_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3243, { "SAL : Selected Altitude", "asterix.62_1_16_380_1923_compound_1923_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3244, { "SAS", "asterix.62_1_16_380_1923_compound_1923_group_1178", FT_UINT8, BASE_DEC, VALS(value_map_658), 0x0, NULL, HFILL } },
{ &expand_var_3245, { "SRC", "asterix.62_1_16_380_1923_compound_1923_group_1179", FT_UINT8, BASE_DEC, VALS(value_map_659), 0x0, NULL, HFILL } },
{ &expand_var_3246, { "ALT : Altitude in Two's Complement Form [ft]", "asterix.62_1_16_380_1923_compound_1923_group_1180", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3247, { "FSS : Final State Selected Altitude", "asterix.62_1_16_380_1925_compound_1925_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3248, { "MV : Manage Vertical Mode", "asterix.62_1_16_380_1925_compound_1925_group_650", FT_UINT8, BASE_DEC, VALS(value_map_384), 0x0, NULL, HFILL } },
{ &expand_var_3249, { "AH : Altitude Hold", "asterix.62_1_16_380_1925_compound_1925_group_1181", FT_UINT8, BASE_DEC, VALS(value_map_384), 0x0, NULL, HFILL } },
{ &expand_var_3250, { "AM : Approach Mode", "asterix.62_1_16_380_1925_compound_1925_group_652", FT_UINT8, BASE_DEC, VALS(value_map_384), 0x0, NULL, HFILL } },
{ &expand_var_3251, { "ALT : Altitude in Two's Complement Form [ft]", "asterix.62_1_16_380_1925_compound_1925_group_1180", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3252, { "TIS : Trajectory Intent Status", "asterix.62_1_16_380_1928_compound_1928_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3253, { "NAV(TID Available)", "asterix.62_1_16_380_1928_compound_1928_extended_NAV", FT_UINT8, BASE_DEC, VALS(value_map_660), 0x0, NULL, HFILL } },
{ &expand_var_3254, { "NVB(TID Valid)", "asterix.62_1_16_380_1928_compound_1928_extended_NVB", FT_UINT8, BASE_DEC, VALS(value_map_661), 0x0, NULL, HFILL } },
{ &expand_var_3255, { "FX", "asterix.62_1_16_380_1928_compound_1928_extended_TIS_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3256, { "TID : Trajectory Intent Data", "asterix.62_1_16_380_1937_compound_1937_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3257, { "TID : Trajectory Intent Data", "asterix.62_1_16_380_rep52_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3258, { "TCA : TCP Number Availability", "asterix.62_1_16_380_rep52_group_1184", FT_UINT8, BASE_DEC, VALS(value_map_373), 0x0, NULL, HFILL } },
{ &expand_var_3259, { "NC : TCP Compliance", "asterix.62_1_16_380_rep52_group_1185", FT_UINT8, BASE_DEC, VALS(value_map_374), 0x0, NULL, HFILL } },
{ &expand_var_3260, { "TCPN : Trajectory Change Point Number", "asterix.62_1_16_380_rep52_group_1186", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3261, { "ALT : Altitude in Two's Complement Form [ft]", "asterix.62_1_16_380_rep52_group_636", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3262, { "LAT : Latitude in WGS.84 in Two's Complement [°]", "asterix.62_1_16_380_rep52_group_1187", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3263, { "LON : Longitude in WGS.84 in Two's Complement [°]", "asterix.62_1_16_380_rep52_group_1188", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3264, { "PT : Point Type", "asterix.62_1_16_380_rep52_group_639", FT_UINT8, BASE_DEC, VALS(value_map_377), 0x0, NULL, HFILL } },
{ &expand_var_3265, { "TD : Turn Direction", "asterix.62_1_16_380_rep52_group_1189", FT_UINT8, BASE_DEC, VALS(value_map_378), 0x0, NULL, HFILL } },
{ &expand_var_3266, { "TRA : Turn Radius Availability", "asterix.62_1_16_380_rep52_group_1190", FT_UINT8, BASE_DEC, VALS(value_map_379), 0x0, NULL, HFILL } },
{ &expand_var_3267, { "TOA : TOV Available", "asterix.62_1_16_380_rep52_group_1191", FT_UINT8, BASE_DEC, VALS(value_map_380), 0x0, NULL, HFILL } },
{ &expand_var_3268, { "TOV : Time Over Point [s]", "asterix.62_1_16_380_rep52_group_643", FT_UINT24, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3269, { "TTR : TCP Turn Radius [NM]", "asterix.62_1_16_380_rep52_group_644", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3270, { "COM : Communications/ACAS Capability and Flight Status", "asterix.62_1_16_380_1940_compound_1940_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3271, { "COM : Communications Capability of the Transponder", "asterix.62_1_16_380_1940_compound_1940_group_292", FT_UINT8, BASE_DEC, VALS(value_map_221), 0x0, NULL, HFILL } },
{ &expand_var_3272, { "STAT : Flight Status", "asterix.62_1_16_380_1940_compound_1940_group_1192", FT_UINT8, BASE_DEC, VALS(value_map_662), 0x0, NULL, HFILL } },
{ &expand_var_3273, { "SSC : Specific Service Capability", "asterix.62_1_16_380_1940_compound_1940_group_294", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_3274, { "ARC : Altitude Reporting Capability", "asterix.62_1_16_380_1940_compound_1940_group_295", FT_UINT8, BASE_DEC, VALS(value_map_224), 0x0, NULL, HFILL } },
{ &expand_var_3275, { "AIC : Aircraft Identification Capability", "asterix.62_1_16_380_1940_compound_1940_group_296", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_3276, { "B1A : BDS 1,0 Bit 16", "asterix.62_1_16_380_1940_compound_1940_group_297", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3277, { "B1B : BDS BDS 1,0 Bits 37/40", "asterix.62_1_16_380_1940_compound_1940_group_1193", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3278, { "SAB : Status Reported by ADS-B", "asterix.62_1_16_380_1946_compound_1946_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3279, { "AC : ACAS Status", "asterix.62_1_16_380_1946_compound_1946_group_1194", FT_UINT8, BASE_DEC, VALS(value_map_663), 0x0, NULL, HFILL } },
{ &expand_var_3280, { "MN : Multiple Navigational Aids Status", "asterix.62_1_16_380_1946_compound_1946_group_1195", FT_UINT8, BASE_DEC, VALS(value_map_664), 0x0, NULL, HFILL } },
{ &expand_var_3281, { "DC : Differential Correction Status", "asterix.62_1_16_380_1946_compound_1946_group_1196", FT_UINT8, BASE_DEC, VALS(value_map_665), 0x0, NULL, HFILL } },
{ &expand_var_3282, { "GBS : Ground Bit Set", "asterix.62_1_16_380_1946_compound_1946_group_1197", FT_UINT8, BASE_DEC, VALS(value_map_666), 0x0, NULL, HFILL } },
{ &expand_var_3283, { "STAT : Flight Status", "asterix.62_1_16_380_1946_compound_1946_group_1198", FT_UINT8, BASE_DEC, VALS(value_map_667), 0x0, NULL, HFILL } },
{ &expand_var_3284, { "ACS : ACAS Resolution Advisory Report", "asterix.62_1_16_380_1947_compound_1947_element", FT_BYTES, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3285, { "BVR : Barometric Vertical Rate [ft/min]", "asterix.62_1_16_380_1948_compound_1948_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3286, { "GVR : Geometric Vertical Rate [ft/min]", "asterix.62_1_16_380_1949_compound_1949_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3287, { "RAN : Roll Angle [°]", "asterix.62_1_16_380_1950_compound_1950_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3288, { "TAR : Track Angle Rate", "asterix.62_1_16_380_1952_compound_1952_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3289, { "TI : Turn Indicator", "asterix.62_1_16_380_1952_compound_1952_group_657", FT_UINT8, BASE_DEC, VALS(value_map_388), 0x0, NULL, HFILL } },
{ &expand_var_3290, { "ROT : Rate of Turn in Two's Complement Form [°/s]", "asterix.62_1_16_380_1952_compound_1952_group_1199", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3291, { "TAN : Track Angle [°]", "asterix.62_1_16_380_1953_compound_1953_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3292, { "GS : Ground Speed [NM/s]", "asterix.62_1_16_380_1954_compound_1954_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3293, { "VUN : Velocity Uncertainty", "asterix.62_1_16_380_1955_compound_1955_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3294, { "MET : Meteorological Data", "asterix.62_1_16_380_1964_compound_1964_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3295, { "WS : Wind Speed Valid Flag", "asterix.62_1_16_380_1964_compound_1964_group_1200", FT_UINT8, BASE_DEC, VALS(value_map_668), 0x0, NULL, HFILL } },
{ &expand_var_3296, { "WD : Wind Direction Valid Flag", "asterix.62_1_16_380_1964_compound_1964_group_1201", FT_UINT8, BASE_DEC, VALS(value_map_669), 0x0, NULL, HFILL } },
{ &expand_var_3297, { "TMP : Temperature Valid Flag", "asterix.62_1_16_380_1964_compound_1964_group_1202", FT_UINT8, BASE_DEC, VALS(value_map_670), 0x0, NULL, HFILL } },
{ &expand_var_3298, { "TRB : Turbulence Valid Flag", "asterix.62_1_16_380_1964_compound_1964_group_1203", FT_UINT8, BASE_DEC, VALS(value_map_671), 0x0, NULL, HFILL } },
{ &expand_var_3299, { "WSD : Wind Speed [kt]", "asterix.62_1_16_380_1964_compound_1964_group_1204", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3300, { "WDD : Wind Direction [°]", "asterix.62_1_16_380_1964_compound_1964_group_1205", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3301, { "TMPD : Temperature in Degrees Celsius [°C]", "asterix.62_1_16_380_1964_compound_1964_group_1206", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3302, { "TRBD : Turbulence", "asterix.62_1_16_380_1964_compound_1964_group_1207", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3303, { "EMC : Emitter Category", "asterix.62_1_16_380_1965_compound_1965_element", FT_UINT8, BASE_DEC, VALS(value_map_672), 0x0, NULL, HFILL } },
{ &expand_var_3304, { "POS : Position", "asterix.62_1_16_380_1968_compound_1968_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3305, { "LAT : Latitude in WGS.84 in Two's Complement Form [°]", "asterix.62_1_16_380_1968_compound_1968_group_1208", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3306, { "LON : Longitude in WGS.84 in Two's Complement Form [°]", "asterix.62_1_16_380_1968_compound_1968_group_1209", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3307, { "GAL : Geometric Altitude [ft]", "asterix.62_1_16_380_1969_compound_1969_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3308, { "PUN : Position Uncertainty", "asterix.62_1_16_380_1971_compound_1971_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3309, { "PUN : Position Uncertainty", "asterix.62_1_16_380_1971_compound_1971_group_1210", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3310, { "MB : MODE S MB DATA", "asterix.62_1_16_380_1972_compound_1972_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3311, { "IAR : Indicated Airspeed [kt]", "asterix.62_1_16_380_1973_compound_1973_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3312, { "MAC : Mach Number [Mach]", "asterix.62_1_16_380_1974_compound_1974_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3313, { "BPS : Barometric Pressure Setting (derived from Mode S BDS 4,0)", "asterix.62_1_16_380_1976_compound_1976_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3314, { "BPS [mb]", "asterix.62_1_16_380_1976_compound_1976_group_1211", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3315, { "040 : Track Number", "asterix.62_1_16_040_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3316, { "080 : Track Status", "asterix.62_1_16_080_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3317, { "MON", "asterix.62_1_16_080_uap_extended_MON", FT_UINT8, BASE_DEC, VALS(value_map_624), 0x0, NULL, HFILL } },
{ &expand_var_3318, { "SPI", "asterix.62_1_16_080_uap_extended_SPI", FT_UINT8, BASE_DEC, VALS(value_map_210), 0x0, NULL, HFILL } },
{ &expand_var_3319, { "MRH(Most Reliable Height)", "asterix.62_1_16_080_uap_extended_MRH", FT_UINT8, BASE_DEC, VALS(value_map_200), 0x0, NULL, HFILL } },
{ &expand_var_3320, { "SRC(Source of Calculated Track Altitude for I062/130)", "asterix.62_1_16_080_uap_extended_SRC", FT_UINT8, BASE_DEC, VALS(value_map_625), 0x0, NULL, HFILL } },
{ &expand_var_3321, { "CNF", "asterix.62_1_16_080_uap_extended_CNF", FT_UINT8, BASE_DEC, VALS(value_map_202), 0x0, NULL, HFILL } },
{ &expand_var_3322, { "FX", "asterix.62_1_16_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3323, { "SIM", "asterix.62_1_16_080_uap_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_626), 0x0, NULL, HFILL } },
{ &expand_var_3324, { "TSE", "asterix.62_1_16_080_uap_extended_TSE", FT_UINT8, BASE_DEC, VALS(value_map_627), 0x0, NULL, HFILL } },
{ &expand_var_3325, { "TSB", "asterix.62_1_16_080_uap_extended_TSB", FT_UINT8, BASE_DEC, VALS(value_map_628), 0x0, NULL, HFILL } },
{ &expand_var_3326, { "FPC", "asterix.62_1_16_080_uap_extended_FPC", FT_UINT8, BASE_DEC, VALS(value_map_212), 0x0, NULL, HFILL } },
{ &expand_var_3327, { "AFF", "asterix.62_1_16_080_uap_extended_AFF", FT_UINT8, BASE_DEC, VALS(value_map_213), 0x0, NULL, HFILL } },
{ &expand_var_3328, { "STP", "asterix.62_1_16_080_uap_extended_STP", FT_UINT8, BASE_DEC, VALS(value_map_629), 0x0, NULL, HFILL } },
{ &expand_var_3329, { "KOS", "asterix.62_1_16_080_uap_extended_KOS", FT_UINT8, BASE_DEC, VALS(value_map_630), 0x0, NULL, HFILL } },
{ &expand_var_3330, { "FX", "asterix.62_1_16_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3331, { "AMA", "asterix.62_1_16_080_uap_extended_AMA", FT_UINT8, BASE_DEC, VALS(value_map_209), 0x0, NULL, HFILL } },
{ &expand_var_3332, { "MD4", "asterix.62_1_16_080_uap_extended_MD4", FT_UINT8, BASE_DEC, VALS(value_map_573), 0x0, NULL, HFILL } },
{ &expand_var_3333, { "ME", "asterix.62_1_16_080_uap_extended_ME", FT_UINT8, BASE_DEC, VALS(value_map_207), 0x0, NULL, HFILL } },
{ &expand_var_3334, { "MI", "asterix.62_1_16_080_uap_extended_MI", FT_UINT8, BASE_DEC, VALS(value_map_631), 0x0, NULL, HFILL } },
{ &expand_var_3335, { "MD5", "asterix.62_1_16_080_uap_extended_MD5", FT_UINT8, BASE_DEC, VALS(value_map_632), 0x0, NULL, HFILL } },
{ &expand_var_3336, { "FX", "asterix.62_1_16_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3337, { "CST", "asterix.62_1_16_080_uap_extended_CST", FT_UINT8, BASE_DEC, VALS(value_map_211), 0x0, NULL, HFILL } },
{ &expand_var_3338, { "PSR", "asterix.62_1_16_080_uap_extended_PSR", FT_UINT8, BASE_DEC, VALS(value_map_245), 0x0, NULL, HFILL } },
{ &expand_var_3339, { "SSR", "asterix.62_1_16_080_uap_extended_SSR", FT_UINT8, BASE_DEC, VALS(value_map_246), 0x0, NULL, HFILL } },
{ &expand_var_3340, { "MDS", "asterix.62_1_16_080_uap_extended_MDS", FT_UINT8, BASE_DEC, VALS(value_map_247), 0x0, NULL, HFILL } },
{ &expand_var_3341, { "ADS", "asterix.62_1_16_080_uap_extended_ADS", FT_UINT8, BASE_DEC, VALS(value_map_633), 0x0, NULL, HFILL } },
{ &expand_var_3342, { "SUC", "asterix.62_1_16_080_uap_extended_SUC", FT_UINT8, BASE_DEC, VALS(value_map_249), 0x0, NULL, HFILL } },
{ &expand_var_3343, { "AAC", "asterix.62_1_16_080_uap_extended_AAC", FT_UINT8, BASE_DEC, VALS(value_map_634), 0x0, NULL, HFILL } },
{ &expand_var_3344, { "FX", "asterix.62_1_16_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3345, { "SDS", "asterix.62_1_16_080_uap_extended_SDS", FT_UINT8, BASE_DEC, VALS(value_map_635), 0x0, NULL, HFILL } },
{ &expand_var_3346, { "EMS", "asterix.62_1_16_080_uap_extended_EMS", FT_UINT8, BASE_DEC, VALS(value_map_636), 0x0, NULL, HFILL } },
{ &expand_var_3347, { "PFT", "asterix.62_1_16_080_uap_extended_PFT", FT_UINT8, BASE_DEC, VALS(value_map_637), 0x0, NULL, HFILL } },
{ &expand_var_3348, { "FPLT", "asterix.62_1_16_080_uap_extended_FPLT", FT_UINT8, BASE_DEC, VALS(value_map_638), 0x0, NULL, HFILL } },
{ &expand_var_3349, { "FX", "asterix.62_1_16_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3350, { "DUPT", "asterix.62_1_16_080_uap_extended_DUPT", FT_UINT8, BASE_DEC, VALS(value_map_639), 0x0, NULL, HFILL } },
{ &expand_var_3351, { "DUPF", "asterix.62_1_16_080_uap_extended_DUPF", FT_UINT8, BASE_DEC, VALS(value_map_640), 0x0, NULL, HFILL } },
{ &expand_var_3352, { "DUPM", "asterix.62_1_16_080_uap_extended_DUPM", FT_UINT8, BASE_DEC, VALS(value_map_641), 0x0, NULL, HFILL } },
{ &expand_var_3353, { "FX", "asterix.62_1_16_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3354, { "290 : System Track Update Ages", "asterix.62_1_16_290_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3355, { "TRK : Track Age [s]", "asterix.62_1_16_290_1854_compound_1854_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3356, { "PSR : PSR Age [s]", "asterix.62_1_16_290_1855_compound_1855_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3357, { "SSR : SSR Age [s]", "asterix.62_1_16_290_1856_compound_1856_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3358, { "MDS : Mode S Age [s]", "asterix.62_1_16_290_1857_compound_1857_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3359, { "ADS : ADS-C Age [s]", "asterix.62_1_16_290_1858_compound_1858_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3360, { "ES : ADS-B Extended Squitter Age [s]", "asterix.62_1_16_290_1859_compound_1859_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3361, { "VDL : ADS-B VDL Mode 4 Age [s]", "asterix.62_1_16_290_1860_compound_1860_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3362, { "UAT : ADS-B UAT Age [s]", "asterix.62_1_16_290_1861_compound_1861_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3363, { "LOP : Loop Age [s]", "asterix.62_1_16_290_1862_compound_1862_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3364, { "MLT : Multilateration Age [s]", "asterix.62_1_16_290_1863_compound_1863_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3365, { "200 : Mode of Movement", "asterix.62_1_16_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3366, { "TRANS : Transversal Acceleration", "asterix.62_1_16_200_uap_group_1159", FT_UINT8, BASE_DEC, VALS(value_map_649), 0x0, NULL, HFILL } },
{ &expand_var_3367, { "LONG : Longitudinal Acceleration", "asterix.62_1_16_200_uap_group_1160", FT_UINT8, BASE_DEC, VALS(value_map_650), 0x0, NULL, HFILL } },
{ &expand_var_3368, { "VERT : Vertical Rate", "asterix.62_1_16_200_uap_group_1161", FT_UINT8, BASE_DEC, VALS(value_map_651), 0x0, NULL, HFILL } },
{ &expand_var_3369, { "ADF : Altitude Discrepancy Flag", "asterix.62_1_16_200_uap_group_1162", FT_UINT8, BASE_DEC, VALS(value_map_652), 0x0, NULL, HFILL } },
{ &expand_var_3370, { "295 : Track Data Ages", "asterix.62_1_16_295_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3371, { "MFL : Measured Flight Level Age [s]", "asterix.62_1_16_295_1865_compound_1865_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3372, { "MD1 : Mode 1 Age [s]", "asterix.62_1_16_295_1866_compound_1866_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3373, { "MD2 : Mode 2 Age [s]", "asterix.62_1_16_295_1867_compound_1867_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3374, { "MDA : Mode 3/A Age [s]", "asterix.62_1_16_295_1868_compound_1868_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3375, { "MD4 : Mode 4 Age [s]", "asterix.62_1_16_295_1869_compound_1869_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3376, { "MD5 : Mode 5 Age [s]", "asterix.62_1_16_295_1870_compound_1870_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3377, { "MHG : Magnetic Heading Age [s]", "asterix.62_1_16_295_1871_compound_1871_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3378, { "IAS : Indicated Airspeed / Mach Nb Age [s]", "asterix.62_1_16_295_1872_compound_1872_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3379, { "TAS : True Airspeed Age [s]", "asterix.62_1_16_295_1873_compound_1873_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3380, { "SAL : Selected Altitude Age [s]", "asterix.62_1_16_295_1874_compound_1874_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3381, { "FSS : Final State Selected Altitude Age [s]", "asterix.62_1_16_295_1875_compound_1875_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3382, { "TID : Trajectory Intent Age [s]", "asterix.62_1_16_295_1876_compound_1876_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3383, { "COM : Communication/ACAS Capability and Flight Status Age [s]", "asterix.62_1_16_295_1877_compound_1877_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3384, { "SAB : Status Reported by ADS-B Age [s]", "asterix.62_1_16_295_1878_compound_1878_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3385, { "ACS : ACAS Resolution Advisory Report Age [s]", "asterix.62_1_16_295_1879_compound_1879_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3386, { "BVR : Barometric Vertical Rate Age [s]", "asterix.62_1_16_295_1880_compound_1880_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3387, { "GVR : Geometrical Vertical Rate Age [s]", "asterix.62_1_16_295_1881_compound_1881_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3388, { "RAN : Roll Angle Age [s]", "asterix.62_1_16_295_1882_compound_1882_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3389, { "TAR : Track Angle Rate Age [s]", "asterix.62_1_16_295_1883_compound_1883_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3390, { "TAN : Track Angle Age [s]", "asterix.62_1_16_295_1884_compound_1884_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3391, { "GSP : Ground Speed Age [s]", "asterix.62_1_16_295_1885_compound_1885_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3392, { "VUN : Velocity Uncertainty Age [s]", "asterix.62_1_16_295_1886_compound_1886_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3393, { "MET : Meteorological Data Age [s]", "asterix.62_1_16_295_1887_compound_1887_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3394, { "EMC : Emitter Category Age [s]", "asterix.62_1_16_295_1888_compound_1888_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3395, { "POS : Position Age [s]", "asterix.62_1_16_295_1889_compound_1889_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3396, { "GAL : Geometric Altitude Age [s]", "asterix.62_1_16_295_1890_compound_1890_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3397, { "PUN : Position Uncertainty Age [s]", "asterix.62_1_16_295_1891_compound_1891_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3398, { "MB : Mode S MB Data Age [s]", "asterix.62_1_16_295_1892_compound_1892_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3399, { "IAR : Indicated Airspeed Data Age [s]", "asterix.62_1_16_295_1893_compound_1893_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3400, { "MAC : Mach Number Data Age [s]", "asterix.62_1_16_295_1894_compound_1894_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3401, { "BPS : Barometric Pressure Setting Data Age [s]", "asterix.62_1_16_295_1895_compound_1895_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3402, { "136 : Measured Flight Level [FL]", "asterix.62_1_16_136_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3403, { "130 : Calculated Track Geometric Altitude [ft]", "asterix.62_1_16_130_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3404, { "135 : Calculated Track Barometric Altitude", "asterix.62_1_16_135_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3405, { "QNH", "asterix.62_1_16_135_uap_group_1155", FT_UINT8, BASE_DEC, VALS(value_map_197), 0x0, NULL, HFILL } },
{ &expand_var_3406, { "CTB : Calculated Track Barometric Altitude [FL]", "asterix.62_1_16_135_uap_group_1156", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3407, { "220 : Calculated Rate of Climb/Descent [ft/min]", "asterix.62_1_16_220_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3408, { "390 : Flight Plan Related Data", "asterix.62_1_16_390_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3409, { "TAG : FPPS Identification Tag", "asterix.62_1_16_390_1978_compound_1978_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3410, { "CS : Callsign", "asterix.62_1_16_390_1979_compound_1979_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3411, { "IFI : IFPS_FLIGHT_ID", "asterix.62_1_16_390_1981_compound_1981_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3412, { "TYP", "asterix.62_1_16_390_1981_compound_1981_group_880", FT_UINT8, BASE_DEC, VALS(value_map_508), 0x0, NULL, HFILL } },
{ &expand_var_3413, { "NBR : Number from 0 to 99 999 999", "asterix.62_1_16_390_1981_compound_1981_group_1212", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3414, { "FCT : Flight Category", "asterix.62_1_16_390_1984_compound_1984_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3415, { "GATOAT", "asterix.62_1_16_390_1984_compound_1984_group_1213", FT_UINT8, BASE_DEC, VALS(value_map_135), 0x0, NULL, HFILL } },
{ &expand_var_3416, { "FR1FR2", "asterix.62_1_16_390_1984_compound_1984_group_1214", FT_UINT8, BASE_DEC, VALS(value_map_252), 0x0, NULL, HFILL } },
{ &expand_var_3417, { "RVSM", "asterix.62_1_16_390_1984_compound_1984_group_157", FT_UINT8, BASE_DEC, VALS(value_map_137), 0x0, NULL, HFILL } },
{ &expand_var_3418, { "HPR", "asterix.62_1_16_390_1984_compound_1984_group_158", FT_UINT8, BASE_DEC, VALS(value_map_138), 0x0, NULL, HFILL } },
{ &expand_var_3419, { "TAC : Type of Aircraft", "asterix.62_1_16_390_1985_compound_1985_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3420, { "WTC : Wake Turbulence Category", "asterix.62_1_16_390_1986_compound_1986_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3421, { "DEP : Departure Airport", "asterix.62_1_16_390_1987_compound_1987_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3422, { "DST : Destination Airport", "asterix.62_1_16_390_1988_compound_1988_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3423, { "RDS : Runway Designation", "asterix.62_1_16_390_1439_compound_1439_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3424, { "CFL : Current Cleared Flight Level [FL]", "asterix.62_1_16_390_483_compound_483_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3425, { "CTL : Current Control Position", "asterix.62_1_16_390_1989_compound_1989_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3426, { "TOD : Time of Departure / Arrival", "asterix.62_1_16_390_1995_compound_1995_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3427, { "TOD : Time of Departure / Arrival", "asterix.62_1_16_390_rep53_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3428, { "TYP", "asterix.62_1_16_390_rep53_group_1215", FT_UINT8, BASE_DEC, VALS(value_map_232), 0x0, NULL, HFILL } },
{ &expand_var_3429, { "DAY", "asterix.62_1_16_390_rep53_group_888", FT_UINT8, BASE_DEC, VALS(value_map_511), 0x0, NULL, HFILL } },
{ &expand_var_3430, { "HOR : Hours", "asterix.62_1_16_390_rep53_group_1216", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3431, { "MIN : Minutes", "asterix.62_1_16_390_rep53_group_1217", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3432, { "AVS : Seconds Available Flag", "asterix.62_1_16_390_rep53_group_1218", FT_UINT8, BASE_DEC, VALS(value_map_234), 0x0, NULL, HFILL } },
{ &expand_var_3433, { "SEC : Seconds", "asterix.62_1_16_390_rep53_group_1219", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3434, { "AST : Aircraft Stand", "asterix.62_1_16_390_494_compound_494_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3435, { "STS : Stand Status", "asterix.62_1_16_390_1449_compound_1449_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3436, { "STD : Standard Instrument Departure", "asterix.62_1_16_390_1996_compound_1996_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3437, { "STA : Standard Instrument Arrival", "asterix.62_1_16_390_1997_compound_1997_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3438, { "PEM : Pre-Emergency Mode 3/A", "asterix.62_1_16_390_1999_compound_1999_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3439, { "VA", "asterix.62_1_16_390_1999_compound_1999_group_1220", FT_UINT8, BASE_DEC, VALS(value_map_675), 0x0, NULL, HFILL } },
{ &expand_var_3440, { "MODE3A : Mode-3/A Reply in Octal Representation", "asterix.62_1_16_390_1999_compound_1999_group_667", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3441, { "PEC : Pre-Emergency Callsign", "asterix.62_1_16_390_2000_compound_2000_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3442, { "270 : Target Size and Orientation", "asterix.62_1_16_270_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3443, { "300 : Vehicle Fleet Identification", "asterix.62_1_16_300_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_186), 0x0, NULL, HFILL } },
{ &expand_var_3444, { "110 : Mode 5 Data Reports and Extended Mode 1 Code", "asterix.62_1_16_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3445, { "SUM : Mode 5 Summary", "asterix.62_1_16_110_1821_compound_1821_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3446, { "M5", "asterix.62_1_16_110_1821_compound_1821_group_684", FT_UINT8, BASE_DEC, VALS(value_map_411), 0x0, NULL, HFILL } },
{ &expand_var_3447, { "ID", "asterix.62_1_16_110_1821_compound_1821_group_1145", FT_UINT8, BASE_DEC, VALS(value_map_642), 0x0, NULL, HFILL } },
{ &expand_var_3448, { "DA", "asterix.62_1_16_110_1821_compound_1821_group_686", FT_UINT8, BASE_DEC, VALS(value_map_413), 0x0, NULL, HFILL } },
{ &expand_var_3449, { "M1", "asterix.62_1_16_110_1821_compound_1821_group_1146", FT_UINT8, BASE_DEC, VALS(value_map_643), 0x0, NULL, HFILL } },
{ &expand_var_3450, { "M2", "asterix.62_1_16_110_1821_compound_1821_group_1147", FT_UINT8, BASE_DEC, VALS(value_map_644), 0x0, NULL, HFILL } },
{ &expand_var_3451, { "M3", "asterix.62_1_16_110_1821_compound_1821_group_1148", FT_UINT8, BASE_DEC, VALS(value_map_645), 0x0, NULL, HFILL } },
{ &expand_var_3452, { "MC", "asterix.62_1_16_110_1821_compound_1821_group_1149", FT_UINT8, BASE_DEC, VALS(value_map_646), 0x0, NULL, HFILL } },
{ &expand_var_3453, { "X : X-pulse from Mode 5 Data Reply or Report", "asterix.62_1_16_110_1821_compound_1821_group_1150", FT_UINT8, BASE_DEC, VALS(value_map_647), 0x0, NULL, HFILL } },
{ &expand_var_3454, { "PMN : Mode 5 PIN/ National Origin/Mission Code", "asterix.62_1_16_110_1822_compound_1822_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3455, { "PIN : PIN Code", "asterix.62_1_16_110_1822_compound_1822_group_692", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3456, { "NAT : National Origin", "asterix.62_1_16_110_1822_compound_1822_group_937", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3457, { "MIS : Mission Code", "asterix.62_1_16_110_1822_compound_1822_group_938", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3458, { "POS : Mode 5 Reported Position", "asterix.62_1_16_110_1823_compound_1823_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3459, { "GA : Mode 5 GNSS-derived Altitude", "asterix.62_1_16_110_1826_compound_1826_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3460, { "RES : Resolution with which the GNSS-derived Altitude (GA) is Reported", "asterix.62_1_16_110_1826_compound_1826_group_1151", FT_UINT8, BASE_DEC, VALS(value_map_538), 0x0, NULL, HFILL } },
{ &expand_var_3461, { "GA : GNSS-derived Altitude of Target, Expressed as Height Above WGS 84 Ellipsoid [ft]", "asterix.62_1_16_110_1826_compound_1826_group_1152", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3462, { "EM1 : Extended Mode 1 Code in Octal Representation", "asterix.62_1_16_110_1828_compound_1828_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3463, { "EM1 : Extended Mode 1 Reply in Octal Representation", "asterix.62_1_16_110_1828_compound_1828_group_1153", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3464, { "TOS : Time Offset for POS and GA [s]", "asterix.62_1_16_110_1829_compound_1829_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3465, { "XP : X Pulse Presence", "asterix.62_1_16_110_1830_compound_1830_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3466, { "X5 : X-pulse from Mode 5 Data Reply or Report", "asterix.62_1_16_110_1830_compound_1830_group_697", FT_UINT8, BASE_DEC, VALS(value_map_421), 0x0, NULL, HFILL } },
{ &expand_var_3467, { "XC : X-pulse from Mode C Reply", "asterix.62_1_16_110_1830_compound_1830_group_698", FT_UINT8, BASE_DEC, VALS(value_map_422), 0x0, NULL, HFILL } },
{ &expand_var_3468, { "X3 : X-pulse from Mode 3/A Reply", "asterix.62_1_16_110_1830_compound_1830_group_699", FT_UINT8, BASE_DEC, VALS(value_map_423), 0x0, NULL, HFILL } },
{ &expand_var_3469, { "X2 : X-pulse from Mode 2 Reply", "asterix.62_1_16_110_1830_compound_1830_group_946", FT_UINT8, BASE_DEC, VALS(value_map_541), 0x0, NULL, HFILL } },
{ &expand_var_3470, { "X1 : X-pulse from Mode 1 Reply", "asterix.62_1_16_110_1830_compound_1830_group_701", FT_UINT8, BASE_DEC, VALS(value_map_425), 0x0, NULL, HFILL } },
{ &expand_var_3471, { "120 : Track Mode 2 Code", "asterix.62_1_16_120_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3472, { "MODE2 : Mode-2 Code in Octal Representation", "asterix.62_1_16_120_uap_group_1154", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3473, { "510 : Composed Track Number", "asterix.62_1_16_510_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3474, { "510 : Composed Track Number", "asterix.62_1_16_510_rep54_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3475, { "IDENT : System Unit Identification", "asterix.62_1_16_510_rep54_group_1229", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3476, { "TRACK : System Track Number", "asterix.62_1_16_510_rep54_group_1230", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3477, { "500 : Estimated Accuracies", "asterix.62_1_16_500_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3478, { "APC : Estimated Accuracy Of Track Position (Cartesian)", "asterix.62_1_16_500_2004_compound_2004_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3479, { "X : APC (X-Component) [m]", "asterix.62_1_16_500_2004_compound_2004_group_1221", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3480, { "Y : APC (Y-Component) [m]", "asterix.62_1_16_500_2004_compound_2004_group_1222", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3481, { "COV : XY Covariance Component [m]", "asterix.62_1_16_500_2005_compound_2005_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3482, { "APW : Estimated Accuracy Of Track Position (WGS-84)", "asterix.62_1_16_500_2008_compound_2008_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3483, { "LAT : APW (Latitude Component) [°]", "asterix.62_1_16_500_2008_compound_2008_group_1223", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3484, { "LON : APW (Longitude Component) [°]", "asterix.62_1_16_500_2008_compound_2008_group_1224", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3485, { "AGA : Estimated Accuracy Of Calculated Track Geometric Altitude [ft]", "asterix.62_1_16_500_2009_compound_2009_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3486, { "ABA : Estimated Accuracy Of Calculated Track Barometric Altitude [FL]", "asterix.62_1_16_500_2010_compound_2010_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3487, { "ATV : Estimated Accuracy Of Track Velocity (Cartesian)", "asterix.62_1_16_500_2013_compound_2013_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3488, { "X : ATV (X-Component) [m/s]", "asterix.62_1_16_500_2013_compound_2013_group_1225", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3489, { "Y : ATV (Y-Component) [m/s]", "asterix.62_1_16_500_2013_compound_2013_group_1226", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3490, { "AA : Estimated Accuracy Of Acceleration (Cartesian)", "asterix.62_1_16_500_2016_compound_2016_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3491, { "X : AA (X-Component) [m/s²]", "asterix.62_1_16_500_2016_compound_2016_group_1227", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3492, { "Y : AA (Y-Component) [m/s²]", "asterix.62_1_16_500_2016_compound_2016_group_1228", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3493, { "ARC : Estimated Accuracy Of Rate Of Climb/Descent [ft/min]", "asterix.62_1_16_500_2017_compound_2017_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3494, { "340 : Measured Information", "asterix.62_1_16_340_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3495, { "SID : Sensor Identification", "asterix.62_1_16_340_1897_compound_1897_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3496, { "POS : Measured Position", "asterix.62_1_16_340_1900_compound_1900_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3497, { "RHO : Measured Distance [NM]", "asterix.62_1_16_340_1900_compound_1900_group_1167", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3498, { "THETA : Measured Azimuth [°]", "asterix.62_1_16_340_1900_compound_1900_group_1168", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3499, { "HEIGHT : Measured 3-D Height [ft]", "asterix.62_1_16_340_1901_compound_1901_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3500, { "MDC :", "asterix.62_1_16_340_1905_compound_1905_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3501, { "V : Validated", "asterix.62_1_16_340_1905_compound_1905_group_1169", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_3502, { "G : Garbled", "asterix.62_1_16_340_1905_compound_1905_group_1170", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_3503, { "LMC : Last Measured Mode C Code [FL]", "asterix.62_1_16_340_1905_compound_1905_group_1171", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3504, { "MDA :", "asterix.62_1_16_340_1907_compound_1907_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3505, { "V : Validated", "asterix.62_1_16_340_1907_compound_1907_group_1169", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_3506, { "G : Garbled", "asterix.62_1_16_340_1907_compound_1907_group_1170", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_3507, { "L", "asterix.62_1_16_340_1907_compound_1907_group_1172", FT_UINT8, BASE_DEC, VALS(value_map_654), 0x0, NULL, HFILL } },
{ &expand_var_3508, { "MODE3A : Mode-3/A Reply in Octal Representation", "asterix.62_1_16_340_1907_compound_1907_group_667", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3509, { "TYP :", "asterix.62_1_16_340_1911_compound_1911_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3510, { "TYP : Report Type", "asterix.62_1_16_340_1911_compound_1911_group_1173", FT_UINT8, BASE_DEC, VALS(value_map_655), 0x0, NULL, HFILL } },
{ &expand_var_3511, { "SIM", "asterix.62_1_16_340_1911_compound_1911_group_1008", FT_UINT8, BASE_DEC, VALS(value_map_162), 0x0, NULL, HFILL } },
{ &expand_var_3512, { "RAB", "asterix.62_1_16_340_1911_compound_1911_group_1174", FT_UINT8, BASE_DEC, VALS(value_map_656), 0x0, NULL, HFILL } },
{ &expand_var_3513, { "TST", "asterix.62_1_16_340_1911_compound_1911_group_1175", FT_UINT8, BASE_DEC, VALS(value_map_569), 0x0, NULL, HFILL } },
{ &expand_var_3514, { "RE : Reserved Expansion Field", "asterix.62_1_16_33_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3515, { "SP : Special Purpose Field", "asterix.62_1_16_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3516, { "010 : Data Source Identifier", "asterix.62_1_17_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3517, { "015 : Service Identification", "asterix.62_1_17_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3518, { "070 : Time Of Track Information [s]", "asterix.62_1_17_070_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3519, { "105 : Calculated Position In WGS-84 Co-ordinates", "asterix.62_1_17_105_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3520, { "100 : Calculated Track Position (Cartesian)", "asterix.62_1_17_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3521, { "185 : Calculated Track Velocity (Cartesian)", "asterix.62_1_17_185_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3522, { "210 : Calculated Acceleration (Cartesian)", "asterix.62_1_17_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3523, { "060 : Track Mode 3/A Code", "asterix.62_1_17_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3524, { "V : Validated", "asterix.62_1_17_060_uap_group_1169", FT_UINT8, BASE_DEC, VALS(value_map_16), 0x0, NULL, HFILL } },
{ &expand_var_3525, { "G : Garbled", "asterix.62_1_17_060_uap_group_1170", FT_UINT8, BASE_DEC, VALS(value_map_17), 0x0, NULL, HFILL } },
{ &expand_var_3526, { "CH : Change in Mode 3/A", "asterix.62_1_17_060_uap_group_1115", FT_UINT8, BASE_DEC, VALS(value_map_623), 0x0, NULL, HFILL } },
{ &expand_var_3527, { "MODE3A : Mode-3/A Reply in Octal Representation", "asterix.62_1_17_060_uap_group_667", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3528, { "245 : Target Identification", "asterix.62_1_17_245_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3529, { "380 : Aircraft Derived Data", "asterix.62_1_17_380_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3530, { "040 : Track Number", "asterix.62_1_17_040_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3531, { "080 : Track Status", "asterix.62_1_17_080_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3532, { "290 : System Track Update Ages", "asterix.62_1_17_290_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3533, { "200 : Mode of Movement", "asterix.62_1_17_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3534, { "295 : Track Data Ages", "asterix.62_1_17_295_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3535, { "136 : Measured Flight Level [FL]", "asterix.62_1_17_136_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3536, { "130 : Calculated Track Geometric Altitude [ft]", "asterix.62_1_17_130_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3537, { "135 : Calculated Track Barometric Altitude", "asterix.62_1_17_135_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3538, { "220 : Calculated Rate of Climb/Descent [ft/min]", "asterix.62_1_17_220_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3539, { "390 : Flight Plan Related Data", "asterix.62_1_17_390_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3540, { "270 : Target Size and Orientation", "asterix.62_1_17_270_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3541, { "300 : Vehicle Fleet Identification", "asterix.62_1_17_300_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_186), 0x0, NULL, HFILL } },
{ &expand_var_3542, { "110 : Mode 5 Data Reports and Extended Mode 1 Code", "asterix.62_1_17_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3543, { "120 : Track Mode 2 Code", "asterix.62_1_17_120_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3544, { "510 : Composed Track Number", "asterix.62_1_17_510_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3545, { "500 : Estimated Accuracies", "asterix.62_1_17_500_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3546, { "340 : Measured Information", "asterix.62_1_17_340_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3547, { "RE : Reserved Expansion Field", "asterix.62_1_17_33_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3548, { "SP : Special Purpose Field", "asterix.62_1_17_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3549, { "010 : Data Source Identifier", "asterix.62_1_18_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3550, { "015 : Service Identification", "asterix.62_1_18_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3551, { "070 : Time Of Track Information [s]", "asterix.62_1_18_070_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3552, { "105 : Calculated Position In WGS-84 Co-ordinates", "asterix.62_1_18_105_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3553, { "100 : Calculated Track Position (Cartesian)", "asterix.62_1_18_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3554, { "185 : Calculated Track Velocity (Cartesian)", "asterix.62_1_18_185_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3555, { "210 : Calculated Acceleration (Cartesian)", "asterix.62_1_18_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3556, { "060 : Track Mode 3/A Code", "asterix.62_1_18_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3557, { "245 : Target Identification", "asterix.62_1_18_245_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3558, { "380 : Aircraft Derived Data", "asterix.62_1_18_380_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3559, { "ADR : Target Address", "asterix.62_1_18_380_1913_compound_1913_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3560, { "ID : Target Identification", "asterix.62_1_18_380_1914_compound_1914_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3561, { "MHG : Magnetic Heading [°]", "asterix.62_1_18_380_1915_compound_1915_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3562, { "IAS : Indicated Airspeed/Mach No", "asterix.62_1_18_380_1918_compound_1918_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3563, { "TAS : True Airspeed [kt]", "asterix.62_1_18_380_1919_compound_1919_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3564, { "SAL : Selected Altitude", "asterix.62_1_18_380_1923_compound_1923_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3565, { "FSS : Final State Selected Altitude", "asterix.62_1_18_380_1925_compound_1925_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3566, { "TIS : Trajectory Intent Status", "asterix.62_1_18_380_1928_compound_1928_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3567, { "TID : Trajectory Intent Data", "asterix.62_1_18_380_1937_compound_1937_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3568, { "COM : Communications/ACAS Capability and Flight Status", "asterix.62_1_18_380_2028_compound_2028_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3569, { "COM : Communications Capability of the Transponder", "asterix.62_1_18_380_2028_compound_2028_group_292", FT_UINT8, BASE_DEC, VALS(value_map_221), 0x0, NULL, HFILL } },
{ &expand_var_3570, { "STAT : Flight Status", "asterix.62_1_18_380_2028_compound_2028_group_1234", FT_UINT8, BASE_DEC, VALS(value_map_684), 0x0, NULL, HFILL } },
{ &expand_var_3571, { "SSC : Specific Service Capability", "asterix.62_1_18_380_2028_compound_2028_group_294", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_3572, { "ARC : Altitude Reporting Capability", "asterix.62_1_18_380_2028_compound_2028_group_295", FT_UINT8, BASE_DEC, VALS(value_map_224), 0x0, NULL, HFILL } },
{ &expand_var_3573, { "AIC : Aircraft Identification Capability", "asterix.62_1_18_380_2028_compound_2028_group_296", FT_UINT8, BASE_DEC, VALS(value_map_223), 0x0, NULL, HFILL } },
{ &expand_var_3574, { "B1A : BDS 1,0 Bit 16", "asterix.62_1_18_380_2028_compound_2028_group_297", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3575, { "B1B : BDS BDS 1,0 Bits 37/40", "asterix.62_1_18_380_2028_compound_2028_group_1193", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3576, { "SAB : Status Reported by ADS-B", "asterix.62_1_18_380_1946_compound_1946_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3577, { "ACS : ACAS Resolution Advisory Report", "asterix.62_1_18_380_1947_compound_1947_element", FT_BYTES, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3578, { "BVR : Barometric Vertical Rate [ft/min]", "asterix.62_1_18_380_1948_compound_1948_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3579, { "GVR : Geometric Vertical Rate [ft/min]", "asterix.62_1_18_380_1949_compound_1949_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3580, { "RAN : Roll Angle [°]", "asterix.62_1_18_380_1950_compound_1950_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3581, { "TAR : Track Angle Rate", "asterix.62_1_18_380_1952_compound_1952_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3582, { "TAN : Track Angle [°]", "asterix.62_1_18_380_1953_compound_1953_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3583, { "GS : Ground Speed [NM/s]", "asterix.62_1_18_380_1954_compound_1954_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3584, { "VUN : Velocity Uncertainty", "asterix.62_1_18_380_1955_compound_1955_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3585, { "MET : Meteorological Data", "asterix.62_1_18_380_1964_compound_1964_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3586, { "EMC : Emitter Category", "asterix.62_1_18_380_1965_compound_1965_element", FT_UINT8, BASE_DEC, VALS(value_map_672), 0x0, NULL, HFILL } },
{ &expand_var_3587, { "POS : Position", "asterix.62_1_18_380_1968_compound_1968_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3588, { "GAL : Geometric Altitude [ft]", "asterix.62_1_18_380_1969_compound_1969_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3589, { "PUN : Position Uncertainty", "asterix.62_1_18_380_1971_compound_1971_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3590, { "MB : MODE S MB DATA", "asterix.62_1_18_380_1972_compound_1972_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3591, { "IAR : Indicated Airspeed [kt]", "asterix.62_1_18_380_1973_compound_1973_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3592, { "MAC : Mach Number [Mach]", "asterix.62_1_18_380_1974_compound_1974_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3593, { "BPS : Barometric Pressure Setting (derived from Mode S BDS 4,0)", "asterix.62_1_18_380_1976_compound_1976_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3594, { "040 : Track Number", "asterix.62_1_18_040_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3595, { "080 : Track Status", "asterix.62_1_18_080_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3596, { "MON", "asterix.62_1_18_080_uap_extended_MON", FT_UINT8, BASE_DEC, VALS(value_map_624), 0x0, NULL, HFILL } },
{ &expand_var_3597, { "SPI", "asterix.62_1_18_080_uap_extended_SPI", FT_UINT8, BASE_DEC, VALS(value_map_210), 0x0, NULL, HFILL } },
{ &expand_var_3598, { "MRH(Most Reliable Height)", "asterix.62_1_18_080_uap_extended_MRH", FT_UINT8, BASE_DEC, VALS(value_map_200), 0x0, NULL, HFILL } },
{ &expand_var_3599, { "SRC(Source of Calculated Track Altitude for I062/130)", "asterix.62_1_18_080_uap_extended_SRC", FT_UINT8, BASE_DEC, VALS(value_map_625), 0x0, NULL, HFILL } },
{ &expand_var_3600, { "CNF", "asterix.62_1_18_080_uap_extended_CNF", FT_UINT8, BASE_DEC, VALS(value_map_202), 0x0, NULL, HFILL } },
{ &expand_var_3601, { "FX", "asterix.62_1_18_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3602, { "SIM", "asterix.62_1_18_080_uap_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_626), 0x0, NULL, HFILL } },
{ &expand_var_3603, { "TSE", "asterix.62_1_18_080_uap_extended_TSE", FT_UINT8, BASE_DEC, VALS(value_map_627), 0x0, NULL, HFILL } },
{ &expand_var_3604, { "TSB", "asterix.62_1_18_080_uap_extended_TSB", FT_UINT8, BASE_DEC, VALS(value_map_628), 0x0, NULL, HFILL } },
{ &expand_var_3605, { "FPC", "asterix.62_1_18_080_uap_extended_FPC", FT_UINT8, BASE_DEC, VALS(value_map_212), 0x0, NULL, HFILL } },
{ &expand_var_3606, { "AFF", "asterix.62_1_18_080_uap_extended_AFF", FT_UINT8, BASE_DEC, VALS(value_map_213), 0x0, NULL, HFILL } },
{ &expand_var_3607, { "STP", "asterix.62_1_18_080_uap_extended_STP", FT_UINT8, BASE_DEC, VALS(value_map_629), 0x0, NULL, HFILL } },
{ &expand_var_3608, { "KOS", "asterix.62_1_18_080_uap_extended_KOS", FT_UINT8, BASE_DEC, VALS(value_map_630), 0x0, NULL, HFILL } },
{ &expand_var_3609, { "FX", "asterix.62_1_18_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3610, { "AMA", "asterix.62_1_18_080_uap_extended_AMA", FT_UINT8, BASE_DEC, VALS(value_map_209), 0x0, NULL, HFILL } },
{ &expand_var_3611, { "MD4", "asterix.62_1_18_080_uap_extended_MD4", FT_UINT8, BASE_DEC, VALS(value_map_573), 0x0, NULL, HFILL } },
{ &expand_var_3612, { "ME", "asterix.62_1_18_080_uap_extended_ME", FT_UINT8, BASE_DEC, VALS(value_map_207), 0x0, NULL, HFILL } },
{ &expand_var_3613, { "MI", "asterix.62_1_18_080_uap_extended_MI", FT_UINT8, BASE_DEC, VALS(value_map_631), 0x0, NULL, HFILL } },
{ &expand_var_3614, { "MD5", "asterix.62_1_18_080_uap_extended_MD5", FT_UINT8, BASE_DEC, VALS(value_map_632), 0x0, NULL, HFILL } },
{ &expand_var_3615, { "FX", "asterix.62_1_18_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3616, { "CST", "asterix.62_1_18_080_uap_extended_CST", FT_UINT8, BASE_DEC, VALS(value_map_211), 0x0, NULL, HFILL } },
{ &expand_var_3617, { "PSR", "asterix.62_1_18_080_uap_extended_PSR", FT_UINT8, BASE_DEC, VALS(value_map_245), 0x0, NULL, HFILL } },
{ &expand_var_3618, { "SSR", "asterix.62_1_18_080_uap_extended_SSR", FT_UINT8, BASE_DEC, VALS(value_map_246), 0x0, NULL, HFILL } },
{ &expand_var_3619, { "MDS", "asterix.62_1_18_080_uap_extended_MDS", FT_UINT8, BASE_DEC, VALS(value_map_247), 0x0, NULL, HFILL } },
{ &expand_var_3620, { "ADS", "asterix.62_1_18_080_uap_extended_ADS", FT_UINT8, BASE_DEC, VALS(value_map_633), 0x0, NULL, HFILL } },
{ &expand_var_3621, { "SUC", "asterix.62_1_18_080_uap_extended_SUC", FT_UINT8, BASE_DEC, VALS(value_map_249), 0x0, NULL, HFILL } },
{ &expand_var_3622, { "AAC", "asterix.62_1_18_080_uap_extended_AAC", FT_UINT8, BASE_DEC, VALS(value_map_634), 0x0, NULL, HFILL } },
{ &expand_var_3623, { "FX", "asterix.62_1_18_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3624, { "SDS", "asterix.62_1_18_080_uap_extended_SDS", FT_UINT8, BASE_DEC, VALS(value_map_635), 0x0, NULL, HFILL } },
{ &expand_var_3625, { "EMS", "asterix.62_1_18_080_uap_extended_EMS", FT_UINT8, BASE_DEC, VALS(value_map_636), 0x0, NULL, HFILL } },
{ &expand_var_3626, { "PFT", "asterix.62_1_18_080_uap_extended_PFT", FT_UINT8, BASE_DEC, VALS(value_map_637), 0x0, NULL, HFILL } },
{ &expand_var_3627, { "FPLT", "asterix.62_1_18_080_uap_extended_FPLT", FT_UINT8, BASE_DEC, VALS(value_map_638), 0x0, NULL, HFILL } },
{ &expand_var_3628, { "FX", "asterix.62_1_18_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3629, { "DUPT", "asterix.62_1_18_080_uap_extended_DUPT", FT_UINT8, BASE_DEC, VALS(value_map_639), 0x0, NULL, HFILL } },
{ &expand_var_3630, { "DUPF", "asterix.62_1_18_080_uap_extended_DUPF", FT_UINT8, BASE_DEC, VALS(value_map_640), 0x0, NULL, HFILL } },
{ &expand_var_3631, { "DUPM", "asterix.62_1_18_080_uap_extended_DUPM", FT_UINT8, BASE_DEC, VALS(value_map_641), 0x0, NULL, HFILL } },
{ &expand_var_3632, { "SFC", "asterix.62_1_18_080_uap_extended_SFC", FT_UINT8, BASE_DEC, VALS(value_map_681), 0x0, NULL, HFILL } },
{ &expand_var_3633, { "IDD", "asterix.62_1_18_080_uap_extended_IDD", FT_UINT8, BASE_DEC, VALS(value_map_682), 0x0, NULL, HFILL } },
{ &expand_var_3634, { "IEC", "asterix.62_1_18_080_uap_extended_IEC", FT_UINT8, BASE_DEC, VALS(value_map_683), 0x0, NULL, HFILL } },
{ &expand_var_3635, { "FX", "asterix.62_1_18_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3636, { "290 : System Track Update Ages", "asterix.62_1_18_290_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3637, { "200 : Mode of Movement", "asterix.62_1_18_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3638, { "295 : Track Data Ages", "asterix.62_1_18_295_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3639, { "136 : Measured Flight Level [FL]", "asterix.62_1_18_136_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3640, { "130 : Calculated Track Geometric Altitude [ft]", "asterix.62_1_18_130_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3641, { "135 : Calculated Track Barometric Altitude", "asterix.62_1_18_135_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3642, { "220 : Calculated Rate of Climb/Descent [ft/min]", "asterix.62_1_18_220_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3643, { "390 : Flight Plan Related Data", "asterix.62_1_18_390_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3644, { "270 : Target Size and Orientation", "asterix.62_1_18_270_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3645, { "300 : Vehicle Fleet Identification", "asterix.62_1_18_300_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_186), 0x0, NULL, HFILL } },
{ &expand_var_3646, { "110 : Mode 5 Data Reports and Extended Mode 1 Code", "asterix.62_1_18_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3647, { "120 : Track Mode 2 Code", "asterix.62_1_18_120_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3648, { "510 : Composed Track Number", "asterix.62_1_18_510_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3649, { "500 : Estimated Accuracies", "asterix.62_1_18_500_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3650, { "340 : Measured Information", "asterix.62_1_18_340_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3651, { "RE : Reserved Expansion Field", "asterix.62_1_18_33_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3652, { "SP : Special Purpose Field", "asterix.62_1_18_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3653, { "010 : Data Source Identifier", "asterix.62_1_19_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3654, { "015 : Service Identification", "asterix.62_1_19_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3655, { "070 : Time Of Track Information [s]", "asterix.62_1_19_070_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3656, { "105 : Calculated Position In WGS-84 Co-ordinates", "asterix.62_1_19_105_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3657, { "100 : Calculated Track Position (Cartesian)", "asterix.62_1_19_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3658, { "185 : Calculated Track Velocity (Cartesian)", "asterix.62_1_19_185_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3659, { "210 : Calculated Acceleration (Cartesian)", "asterix.62_1_19_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3660, { "060 : Track Mode 3/A Code", "asterix.62_1_19_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3661, { "245 : Target Identification", "asterix.62_1_19_245_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3662, { "380 : Aircraft Derived Data", "asterix.62_1_19_380_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3663, { "ADR : Target Address", "asterix.62_1_19_380_1913_compound_1913_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3664, { "ID : Target Identification", "asterix.62_1_19_380_1914_compound_1914_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3665, { "MHG : Magnetic Heading [°]", "asterix.62_1_19_380_1915_compound_1915_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3666, { "IAS : Indicated Airspeed/Mach No", "asterix.62_1_19_380_1918_compound_1918_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3667, { "TAS : True Airspeed [kt]", "asterix.62_1_19_380_1919_compound_1919_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3668, { "SAL : Selected Altitude", "asterix.62_1_19_380_1923_compound_1923_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3669, { "FSS : Final State Selected Altitude", "asterix.62_1_19_380_1925_compound_1925_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3670, { "TIS : Trajectory Intent Status", "asterix.62_1_19_380_1928_compound_1928_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3671, { "TID : Trajectory Intent Data", "asterix.62_1_19_380_1937_compound_1937_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3672, { "COM : Communications/ACAS Capability and Flight Status", "asterix.62_1_19_380_2028_compound_2028_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3673, { "SAB : Status Reported by ADS-B", "asterix.62_1_19_380_1946_compound_1946_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3674, { "ACS : ACAS Resolution Advisory Report", "asterix.62_1_19_380_1947_compound_1947_element", FT_BYTES, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3675, { "BVR : Barometric Vertical Rate [ft/min]", "asterix.62_1_19_380_1948_compound_1948_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3676, { "GVR : Geometric Vertical Rate [ft/min]", "asterix.62_1_19_380_1949_compound_1949_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3677, { "RAN : Roll Angle [°]", "asterix.62_1_19_380_1950_compound_1950_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3678, { "TAR : Track Angle Rate", "asterix.62_1_19_380_1952_compound_1952_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3679, { "TAN : Track Angle [°]", "asterix.62_1_19_380_1953_compound_1953_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3680, { "GS : Ground Speed [NM/s]", "asterix.62_1_19_380_1954_compound_1954_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3681, { "VUN : Velocity Uncertainty", "asterix.62_1_19_380_1955_compound_1955_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3682, { "MET : Meteorological Data", "asterix.62_1_19_380_1964_compound_1964_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3683, { "EMC : Emitter Category", "asterix.62_1_19_380_1965_compound_1965_element", FT_UINT8, BASE_DEC, VALS(value_map_672), 0x0, NULL, HFILL } },
{ &expand_var_3684, { "POS : Position", "asterix.62_1_19_380_1968_compound_1968_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3685, { "GAL : Geometric Altitude [ft]", "asterix.62_1_19_380_1969_compound_1969_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3686, { "PUN : Position Uncertainty", "asterix.62_1_19_380_1971_compound_1971_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3687, { "MB : MODE S MB DATA", "asterix.62_1_19_380_1972_compound_1972_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3688, { "IAR : Indicated Airspeed [kt]", "asterix.62_1_19_380_1973_compound_1973_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3689, { "MAC : Mach Number [Mach]", "asterix.62_1_19_380_1974_compound_1974_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3690, { "BPS : Barometric Pressure Setting", "asterix.62_1_19_380_2032_compound_2032_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3691, { "040 : Track Number", "asterix.62_1_19_040_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3692, { "080 : Track Status", "asterix.62_1_19_080_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3693, { "290 : System Track Update Ages", "asterix.62_1_19_290_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3694, { "200 : Mode of Movement", "asterix.62_1_19_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3695, { "295 : Track Data Ages", "asterix.62_1_19_295_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3696, { "136 : Measured Flight Level [FL]", "asterix.62_1_19_136_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3697, { "130 : Calculated Track Geometric Altitude [ft]", "asterix.62_1_19_130_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3698, { "135 : Calculated Track Barometric Altitude", "asterix.62_1_19_135_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3699, { "220 : Calculated Rate of Climb/Descent [ft/min]", "asterix.62_1_19_220_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3700, { "390 : Flight Plan Related Data", "asterix.62_1_19_390_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3701, { "270 : Target Size and Orientation", "asterix.62_1_19_270_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3702, { "300 : Vehicle Fleet Identification", "asterix.62_1_19_300_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_186), 0x0, NULL, HFILL } },
{ &expand_var_3703, { "110 : Mode 5 Data Reports and Extended Mode 1 Code", "asterix.62_1_19_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3704, { "120 : Track Mode 2 Code", "asterix.62_1_19_120_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3705, { "510 : Composed Track Number", "asterix.62_1_19_510_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3706, { "500 : Estimated Accuracies", "asterix.62_1_19_500_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3707, { "340 : Measured Information", "asterix.62_1_19_340_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3708, { "SID : Sensor Identification", "asterix.62_1_19_340_1897_compound_1897_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3709, { "POS : Measured Position", "asterix.62_1_19_340_1900_compound_1900_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3710, { "HEIGHT : Measured 3-D Height [ft]", "asterix.62_1_19_340_2030_compound_2030_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3711, { "MDC :", "asterix.62_1_19_340_1905_compound_1905_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3712, { "MDA :", "asterix.62_1_19_340_1907_compound_1907_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3713, { "TYP :", "asterix.62_1_19_340_1911_compound_1911_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3714, { "RE : Reserved Expansion Field", "asterix.62_1_19_33_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3715, { "SP : Special Purpose Field", "asterix.62_1_19_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3716, { "010 : Data Source Identifier", "asterix.62_1_20_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3717, { "015 : Service Identification", "asterix.62_1_20_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3718, { "070 : Time Of Track Information [s]", "asterix.62_1_20_070_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3719, { "105 : Calculated Position In WGS-84 Co-ordinates", "asterix.62_1_20_105_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3720, { "100 : Calculated Track Position (Cartesian)", "asterix.62_1_20_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3721, { "185 : Calculated Track Velocity (Cartesian)", "asterix.62_1_20_185_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3722, { "210 : Calculated Acceleration (Cartesian)", "asterix.62_1_20_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3723, { "060 : Track Mode 3/A Code", "asterix.62_1_20_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3724, { "245 : Target Identification", "asterix.62_1_20_245_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3725, { "380 : Aircraft Derived Data", "asterix.62_1_20_380_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3726, { "ADR : Target Address", "asterix.62_1_20_380_1913_compound_1913_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3727, { "ID : Target Identification", "asterix.62_1_20_380_1914_compound_1914_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3728, { "MHG : Magnetic Heading [°]", "asterix.62_1_20_380_1915_compound_1915_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3729, { "IAS : Indicated Airspeed/Mach No", "asterix.62_1_20_380_1918_compound_1918_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3730, { "TAS : True Airspeed [kt]", "asterix.62_1_20_380_1919_compound_1919_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3731, { "SAL : Selected Altitude", "asterix.62_1_20_380_1923_compound_1923_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3732, { "FSS : Final State Selected Altitude", "asterix.62_1_20_380_1925_compound_1925_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3733, { "TIS : Trajectory Intent Status", "asterix.62_1_20_380_1928_compound_1928_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3734, { "TID : Trajectory Intent Data", "asterix.62_1_20_380_1937_compound_1937_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3735, { "COM : Communications/ACAS Capability and Flight Status", "asterix.62_1_20_380_2028_compound_2028_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3736, { "SAB : Status Reported by ADS-B", "asterix.62_1_20_380_1946_compound_1946_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3737, { "ACS : ACAS Resolution Advisory Report", "asterix.62_1_20_380_1947_compound_1947_element", FT_BYTES, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3738, { "BVR : Barometric Vertical Rate [ft/min]", "asterix.62_1_20_380_1948_compound_1948_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3739, { "GVR : Geometric Vertical Rate [ft/min]", "asterix.62_1_20_380_1949_compound_1949_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3740, { "RAN : Roll Angle [°]", "asterix.62_1_20_380_1950_compound_1950_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3741, { "TAR : Track Angle Rate", "asterix.62_1_20_380_1952_compound_1952_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3742, { "TAN : Track Angle [°]", "asterix.62_1_20_380_1953_compound_1953_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3743, { "GS : Ground Speed [NM/s]", "asterix.62_1_20_380_1954_compound_1954_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3744, { "VUN : Velocity Uncertainty", "asterix.62_1_20_380_1955_compound_1955_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3745, { "MET : Meteorological Data", "asterix.62_1_20_380_1964_compound_1964_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3746, { "EMC : Emitter Category", "asterix.62_1_20_380_1965_compound_1965_element", FT_UINT8, BASE_DEC, VALS(value_map_672), 0x0, NULL, HFILL } },
{ &expand_var_3747, { "POS : Position", "asterix.62_1_20_380_1968_compound_1968_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3748, { "GAL : Geometric Altitude [ft]", "asterix.62_1_20_380_1969_compound_1969_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3749, { "PUN : Position Uncertainty", "asterix.62_1_20_380_1971_compound_1971_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3750, { "BDSDATA : BDS Register DATA", "asterix.62_1_20_380_2036_compound_2036_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3751, { "IAR : Indicated Airspeed [kt]", "asterix.62_1_20_380_1973_compound_1973_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3752, { "MAC : Mach Number [Mach]", "asterix.62_1_20_380_1974_compound_1974_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3753, { "BPS : Barometric Pressure Setting", "asterix.62_1_20_380_2032_compound_2032_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3754, { "040 : Track Number", "asterix.62_1_20_040_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3755, { "080 : Track Status", "asterix.62_1_20_080_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3756, { "MON", "asterix.62_1_20_080_uap_extended_MON", FT_UINT8, BASE_DEC, VALS(value_map_624), 0x0, NULL, HFILL } },
{ &expand_var_3757, { "SPI", "asterix.62_1_20_080_uap_extended_SPI", FT_UINT8, BASE_DEC, VALS(value_map_210), 0x0, NULL, HFILL } },
{ &expand_var_3758, { "MRH(Most Reliable Height)", "asterix.62_1_20_080_uap_extended_MRH", FT_UINT8, BASE_DEC, VALS(value_map_200), 0x0, NULL, HFILL } },
{ &expand_var_3759, { "SRC(Source of Calculated Track Altitude for I062/130)", "asterix.62_1_20_080_uap_extended_SRC", FT_UINT8, BASE_DEC, VALS(value_map_625), 0x0, NULL, HFILL } },
{ &expand_var_3760, { "CNF", "asterix.62_1_20_080_uap_extended_CNF", FT_UINT8, BASE_DEC, VALS(value_map_202), 0x0, NULL, HFILL } },
{ &expand_var_3761, { "FX", "asterix.62_1_20_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3762, { "SIM", "asterix.62_1_20_080_uap_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_626), 0x0, NULL, HFILL } },
{ &expand_var_3763, { "TSE", "asterix.62_1_20_080_uap_extended_TSE", FT_UINT8, BASE_DEC, VALS(value_map_627), 0x0, NULL, HFILL } },
{ &expand_var_3764, { "TSB", "asterix.62_1_20_080_uap_extended_TSB", FT_UINT8, BASE_DEC, VALS(value_map_628), 0x0, NULL, HFILL } },
{ &expand_var_3765, { "FPC", "asterix.62_1_20_080_uap_extended_FPC", FT_UINT8, BASE_DEC, VALS(value_map_212), 0x0, NULL, HFILL } },
{ &expand_var_3766, { "AFF", "asterix.62_1_20_080_uap_extended_AFF", FT_UINT8, BASE_DEC, VALS(value_map_213), 0x0, NULL, HFILL } },
{ &expand_var_3767, { "STP", "asterix.62_1_20_080_uap_extended_STP", FT_UINT8, BASE_DEC, VALS(value_map_629), 0x0, NULL, HFILL } },
{ &expand_var_3768, { "KOS", "asterix.62_1_20_080_uap_extended_KOS", FT_UINT8, BASE_DEC, VALS(value_map_630), 0x0, NULL, HFILL } },
{ &expand_var_3769, { "FX", "asterix.62_1_20_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3770, { "AMA", "asterix.62_1_20_080_uap_extended_AMA", FT_UINT8, BASE_DEC, VALS(value_map_209), 0x0, NULL, HFILL } },
{ &expand_var_3771, { "MD4", "asterix.62_1_20_080_uap_extended_MD4", FT_UINT8, BASE_DEC, VALS(value_map_573), 0x0, NULL, HFILL } },
{ &expand_var_3772, { "ME", "asterix.62_1_20_080_uap_extended_ME", FT_UINT8, BASE_DEC, VALS(value_map_207), 0x0, NULL, HFILL } },
{ &expand_var_3773, { "MI", "asterix.62_1_20_080_uap_extended_MI", FT_UINT8, BASE_DEC, VALS(value_map_631), 0x0, NULL, HFILL } },
{ &expand_var_3774, { "MD5", "asterix.62_1_20_080_uap_extended_MD5", FT_UINT8, BASE_DEC, VALS(value_map_632), 0x0, NULL, HFILL } },
{ &expand_var_3775, { "FX", "asterix.62_1_20_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3776, { "CST", "asterix.62_1_20_080_uap_extended_CST", FT_UINT8, BASE_DEC, VALS(value_map_211), 0x0, NULL, HFILL } },
{ &expand_var_3777, { "PSR", "asterix.62_1_20_080_uap_extended_PSR", FT_UINT8, BASE_DEC, VALS(value_map_245), 0x0, NULL, HFILL } },
{ &expand_var_3778, { "SSR", "asterix.62_1_20_080_uap_extended_SSR", FT_UINT8, BASE_DEC, VALS(value_map_246), 0x0, NULL, HFILL } },
{ &expand_var_3779, { "MDS", "asterix.62_1_20_080_uap_extended_MDS", FT_UINT8, BASE_DEC, VALS(value_map_247), 0x0, NULL, HFILL } },
{ &expand_var_3780, { "ADS", "asterix.62_1_20_080_uap_extended_ADS", FT_UINT8, BASE_DEC, VALS(value_map_633), 0x0, NULL, HFILL } },
{ &expand_var_3781, { "SUC", "asterix.62_1_20_080_uap_extended_SUC", FT_UINT8, BASE_DEC, VALS(value_map_249), 0x0, NULL, HFILL } },
{ &expand_var_3782, { "AAC", "asterix.62_1_20_080_uap_extended_AAC", FT_UINT8, BASE_DEC, VALS(value_map_634), 0x0, NULL, HFILL } },
{ &expand_var_3783, { "FX", "asterix.62_1_20_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3784, { "SDS", "asterix.62_1_20_080_uap_extended_SDS", FT_UINT8, BASE_DEC, VALS(value_map_635), 0x0, NULL, HFILL } },
{ &expand_var_3785, { "EMS", "asterix.62_1_20_080_uap_extended_EMS", FT_UINT8, BASE_DEC, VALS(value_map_636), 0x0, NULL, HFILL } },
{ &expand_var_3786, { "PFT", "asterix.62_1_20_080_uap_extended_PFT", FT_UINT8, BASE_DEC, VALS(value_map_637), 0x0, NULL, HFILL } },
{ &expand_var_3787, { "FPLT", "asterix.62_1_20_080_uap_extended_FPLT", FT_UINT8, BASE_DEC, VALS(value_map_638), 0x0, NULL, HFILL } },
{ &expand_var_3788, { "FX", "asterix.62_1_20_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3789, { "DUPT", "asterix.62_1_20_080_uap_extended_DUPT", FT_UINT8, BASE_DEC, VALS(value_map_639), 0x0, NULL, HFILL } },
{ &expand_var_3790, { "DUPF", "asterix.62_1_20_080_uap_extended_DUPF", FT_UINT8, BASE_DEC, VALS(value_map_640), 0x0, NULL, HFILL } },
{ &expand_var_3791, { "DUPM", "asterix.62_1_20_080_uap_extended_DUPM", FT_UINT8, BASE_DEC, VALS(value_map_641), 0x0, NULL, HFILL } },
{ &expand_var_3792, { "SFC", "asterix.62_1_20_080_uap_extended_SFC", FT_UINT8, BASE_DEC, VALS(value_map_681), 0x0, NULL, HFILL } },
{ &expand_var_3793, { "IDD", "asterix.62_1_20_080_uap_extended_IDD", FT_UINT8, BASE_DEC, VALS(value_map_682), 0x0, NULL, HFILL } },
{ &expand_var_3794, { "IEC", "asterix.62_1_20_080_uap_extended_IEC", FT_UINT8, BASE_DEC, VALS(value_map_683), 0x0, NULL, HFILL } },
{ &expand_var_3795, { "MLAT", "asterix.62_1_20_080_uap_extended_MLAT", FT_UINT8, BASE_DEC, VALS(value_map_685), 0x0, NULL, HFILL } },
{ &expand_var_3796, { "FX", "asterix.62_1_20_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3797, { "290 : System Track Update Ages", "asterix.62_1_20_290_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3798, { "200 : Mode of Movement", "asterix.62_1_20_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3799, { "295 : Track Data Ages", "asterix.62_1_20_295_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3800, { "136 : Measured Flight Level [FL]", "asterix.62_1_20_136_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3801, { "130 : Calculated Track Geometric Altitude [ft]", "asterix.62_1_20_130_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3802, { "135 : Calculated Track Barometric Altitude", "asterix.62_1_20_135_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3803, { "220 : Calculated Rate of Climb/Descent [ft/min]", "asterix.62_1_20_220_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3804, { "390 : Flight Plan Related Data", "asterix.62_1_20_390_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3805, { "270 : Target Size and Orientation", "asterix.62_1_20_270_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3806, { "300 : Vehicle Fleet Identification", "asterix.62_1_20_300_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_186), 0x0, NULL, HFILL } },
{ &expand_var_3807, { "110 : Mode 5 Data Reports and Extended Mode 1 Code", "asterix.62_1_20_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3808, { "120 : Track Mode 2 Code", "asterix.62_1_20_120_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3809, { "510 : Composed Track Number", "asterix.62_1_20_510_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3810, { "500 : Estimated Accuracies", "asterix.62_1_20_500_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3811, { "340 : Measured Information", "asterix.62_1_20_340_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3812, { "RE : Reserved Expansion Field", "asterix.62_1_20_33_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3813, { "SP : Special Purpose Field", "asterix.62_1_20_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3814, { "010 : Data Source Identifier", "asterix.62_1_21_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3815, { "015 : Service Identification", "asterix.62_1_21_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3816, { "070 : Time Of Track Information [s]", "asterix.62_1_21_070_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3817, { "105 : Calculated Position In WGS-84 Co-ordinates", "asterix.62_1_21_105_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3818, { "LAT : Latitude [°]", "asterix.62_1_21_105_uap_group_1239", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3819, { "LON : Longitude [°]", "asterix.62_1_21_105_uap_group_1240", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3820, { "100 : Calculated Track Position (Cartesian)", "asterix.62_1_21_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3821, { "X : X Coordinate [m]", "asterix.62_1_21_100_uap_group_1237", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3822, { "Y : Y Coordinate [m]", "asterix.62_1_21_100_uap_group_1238", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3823, { "185 : Calculated Track Velocity (Cartesian)", "asterix.62_1_21_185_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3824, { "210 : Calculated Acceleration (Cartesian)", "asterix.62_1_21_210_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3825, { "060 : Track Mode 3/A Code", "asterix.62_1_21_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3826, { "245 : Target Identification", "asterix.62_1_21_245_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3827, { "380 : Aircraft Derived Data", "asterix.62_1_21_380_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3828, { "040 : Track Number", "asterix.62_1_21_040_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3829, { "080 : Track Status", "asterix.62_1_21_080_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3830, { "MON", "asterix.62_1_21_080_uap_extended_MON", FT_UINT8, BASE_DEC, VALS(value_map_624), 0x0, NULL, HFILL } },
{ &expand_var_3831, { "SPI", "asterix.62_1_21_080_uap_extended_SPI", FT_UINT8, BASE_DEC, VALS(value_map_210), 0x0, NULL, HFILL } },
{ &expand_var_3832, { "MRH(Most Reliable Height)", "asterix.62_1_21_080_uap_extended_MRH", FT_UINT8, BASE_DEC, VALS(value_map_200), 0x0, NULL, HFILL } },
{ &expand_var_3833, { "SRC(Source of Calculated Track Altitude for I062/130)", "asterix.62_1_21_080_uap_extended_SRC", FT_UINT8, BASE_DEC, VALS(value_map_625), 0x0, NULL, HFILL } },
{ &expand_var_3834, { "CNF", "asterix.62_1_21_080_uap_extended_CNF", FT_UINT8, BASE_DEC, VALS(value_map_202), 0x0, NULL, HFILL } },
{ &expand_var_3835, { "FX", "asterix.62_1_21_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3836, { "SIM", "asterix.62_1_21_080_uap_extended_SIM", FT_UINT8, BASE_DEC, VALS(value_map_626), 0x0, NULL, HFILL } },
{ &expand_var_3837, { "TSE", "asterix.62_1_21_080_uap_extended_TSE", FT_UINT8, BASE_DEC, VALS(value_map_627), 0x0, NULL, HFILL } },
{ &expand_var_3838, { "TSB", "asterix.62_1_21_080_uap_extended_TSB", FT_UINT8, BASE_DEC, VALS(value_map_628), 0x0, NULL, HFILL } },
{ &expand_var_3839, { "FPC", "asterix.62_1_21_080_uap_extended_FPC", FT_UINT8, BASE_DEC, VALS(value_map_212), 0x0, NULL, HFILL } },
{ &expand_var_3840, { "AFF", "asterix.62_1_21_080_uap_extended_AFF", FT_UINT8, BASE_DEC, VALS(value_map_213), 0x0, NULL, HFILL } },
{ &expand_var_3841, { "STP", "asterix.62_1_21_080_uap_extended_STP", FT_UINT8, BASE_DEC, VALS(value_map_629), 0x0, NULL, HFILL } },
{ &expand_var_3842, { "KOS", "asterix.62_1_21_080_uap_extended_KOS", FT_UINT8, BASE_DEC, VALS(value_map_630), 0x0, NULL, HFILL } },
{ &expand_var_3843, { "FX", "asterix.62_1_21_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3844, { "AMA", "asterix.62_1_21_080_uap_extended_AMA", FT_UINT8, BASE_DEC, VALS(value_map_209), 0x0, NULL, HFILL } },
{ &expand_var_3845, { "MD4", "asterix.62_1_21_080_uap_extended_MD4", FT_UINT8, BASE_DEC, VALS(value_map_573), 0x0, NULL, HFILL } },
{ &expand_var_3846, { "ME", "asterix.62_1_21_080_uap_extended_ME", FT_UINT8, BASE_DEC, VALS(value_map_207), 0x0, NULL, HFILL } },
{ &expand_var_3847, { "MI", "asterix.62_1_21_080_uap_extended_MI", FT_UINT8, BASE_DEC, VALS(value_map_631), 0x0, NULL, HFILL } },
{ &expand_var_3848, { "MD5", "asterix.62_1_21_080_uap_extended_MD5", FT_UINT8, BASE_DEC, VALS(value_map_632), 0x0, NULL, HFILL } },
{ &expand_var_3849, { "FX", "asterix.62_1_21_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3850, { "CST", "asterix.62_1_21_080_uap_extended_CST", FT_UINT8, BASE_DEC, VALS(value_map_211), 0x0, NULL, HFILL } },
{ &expand_var_3851, { "PSR", "asterix.62_1_21_080_uap_extended_PSR", FT_UINT8, BASE_DEC, VALS(value_map_245), 0x0, NULL, HFILL } },
{ &expand_var_3852, { "SSR", "asterix.62_1_21_080_uap_extended_SSR", FT_UINT8, BASE_DEC, VALS(value_map_246), 0x0, NULL, HFILL } },
{ &expand_var_3853, { "MDS", "asterix.62_1_21_080_uap_extended_MDS", FT_UINT8, BASE_DEC, VALS(value_map_247), 0x0, NULL, HFILL } },
{ &expand_var_3854, { "ADS", "asterix.62_1_21_080_uap_extended_ADS", FT_UINT8, BASE_DEC, VALS(value_map_633), 0x0, NULL, HFILL } },
{ &expand_var_3855, { "SUC", "asterix.62_1_21_080_uap_extended_SUC", FT_UINT8, BASE_DEC, VALS(value_map_249), 0x0, NULL, HFILL } },
{ &expand_var_3856, { "AAC", "asterix.62_1_21_080_uap_extended_AAC", FT_UINT8, BASE_DEC, VALS(value_map_634), 0x0, NULL, HFILL } },
{ &expand_var_3857, { "FX", "asterix.62_1_21_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3858, { "SDS", "asterix.62_1_21_080_uap_extended_SDS", FT_UINT8, BASE_DEC, VALS(value_map_635), 0x0, NULL, HFILL } },
{ &expand_var_3859, { "EMS", "asterix.62_1_21_080_uap_extended_EMS", FT_UINT8, BASE_DEC, VALS(value_map_636), 0x0, NULL, HFILL } },
{ &expand_var_3860, { "PFT", "asterix.62_1_21_080_uap_extended_PFT", FT_UINT8, BASE_DEC, VALS(value_map_637), 0x0, NULL, HFILL } },
{ &expand_var_3861, { "FPLT", "asterix.62_1_21_080_uap_extended_FPLT", FT_UINT8, BASE_DEC, VALS(value_map_638), 0x0, NULL, HFILL } },
{ &expand_var_3862, { "FX", "asterix.62_1_21_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3863, { "DUPT", "asterix.62_1_21_080_uap_extended_DUPT", FT_UINT8, BASE_DEC, VALS(value_map_639), 0x0, NULL, HFILL } },
{ &expand_var_3864, { "DUPF", "asterix.62_1_21_080_uap_extended_DUPF", FT_UINT8, BASE_DEC, VALS(value_map_640), 0x0, NULL, HFILL } },
{ &expand_var_3865, { "DUPM", "asterix.62_1_21_080_uap_extended_DUPM", FT_UINT8, BASE_DEC, VALS(value_map_641), 0x0, NULL, HFILL } },
{ &expand_var_3866, { "SFC", "asterix.62_1_21_080_uap_extended_SFC", FT_UINT8, BASE_DEC, VALS(value_map_681), 0x0, NULL, HFILL } },
{ &expand_var_3867, { "IDD", "asterix.62_1_21_080_uap_extended_IDD", FT_UINT8, BASE_DEC, VALS(value_map_682), 0x0, NULL, HFILL } },
{ &expand_var_3868, { "IEC", "asterix.62_1_21_080_uap_extended_IEC", FT_UINT8, BASE_DEC, VALS(value_map_683), 0x0, NULL, HFILL } },
{ &expand_var_3869, { "MLAT", "asterix.62_1_21_080_uap_extended_MLAT", FT_UINT8, BASE_DEC, VALS(value_map_685), 0x0, NULL, HFILL } },
{ &expand_var_3870, { "FX", "asterix.62_1_21_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3871, { "M5I", "asterix.62_1_21_080_uap_extended_M5I", FT_UINT8, BASE_DEC, VALS(value_map_686), 0x0, NULL, HFILL } },
{ &expand_var_3872, { "FX", "asterix.62_1_21_080_uap_extended_080_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3873, { "290 : System Track Update Ages", "asterix.62_1_21_290_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3874, { "200 : Mode of Movement", "asterix.62_1_21_200_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3875, { "295 : Track Data Ages", "asterix.62_1_21_295_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3876, { "MFL : Measured Flight Level Age [s]", "asterix.62_1_21_295_1865_compound_1865_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3877, { "MD1 : Mode 1 Age [s]", "asterix.62_1_21_295_1866_compound_1866_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3878, { "MD2 : Mode 2 Age [s]", "asterix.62_1_21_295_1867_compound_1867_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3879, { "MDA : Mode 3/A Age [s]", "asterix.62_1_21_295_1868_compound_1868_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3880, { "MD4 : Mode 4 Age [s]", "asterix.62_1_21_295_1869_compound_1869_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3881, { "MD5 : Mode 5 Age [s]", "asterix.62_1_21_295_1870_compound_1870_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3882, { "MHG : Magnetic Heading Age [s]", "asterix.62_1_21_295_1871_compound_1871_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3883, { "IAS : Indicated Airspeed / Mach Nb Age [s]", "asterix.62_1_21_295_1872_compound_1872_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3884, { "TAS : True Airspeed Age [s]", "asterix.62_1_21_295_1873_compound_1873_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3885, { "SAL : Selected Altitude Age [s]", "asterix.62_1_21_295_1874_compound_1874_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3886, { "FSS : Final State Selected Altitude Age [s]", "asterix.62_1_21_295_1875_compound_1875_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3887, { "TID : Trajectory Intent Age [s]", "asterix.62_1_21_295_1876_compound_1876_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3888, { "COM : Communication/ACAS Capability and Flight Status Age [s]", "asterix.62_1_21_295_1877_compound_1877_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3889, { "SAB : Status Reported by ADS-B Age [s]", "asterix.62_1_21_295_1878_compound_1878_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3890, { "ACS : ACAS Resolution Advisory Report Age [s]", "asterix.62_1_21_295_1879_compound_1879_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3891, { "BVR : Barometric Vertical Rate Age [s]", "asterix.62_1_21_295_1880_compound_1880_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3892, { "GVR : Geometrical Vertical Rate Age [s]", "asterix.62_1_21_295_1881_compound_1881_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3893, { "RAN : Roll Angle Age [s]", "asterix.62_1_21_295_1882_compound_1882_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3894, { "TAR : Track Angle Rate Age [s]", "asterix.62_1_21_295_1883_compound_1883_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3895, { "TAN : Track Angle Age [s]", "asterix.62_1_21_295_1884_compound_1884_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3896, { "GSP : Ground Speed Age [s]", "asterix.62_1_21_295_1885_compound_1885_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3897, { "VUN : Velocity Uncertainty Age [s]", "asterix.62_1_21_295_1886_compound_1886_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3898, { "MET : Meteorological Data Age [s]", "asterix.62_1_21_295_1887_compound_1887_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3899, { "EMC : Emitter Category Age [s]", "asterix.62_1_21_295_1888_compound_1888_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3900, { "POS : Position Age [s]", "asterix.62_1_21_295_1889_compound_1889_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3901, { "GAL : Geometric Altitude Age [s]", "asterix.62_1_21_295_1890_compound_1890_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3902, { "PUN : Position Uncertainty Age [s]", "asterix.62_1_21_295_1891_compound_1891_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3903, { "MB : BDS Register Data Age [s]", "asterix.62_1_21_295_2046_compound_2046_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3904, { "IAR : Indicated Airspeed Data Age [s]", "asterix.62_1_21_295_1893_compound_1893_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3905, { "MAC : Mach Number Data Age [s]", "asterix.62_1_21_295_1894_compound_1894_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3906, { "BPS : Barometric Pressure Setting Data Age [s]", "asterix.62_1_21_295_1895_compound_1895_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3907, { "136 : Measured Flight Level [FL]", "asterix.62_1_21_136_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3908, { "130 : Calculated Track Geometric Altitude [ft]", "asterix.62_1_21_130_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3909, { "135 : Calculated Track Barometric Altitude", "asterix.62_1_21_135_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3910, { "220 : Calculated Rate of Climb/Descent [ft/min]", "asterix.62_1_21_220_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3911, { "390 : Flight Plan Related Data", "asterix.62_1_21_390_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3912, { "270 : Target Size and Orientation", "asterix.62_1_21_270_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3913, { "300 : Vehicle Fleet Identification", "asterix.62_1_21_300_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_186), 0x0, NULL, HFILL } },
{ &expand_var_3914, { "110 : Mode 5 Data Reports and Extended Mode 1 Code", "asterix.62_1_21_110_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3915, { "120 : Track Mode 2 Code", "asterix.62_1_21_120_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3916, { "510 : Composed Track Number", "asterix.62_1_21_510_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3917, { "500 : Estimated Accuracies", "asterix.62_1_21_500_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3918, { "340 : Measured Information", "asterix.62_1_21_340_uap_compound", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3919, { "RE : Reserved Expansion Field", "asterix.62_1_21_33_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3920, { "SP : Special Purpose Field", "asterix.62_1_21_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3921, { "010 : Data Source Identifier", "asterix.63_1_6_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3922, { "015 : Service Identification", "asterix.63_1_6_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3923, { "030 : Time of Message [s]", "asterix.63_1_6_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3924, { "050 : Sensor Identifier", "asterix.63_1_6_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3925, { "060 : Sensor Configuration and Status", "asterix.63_1_6_060_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3926, { "CON", "asterix.63_1_6_060_uap_extended_CON", FT_UINT8, BASE_DEC, VALS(value_map_687), 0x0, NULL, HFILL } },
{ &expand_var_3927, { "PSR", "asterix.63_1_6_060_uap_extended_PSR", FT_UINT8, BASE_DEC, VALS(value_map_688), 0x0, NULL, HFILL } },
{ &expand_var_3928, { "SSR", "asterix.63_1_6_060_uap_extended_SSR", FT_UINT8, BASE_DEC, VALS(value_map_689), 0x0, NULL, HFILL } },
{ &expand_var_3929, { "MDS", "asterix.63_1_6_060_uap_extended_MDS", FT_UINT8, BASE_DEC, VALS(value_map_690), 0x0, NULL, HFILL } },
{ &expand_var_3930, { "ADS", "asterix.63_1_6_060_uap_extended_ADS", FT_UINT8, BASE_DEC, VALS(value_map_691), 0x0, NULL, HFILL } },
{ &expand_var_3931, { "MLT", "asterix.63_1_6_060_uap_extended_MLT", FT_UINT8, BASE_DEC, VALS(value_map_692), 0x0, NULL, HFILL } },
{ &expand_var_3932, { "FX", "asterix.63_1_6_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3933, { "OPS(Operational Release Status of the System)", "asterix.63_1_6_060_uap_extended_OPS", FT_UINT8, BASE_DEC, VALS(value_map_693), 0x0, NULL, HFILL } },
{ &expand_var_3934, { "ODP(Data Processor Overload Indicator)", "asterix.63_1_6_060_uap_extended_ODP", FT_UINT8, BASE_DEC, VALS(value_map_486), 0x0, NULL, HFILL } },
{ &expand_var_3935, { "OXT(Transmission Subsystem Overload Status)", "asterix.63_1_6_060_uap_extended_OXT", FT_UINT8, BASE_DEC, VALS(value_map_487), 0x0, NULL, HFILL } },
{ &expand_var_3936, { "MSC(Monitoring System Connected Status)", "asterix.63_1_6_060_uap_extended_MSC", FT_UINT8, BASE_DEC, VALS(value_map_520), 0x0, NULL, HFILL } },
{ &expand_var_3937, { "TSV(Time Source Validity)", "asterix.63_1_6_060_uap_extended_TSV", FT_UINT8, BASE_DEC, VALS(value_map_193), 0x0, NULL, HFILL } },
{ &expand_var_3938, { "NPW(No Plot Warning)", "asterix.63_1_6_060_uap_extended_NPW", FT_UINT8, BASE_DEC, VALS(value_map_694), 0x0, NULL, HFILL } },
{ &expand_var_3939, { "FX", "asterix.63_1_6_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3940, { "070 : Time Stamping Bias [ms]", "asterix.63_1_6_070_uap_element", FT_INT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3941, { "080 : SSR / Mode S Range Gain and Bias", "asterix.63_1_6_080_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3942, { "SRG : Mode S Range Gain []", "asterix.63_1_6_080_uap_group_1252", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3943, { "SRB : Mode S Range Bias [NM]", "asterix.63_1_6_080_uap_group_1253", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3944, { "081 : SSR Mode S Azimuth Bias [°]", "asterix.63_1_6_081_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3945, { "090 : PSR Range Gain and Bias", "asterix.63_1_6_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3946, { "PRG : PSR Range Gain []", "asterix.63_1_6_090_uap_group_1254", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3947, { "PRB : PSR Range Bias [NM]", "asterix.63_1_6_090_uap_group_1255", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3948, { "091 : PSR Azimuth Bias [°]", "asterix.63_1_6_091_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3949, { "092 : PSR Elevation Bias [°]", "asterix.63_1_6_092_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3950, { "RE : Reserved Expansion Field", "asterix.63_1_6_12_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3951, { "SP : Special Purpose Field", "asterix.63_1_6_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3952, { "010 : Data Source Identifier", "asterix.63_1_7_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3953, { "015 : Service Identification", "asterix.63_1_7_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3954, { "030 : Time of Message [s]", "asterix.63_1_7_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3955, { "050 : Sensor Identifier", "asterix.63_1_7_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3956, { "060 : Sensor Configuration and Status", "asterix.63_1_7_060_uap_extended", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3957, { "CON", "asterix.63_1_7_060_uap_extended_CON", FT_UINT8, BASE_DEC, VALS(value_map_687), 0x0, NULL, HFILL } },
{ &expand_var_3958, { "PSR", "asterix.63_1_7_060_uap_extended_PSR", FT_UINT8, BASE_DEC, VALS(value_map_688), 0x0, NULL, HFILL } },
{ &expand_var_3959, { "SSR", "asterix.63_1_7_060_uap_extended_SSR", FT_UINT8, BASE_DEC, VALS(value_map_689), 0x0, NULL, HFILL } },
{ &expand_var_3960, { "MDS", "asterix.63_1_7_060_uap_extended_MDS", FT_UINT8, BASE_DEC, VALS(value_map_690), 0x0, NULL, HFILL } },
{ &expand_var_3961, { "ADS", "asterix.63_1_7_060_uap_extended_ADS", FT_UINT8, BASE_DEC, VALS(value_map_691), 0x0, NULL, HFILL } },
{ &expand_var_3962, { "MLT", "asterix.63_1_7_060_uap_extended_MLT", FT_UINT8, BASE_DEC, VALS(value_map_692), 0x0, NULL, HFILL } },
{ &expand_var_3963, { "FX", "asterix.63_1_7_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3964, { "OPS(Operational Release Status of the System)", "asterix.63_1_7_060_uap_extended_OPS", FT_UINT8, BASE_DEC, VALS(value_map_693), 0x0, NULL, HFILL } },
{ &expand_var_3965, { "ODP(Data Processor Overload Indicator)", "asterix.63_1_7_060_uap_extended_ODP", FT_UINT8, BASE_DEC, VALS(value_map_486), 0x0, NULL, HFILL } },
{ &expand_var_3966, { "OXT(Transmission Subsystem Overload Status)", "asterix.63_1_7_060_uap_extended_OXT", FT_UINT8, BASE_DEC, VALS(value_map_487), 0x0, NULL, HFILL } },
{ &expand_var_3967, { "MSC(Monitoring System Connected Status)", "asterix.63_1_7_060_uap_extended_MSC", FT_UINT8, BASE_DEC, VALS(value_map_520), 0x0, NULL, HFILL } },
{ &expand_var_3968, { "TSV(Time Source Validity)", "asterix.63_1_7_060_uap_extended_TSV", FT_UINT8, BASE_DEC, VALS(value_map_193), 0x0, NULL, HFILL } },
{ &expand_var_3969, { "NPW(No Plot Warning)", "asterix.63_1_7_060_uap_extended_NPW", FT_UINT8, BASE_DEC, VALS(value_map_694), 0x0, NULL, HFILL } },
{ &expand_var_3970, { "FX", "asterix.63_1_7_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3971, { "EP : Element Populated Bit", "asterix.63_1_7_060_uap_extended_722", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_3972, { "VAL : Test Target Failure Status Values", "asterix.63_1_7_060_uap_extended_1256", FT_UINT8, BASE_DEC, VALS(value_map_195), 0x0, NULL, HFILL } },
{ &expand_var_3973, { "EP : Element Populated Bit", "asterix.63_1_7_060_uap_extended_166", FT_UINT8, BASE_DEC, VALS(value_map_145), 0x0, NULL, HFILL } },
{ &expand_var_3974, { "VAL : Indication of Spoofing Attack Values", "asterix.63_1_7_060_uap_extended_1258", FT_UINT8, BASE_DEC, VALS(value_map_489), 0x0, NULL, HFILL } },
{ &expand_var_3975, { "FX", "asterix.63_1_7_060_uap_extended_060_FX_7", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3976, { "070 : Time Stamping Bias [ms]", "asterix.63_1_7_070_uap_element", FT_INT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3977, { "080 : SSR / Mode S Range Gain and Bias", "asterix.63_1_7_080_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3978, { "SRG : Mode S Range Gain []", "asterix.63_1_7_080_uap_group_1260", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3979, { "SRB : Mode S Range Bias [NM]", "asterix.63_1_7_080_uap_group_1261", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3980, { "081 : SSR Mode S Azimuth Bias [°]", "asterix.63_1_7_081_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3981, { "090 : PSR Range Gain and Bias", "asterix.63_1_7_090_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3982, { "PRG : PSR Range Gain []", "asterix.63_1_7_090_uap_group_1262", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3983, { "PRB : PSR Range Bias [NM]", "asterix.63_1_7_090_uap_group_1263", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3984, { "091 : PSR Azimuth Bias [°]", "asterix.63_1_7_091_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3985, { "092 : PSR Elevation Bias [°]", "asterix.63_1_7_092_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3986, { "RE : Reserved Expansion Field", "asterix.63_1_7_12_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3987, { "SP : Special Purpose Field", "asterix.63_1_7_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3988, { "010 : Data Source Identifier", "asterix.65_1_4_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3989, { "000 : Message Type", "asterix.65_1_4_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_698), 0x0, NULL, HFILL } },
{ &expand_var_3990, { "015 : Service Identification", "asterix.65_1_4_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3991, { "030 : Time of Message [s]", "asterix.65_1_4_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3992, { "020 : Batch Number", "asterix.65_1_4_020_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3993, { "040 : SDPS Configuration and Status", "asterix.65_1_4_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3994, { "NOGO", "asterix.65_1_4_040_uap_group_1264", FT_UINT8, BASE_DEC, VALS(value_map_699), 0x0, NULL, HFILL } },
{ &expand_var_3995, { "OVL", "asterix.65_1_4_040_uap_group_1265", FT_UINT8, BASE_DEC, VALS(value_map_700), 0x0, NULL, HFILL } },
{ &expand_var_3996, { "TSV", "asterix.65_1_4_040_uap_group_1266", FT_UINT8, BASE_DEC, VALS(value_map_701), 0x0, NULL, HFILL } },
{ &expand_var_3997, { "PSS : Processing System Status", "asterix.65_1_4_040_uap_group_1267", FT_UINT8, BASE_DEC, VALS(value_map_702), 0x0, NULL, HFILL } },
{ &expand_var_3998, { "STTN : Track Re-numbering Indication", "asterix.65_1_4_040_uap_group_1268", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_3999, { "050 : Service Status Report", "asterix.65_1_4_050_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_703), 0x0, NULL, HFILL } },
{ &expand_var_4000, { "RE : Reserved Expansion Field", "asterix.65_1_4_12_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4001, { "SP : Special Purpose Field", "asterix.65_1_4_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4002, { "010 : Data Source Identifier", "asterix.65_1_5_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4003, { "000 : Message Type", "asterix.65_1_5_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_698), 0x0, NULL, HFILL } },
{ &expand_var_4004, { "015 : Service Identification", "asterix.65_1_5_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4005, { "030 : Time of Message [s]", "asterix.65_1_5_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4006, { "020 : Batch Number", "asterix.65_1_5_020_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4007, { "040 : SDPS Configuration and Status", "asterix.65_1_5_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4008, { "050 : Service Status Report", "asterix.65_1_5_050_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_703), 0x0, NULL, HFILL } },
{ &expand_var_4009, { "RE : Reserved Expansion Field", "asterix.65_1_5_12_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4010, { "SP : Special Purpose Field", "asterix.65_1_5_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4011, { "010 : Data Source Identifier", "asterix.65_1_6_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4012, { "000 : Message Type", "asterix.65_1_6_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_698), 0x0, NULL, HFILL } },
{ &expand_var_4013, { "015 : Service Identification", "asterix.65_1_6_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4014, { "030 : Time of Message [s]", "asterix.65_1_6_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4015, { "020 : Batch Number", "asterix.65_1_6_020_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4016, { "040 : SDPS Configuration and Status", "asterix.65_1_6_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4017, { "050 : Service Status Report", "asterix.65_1_6_050_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_703), 0x0, NULL, HFILL } },
{ &expand_var_4018, { "RE : Reserved Expansion Field", "asterix.65_1_6_12_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4019, { "SP : Special Purpose Field", "asterix.65_1_6_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4020, { "010 : Destination ID", "asterix.150_3_0_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4021, { "CEN : Centre Identifier", "asterix.150_3_0_010_uap_group_1269", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4022, { "POS : Workstation Identifier", "asterix.150_3_0_010_uap_group_1270", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4023, { "020 : Source ID", "asterix.150_3_0_020_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4024, { "030 : Message Type", "asterix.150_3_0_030_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_704), 0x0, NULL, HFILL } },
{ &expand_var_4025, { "040 : Plan Reference Number", "asterix.150_3_0_040_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4026, { "050 : Callsign", "asterix.150_3_0_050_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4027, { "060 : Present Mode 3A", "asterix.150_3_0_060_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4028, { "070 : Next Mode 3A", "asterix.150_3_0_070_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4029, { "080 : Departure Aerodrome", "asterix.150_3_0_080_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4030, { "090 : Destination Aerodrome", "asterix.150_3_0_090_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4031, { "100 : Type Flags", "asterix.150_3_0_100_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4032, { "GAT : General Air Traffic", "asterix.150_3_0_100_uap_group_1271", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4033, { "OAT : Operational Air Traffic", "asterix.150_3_0_100_uap_group_1272", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4034, { "CPL : Complete Flight Plan", "asterix.150_3_0_100_uap_group_1273", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4035, { "SPN : Short Flight Plan", "asterix.150_3_0_100_uap_group_1274", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4036, { "110 : Status Flags", "asterix.150_3_0_110_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4037, { "HLD : Aircraft is in Hold State", "asterix.150_3_0_110_uap_group_1275", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4038, { "RVQ : Aircraft is RVSM Equipped", "asterix.150_3_0_110_uap_group_1276", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4039, { "RVC : Aircraft is RVSM Capable", "asterix.150_3_0_110_uap_group_1277", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4040, { "RVX : Aircraft is RVSM Exempted", "asterix.150_3_0_110_uap_group_1278", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4041, { "120 : Aircraft Type", "asterix.150_3_0_120_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4042, { "NOA : Number of Aircraft", "asterix.150_3_0_120_uap_group_1279", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4043, { "TOA : Type of Aircraft", "asterix.150_3_0_120_uap_group_1280", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4044, { "WT : Wake Turbulence", "asterix.150_3_0_120_uap_group_1281", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4045, { "130 : Cleared Flight Level", "asterix.150_3_0_130_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4046, { "140 : Route Points, Description", "asterix.150_3_0_140_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4047, { "140 : Route Points, Description", "asterix.150_3_0_140_rep55_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4048, { "T : Route Point Type", "asterix.150_3_0_140_rep55_group_1282", FT_UINT8, BASE_DEC, VALS(value_map_705), 0x0, NULL, HFILL } },
{ &expand_var_4049, { "E : Route Point Description Element", "asterix.150_3_0_140_rep55_group_1283", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4050, { "150 : Route Points, Coordinates", "asterix.150_3_0_150_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4051, { "150 : Route Points, Coordinates", "asterix.150_3_0_150_rep56_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4052, { "X : X Co-ordinate [NM]", "asterix.150_3_0_150_rep56_group_1284", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4053, { "Y : Y Co-ordinate [NM]", "asterix.150_3_0_150_rep56_group_1285", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4054, { "160 : Route Points, Time", "asterix.150_3_0_160_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4055, { "160 : Route Points, Time", "asterix.150_3_0_160_rep57_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4056, { "HH : Hours", "asterix.150_3_0_160_rep57_group_1286", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4057, { "MM : Minutes", "asterix.150_3_0_160_rep57_group_1287", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4058, { "170 : Route Points, Flight Level", "asterix.150_3_0_170_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4059, { "170 : Route Points, Flight Level", "asterix.150_3_0_170_rep58_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4060, { "180 : Route Points, Speed", "asterix.150_3_0_180_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4061, { "180 : Route Points, Speed", "asterix.150_3_0_180_rep59_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4062, { "190 : Controller ID", "asterix.150_3_0_190_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4063, { "200 : Field 18", "asterix.150_3_0_200_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4064, { "200 : Field 18", "asterix.150_3_0_200_rep60_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4065, { "210 : Correlated Track Number", "asterix.150_3_0_210_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4066, { "220 : Maximum Plan Count", "asterix.150_3_0_220_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4067, { "230 : Number of Plans", "asterix.150_3_0_230_uap_element", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4068, { "240 : Newly Correlated Plans", "asterix.150_3_0_240_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4069, { "240 : Newly Correlated Plans", "asterix.150_3_0_240_rep61_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4070, { "PLAN : Plan Number", "asterix.150_3_0_240_rep61_group_1288", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4071, { "TRACK : Track Number", "asterix.150_3_0_240_rep61_group_1289", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4072, { "250 : Newly De-correlated Plans", "asterix.150_3_0_250_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4073, { "251 : Tracks in Conflict", "asterix.150_3_0_251_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4074, { "251 : Tracks in Conflict", "asterix.150_3_0_251_rep62_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4075, { "TRACK1 : Track Number 1", "asterix.150_3_0_251_rep62_group_1290", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4076, { "TRACK2 : Track Number 2", "asterix.150_3_0_251_rep62_group_1291", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4077, { "171 : Route Points, Requested Flight Level", "asterix.150_3_0_171_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4078, { "151 : Route Points, Geographic Position", "asterix.150_3_0_151_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4079, { "151 : Route Points, Geographic Position", "asterix.150_3_0_151_rep63_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4080, { "010 : Data Source Identifier", "asterix.205_1_0_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4081, { "015 : Service Identification", "asterix.205_1_0_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4082, { "000 : Message Type", "asterix.205_1_0_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_706), 0x0, NULL, HFILL } },
{ &expand_var_4083, { "030 : Time of Day [s]", "asterix.205_1_0_030_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4084, { "040 : Report Number", "asterix.205_1_0_040_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4085, { "090 : Radio Channel Name", "asterix.205_1_0_090_uap_element", FT_STRING, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4086, { "050 : Position in WGS-84 Coordinates", "asterix.205_1_0_050_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4087, { "LAT : Latitude in WGS-84 [°]", "asterix.205_1_0_050_uap_group_1292", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4088, { "LON : Longitude in WGS-84 [°]", "asterix.205_1_0_050_uap_group_1293", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4089, { "060 : Position in Cartesian Coordinates", "asterix.205_1_0_060_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4090, { "X : X-coordinate [m]", "asterix.205_1_0_060_uap_group_1294", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4091, { "Y : Y-coordinate [m]", "asterix.205_1_0_060_uap_group_1295", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4092, { "070 : Local Bearing [°]", "asterix.205_1_0_070_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4093, { "080 : System Bearing [°]", "asterix.205_1_0_080_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4094, { "100 : Quality of Measurement", "asterix.205_1_0_100_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4095, { "110 : Estimated Uncertainty [m]", "asterix.205_1_0_110_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4096, { "120 : Contributing Sensors", "asterix.205_1_0_120_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4097, { "120 : Contributing Sensors", "asterix.205_1_0_120_rep64_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4098, { "130 : Conflicting Transmitter Position in WGS-84 Coordinates", "asterix.205_1_0_130_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4099, { "140 : Conflicting Transmitter Position in Cartesian Coordinates", "asterix.205_1_0_140_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4100, { "150 : Conflicting Transmitter Estimated Uncertainty [m]", "asterix.205_1_0_150_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4101, { "160 : Track Number", "asterix.205_1_0_160_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4102, { "170 : Sensor Identification", "asterix.205_1_0_170_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4103, { "180 : Signal Level [dBµV]", "asterix.205_1_0_180_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4104, { "190 : Signal Quality", "asterix.205_1_0_190_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4105, { "200 : Signal Elevation [°]", "asterix.205_1_0_200_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4106, { "SP : Special Purpose Field", "asterix.205_1_0_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4107, { "010 : Data Source Identifier", "asterix.240_1_3_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4108, { "000 : Message Type", "asterix.240_1_3_000_uap_element", FT_UINT8, BASE_DEC, VALS(value_map_710), 0x0, NULL, HFILL } },
{ &expand_var_4109, { "020 : Video Record Header", "asterix.240_1_3_020_uap_element", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4110, { "030 : Video Summary", "asterix.240_1_3_030_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4111, { "040 : Video Header Nano", "asterix.240_1_3_040_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4112, { "STARTAZ : Start Azimuth of the Cells Group [°]", "asterix.240_1_3_040_uap_group_1296", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4113, { "ENDAZ : End Azimuth of the Cells Group [°]", "asterix.240_1_3_040_uap_group_1297", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4114, { "STARTRG : Starting Range of the Cells Group, Expressed in Number of Cells", "asterix.240_1_3_040_uap_group_1298", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4115, { "CELLDUR : Video Cell Duration in Nano-seconds [ns]", "asterix.240_1_3_040_uap_group_1299", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4116, { "041 : Video Header Femto", "asterix.240_1_3_041_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4117, { "STARTAZ : Start Azimuth of the Cells Group [°]", "asterix.240_1_3_041_uap_group_1296", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4118, { "ENDAZ : End Azimuth of the Cells Group [°]", "asterix.240_1_3_041_uap_group_1297", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4119, { "STARTRG : Starting Range of the Cells Group, Expressed in Number of Cells", "asterix.240_1_3_041_uap_group_1298", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4120, { "CELLDUR : Video Cell Duration in Femto-seconds [fs]", "asterix.240_1_3_041_uap_group_1300", FT_UINT32, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4121, { "048 : Video Cells Resolution & Data Compression Indicator", "asterix.240_1_3_048_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4122, { "C : Data Compression Indicator", "asterix.240_1_3_048_uap_group_1301", FT_UINT8, BASE_DEC, VALS(value_map_712), 0x0, NULL, HFILL } },
{ &expand_var_4123, { "RES : Bit Resolution", "asterix.240_1_3_048_uap_group_1302", FT_UINT8, BASE_DEC, VALS(value_map_713), 0x0, NULL, HFILL } },
{ &expand_var_4124, { "049 : Video Octets & Video Cells Counters", "asterix.240_1_3_049_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4125, { "NBVB : Number of 'valid' Octets", "asterix.240_1_3_049_uap_group_1303", FT_UINT16, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4126, { "NBCELLS : Number of 'valid' Cells", "asterix.240_1_3_049_uap_group_1304", FT_UINT24, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4127, { "050 : Video Block Low Data Volume", "asterix.240_1_3_050_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4128, { "050 : Video Block Low Data Volume", "asterix.240_1_3_050_rep65_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4129, { "051 : Video Block Medium Data Volume", "asterix.240_1_3_051_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4130, { "051 : Video Block Medium Data Volume", "asterix.240_1_3_051_rep66_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4131, { "052 : Video Block High Data Volume", "asterix.240_1_3_052_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4132, { "052 : Video Block High Data Volume", "asterix.240_1_3_052_rep67_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4133, { "140 : Time of Day [s]", "asterix.240_1_3_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4134, { "RE : Reserved Expansion Field", "asterix.240_1_3_12_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4135, { "SP : Special Purpose Field", "asterix.240_1_3_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4136, { "010 : Data Source Identifier", "asterix.247_1_2_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4137, { "015 : Service Identification", "asterix.247_1_2_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4138, { "140 : Time of Day [s]", "asterix.247_1_2_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4139, { "550 : Category Version Number Report", "asterix.247_1_2_550_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4140, { "550 : Category Version Number Report", "asterix.247_1_2_550_rep68_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4141, { "CAT : Category", "asterix.247_1_2_550_rep68_group_1305", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4142, { "MAIN : Main Version Number", "asterix.247_1_2_550_rep68_group_1306", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4143, { "SUB : Sub Version Number", "asterix.247_1_2_550_rep68_group_1307", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4144, { "SP : Special Purpose Field", "asterix.247_1_2_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4145, { "RE : Reserved Expansion Field", "asterix.247_1_2_6_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4146, { "010 : Data Source Identifier", "asterix.247_1_3_010_uap_group", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4147, { "015 : Service Identification", "asterix.247_1_3_015_uap_element", FT_UINT8, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4148, { "140 : Time of Day [s]", "asterix.247_1_3_140_uap_element", FT_DOUBLE, BASE_DEC, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4149, { "550 : Category Version Number Report", "asterix.247_1_3_550_uap_repetitive", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4150, { "SP : Special Purpose Field", "asterix.247_1_3_SP_uap_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } },
{ &expand_var_4151, { "RE : Reserved Expansion Field", "asterix.247_1_3_6_explicit", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL } }
};
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_0
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree_group_0, expand_var_1, tvb, offset + 0, 1, value_expand_var_1);
  unsigned int value_expand_var_2 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_2, tvb, offset + 1, 1, value_expand_var_2);
  return 2;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_1_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_3
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_4, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_5, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_6, tvb, (offset * 8) + 2, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_7, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_8, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_9, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_10, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_11, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_12, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_13, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_14, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_1_5 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 5, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 5, 2, spare_item_1_5);
  proto_tree_add_bits_item(datablock_tree, expand_var_15, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_2_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_16
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_17 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_17_d = (double)value_expand_var_17 * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_17, tvb, offset + 0, 2, value_expand_var_17_d);
  unsigned int value_expand_var_18 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_18_d = (double)value_expand_var_18 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_18, tvb, offset + 2, 2, value_expand_var_18_d);
  return 4;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_3_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_19
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_20, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_21, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_22, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_23);
  return 2;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_4_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_24
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_25, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_26, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_27 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_27 = value_expand_var_27 & 0b0011111111111111;
  int value_expand_var_27_s = get_signed_int(value_expand_var_27, 14);
  double value_expand_var_27_d = (double)value_expand_var_27_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_27, tvb, offset + 0, 2, value_expand_var_27_d);
  return 2;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_rep0(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_29
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var = value_expand_var >> 1;
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 1, value_expand_var);
  return 1;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_28
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  while (true) {
    fun_len = dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_rep0(tvb, offset, sub_tree, expand_var_29);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
    if (asterix_extended_end(tvb, offset - 1)) break;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_6_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //141 expand_var_30
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.0078125;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_7_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_31
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_32, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_33, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_34, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_35);
  return 2;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_8_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_36
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_s = get_signed_int(value_expand_var, 8);
  double value_expand_var_d = (double)value_expand_var_s * 0.00390625;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_9_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //131 expand_var_37
{
  int value_expand_var = asterix_get_signed_value (tvb, offset + 0, 1);
  proto_tree_add_int (tree, expand_var, tvb, offset + 0, 1, value_expand_var);
  return 1;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_38
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_39, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_40, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_41, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_42, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_43, tvb, (offset * 8) + 8, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_44, tvb, (offset * 8) + 9, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_45, tvb, (offset * 8) + 10, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_46, tvb, (offset * 8) + 11, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_47, tvb, (offset * 8) + 12, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_48, tvb, (offset * 8) + 13, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_49, tvb, (offset * 8) + 14, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_50, tvb, (offset * 8) + 15, 1, ENC_BIG_ENDIAN);
  return 2;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_11_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_51
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_52, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_53, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_2 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 2, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 2, spare_item_2);
  unsigned int value_expand_var_54 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_54 = value_expand_var_54 & 0b0000111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_54, tvb, offset + 0, 2, value_expand_var_54);
  proto_item *spare_item_16 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 16, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 16, 4, spare_item_16);
  proto_tree_add_bits_item(tree_group_0, expand_var_55, tvb, (offset * 8) + 20, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_56, tvb, (offset * 8) + 21, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_57, tvb, (offset * 8) + 22, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_58, tvb, (offset * 8) + 23, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_59, tvb, (offset * 8) + 24, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_60, tvb, (offset * 8) + 25, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_61, tvb, (offset * 8) + 26, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_62, tvb, (offset * 8) + 27, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_63, tvb, (offset * 8) + 28, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_64, tvb, (offset * 8) + 29, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_65, tvb, (offset * 8) + 30, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_66, tvb, (offset * 8) + 31, 1, ENC_BIG_ENDIAN);
  return 4;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_12_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_67
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_13_rep1(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_69
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_13_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_68
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  while (true) {
    fun_len = dissect_cat_1_ed_major_1_ed_minor_2_datafield_13_rep1(tvb, offset, sub_tree, expand_var_69);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
    if (asterix_extended_end(tvb, offset - 1)) break;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_14_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_70
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_71, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_1 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 1, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 1, 1, spare_item_1);
  proto_tree_add_bits_item(tree_group_0, expand_var_72, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 2, spare_item_3);
  proto_tree_add_bits_item(tree_group_0, expand_var_73, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_6 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 6, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 2, spare_item_6);
  return 1;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_74
{
  unsigned int bytes = asterix_get_unsigned_value(tvb , offset, 1);
  int len = 1 + bytes;
  proto_tree_add_item (tree, expand_var, tvb, offset, len, ENC_NA);
  return len;
}
static int* cat_1_ed_major_1_ed_minor_2_plot_table_expand[] = {
  &expand_var_0, //010
  &expand_var_3, //020
  &expand_var_16, //040
  &expand_var_19, //070
  &expand_var_24, //090
  &expand_var_28, //130
  &expand_var_30, //141
  &expand_var_31, //050
  &expand_var_36, //120
  &expand_var_37, //131
  &expand_var_38, //080
  &expand_var_51, //100
  &expand_var_67, //060
  &expand_var_68, //030
  &expand_var_70, //150
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_74, //SP
  NULL
};
static const ttt cat_1_ed_major_1_ed_minor_2_plot_table[] = {
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot, //010
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_1_plot, //020
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_2_plot, //040
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_3_plot, //070
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_4_plot, //090
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot, //130
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_6_plot, //141
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_7_plot, //050
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_8_plot, //120
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_9_plot, //131
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot, //080
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_11_plot, //100
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_12_plot, //060
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_13_plot, //030
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_14_plot, //150
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot, //SP
  NULL
};
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_75
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_1_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_76
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_1_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_2_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_77
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 2, value_expand_var);
  return 2;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_3_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_78
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_2_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_4_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //042 expand_var_79
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_80 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_80_s = get_signed_int(value_expand_var_80, 16);
  double value_expand_var_80_d = (double)value_expand_var_80_s * 0.015625;
  proto_tree_add_double (tree_group_0, expand_var_80, tvb, offset + 0, 2, value_expand_var_80_d);
  unsigned int value_expand_var_81 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_81_s = get_signed_int(value_expand_var_81, 16);
  double value_expand_var_81_d = (double)value_expand_var_81_s * 0.015625;
  proto_tree_add_double (tree_group_0, expand_var_81, tvb, offset + 2, 2, value_expand_var_81_d);
  return 4;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_82
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_83 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_83_d = (double)value_expand_var_83 * 6.103515625e-05;
  proto_tree_add_double (tree_group_0, expand_var_83, tvb, offset + 0, 2, value_expand_var_83_d);
  unsigned int value_expand_var_84 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_84_d = (double)value_expand_var_84 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_84, tvb, offset + 2, 2, value_expand_var_84_d);
  return 4;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_6_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_85
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_3_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_7_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_86
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_4_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_8_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //141 expand_var_87
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_6_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_9_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_88
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //131 expand_var_89
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_9_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_11_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_90
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_8_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_12_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_91
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_92, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_93, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_94, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_95, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_96, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_0_5 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 5, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 5, 1, spare_item_0_5);
  proto_tree_add_bits_item(datablock_tree, expand_var_97, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_98, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_99, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_1_1 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 1, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 1, 6, spare_item_1_1);
  proto_tree_add_bits_item(datablock_tree, expand_var_100, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_13_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_101
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_14_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_102
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_7_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_15_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_103
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_16_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_104
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_11_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_17_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_105
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_18_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_106
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_13_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_107
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_2_datafield_21_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_108
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_14_plot(tvb, offset, tree, expand_var);
}
static int* cat_1_ed_major_1_ed_minor_2_track_table_expand[] = {
  &expand_var_75, //010
  &expand_var_76, //020
  &expand_var_77, //161
  &expand_var_78, //040
  &expand_var_79, //042
  &expand_var_82, //200
  &expand_var_85, //070
  &expand_var_86, //090
  &expand_var_87, //141
  &expand_var_88, //130
  &expand_var_89, //131
  &expand_var_90, //120
  &expand_var_91, //170
  &expand_var_101, //210
  &expand_var_102, //050
  &expand_var_103, //080
  &expand_var_104, //100
  &expand_var_105, //060
  &expand_var_106, //030
  &expand_var_107, //SP
  NULL,
  &expand_var_108, //15
};
static const ttt cat_1_ed_major_1_ed_minor_2_track_table[] = {
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_track, //010
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_1_track, //020
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_2_track, //161
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_3_track, //040
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_4_track, //042
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_track, //200
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_6_track, //070
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_7_track, //090
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_8_track, //141
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_9_track, //130
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_track, //131
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_11_track, //120
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_12_track, //170
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_13_track, //210
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_14_track, //050
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_15_track, //080
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_16_track, //100
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_17_track, //060
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_18_track, //030
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_track, //SP
  NULL,
  &dissect_cat_1_ed_major_1_ed_minor_2_datafield_21_track, //15
};
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_0_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_109
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_1_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_110
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_1_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_2_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_111
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_2_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_3_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_112
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_3_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_4_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_113
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_4_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_5_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_114
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_6_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //141 expand_var_115
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_6_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_7_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_116
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_7_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_8_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_117
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_8_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_9_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //131 expand_var_118
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_9_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_10_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_119
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_11_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_120
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_11_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_12_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_121
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_13_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_122
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_13_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_14_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_123
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_14_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_19_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_124
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_1_ed_major_1_ed_minor_3_plot_table_expand[] = {
  &expand_var_109, //010
  &expand_var_110, //020
  &expand_var_111, //040
  &expand_var_112, //070
  &expand_var_113, //090
  &expand_var_114, //130
  &expand_var_115, //141
  &expand_var_116, //050
  &expand_var_117, //120
  &expand_var_118, //131
  &expand_var_119, //080
  &expand_var_120, //100
  &expand_var_121, //060
  &expand_var_122, //030
  &expand_var_123, //150
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_124, //SP
  NULL
};
static const ttt cat_1_ed_major_1_ed_minor_3_plot_table[] = {
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_0_plot, //010
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_1_plot, //020
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_2_plot, //040
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_3_plot, //070
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_4_plot, //090
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_5_plot, //130
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_6_plot, //141
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_7_plot, //050
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_8_plot, //120
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_9_plot, //131
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_10_plot, //080
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_11_plot, //100
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_12_plot, //060
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_13_plot, //030
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_14_plot, //150
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_19_plot, //SP
  NULL
};
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_0_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_125
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_1_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_126
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_1_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_2_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_127
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_2_track(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_3_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_128
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_2_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_4_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //042 expand_var_129
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_4_track(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_5_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_130
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_track(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_6_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_131
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_3_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_7_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_132
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_4_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_8_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //141 expand_var_133
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_6_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_9_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_134
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_10_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //131 expand_var_135
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_9_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_11_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_136
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_8_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_12_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_137
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_12_track(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_13_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_138
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_14_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_139
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_7_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_15_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_140
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_16_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_141
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_11_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_17_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_142
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_18_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_143
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_13_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_19_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_144
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_3_datafield_21_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_145
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_14_plot(tvb, offset, tree, expand_var);
}
static int* cat_1_ed_major_1_ed_minor_3_track_table_expand[] = {
  &expand_var_125, //010
  &expand_var_126, //020
  &expand_var_127, //161
  &expand_var_128, //040
  &expand_var_129, //042
  &expand_var_130, //200
  &expand_var_131, //070
  &expand_var_132, //090
  &expand_var_133, //141
  &expand_var_134, //130
  &expand_var_135, //131
  &expand_var_136, //120
  &expand_var_137, //170
  &expand_var_138, //210
  &expand_var_139, //050
  &expand_var_140, //080
  &expand_var_141, //100
  &expand_var_142, //060
  &expand_var_143, //030
  &expand_var_144, //SP
  NULL,
  &expand_var_145, //15
};
static const ttt cat_1_ed_major_1_ed_minor_3_track_table[] = {
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_0_track, //010
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_1_track, //020
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_2_track, //161
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_3_track, //040
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_4_track, //042
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_5_track, //200
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_6_track, //070
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_7_track, //090
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_8_track, //141
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_9_track, //130
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_10_track, //131
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_11_track, //120
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_12_track, //170
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_13_track, //210
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_14_track, //050
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_15_track, //080
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_16_track, //100
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_17_track, //060
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_18_track, //030
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_19_track, //SP
  NULL,
  &dissect_cat_1_ed_major_1_ed_minor_3_datafield_21_track, //15
};
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_0_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_146
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_1_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_147
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_1_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_2_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_148
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_2_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_3_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_149
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_3_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_4_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_150
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_4_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_5_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_151
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_6_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //141 expand_var_152
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_6_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_7_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_153
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_7_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_8_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_154
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_8_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_9_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //131 expand_var_155
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_9_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_10_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_156
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_11_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_157
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_11_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_12_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_158
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_13_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_159
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_13_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_14_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_160
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_14_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_19_plot(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_161
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_1_ed_major_1_ed_minor_4_plot_table_expand[] = {
  &expand_var_146, //010
  &expand_var_147, //020
  &expand_var_148, //040
  &expand_var_149, //070
  &expand_var_150, //090
  &expand_var_151, //130
  &expand_var_152, //141
  &expand_var_153, //050
  &expand_var_154, //120
  &expand_var_155, //131
  &expand_var_156, //080
  &expand_var_157, //100
  &expand_var_158, //060
  &expand_var_159, //030
  &expand_var_160, //150
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_161, //SP
  NULL
};
static const ttt cat_1_ed_major_1_ed_minor_4_plot_table[] = {
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_0_plot, //010
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_1_plot, //020
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_2_plot, //040
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_3_plot, //070
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_4_plot, //090
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_5_plot, //130
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_6_plot, //141
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_7_plot, //050
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_8_plot, //120
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_9_plot, //131
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_10_plot, //080
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_11_plot, //100
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_12_plot, //060
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_13_plot, //030
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_14_plot, //150
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_19_plot, //SP
  NULL
};
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_0_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_162
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_1_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_163
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_1_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_2_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_164
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_2_track(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_3_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_165
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_2_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_4_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //042 expand_var_166
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_4_track(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_5_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_167
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_track(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_6_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_168
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_3_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_7_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_169
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_4_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_8_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //141 expand_var_170
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_6_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_9_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_171
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_10_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //131 expand_var_172
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_9_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_11_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_173
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_8_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_12_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_174
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_12_track(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_13_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_175
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_14_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_176
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_7_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_15_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_177
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_16_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_178
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_11_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_17_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_179
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_18_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_180
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_13_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_19_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_181
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_1_ed_major_1_ed_minor_4_datafield_21_track(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_182
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_14_plot(tvb, offset, tree, expand_var);
}
static int* cat_1_ed_major_1_ed_minor_4_track_table_expand[] = {
  &expand_var_162, //010
  &expand_var_163, //020
  &expand_var_164, //161
  &expand_var_165, //040
  &expand_var_166, //042
  &expand_var_167, //200
  &expand_var_168, //070
  &expand_var_169, //090
  &expand_var_170, //141
  &expand_var_171, //130
  &expand_var_172, //131
  &expand_var_173, //120
  &expand_var_174, //170
  &expand_var_175, //210
  &expand_var_176, //050
  &expand_var_177, //080
  &expand_var_178, //100
  &expand_var_179, //060
  &expand_var_180, //030
  &expand_var_181, //SP
  NULL,
  &expand_var_182, //15
};
static const ttt cat_1_ed_major_1_ed_minor_4_track_table[] = {
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_0_track, //010
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_1_track, //020
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_2_track, //161
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_3_track, //040
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_4_track, //042
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_5_track, //200
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_6_track, //070
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_7_track, //090
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_8_track, //141
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_9_track, //130
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_10_track, //131
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_11_track, //120
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_12_track, //170
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_13_track, //210
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_14_track, //050
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_15_track, //080
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_16_track, //100
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_17_track, //060
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_18_track, //030
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_19_track, //SP
  NULL,
  &dissect_cat_1_ed_major_1_ed_minor_4_datafield_21_track, //15
};
static int dissect_cat_2_ed_major_1_ed_minor_0_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_183
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_0_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_184
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_2_ed_major_1_ed_minor_0_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_185
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_d = (double)value_expand_var * 1.40625;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_186
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  double value_expand_var_d = (double)value_expand_var * 0.0078125;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 3, value_expand_var_d);
  return 3;
}
static int dissect_cat_2_ed_major_1_ed_minor_0_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //041 expand_var_187
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.0078125;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_2_ed_major_1_ed_minor_0_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_188
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_0_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_189
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_0_datafield_7_rep2(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_191
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_192, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_193, tvb, (offset * 8) + 1, 5, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_194 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_194 = value_expand_var_194 & 0b0000001111111111;
  proto_tree_add_uint (tree_group_0, expand_var_194, tvb, offset + 0, 2, value_expand_var_194);
  return 2;
}
static int dissect_cat_2_ed_major_1_ed_minor_0_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_190
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_2_ed_major_1_ed_minor_0_datafield_7_rep2(tvb, offset, sub_tree, expand_var_191);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_2_ed_major_1_ed_minor_0_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_195
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_196 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_196_d = (double)value_expand_var_196 * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_196, tvb, offset + 0, 2, value_expand_var_196_d);
  unsigned int value_expand_var_197 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_197_d = (double)value_expand_var_197 * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_197, tvb, offset + 2, 2, value_expand_var_197_d);
  unsigned int value_expand_var_198 = asterix_get_unsigned_value (tvb, offset + 4, 2);
  double value_expand_var_198_d = (double)value_expand_var_198 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_198, tvb, offset + 4, 2, value_expand_var_198_d);
  unsigned int value_expand_var_199 = asterix_get_unsigned_value (tvb, offset + 6, 2);
  double value_expand_var_199_d = (double)value_expand_var_199 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_199, tvb, offset + 6, 2, value_expand_var_199_d);
  return 8;
}
static int dissect_cat_2_ed_major_1_ed_minor_0_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_200
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_201 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_201_s = get_signed_int(value_expand_var_201, 8);
  double value_expand_var_201_d = (double)value_expand_var_201_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_201, tvb, offset + 0, 1, value_expand_var_201_d);
  unsigned int value_expand_var_202 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  int value_expand_var_202_s = get_signed_int(value_expand_var_202, 8);
  double value_expand_var_202_d = (double)value_expand_var_202_s * 0.02197265625;
  proto_tree_add_double (tree_group_0, expand_var_202, tvb, offset + 1, 1, value_expand_var_202_d);
  return 2;
}
static int dissect_cat_2_ed_major_1_ed_minor_0_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_203
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_0_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_204
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_2_ed_major_1_ed_minor_0_uap_table_expand[] = {
  &expand_var_183, //010
  &expand_var_184, //000
  &expand_var_185, //020
  &expand_var_186, //030
  &expand_var_187, //041
  &expand_var_188, //050
  &expand_var_189, //060
  &expand_var_190, //070
  &expand_var_195, //100
  &expand_var_200, //090
  &expand_var_203, //080
  NULL,
  &expand_var_204, //SP
  NULL
};
static const ttt cat_2_ed_major_1_ed_minor_0_uap_table[] = {
  &dissect_cat_2_ed_major_1_ed_minor_0_datafield_0_uap, //010
  &dissect_cat_2_ed_major_1_ed_minor_0_datafield_1_uap, //000
  &dissect_cat_2_ed_major_1_ed_minor_0_datafield_2_uap, //020
  &dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap, //030
  &dissect_cat_2_ed_major_1_ed_minor_0_datafield_4_uap, //041
  &dissect_cat_2_ed_major_1_ed_minor_0_datafield_5_uap, //050
  &dissect_cat_2_ed_major_1_ed_minor_0_datafield_6_uap, //060
  &dissect_cat_2_ed_major_1_ed_minor_0_datafield_7_uap, //070
  &dissect_cat_2_ed_major_1_ed_minor_0_datafield_8_uap, //100
  &dissect_cat_2_ed_major_1_ed_minor_0_datafield_9_uap, //090
  &dissect_cat_2_ed_major_1_ed_minor_0_datafield_10_uap, //080
  NULL,
  &dissect_cat_2_ed_major_1_ed_minor_0_datafield_12_uap, //SP
  NULL
};
static int dissect_cat_2_ed_major_1_ed_minor_1_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_205
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_1_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_206
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_1_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_207
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_1_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_208
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_1_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //041 expand_var_209
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_1_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_210
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_1_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_211
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_1_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_212
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_1_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_213
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_1_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_214
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_1_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_215
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_1_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_216
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_2_ed_major_1_ed_minor_1_uap_table_expand[] = {
  &expand_var_205, //010
  &expand_var_206, //000
  &expand_var_207, //020
  &expand_var_208, //030
  &expand_var_209, //041
  &expand_var_210, //050
  &expand_var_211, //060
  &expand_var_212, //070
  &expand_var_213, //100
  &expand_var_214, //090
  &expand_var_215, //080
  NULL,
  &expand_var_216, //SP
  NULL
};
static const ttt cat_2_ed_major_1_ed_minor_1_uap_table[] = {
  &dissect_cat_2_ed_major_1_ed_minor_1_datafield_0_uap, //010
  &dissect_cat_2_ed_major_1_ed_minor_1_datafield_1_uap, //000
  &dissect_cat_2_ed_major_1_ed_minor_1_datafield_2_uap, //020
  &dissect_cat_2_ed_major_1_ed_minor_1_datafield_3_uap, //030
  &dissect_cat_2_ed_major_1_ed_minor_1_datafield_4_uap, //041
  &dissect_cat_2_ed_major_1_ed_minor_1_datafield_5_uap, //050
  &dissect_cat_2_ed_major_1_ed_minor_1_datafield_6_uap, //060
  &dissect_cat_2_ed_major_1_ed_minor_1_datafield_7_uap, //070
  &dissect_cat_2_ed_major_1_ed_minor_1_datafield_8_uap, //100
  &dissect_cat_2_ed_major_1_ed_minor_1_datafield_9_uap, //090
  &dissect_cat_2_ed_major_1_ed_minor_1_datafield_10_uap, //080
  NULL,
  &dissect_cat_2_ed_major_1_ed_minor_1_datafield_12_uap, //SP
  NULL
};
static int dissect_cat_2_ed_major_1_ed_minor_2_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_217
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_2_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_218
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_2_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_219
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_2_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_220
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_2_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //041 expand_var_221
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_2_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_222
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_2_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_223
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_2_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_224
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_2_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_225
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_2_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_226
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_2_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_227
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_2_ed_major_1_ed_minor_2_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_228
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_2_ed_major_1_ed_minor_2_uap_table_expand[] = {
  &expand_var_217, //010
  &expand_var_218, //000
  &expand_var_219, //020
  &expand_var_220, //030
  &expand_var_221, //041
  &expand_var_222, //050
  &expand_var_223, //060
  &expand_var_224, //070
  &expand_var_225, //100
  &expand_var_226, //090
  &expand_var_227, //080
  NULL,
  &expand_var_228, //SP
  NULL
};
static const ttt cat_2_ed_major_1_ed_minor_2_uap_table[] = {
  &dissect_cat_2_ed_major_1_ed_minor_2_datafield_0_uap, //010
  &dissect_cat_2_ed_major_1_ed_minor_2_datafield_1_uap, //000
  &dissect_cat_2_ed_major_1_ed_minor_2_datafield_2_uap, //020
  &dissect_cat_2_ed_major_1_ed_minor_2_datafield_3_uap, //030
  &dissect_cat_2_ed_major_1_ed_minor_2_datafield_4_uap, //041
  &dissect_cat_2_ed_major_1_ed_minor_2_datafield_5_uap, //050
  &dissect_cat_2_ed_major_1_ed_minor_2_datafield_6_uap, //060
  &dissect_cat_2_ed_major_1_ed_minor_2_datafield_7_uap, //070
  &dissect_cat_2_ed_major_1_ed_minor_2_datafield_8_uap, //100
  &dissect_cat_2_ed_major_1_ed_minor_2_datafield_9_uap, //090
  &dissect_cat_2_ed_major_1_ed_minor_2_datafield_10_uap, //080
  NULL,
  &dissect_cat_2_ed_major_1_ed_minor_2_datafield_12_uap, //SP
  NULL
};
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_229
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_230
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_2_rep3(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_232
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_231
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_2_rep3(tvb, offset, sub_tree, expand_var_232);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_233
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_234
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 2, value_expand_var);
  return 2;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //045 expand_var_235
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  unsigned int value_expand_var_236 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_236 = value_expand_var_236 >> 1;
  value_expand_var_236 = value_expand_var_236 & 0b0000111;
  proto_tree_add_uint (tree_group_0, expand_var_236, tvb, offset + 0, 1, value_expand_var_236);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  return 1;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_237
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_238, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_239, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_240, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_241, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_242, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_243, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_244, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_245, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_246, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_247, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_248, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_249, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_250, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_251, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_252, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_253, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_254, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_255, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_256, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_257, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_258, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_259, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_260, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_261, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_262, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_263, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_264, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_265, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_266, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_267, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_268, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_269, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_270, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_271, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_272, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_273, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_274, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_275, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_276, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_277, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_278, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_279, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_280, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_281, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_282, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_283, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_284, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_285, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_286, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_287, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_288, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_289, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_290, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_291, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_292, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_293, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_294
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_296
{
  proto_tree_add_item(tree, expand_var, tvb, offset + 0, 7, ENC_ASCII | ENC_NA);
  return 7;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_208_compound_208(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_297
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_298);
  return 2;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_212_compound_212(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_299
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 10, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_300 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  int value_expand_var_300_s = get_signed_int(value_expand_var_300, 32);
  double value_expand_var_300_d = (double)value_expand_var_300_s * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_300, tvb, offset + 0, 4, value_expand_var_300_d);
  unsigned int value_expand_var_301 = asterix_get_unsigned_value (tvb, offset + 4, 4);
  int value_expand_var_301_s = get_signed_int(value_expand_var_301, 32);
  double value_expand_var_301_d = (double)value_expand_var_301_s * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_301, tvb, offset + 4, 4, value_expand_var_301_d);
  unsigned int value_expand_var_302 = asterix_get_unsigned_value (tvb, offset + 8, 2);
  int value_expand_var_302_s = get_signed_int(value_expand_var_302, 16);
  double value_expand_var_302_d = (double)value_expand_var_302_s * 25.0;
  proto_tree_add_double (tree_group_0, expand_var_302, tvb, offset + 8, 2, value_expand_var_302_d);
  return 10;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_216_compound_216(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_303
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_304 = asterix_get_unsigned_value (tvb, offset + 0, 3);
  int value_expand_var_304_s = get_signed_int(value_expand_var_304, 24);
  double value_expand_var_304_d = (double)value_expand_var_304_s * 0.5;
  proto_tree_add_double (tree_group_0, expand_var_304, tvb, offset + 0, 3, value_expand_var_304_d);
  unsigned int value_expand_var_305 = asterix_get_unsigned_value (tvb, offset + 3, 3);
  int value_expand_var_305_s = get_signed_int(value_expand_var_305, 24);
  double value_expand_var_305_d = (double)value_expand_var_305_s * 0.5;
  proto_tree_add_double (tree_group_0, expand_var_305, tvb, offset + 3, 3, value_expand_var_305_d);
  unsigned int value_expand_var_306 = asterix_get_unsigned_value (tvb, offset + 6, 2);
  int value_expand_var_306_s = get_signed_int(value_expand_var_306, 16);
  double value_expand_var_306_d = (double)value_expand_var_306_s * 25.0;
  proto_tree_add_double (tree_group_0, expand_var_306, tvb, offset + 6, 2, value_expand_var_306_d);
  return 8;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_217_compound_217(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_307
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_218_compound_218(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_308
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.5;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_226_compound_226(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_309
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_310, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_311, tvb, (offset * 8) + 2, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_312, tvb, (offset * 8) + 4, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_313, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_314, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_315, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_316, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_317, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_1_4 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 4, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 3, spare_item_1_4);
  proto_tree_add_bits_item(datablock_tree, expand_var_318, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_227_compound_227(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_319
{
  print_icao_string (tvb, offset + 0, 0, 48, 6, tree, expand_var);
  return 6;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_229_compound_229(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_320
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 5, spare_item_0);
  unsigned int value_expand_var_321 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  value_expand_var_321 = value_expand_var_321 & 0b00000111111111111111111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_321, tvb, offset + 0, 4, value_expand_var_321);
  return 4;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_230_compound_230(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_322
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_295
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 10, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, asterix_packet_tree, expand_var_296);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_208_compound_208(tvb, offset, asterix_packet_tree, expand_var_297);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_212_compound_212(tvb, offset, asterix_packet_tree, expand_var_299);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_216_compound_216(tvb, offset, asterix_packet_tree, expand_var_303);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_217_compound_217(tvb, offset, asterix_packet_tree, expand_var_307);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_218_compound_218(tvb, offset, asterix_packet_tree, expand_var_308);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_226_compound_226(tvb, offset, asterix_packet_tree, expand_var_309);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_227_compound_227(tvb, offset, asterix_packet_tree, expand_var_319);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_229_compound_229(tvb, offset, asterix_packet_tree, expand_var_320);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_230_compound_230(tvb, offset, asterix_packet_tree, expand_var_322);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_198_compound_198(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_324
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_325, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_326, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_327, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_328, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_329, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_330, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_331, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_332, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_333, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_334, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_335, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_336, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_337, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_338, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_339, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_340, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_341, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_342, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_343, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_344, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_345, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_346, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_2_6 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 6, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 1, spare_item_2_6);
  proto_tree_add_bits_item(datablock_tree, expand_var_347, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_202_compound_202(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_348
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_349 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_349 = value_expand_var_349 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_349, tvb, offset + 0, 1, value_expand_var_349);
  unsigned int value_expand_var_350 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_350 = value_expand_var_350 >> 1;
  value_expand_var_350 = value_expand_var_350 & 0b0000111;
  proto_tree_add_uint (tree_group_0, expand_var_350, tvb, offset + 0, 1, value_expand_var_350);
  proto_tree_add_bits_item(tree_group_0, expand_var_351, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_203_compound_203(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_352
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_d = (double)value_expand_var * 0.5;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_353
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  double value_expand_var_d = (double)value_expand_var * 0.0078125;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 3, value_expand_var_d);
  return 3;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_323
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 4, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_198_compound_198(tvb, offset, asterix_packet_tree, expand_var_324);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_202_compound_202(tvb, offset, asterix_packet_tree, expand_var_348);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_203_compound_203(tvb, offset, asterix_packet_tree, expand_var_352);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, asterix_packet_tree, expand_var_353);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_158_compound_158(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_355
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_159_compound_159(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_356
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_160_compound_160(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_357
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  double value_expand_var_d = (double)value_expand_var * 0.5;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 3, value_expand_var_d);
  return 3;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_161_compound_161(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_358
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_218_compound_218(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_162_compound_162(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_359
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 25.0;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_163_compound_163(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_360
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_162_compound_162(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_354
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 6, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_158_compound_158(tvb, offset, asterix_packet_tree, expand_var_355);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_159_compound_159(tvb, offset, asterix_packet_tree, expand_var_356);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_160_compound_160(tvb, offset, asterix_packet_tree, expand_var_357);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_161_compound_161(tvb, offset, asterix_packet_tree, expand_var_358);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_162_compound_162(tvb, offset, asterix_packet_tree, expand_var_359);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_163_compound_163(tvb, offset, asterix_packet_tree, expand_var_360);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //076 expand_var_361
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 25.0;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //074 expand_var_362
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 32.0;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //075 expand_var_363
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  int value_expand_var_s = get_signed_int(value_expand_var, 24);
  double value_expand_var_d = (double)value_expand_var_s * 0.5;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 3, value_expand_var_d);
  return 3;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_168_compound_168(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_365
{
  print_icao_string (tvb, offset + 0, 0, 48, 6, tree, expand_var);
  return 6;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_169_compound_169(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_366
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_170_compound_170(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_367
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_171_compound_171(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_368
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_172_compound_172(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_369
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_173_compound_173(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_370
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_364
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 6, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_168_compound_168(tvb, offset, asterix_packet_tree, expand_var_365);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_169_compound_169(tvb, offset, asterix_packet_tree, expand_var_366);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_170_compound_170(tvb, offset, asterix_packet_tree, expand_var_367);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_171_compound_171(tvb, offset, asterix_packet_tree, expand_var_368);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_172_compound_172(tvb, offset, asterix_packet_tree, expand_var_369);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_173_compound_173(tvb, offset, asterix_packet_tree, expand_var_370);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //035 expand_var_371
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_232_compound_232(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //171 expand_var_373
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_234_compound_234(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //171 expand_var_374
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_375);
  return 2;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_235_compound_235(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //171 expand_var_376
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_212_compound_212(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_236_compound_236(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //171 expand_var_377
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_216_compound_216(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_237_compound_237(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //171 expand_var_378
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_238_compound_238(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //171 expand_var_379
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_218_compound_218(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_239_compound_239(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //171 expand_var_380
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_226_compound_226(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_240_compound_240(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //171 expand_var_381
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_227_compound_227(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_241_compound_241(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //171 expand_var_382
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_229_compound_229(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_242_compound_242(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //171 expand_var_383
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_230_compound_230(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //171 expand_var_372
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 10, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_232_compound_232(tvb, offset, asterix_packet_tree, expand_var_373);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_234_compound_234(tvb, offset, asterix_packet_tree, expand_var_374);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_235_compound_235(tvb, offset, asterix_packet_tree, expand_var_376);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_236_compound_236(tvb, offset, asterix_packet_tree, expand_var_377);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_237_compound_237(tvb, offset, asterix_packet_tree, expand_var_378);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_238_compound_238(tvb, offset, asterix_packet_tree, expand_var_379);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_239_compound_239(tvb, offset, asterix_packet_tree, expand_var_380);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_240_compound_240(tvb, offset, asterix_packet_tree, expand_var_381);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_241_compound_241(tvb, offset, asterix_packet_tree, expand_var_382);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_242_compound_242(tvb, offset, asterix_packet_tree, expand_var_383);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_17_rep4(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_385
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_386 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree_group_0, expand_var_386, tvb, offset + 0, 1, value_expand_var_386);
  unsigned int value_expand_var_387 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_387, tvb, offset + 1, 1, value_expand_var_387);
  return 2;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_384
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_4_ed_major_1_ed_minor_12_datafield_17_rep4(tvb, offset, sub_tree, expand_var_385);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_4_ed_major_1_ed_minor_12_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_389
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_4_ed_major_1_ed_minor_12_uap_table_expand[] = {
  &expand_var_229, //010
  &expand_var_230, //000
  &expand_var_231, //015
  &expand_var_233, //020
  &expand_var_234, //040
  &expand_var_235, //045
  &expand_var_237, //060
  &expand_var_294, //030
  &expand_var_295, //170
  &expand_var_323, //120
  &expand_var_354, //070
  &expand_var_361, //076
  &expand_var_362, //074
  &expand_var_363, //075
  &expand_var_364, //100
  &expand_var_371, //035
  &expand_var_372, //171
  &expand_var_384, //110
  NULL,
  &expand_var_388, //RE
  &expand_var_389, //S
};
static const ttt cat_4_ed_major_1_ed_minor_12_uap_table[] = {
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_0_uap, //010
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_1_uap, //000
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_2_uap, //015
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_3_uap, //020
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap, //040
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_5_uap, //045
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_6_uap, //060
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_7_uap, //030
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_uap, //170
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_uap, //120
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_uap, //070
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_11_uap, //076
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_12_uap, //074
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_13_uap, //075
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_uap, //100
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_15_uap, //035
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_uap, //171
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_17_uap, //110
  NULL,
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_19_uap, //RE
  &dissect_cat_4_ed_major_1_ed_minor_12_datafield_20_uap, //S
};
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_390
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_391
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_392
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_393
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_394
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //045 expand_var_395
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *tree_group_0_group_item_1 = proto_tree_add_item (tree_group_0, expand_var_396, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0_group_1 = proto_item_add_subtree (tree_group_0_group_item_1, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0_group_1, expand_var_397, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0_group_1, expand_var_398, tvb, (offset * 8) + 1, 3, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_399 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_399 = value_expand_var_399 >> 1;
  value_expand_var_399 = value_expand_var_399 & 0b0000111;
  proto_tree_add_uint (tree_group_0, expand_var_399, tvb, offset + 0, 1, value_expand_var_399);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  return 1;
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_400
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_401, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_402, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_403, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_404, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_405, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_406, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_407, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_408, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_409, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_410, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_411, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_412, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_413, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_414, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_415, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_416, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_417, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_418, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_419, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_420, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_421, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_422, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_423, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_424, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_425, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_426, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_427, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_428, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_429, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_430, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_431, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_432, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_433, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_434, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_435, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_436, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_437, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_438, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_439, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_440, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_441, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_442, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_443, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_444, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_445, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_446, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_447, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_448, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_449, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_450, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_451, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_452, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_453, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_454, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_455, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_456, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_457, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_7_1 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 1, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 1, 6, spare_item_7_1);
  proto_tree_add_bits_item(datablock_tree, expand_var_458, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_459
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_460
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_461
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_462
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //076 expand_var_463
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //074 expand_var_464
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //075 expand_var_465
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_466
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //035 expand_var_467
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //171 expand_var_468
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_16_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_469
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_4_ed_major_1_ed_minor_13_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_471
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_4_ed_major_1_ed_minor_13_uap_table_expand[] = {
  &expand_var_390, //010
  &expand_var_391, //000
  &expand_var_392, //015
  &expand_var_393, //020
  &expand_var_394, //040
  &expand_var_395, //045
  &expand_var_400, //060
  &expand_var_459, //030
  &expand_var_460, //170
  &expand_var_461, //120
  &expand_var_462, //070
  &expand_var_463, //076
  &expand_var_464, //074
  &expand_var_465, //075
  &expand_var_466, //100
  &expand_var_467, //035
  &expand_var_468, //171
  &expand_var_469, //110
  NULL,
  &expand_var_470, //RE
  &expand_var_471, //S
};
static const ttt cat_4_ed_major_1_ed_minor_13_uap_table[] = {
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_0_uap, //010
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_1_uap, //000
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_2_uap, //015
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_3_uap, //020
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_4_uap, //040
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_5_uap, //045
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_6_uap, //060
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_7_uap, //030
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_8_uap, //170
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_9_uap, //120
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_10_uap, //070
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_11_uap, //076
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_12_uap, //074
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_13_uap, //075
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_14_uap, //100
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_15_uap, //035
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_16_uap, //171
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_17_uap, //110
  NULL,
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_19_uap, //RE
  &dissect_cat_4_ed_major_1_ed_minor_13_datafield_20_uap, //S
};
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_472
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_473
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_474
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_475, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_476 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_476 = value_expand_var_476 >> 4;
  value_expand_var_476 = value_expand_var_476 & 0b0111;
  proto_tree_add_uint (datablock_tree, expand_var_476, tvb, offset + 0, 1, value_expand_var_476);
  proto_tree_add_bits_item(datablock_tree, expand_var_477, tvb, (offset * 8) + 4, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_478, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_item *spare_item_1_0 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 0, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 5, spare_item_1_0);
  proto_tree_add_bits_item(datablock_tree, expand_var_479, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_480, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_481, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_3_rep5(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //036 expand_var_483
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  int value_expand_var_484 = asterix_get_signed_value (tvb, offset + 0, 1);
  proto_tree_add_int (tree_group_0, expand_var_484, tvb, offset + 0, 1, value_expand_var_484);
  int value_expand_var_485 = asterix_get_signed_value (tvb, offset + 1, 1);
  proto_tree_add_int (tree_group_0, expand_var_485, tvb, offset + 1, 1, value_expand_var_485);
  unsigned int value_expand_var_486 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  proto_tree_add_uint (tree_group_0, expand_var_486, tvb, offset + 2, 1, value_expand_var_486);
  return 3;
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //036 expand_var_482
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_8_ed_major_1_ed_minor_2_datafield_3_rep5(tvb, offset, sub_tree, expand_var_483);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_4_rep6(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //034 expand_var_488
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_489 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree_group_0, expand_var_489, tvb, offset + 0, 1, value_expand_var_489);
  unsigned int value_expand_var_490 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_490, tvb, offset + 1, 1, value_expand_var_490);
  unsigned int value_expand_var_491 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_491_d = (double)value_expand_var_491 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_491, tvb, offset + 2, 2, value_expand_var_491_d);
  return 4;
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //034 expand_var_487
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_8_ed_major_1_ed_minor_2_datafield_4_rep6(tvb, offset, sub_tree, expand_var_488);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_492
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_493, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_494 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_494 = value_expand_var_494 >> 4;
  value_expand_var_494 = value_expand_var_494 & 0b0111;
  proto_tree_add_uint (tree_group_0, expand_var_494, tvb, offset + 0, 1, value_expand_var_494);
  proto_item *spare_item_4 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 4, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 2, spare_item_4);
  proto_tree_add_bits_item(tree_group_0, expand_var_495, tvb, (offset * 8) + 6, 2, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_496 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_496, tvb, offset + 1, 1, value_expand_var_496);
  return 2;
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_6_rep7(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_498
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  int value_expand_var_499 = asterix_get_signed_value (tvb, offset + 0, 1);
  proto_tree_add_int (tree_group_0, expand_var_499, tvb, offset + 0, 1, value_expand_var_499);
  int value_expand_var_500 = asterix_get_signed_value (tvb, offset + 1, 1);
  proto_tree_add_int (tree_group_0, expand_var_500, tvb, offset + 1, 1, value_expand_var_500);
  return 2;
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_497
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_8_ed_major_1_ed_minor_2_datafield_6_rep7(tvb, offset, sub_tree, expand_var_498);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_501
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_502
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  int value_expand_var_503 = asterix_get_signed_value (tvb, offset + 0, 1);
  value_expand_var_503 = value_expand_var_503 >> 3;
  proto_tree_add_int (datablock_tree, expand_var_503, tvb, offset + 0, 1, value_expand_var_503);
  unsigned int value_expand_var_504 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_504 = value_expand_var_504 & 0b00000111;
  proto_tree_add_uint (datablock_tree, expand_var_504, tvb, offset + 0, 1, value_expand_var_504);
  unsigned int value_expand_var_505 = asterix_get_unsigned_value (tvb, offset + 1, 2);
  value_expand_var_505 = value_expand_var_505 >> 1;
  proto_tree_add_uint (datablock_tree, expand_var_505, tvb, offset + 1, 2, value_expand_var_505);
  proto_tree_add_bits_item(datablock_tree, expand_var_506, tvb, (offset * 8) + 23, 1, ENC_BIG_ENDIAN);
  offset+=3;
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_507
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_508
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 2, value_expand_var);
  return 2;
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_11_rep8(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //038 expand_var_510
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  int value_expand_var_511 = asterix_get_signed_value (tvb, offset + 0, 1);
  proto_tree_add_int (tree_group_0, expand_var_511, tvb, offset + 0, 1, value_expand_var_511);
  int value_expand_var_512 = asterix_get_signed_value (tvb, offset + 1, 1);
  proto_tree_add_int (tree_group_0, expand_var_512, tvb, offset + 1, 1, value_expand_var_512);
  int value_expand_var_513 = asterix_get_signed_value (tvb, offset + 2, 1);
  proto_tree_add_int (tree_group_0, expand_var_513, tvb, offset + 2, 1, value_expand_var_513);
  int value_expand_var_514 = asterix_get_signed_value (tvb, offset + 3, 1);
  proto_tree_add_int (tree_group_0, expand_var_514, tvb, offset + 3, 1, value_expand_var_514);
  return 4;
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //038 expand_var_509
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_8_ed_major_1_ed_minor_2_datafield_11_rep8(tvb, offset, sub_tree, expand_var_510);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_8_ed_major_1_ed_minor_2_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_515
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_8_ed_major_1_ed_minor_2_uap_table_expand[] = {
  &expand_var_472, //010
  &expand_var_473, //000
  &expand_var_474, //020
  &expand_var_482, //036
  &expand_var_487, //034
  &expand_var_492, //040
  &expand_var_497, //050
  &expand_var_501, //090
  &expand_var_502, //100
  &expand_var_507, //110
  &expand_var_508, //120
  &expand_var_509, //038
  &expand_var_515, //SP
  NULL
};
static const ttt cat_8_ed_major_1_ed_minor_2_uap_table[] = {
  &dissect_cat_8_ed_major_1_ed_minor_2_datafield_0_uap, //010
  &dissect_cat_8_ed_major_1_ed_minor_2_datafield_1_uap, //000
  &dissect_cat_8_ed_major_1_ed_minor_2_datafield_2_uap, //020
  &dissect_cat_8_ed_major_1_ed_minor_2_datafield_3_uap, //036
  &dissect_cat_8_ed_major_1_ed_minor_2_datafield_4_uap, //034
  &dissect_cat_8_ed_major_1_ed_minor_2_datafield_5_uap, //040
  &dissect_cat_8_ed_major_1_ed_minor_2_datafield_6_uap, //050
  &dissect_cat_8_ed_major_1_ed_minor_2_datafield_7_uap, //090
  &dissect_cat_8_ed_major_1_ed_minor_2_datafield_8_uap, //100
  &dissect_cat_8_ed_major_1_ed_minor_2_datafield_9_uap, //110
  &dissect_cat_8_ed_major_1_ed_minor_2_datafield_10_uap, //120
  &dissect_cat_8_ed_major_1_ed_minor_2_datafield_11_uap, //038
  &dissect_cat_8_ed_major_1_ed_minor_2_datafield_12_uap, //SP
  NULL
};
static int dissect_cat_8_ed_major_1_ed_minor_3_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_516
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_8_ed_major_1_ed_minor_3_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_517
{
  return dissect_cat_8_ed_major_1_ed_minor_2_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_8_ed_major_1_ed_minor_3_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_518
{
  return dissect_cat_8_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_8_ed_major_1_ed_minor_3_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //036 expand_var_519
{
  return dissect_cat_8_ed_major_1_ed_minor_2_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_8_ed_major_1_ed_minor_3_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //034 expand_var_520
{
  return dissect_cat_8_ed_major_1_ed_minor_2_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_8_ed_major_1_ed_minor_3_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_521
{
  return dissect_cat_8_ed_major_1_ed_minor_2_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_8_ed_major_1_ed_minor_3_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_522
{
  return dissect_cat_8_ed_major_1_ed_minor_2_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_8_ed_major_1_ed_minor_3_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_523
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_8_ed_major_1_ed_minor_3_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_524
{
  return dissect_cat_8_ed_major_1_ed_minor_2_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_8_ed_major_1_ed_minor_3_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_525
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_8_ed_major_1_ed_minor_3_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_526
{
  return dissect_cat_8_ed_major_1_ed_minor_2_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_8_ed_major_1_ed_minor_3_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //038 expand_var_527
{
  return dissect_cat_8_ed_major_1_ed_minor_2_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_8_ed_major_1_ed_minor_3_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_528
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_8_ed_major_1_ed_minor_3_uap_table_expand[] = {
  &expand_var_516, //010
  &expand_var_517, //000
  &expand_var_518, //020
  &expand_var_519, //036
  &expand_var_520, //034
  &expand_var_521, //040
  &expand_var_522, //050
  &expand_var_523, //090
  &expand_var_524, //100
  &expand_var_525, //110
  &expand_var_526, //120
  &expand_var_527, //038
  &expand_var_528, //SP
  NULL
};
static const ttt cat_8_ed_major_1_ed_minor_3_uap_table[] = {
  &dissect_cat_8_ed_major_1_ed_minor_3_datafield_0_uap, //010
  &dissect_cat_8_ed_major_1_ed_minor_3_datafield_1_uap, //000
  &dissect_cat_8_ed_major_1_ed_minor_3_datafield_2_uap, //020
  &dissect_cat_8_ed_major_1_ed_minor_3_datafield_3_uap, //036
  &dissect_cat_8_ed_major_1_ed_minor_3_datafield_4_uap, //034
  &dissect_cat_8_ed_major_1_ed_minor_3_datafield_5_uap, //040
  &dissect_cat_8_ed_major_1_ed_minor_3_datafield_6_uap, //050
  &dissect_cat_8_ed_major_1_ed_minor_3_datafield_7_uap, //090
  &dissect_cat_8_ed_major_1_ed_minor_3_datafield_8_uap, //100
  &dissect_cat_8_ed_major_1_ed_minor_3_datafield_9_uap, //110
  &dissect_cat_8_ed_major_1_ed_minor_3_datafield_10_uap, //120
  &dissect_cat_8_ed_major_1_ed_minor_3_datafield_11_uap, //038
  &dissect_cat_8_ed_major_1_ed_minor_3_datafield_12_uap, //SP
  NULL
};
static int dissect_cat_9_ed_major_2_ed_minor_1_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_529
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_9_ed_major_2_ed_minor_1_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_530
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_9_ed_major_2_ed_minor_1_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_531
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_532, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_533 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_533 = value_expand_var_533 >> 4;
  value_expand_var_533 = value_expand_var_533 & 0b0111;
  proto_tree_add_uint (datablock_tree, expand_var_533, tvb, offset + 0, 1, value_expand_var_533);
  proto_tree_add_bits_item(datablock_tree, expand_var_534, tvb, (offset * 8) + 4, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_535, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_9_ed_major_2_ed_minor_1_datafield_3_rep9(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_537
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  int value_expand_var_538 = asterix_get_signed_value (tvb, offset + 0, 2);
  proto_tree_add_int (tree_group_0, expand_var_538, tvb, offset + 0, 2, value_expand_var_538);
  int value_expand_var_539 = asterix_get_signed_value (tvb, offset + 2, 2);
  proto_tree_add_int (tree_group_0, expand_var_539, tvb, offset + 2, 2, value_expand_var_539);
  unsigned int value_expand_var_540 = asterix_get_unsigned_value (tvb, offset + 4, 2);
  proto_tree_add_uint (tree_group_0, expand_var_540, tvb, offset + 4, 2, value_expand_var_540);
  return 6;
}
static int dissect_cat_9_ed_major_2_ed_minor_1_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_536
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_9_ed_major_2_ed_minor_1_datafield_3_rep9(tvb, offset, sub_tree, expand_var_537);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_9_ed_major_2_ed_minor_1_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_541
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  unsigned int value_expand_var_542 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_542 = value_expand_var_542 >> 2;
  proto_tree_add_uint (datablock_tree, expand_var_542, tvb, offset + 0, 1, value_expand_var_542);
  proto_item *spare_item_0_6 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 6, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 1, spare_item_0_6);
  proto_tree_add_bits_item(datablock_tree, expand_var_543, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_9_ed_major_2_ed_minor_1_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_544
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  double value_expand_var_d = (double)value_expand_var * 0.0078125;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 3, value_expand_var_d);
  return 3;
}
static int dissect_cat_9_ed_major_2_ed_minor_1_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_545
{
  return dissect_cat_8_ed_major_1_ed_minor_2_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_9_ed_major_2_ed_minor_1_datafield_7_rep10(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_547
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_548 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree_group_0, expand_var_548, tvb, offset + 0, 1, value_expand_var_548);
  unsigned int value_expand_var_549 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_549, tvb, offset + 1, 1, value_expand_var_549);
  proto_item *spare_item_16 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 16, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 16, 3, spare_item_16);
  unsigned int value_expand_var_550 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  value_expand_var_550 = value_expand_var_550 >> 4;
  value_expand_var_550 = value_expand_var_550 & 0b0001;
  proto_tree_add_uint (tree_group_0, expand_var_550, tvb, offset + 2, 1, value_expand_var_550);
  unsigned int value_expand_var_551 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  value_expand_var_551 = value_expand_var_551 >> 3;
  value_expand_var_551 = value_expand_var_551 & 0b00001;
  proto_tree_add_uint (tree_group_0, expand_var_551, tvb, offset + 2, 1, value_expand_var_551);
  unsigned int value_expand_var_552 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  value_expand_var_552 = value_expand_var_552 & 0b00000111;
  proto_tree_add_uint (tree_group_0, expand_var_552, tvb, offset + 2, 1, value_expand_var_552);
  return 3;
}
static int dissect_cat_9_ed_major_2_ed_minor_1_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_546
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_9_ed_major_2_ed_minor_1_datafield_7_rep10(tvb, offset, sub_tree, expand_var_547);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_9_ed_major_2_ed_minor_1_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_553
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 2, value_expand_var);
  return 2;
}
static int* cat_9_ed_major_2_ed_minor_1_uap_table_expand[] = {
  &expand_var_529, //010
  &expand_var_530, //000
  &expand_var_531, //020
  &expand_var_536, //030
  &expand_var_541, //060
  &expand_var_544, //070
  &expand_var_545, //080
  &expand_var_546, //090
  &expand_var_553, //10
};
static const ttt cat_9_ed_major_2_ed_minor_1_uap_table[] = {
  &dissect_cat_9_ed_major_2_ed_minor_1_datafield_0_uap, //010
  &dissect_cat_9_ed_major_2_ed_minor_1_datafield_1_uap, //000
  &dissect_cat_9_ed_major_2_ed_minor_1_datafield_2_uap, //020
  &dissect_cat_9_ed_major_2_ed_minor_1_datafield_3_uap, //030
  &dissect_cat_9_ed_major_2_ed_minor_1_datafield_4_uap, //060
  &dissect_cat_9_ed_major_2_ed_minor_1_datafield_5_uap, //070
  &dissect_cat_9_ed_major_2_ed_minor_1_datafield_6_uap, //080
  &dissect_cat_9_ed_major_2_ed_minor_1_datafield_7_uap, //090
  &dissect_cat_9_ed_major_2_ed_minor_1_datafield_8_uap, //10
};
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_554
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_555
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_556
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_557, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_558, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_559, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_560, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_561, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_562, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_563, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_564, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_565, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_566, tvb, (offset * 8) + 3, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_567, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_568, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_569, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_2_1 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 1, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 1, 6, spare_item_2_1);
  proto_tree_add_bits_item(datablock_tree, expand_var_570, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_571
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //041 expand_var_572
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_573 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  int value_expand_var_573_s = get_signed_int(value_expand_var_573, 32);
  double value_expand_var_573_d = (double)value_expand_var_573_s * 8.381903171539307e-08;
  proto_tree_add_double (tree_group_0, expand_var_573, tvb, offset + 0, 4, value_expand_var_573_d);
  unsigned int value_expand_var_574 = asterix_get_unsigned_value (tvb, offset + 4, 4);
  int value_expand_var_574_s = get_signed_int(value_expand_var_574, 32);
  double value_expand_var_574_d = (double)value_expand_var_574_s * 8.381903171539307e-08;
  proto_tree_add_double (tree_group_0, expand_var_574, tvb, offset + 4, 4, value_expand_var_574_d);
  return 8;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_575
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_576 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree_group_0, expand_var_576, tvb, offset + 0, 2, value_expand_var_576);
  unsigned int value_expand_var_577 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_577_d = (double)value_expand_var_577 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_577, tvb, offset + 2, 2, value_expand_var_577_d);
  return 4;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //042 expand_var_578
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  int value_expand_var_579 = asterix_get_signed_value (tvb, offset + 0, 2);
  proto_tree_add_int (tree_group_0, expand_var_579, tvb, offset + 0, 2, value_expand_var_579);
  int value_expand_var_580 = asterix_get_signed_value (tvb, offset + 2, 2);
  proto_tree_add_int (tree_group_0, expand_var_580, tvb, offset + 2, 2, value_expand_var_580);
  return 4;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_581
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_582 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_582_d = (double)value_expand_var_582 * 6.103515625e-05;
  proto_tree_add_double (tree_group_0, expand_var_582, tvb, offset + 0, 2, value_expand_var_582_d);
  unsigned int value_expand_var_583 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_583_d = (double)value_expand_var_583 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_583, tvb, offset + 2, 2, value_expand_var_583_d);
  return 4;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //202 expand_var_584
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_585 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_585_s = get_signed_int(value_expand_var_585, 16);
  double value_expand_var_585_d = (double)value_expand_var_585_s * 0.0625;
  proto_tree_add_double (tree_group_0, expand_var_585, tvb, offset + 0, 2, value_expand_var_585_d);
  unsigned int value_expand_var_586 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_586_s = get_signed_int(value_expand_var_586, 16);
  double value_expand_var_586_d = (double)value_expand_var_586_s * 0.0625;
  proto_tree_add_double (tree_group_0, expand_var_586, tvb, offset + 2, 2, value_expand_var_586_d);
  return 4;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_587
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  unsigned int value_expand_var_588 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_588 = value_expand_var_588 & 0b0000111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_588, tvb, offset + 0, 2, value_expand_var_588);
  return 2;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_589
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_590, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_591, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_592, tvb, (offset * 8) + 2, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_593, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_594, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_595, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_596, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_597, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_598, tvb, (offset * 8) + 2, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_599, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_600, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_601, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_2_1 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 1, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 1, 6, spare_item_2_1);
  proto_tree_add_bits_item(datablock_tree, expand_var_602, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_603
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_604, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_605, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_606, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_607);
  return 2;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_608
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 3, value_expand_var);
  return 3;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //245 expand_var_609
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 7, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_610, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_2 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 2, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 6, spare_item_2);
  print_icao_string (tvb, offset + 1, 0, 48, 6, tree_group_0, expand_var_611);
  return 7;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_14_rep11(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_613
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_614 = asterix_get_unsigned_value (tvb, offset + 0, 7);
  proto_tree_add_uint (tree_group_0, expand_var_614, tvb, offset + 0, 7, value_expand_var_614);
  unsigned int value_expand_var_615 = asterix_get_unsigned_value (tvb, offset + 7, 1);
  value_expand_var_615 = value_expand_var_615 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_615, tvb, offset + 7, 1, value_expand_var_615);
  unsigned int value_expand_var_616 = asterix_get_unsigned_value (tvb, offset + 7, 1);
  value_expand_var_616 = value_expand_var_616 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_616, tvb, offset + 7, 1, value_expand_var_616);
  return 8;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_612
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_10_ed_major_1_ed_minor_1_datafield_14_rep11(tvb, offset, sub_tree, expand_var_613);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_617
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_618
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_619, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_620, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_621 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_621 = value_expand_var_621 & 0b0011111111111111;
  int value_expand_var_621_s = get_signed_int(value_expand_var_621, 14);
  double value_expand_var_621_d = (double)value_expand_var_621_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_621, tvb, offset + 0, 2, value_expand_var_621_d);
  return 2;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //091 expand_var_622
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 6.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_623
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  unsigned int value_expand_var_624 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_624 = value_expand_var_624 >> 1;
  proto_tree_add_uint (datablock_tree, expand_var_624, tvb, offset + 0, 1, value_expand_var_624);
  proto_tree_add_bits_item(datablock_tree, expand_var_625, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  unsigned int value_expand_var_626 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_626 = value_expand_var_626 >> 1;
  double value_expand_var_626_d = (double)value_expand_var_626 * 2.8125;
  proto_tree_add_double (datablock_tree, expand_var_626, tvb, offset + 0, 1, value_expand_var_626_d);
  proto_tree_add_bits_item(datablock_tree, expand_var_627, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  unsigned int value_expand_var_628 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_628 = value_expand_var_628 >> 1;
  proto_tree_add_uint (datablock_tree, expand_var_628, tvb, offset + 0, 1, value_expand_var_628);
  proto_tree_add_bits_item(datablock_tree, expand_var_629, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //550 expand_var_630
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_631, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_632, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_633, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_634, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_635, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_6 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 6, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 2, spare_item_6);
  return 1;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //310 expand_var_636
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_637, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_638, tvb, (offset * 8) + 1, 7, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_639
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_640 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_640_d = (double)value_expand_var_640 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_640, tvb, offset + 0, 1, value_expand_var_640_d);
  unsigned int value_expand_var_641 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  double value_expand_var_641_d = (double)value_expand_var_641 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_641, tvb, offset + 1, 1, value_expand_var_641_d);
  unsigned int value_expand_var_642 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_642_s = get_signed_int(value_expand_var_642, 16);
  double value_expand_var_642_d = (double)value_expand_var_642_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_642, tvb, offset + 2, 2, value_expand_var_642_d);
  return 4;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_22_rep12(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //280 expand_var_644
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  int value_expand_var_645 = asterix_get_signed_value (tvb, offset + 0, 1);
  proto_tree_add_int (tree_group_0, expand_var_645, tvb, offset + 0, 1, value_expand_var_645);
  unsigned int value_expand_var_646 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  int value_expand_var_646_s = get_signed_int(value_expand_var_646, 8);
  double value_expand_var_646_d = (double)value_expand_var_646_s * 0.15;
  proto_tree_add_double (tree_group_0, expand_var_646, tvb, offset + 1, 1, value_expand_var_646_d);
  return 2;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //280 expand_var_643
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_10_ed_major_1_ed_minor_1_datafield_22_rep12(tvb, offset, sub_tree, expand_var_644);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //131 expand_var_647
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 1, value_expand_var);
  return 1;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_648
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_649 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_649_s = get_signed_int(value_expand_var_649, 8);
  double value_expand_var_649_d = (double)value_expand_var_649_s * 0.0625;
  proto_tree_add_double (tree_group_0, expand_var_649, tvb, offset + 0, 1, value_expand_var_649_d);
  unsigned int value_expand_var_650 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  int value_expand_var_650_s = get_signed_int(value_expand_var_650, 8);
  double value_expand_var_650_d = (double)value_expand_var_650_s * 0.0625;
  proto_tree_add_double (tree_group_0, expand_var_650, tvb, offset + 1, 1, value_expand_var_650_d);
  return 2;
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_651
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_10_ed_major_1_ed_minor_1_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int* cat_10_ed_major_1_ed_minor_1_uap_table_expand[] = {
  &expand_var_554, //010
  &expand_var_555, //000
  &expand_var_556, //020
  &expand_var_571, //140
  &expand_var_572, //041
  &expand_var_575, //040
  &expand_var_578, //042
  &expand_var_581, //200
  &expand_var_584, //202
  &expand_var_587, //161
  &expand_var_589, //170
  &expand_var_603, //060
  &expand_var_608, //220
  &expand_var_609, //245
  &expand_var_612, //250
  &expand_var_617, //300
  &expand_var_618, //090
  &expand_var_622, //091
  &expand_var_623, //270
  &expand_var_630, //550
  &expand_var_636, //310
  &expand_var_639, //500
  &expand_var_643, //280
  &expand_var_647, //131
  &expand_var_648, //210
  NULL,
  &expand_var_651, //SP
  &expand_var_652, //R
};
static const ttt cat_10_ed_major_1_ed_minor_1_uap_table[] = {
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_0_uap, //010
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_1_uap, //000
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_2_uap, //020
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_3_uap, //140
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_4_uap, //041
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_5_uap, //040
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_6_uap, //042
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_7_uap, //200
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_8_uap, //202
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_9_uap, //161
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_10_uap, //170
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_11_uap, //060
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_12_uap, //220
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_13_uap, //245
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_14_uap, //250
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_15_uap, //300
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_16_uap, //090
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_17_uap, //091
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_18_uap, //270
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_19_uap, //550
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_20_uap, //310
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_21_uap, //500
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_22_uap, //280
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_23_uap, //131
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_24_uap, //210
  NULL,
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_26_uap, //SP
  &dissect_cat_10_ed_major_1_ed_minor_1_datafield_27_uap, //R
};
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_653
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_654 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree_group_0, expand_var_654, tvb, offset + 0, 1, value_expand_var_654);
  unsigned int value_expand_var_655 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_655, tvb, offset + 1, 1, value_expand_var_655);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_656
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_657
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 1, value_expand_var);
  return 1;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_658
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //041 expand_var_659
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_660 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  int value_expand_var_660_s = get_signed_int(value_expand_var_660, 32);
  double value_expand_var_660_d = (double)value_expand_var_660_s * 8.381903171539307e-08;
  proto_tree_add_double (tree_group_0, expand_var_660, tvb, offset + 0, 4, value_expand_var_660_d);
  unsigned int value_expand_var_661 = asterix_get_unsigned_value (tvb, offset + 4, 4);
  int value_expand_var_661_s = get_signed_int(value_expand_var_661, 32);
  double value_expand_var_661_d = (double)value_expand_var_661_s * 8.381903171539307e-08;
  proto_tree_add_double (tree_group_0, expand_var_661, tvb, offset + 4, 4, value_expand_var_661_d);
  return 8;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //042 expand_var_662
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  int value_expand_var_663 = asterix_get_signed_value (tvb, offset + 0, 2);
  proto_tree_add_int (tree_group_0, expand_var_663, tvb, offset + 0, 2, value_expand_var_663);
  int value_expand_var_664 = asterix_get_signed_value (tvb, offset + 2, 2);
  proto_tree_add_int (tree_group_0, expand_var_664, tvb, offset + 2, 2, value_expand_var_664);
  return 4;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //202 expand_var_665
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_666 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_666_s = get_signed_int(value_expand_var_666, 16);
  double value_expand_var_666_d = (double)value_expand_var_666_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_666, tvb, offset + 0, 2, value_expand_var_666_d);
  unsigned int value_expand_var_667 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_667_s = get_signed_int(value_expand_var_667, 16);
  double value_expand_var_667_d = (double)value_expand_var_667_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_667, tvb, offset + 2, 2, value_expand_var_667_d);
  return 4;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_668
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_669 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_669_s = get_signed_int(value_expand_var_669, 8);
  double value_expand_var_669_d = (double)value_expand_var_669_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_669, tvb, offset + 0, 1, value_expand_var_669_d);
  unsigned int value_expand_var_670 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  int value_expand_var_670_s = get_signed_int(value_expand_var_670, 8);
  double value_expand_var_670_d = (double)value_expand_var_670_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_670, tvb, offset + 1, 1, value_expand_var_670_d);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_671
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_672);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //245 expand_var_673
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 7, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_674, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_2 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 2, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 6, spare_item_2);
  print_icao_string (tvb, offset + 1, 0, 48, 6, tree_group_0, expand_var_675);
  return 7;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_rep13(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_678
{
  proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  return 8;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_448_compound_448(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_677
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_rep13(tvb, offset, sub_tree, expand_var_678);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_449_compound_449(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_679
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 3, value_expand_var);
  return 3;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_460_compound_460(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_680
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_681, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_682, tvb, (offset * 8) + 3, 4, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  proto_tree_add_bits_item(tree_group_0, expand_var_683, tvb, (offset * 8) + 8, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_684, tvb, (offset * 8) + 9, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_685, tvb, (offset * 8) + 10, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_686 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_686 = value_expand_var_686 >> 4;
  value_expand_var_686 = value_expand_var_686 & 0b0001;
  proto_tree_add_uint (tree_group_0, expand_var_686, tvb, offset + 1, 1, value_expand_var_686);
  unsigned int value_expand_var_687 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_687 = value_expand_var_687 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_687, tvb, offset + 1, 1, value_expand_var_687);
  proto_tree_add_bits_item(tree_group_0, expand_var_688, tvb, (offset * 8) + 16, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_689, tvb, (offset * 8) + 17, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_690, tvb, (offset * 8) + 18, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_19 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 19, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 19, 5, spare_item_19);
  return 3;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_691
{
  proto_tree_add_item(tree, expand_var, tvb, offset + 0, 4, ENC_ASCII | ENC_NA);
  return 4;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_462_compound_462(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_692
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_466_compound_466(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_693
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_694, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_695, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_696, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 5, spare_item_3);
  return 1;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_676
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 11, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_448_compound_448(tvb, offset, asterix_packet_tree, expand_var_677);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_449_compound_449(tvb, offset, asterix_packet_tree, expand_var_679);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_460_compound_460(tvb, offset, asterix_packet_tree, expand_var_680);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, asterix_packet_tree, expand_var_691);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_462_compound_462(tvb, offset, asterix_packet_tree, expand_var_692);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_466_compound_466(tvb, offset, asterix_packet_tree, expand_var_693);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_697
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 1, spare_item_0);
  unsigned int value_expand_var_698 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_698 = value_expand_var_698 & 0b0111111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_698, tvb, offset + 0, 2, value_expand_var_698);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_699
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_700, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_701, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_702, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_703, tvb, (offset * 8) + 3, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_704, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_705, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_706, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_707, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_708, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_709, tvb, (offset * 8) + 3, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_710, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_711, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_712, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_713, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_714, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_715, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_716, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_717, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_2_5 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 5, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 5, 2, spare_item_2_5);
  proto_tree_add_bits_item(datablock_tree, expand_var_718, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_720
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_d = (double)value_expand_var * 0.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_432_compound_432(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_721
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_433_compound_433(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_722
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_434_compound_434(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_723
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_435_compound_435(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_724
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_436_compound_436(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_725
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_437_compound_437(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_726
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_438_compound_438(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_727
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_439_compound_439(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_728
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_440_compound_440(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_729
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_441_compound_441(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_730
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_442_compound_442(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_731
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_719
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 12, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, asterix_packet_tree, expand_var_720);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_432_compound_432(tvb, offset, asterix_packet_tree, expand_var_721);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_433_compound_433(tvb, offset, asterix_packet_tree, expand_var_722);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_434_compound_434(tvb, offset, asterix_packet_tree, expand_var_723);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_435_compound_435(tvb, offset, asterix_packet_tree, expand_var_724);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_436_compound_436(tvb, offset, asterix_packet_tree, expand_var_725);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_437_compound_437(tvb, offset, asterix_packet_tree, expand_var_726);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_438_compound_438(tvb, offset, asterix_packet_tree, expand_var_727);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_439_compound_439(tvb, offset, asterix_packet_tree, expand_var_728);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_440_compound_440(tvb, offset, asterix_packet_tree, expand_var_729);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_441_compound_441(tvb, offset, asterix_packet_tree, expand_var_730);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 12))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_442_compound_442(tvb, offset, asterix_packet_tree, expand_var_731);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //430 expand_var_732
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_733
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 0.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //093 expand_var_734
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_735, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_736 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_736 = value_expand_var_736 & 0b0111111111111111;
  int value_expand_var_736_s = get_signed_int(value_expand_var_736, 15);
  double value_expand_var_736_d = (double)value_expand_var_736_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_736, tvb, offset + 0, 2, value_expand_var_736_d);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //092 expand_var_737
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 6.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //215 expand_var_738
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 6.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_739
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_469_compound_469(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_741
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_742 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree_group_0, expand_var_742, tvb, offset + 0, 1, value_expand_var_742);
  unsigned int value_expand_var_743 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_743, tvb, offset + 1, 1, value_expand_var_743);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_470_compound_470(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_744
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_473_compound_473(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_745
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_746, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_2 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 2, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 3, spare_item_2);
  unsigned int value_expand_var_747 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  value_expand_var_747 = value_expand_var_747 & 0b00000111111111111111111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_747, tvb, offset + 0, 4, value_expand_var_747);
  return 4;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_477_compound_477(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_748
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_749, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_750, tvb, (offset * 8) + 2, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_751, tvb, (offset * 8) + 4, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_752, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  return 1;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_478_compound_478(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_753
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_479_compound_479(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_754
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_480_compound_480(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_755
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_481_compound_481(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_756
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_482_compound_482(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_757
{
  proto_tree_add_item(tree, expand_var, tvb, offset + 0, 3, ENC_ASCII | ENC_NA);
  return 3;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_483_compound_483(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_758
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_486_compound_486(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_759
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_760 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree_group_0, expand_var_760, tvb, offset + 0, 1, value_expand_var_760);
  unsigned int value_expand_var_761 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_761, tvb, offset + 1, 1, value_expand_var_761);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_rep14(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_763
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_764, tvb, (offset * 8) + 0, 5, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_765, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 4, spare_item_7);
  unsigned int value_expand_var_766 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_766 = value_expand_var_766 & 0b00011111;
  proto_tree_add_uint (tree_group_0, expand_var_766, tvb, offset + 1, 1, value_expand_var_766);
  proto_item *spare_item_16 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 16, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 16, 2, spare_item_16);
  unsigned int value_expand_var_767 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  value_expand_var_767 = value_expand_var_767 & 0b00111111;
  proto_tree_add_uint (tree_group_0, expand_var_767, tvb, offset + 2, 1, value_expand_var_767);
  proto_tree_add_bits_item(tree_group_0, expand_var_768, tvb, (offset * 8) + 24, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_25 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 25, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 25, 1, spare_item_25);
  unsigned int value_expand_var_769 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  value_expand_var_769 = value_expand_var_769 & 0b00111111;
  proto_tree_add_uint (tree_group_0, expand_var_769, tvb, offset + 3, 1, value_expand_var_769);
  return 4;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_493_compound_493(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_762
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_rep14(tvb, offset, sub_tree, expand_var_763);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_494_compound_494(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_770
{
  proto_tree_add_item(tree, expand_var, tvb, offset + 0, 6, ENC_ASCII | ENC_NA);
  return 6;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_497_compound_497(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_771
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_772, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_773, tvb, (offset * 8) + 2, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_4 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 4, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 4, spare_item_4);
  return 1;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_740
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 14, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_469_compound_469(tvb, offset, asterix_packet_tree, expand_var_741);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_470_compound_470(tvb, offset, asterix_packet_tree, expand_var_744);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_473_compound_473(tvb, offset, asterix_packet_tree, expand_var_745);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_477_compound_477(tvb, offset, asterix_packet_tree, expand_var_748);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_478_compound_478(tvb, offset, asterix_packet_tree, expand_var_753);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_479_compound_479(tvb, offset, asterix_packet_tree, expand_var_754);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_480_compound_480(tvb, offset, asterix_packet_tree, expand_var_755);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_481_compound_481(tvb, offset, asterix_packet_tree, expand_var_756);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_482_compound_482(tvb, offset, asterix_packet_tree, expand_var_757);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_483_compound_483(tvb, offset, asterix_packet_tree, expand_var_758);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_486_compound_486(tvb, offset, asterix_packet_tree, expand_var_759);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 12))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_493_compound_493(tvb, offset, asterix_packet_tree, expand_var_762);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 13))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_494_compound_494(tvb, offset, asterix_packet_tree, expand_var_770);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 14))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_497_compound_497(tvb, offset, asterix_packet_tree, expand_var_771);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_774
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //310 expand_var_775
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_776, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_777, tvb, (offset * 8) + 1, 7, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_502_compound_502(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_779
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_780 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_780_d = (double)value_expand_var_780 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_780, tvb, offset + 0, 1, value_expand_var_780_d);
  unsigned int value_expand_var_781 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  double value_expand_var_781_d = (double)value_expand_var_781 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_781, tvb, offset + 1, 1, value_expand_var_781_d);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_505_compound_505(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_782
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_783 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_783_s = get_signed_int(value_expand_var_783, 16);
  double value_expand_var_783_d = (double)value_expand_var_783_s * 8.381903171539307e-08;
  proto_tree_add_double (tree_group_0, expand_var_783, tvb, offset + 0, 2, value_expand_var_783_d);
  unsigned int value_expand_var_784 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_784_s = get_signed_int(value_expand_var_784, 16);
  double value_expand_var_784_d = (double)value_expand_var_784_s * 8.381903171539307e-08;
  proto_tree_add_double (tree_group_0, expand_var_784, tvb, offset + 2, 2, value_expand_var_784_d);
  return 4;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_506_compound_506(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_785
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 0.5;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_509_compound_509(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_786
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_787 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_787_d = (double)value_expand_var_787 * 0.1;
  proto_tree_add_double (tree_group_0, expand_var_787, tvb, offset + 0, 1, value_expand_var_787_d);
  unsigned int value_expand_var_788 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  double value_expand_var_788_d = (double)value_expand_var_788 * 0.1;
  proto_tree_add_double (tree_group_0, expand_var_788, tvb, offset + 1, 1, value_expand_var_788_d);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_510_compound_510(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_789
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 0.1;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_513_compound_513(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_790
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_791 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_791_d = (double)value_expand_var_791 * 0.01;
  proto_tree_add_double (tree_group_0, expand_var_791, tvb, offset + 0, 1, value_expand_var_791_d);
  unsigned int value_expand_var_792 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  double value_expand_var_792_d = (double)value_expand_var_792 * 0.01;
  proto_tree_add_double (tree_group_0, expand_var_792, tvb, offset + 1, 1, value_expand_var_792_d);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_778
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 6, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_502_compound_502(tvb, offset, asterix_packet_tree, expand_var_779);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_505_compound_505(tvb, offset, asterix_packet_tree, expand_var_782);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_506_compound_506(tvb, offset, asterix_packet_tree, expand_var_785);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_509_compound_509(tvb, offset, asterix_packet_tree, expand_var_786);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_510_compound_510(tvb, offset, asterix_packet_tree, expand_var_789);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_513_compound_513(tvb, offset, asterix_packet_tree, expand_var_790);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //600 expand_var_793
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_794, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_795, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 5, spare_item_3);
  unsigned int value_expand_var_796 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_796, tvb, offset + 1, 1, value_expand_var_796);
  unsigned int value_expand_var_797 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  proto_tree_add_uint (tree_group_0, expand_var_797, tvb, offset + 2, 1, value_expand_var_797);
  return 3;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_25_rep15(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //605 expand_var_799
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  unsigned int value_expand_var_800 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_800 = value_expand_var_800 & 0b0000111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_800, tvb, offset + 0, 2, value_expand_var_800);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //605 expand_var_798
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_25_rep15(tvb, offset, sub_tree, expand_var_799);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_26_rep16(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //610 expand_var_802
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_803 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_803 = value_expand_var_803 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_803, tvb, offset + 0, 1, value_expand_var_803);
  proto_tree_add_bits_item(tree_group_0, expand_var_804, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_805, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_806, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_807, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_808, tvb, (offset * 8) + 8, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_809, tvb, (offset * 8) + 9, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_810, tvb, (offset * 8) + 10, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_811, tvb, (offset * 8) + 11, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_812, tvb, (offset * 8) + 12, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_813, tvb, (offset * 8) + 13, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_814, tvb, (offset * 8) + 14, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_815, tvb, (offset * 8) + 15, 1, ENC_BIG_ENDIAN);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //610 expand_var_801
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_11_ed_major_1_ed_minor_2_datafield_26_rep16(tvb, offset, sub_tree, expand_var_802);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_816
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_2_datafield_28_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int* cat_11_ed_major_1_ed_minor_2_uap_table_expand[] = {
  &expand_var_653, //010
  &expand_var_656, //000
  &expand_var_657, //015
  &expand_var_658, //140
  &expand_var_659, //041
  &expand_var_662, //042
  &expand_var_665, //202
  &expand_var_668, //210
  &expand_var_671, //060
  &expand_var_673, //245
  &expand_var_676, //380
  &expand_var_697, //161
  &expand_var_699, //170
  &expand_var_719, //290
  &expand_var_732, //430
  &expand_var_733, //090
  &expand_var_734, //093
  &expand_var_737, //092
  &expand_var_738, //215
  &expand_var_739, //270
  &expand_var_740, //390
  &expand_var_774, //300
  &expand_var_775, //310
  &expand_var_778, //500
  &expand_var_793, //600
  &expand_var_798, //605
  &expand_var_801, //610
  &expand_var_816, //SP
  &expand_var_817, //R
};
static const ttt cat_11_ed_major_1_ed_minor_2_uap_table[] = {
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_0_uap, //010
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_1_uap, //000
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap, //015
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_3_uap, //140
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_4_uap, //041
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_5_uap, //042
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_6_uap, //202
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_7_uap, //210
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_8_uap, //060
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_9_uap, //245
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_uap, //380
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_11_uap, //161
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_12_uap, //170
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_uap, //290
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_14_uap, //430
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap, //090
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_16_uap, //093
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap, //092
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_18_uap, //215
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_19_uap, //270
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_uap, //390
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_21_uap, //300
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_22_uap, //310
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_uap, //500
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_24_uap, //600
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_25_uap, //605
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_26_uap, //610
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_27_uap, //SP
  &dissect_cat_11_ed_major_1_ed_minor_2_datafield_28_uap, //R
};
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_818
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_0_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_819
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_820
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_821
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //041 expand_var_822
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //042 expand_var_823
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //202 expand_var_824
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_825 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_825_s = get_signed_int(value_expand_var_825, 16);
  double value_expand_var_825_d = (double)value_expand_var_825_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_825, tvb, offset + 0, 2, value_expand_var_825_d);
  unsigned int value_expand_var_826 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_826_s = get_signed_int(value_expand_var_826, 16);
  double value_expand_var_826_d = (double)value_expand_var_826_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_826, tvb, offset + 2, 2, value_expand_var_826_d);
  return 4;
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_827
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_828 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_828_s = get_signed_int(value_expand_var_828, 8);
  double value_expand_var_828_d = (double)value_expand_var_828_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_828, tvb, offset + 0, 1, value_expand_var_828_d);
  unsigned int value_expand_var_829 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  int value_expand_var_829_s = get_signed_int(value_expand_var_829, 8);
  double value_expand_var_829_d = (double)value_expand_var_829_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_829, tvb, offset + 1, 1, value_expand_var_829_d);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_830
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //245 expand_var_831
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 7, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_832, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_2 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 2, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 6, spare_item_2);
  print_icao_string (tvb, offset + 1, 0, 48, 6, tree_group_0, expand_var_833);
  return 7;
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_10_448_compound_448(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_835
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_448_compound_448(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_10_449_compound_449(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_836
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_449_compound_449(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_10_563_compound_563(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_837
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_838, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_839, tvb, (offset * 8) + 3, 4, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  proto_tree_add_bits_item(tree_group_0, expand_var_840, tvb, (offset * 8) + 8, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_841, tvb, (offset * 8) + 9, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_842, tvb, (offset * 8) + 10, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_843 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_843 = value_expand_var_843 >> 4;
  value_expand_var_843 = value_expand_var_843 & 0b0001;
  proto_tree_add_uint (tree_group_0, expand_var_843, tvb, offset + 1, 1, value_expand_var_843);
  unsigned int value_expand_var_844 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_844 = value_expand_var_844 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_844, tvb, offset + 1, 1, value_expand_var_844);
  proto_tree_add_bits_item(tree_group_0, expand_var_845, tvb, (offset * 8) + 16, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_846, tvb, (offset * 8) + 17, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_847, tvb, (offset * 8) + 18, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_19 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 19, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 19, 5, spare_item_19);
  return 3;
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_10_461_compound_461(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_848
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_10_462_compound_462(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_849
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_462_compound_462(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_10_466_compound_466(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_850
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_466_compound_466(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_834
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 11, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_10_448_compound_448(tvb, offset, asterix_packet_tree, expand_var_835);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_10_449_compound_449(tvb, offset, asterix_packet_tree, expand_var_836);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_10_563_compound_563(tvb, offset, asterix_packet_tree, expand_var_837);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_10_461_compound_461(tvb, offset, asterix_packet_tree, expand_var_848);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_10_462_compound_462(tvb, offset, asterix_packet_tree, expand_var_849);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_10_466_compound_466(tvb, offset, asterix_packet_tree, expand_var_850);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_851
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_852
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_853, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_854, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_855, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_856, tvb, (offset * 8) + 3, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_857, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_858, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_859, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_860, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_861, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_862, tvb, (offset * 8) + 3, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_863, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_864, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_865, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_866, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_867, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_868, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_869, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_870, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_2_5 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 5, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 5, 2, spare_item_2_5);
  proto_tree_add_bits_item(datablock_tree, expand_var_871, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_item *spare_item_3_0 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 0, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 1, spare_item_3_0);
  proto_tree_add_bits_item(datablock_tree, expand_var_872, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_873, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_874, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_875, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_876, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_877, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_878, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_555_compound_555(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_880
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_556_compound_556(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_881
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_557_compound_557(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_882
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_558_compound_558(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_883
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_559_compound_559(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_884
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_436_compound_436(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_885
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_436_compound_436(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_437_compound_437(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_886
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_438_compound_438(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_887
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_560_compound_560(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_888
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_440_compound_440(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_889
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_441_compound_441(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_890
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_442_compound_442(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_891
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_879
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 12, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_555_compound_555(tvb, offset, asterix_packet_tree, expand_var_880);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_556_compound_556(tvb, offset, asterix_packet_tree, expand_var_881);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_557_compound_557(tvb, offset, asterix_packet_tree, expand_var_882);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_558_compound_558(tvb, offset, asterix_packet_tree, expand_var_883);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_559_compound_559(tvb, offset, asterix_packet_tree, expand_var_884);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_436_compound_436(tvb, offset, asterix_packet_tree, expand_var_885);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_437_compound_437(tvb, offset, asterix_packet_tree, expand_var_886);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_438_compound_438(tvb, offset, asterix_packet_tree, expand_var_887);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_560_compound_560(tvb, offset, asterix_packet_tree, expand_var_888);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_440_compound_440(tvb, offset, asterix_packet_tree, expand_var_889);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_441_compound_441(tvb, offset, asterix_packet_tree, expand_var_890);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 12))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_442_compound_442(tvb, offset, asterix_packet_tree, expand_var_891);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //430 expand_var_892
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_893
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //093 expand_var_894
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_895, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_896 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_896 = value_expand_var_896 & 0b0111111111111111;
  int value_expand_var_896_s = get_signed_int(value_expand_var_896, 15);
  double value_expand_var_896_d = (double)value_expand_var_896_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_896, tvb, offset + 0, 2, value_expand_var_896_d);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //092 expand_var_897
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //215 expand_var_898
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 6.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_899
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_469_compound_469(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_901
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_469_compound_469(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_470_compound_470(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_902
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_473_compound_473(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_903
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_473_compound_473(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_566_compound_566(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_904
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_905, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_906, tvb, (offset * 8) + 2, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_907, tvb, (offset * 8) + 4, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_908, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  return 1;
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_478_compound_478(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_909
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_479_compound_479(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_910
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_479_compound_479(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_480_compound_480(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_911
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_481_compound_481(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_912
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_482_compound_482(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_913
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_482_compound_482(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_483_compound_483(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_914
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_483_compound_483(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_486_compound_486(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_915
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_486_compound_486(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_493_compound_493(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_916
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_493_compound_493(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_494_compound_494(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_917
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_494_compound_494(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_497_compound_497(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_918
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_497_compound_497(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_900
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 14, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_469_compound_469(tvb, offset, asterix_packet_tree, expand_var_901);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_470_compound_470(tvb, offset, asterix_packet_tree, expand_var_902);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_473_compound_473(tvb, offset, asterix_packet_tree, expand_var_903);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_566_compound_566(tvb, offset, asterix_packet_tree, expand_var_904);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_478_compound_478(tvb, offset, asterix_packet_tree, expand_var_909);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_479_compound_479(tvb, offset, asterix_packet_tree, expand_var_910);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_480_compound_480(tvb, offset, asterix_packet_tree, expand_var_911);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_481_compound_481(tvb, offset, asterix_packet_tree, expand_var_912);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_482_compound_482(tvb, offset, asterix_packet_tree, expand_var_913);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_483_compound_483(tvb, offset, asterix_packet_tree, expand_var_914);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_486_compound_486(tvb, offset, asterix_packet_tree, expand_var_915);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 12))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_493_compound_493(tvb, offset, asterix_packet_tree, expand_var_916);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 13))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_494_compound_494(tvb, offset, asterix_packet_tree, expand_var_917);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 14))
  {
    int fun_len = dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_497_compound_497(tvb, offset, asterix_packet_tree, expand_var_918);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_919
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_21_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //310 expand_var_920
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_921
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //600 expand_var_922
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //605 expand_var_923
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //610 expand_var_924
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_925
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_11_ed_major_1_ed_minor_3_datafield_28_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int* cat_11_ed_major_1_ed_minor_3_uap_table_expand[] = {
  &expand_var_818, //010
  &expand_var_819, //000
  &expand_var_820, //015
  &expand_var_821, //140
  &expand_var_822, //041
  &expand_var_823, //042
  &expand_var_824, //202
  &expand_var_827, //210
  &expand_var_830, //060
  &expand_var_831, //245
  &expand_var_834, //380
  &expand_var_851, //161
  &expand_var_852, //170
  &expand_var_879, //290
  &expand_var_892, //430
  &expand_var_893, //090
  &expand_var_894, //093
  &expand_var_897, //092
  &expand_var_898, //215
  &expand_var_899, //270
  &expand_var_900, //390
  &expand_var_919, //300
  &expand_var_920, //310
  &expand_var_921, //500
  &expand_var_922, //600
  &expand_var_923, //605
  &expand_var_924, //610
  &expand_var_925, //SP
  &expand_var_926, //R
};
static const ttt cat_11_ed_major_1_ed_minor_3_uap_table[] = {
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_0_uap, //010
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_1_uap, //000
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_2_uap, //015
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_3_uap, //140
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_4_uap, //041
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_5_uap, //042
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_6_uap, //202
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_7_uap, //210
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_8_uap, //060
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_9_uap, //245
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_10_uap, //380
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_11_uap, //161
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_12_uap, //170
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_13_uap, //290
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_14_uap, //430
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_15_uap, //090
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_16_uap, //093
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_17_uap, //092
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_18_uap, //215
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_19_uap, //270
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_20_uap, //390
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_21_uap, //300
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_22_uap, //310
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_23_uap, //500
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_24_uap, //600
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_25_uap, //605
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_26_uap, //610
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_27_uap, //SP
  &dissect_cat_11_ed_major_1_ed_minor_3_datafield_28_uap, //R
};
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_927
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_928
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_929, tvb, (offset * 8) + 0, 7, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_930, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_931
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_932
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_933, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_934, tvb, (offset * 8) + 2, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_935, tvb, (offset * 8) + 4, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_0_6 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 6, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 1, spare_item_0_6);
  proto_tree_add_bits_item(datablock_tree, expand_var_936, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_937
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //145 expand_var_938
{
  return dissect_cat_9_ed_major_2_ed_minor_1_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_939
{
  return dissect_cat_8_ed_major_1_ed_minor_2_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_940
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_941, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_942, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_943, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_0_3 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_0_3);
  proto_tree_add_bits_item(datablock_tree, expand_var_944, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_945, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_946, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_947, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_948
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_0);
  unsigned int value_expand_var_949 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_949 = value_expand_var_949 & 0b0011111111111111;
  double value_expand_var_949_d = (double)value_expand_var_949 * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_949, tvb, offset + 0, 2, value_expand_var_949_d);
  return 2;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_587_compound_587(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_951
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.01;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_588_compound_588(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_952
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_587_compound_587(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_589_compound_589(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_953
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_587_compound_587(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_954
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.0054931640625;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_950
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 4, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_587_compound_587(tvb, offset, asterix_packet_tree, expand_var_951);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_588_compound_588(tvb, offset, asterix_packet_tree, expand_var_952);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_589_compound_589(tvb, offset, asterix_packet_tree, expand_var_953);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, asterix_packet_tree, expand_var_954);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_10_rep17(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_956
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_957 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_957 = value_expand_var_957 >> 7;
  proto_tree_add_uint (tree_group_0, expand_var_957, tvb, offset + 0, 2, value_expand_var_957);
  unsigned int value_expand_var_958 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_958 = value_expand_var_958 & 0b01111111;
  proto_tree_add_uint (tree_group_0, expand_var_958, tvb, offset + 1, 1, value_expand_var_958);
  return 2;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_955
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_10_rep17(tvb, offset, sub_tree, expand_var_956);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_959
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 5, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_960 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree_group_0, expand_var_960, tvb, offset + 0, 2, value_expand_var_960);
  unsigned int value_expand_var_961 = asterix_get_unsigned_value (tvb, offset + 2, 3);
  proto_tree_add_uint (tree_group_0, expand_var_961, tvb, offset + 2, 3, value_expand_var_961);
  return 5;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_12_601_compound_601(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //600 expand_var_963
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_964 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  int value_expand_var_964_s = get_signed_int(value_expand_var_964, 32);
  double value_expand_var_964_d = (double)value_expand_var_964_s * 8.381903171539307e-08;
  proto_tree_add_double (tree_group_0, expand_var_964, tvb, offset + 0, 4, value_expand_var_964_d);
  unsigned int value_expand_var_965 = asterix_get_unsigned_value (tvb, offset + 4, 4);
  int value_expand_var_965_s = get_signed_int(value_expand_var_965, 32);
  double value_expand_var_965_d = (double)value_expand_var_965_s * 8.381903171539307e-08;
  proto_tree_add_double (tree_group_0, expand_var_965, tvb, offset + 4, 4, value_expand_var_965_d);
  return 8;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_12_605_compound_605(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //600 expand_var_966
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 5, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_967 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_967_d = (double)value_expand_var_967 * 0.5;
  proto_tree_add_double (tree_group_0, expand_var_967, tvb, offset + 0, 2, value_expand_var_967_d);
  unsigned int value_expand_var_968 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_968_d = (double)value_expand_var_968 * 0.5;
  proto_tree_add_double (tree_group_0, expand_var_968, tvb, offset + 2, 2, value_expand_var_968_d);
  unsigned int value_expand_var_969 = asterix_get_unsigned_value (tvb, offset + 4, 1);
  int value_expand_var_969_s = get_signed_int(value_expand_var_969, 8);
  double value_expand_var_969_d = (double)value_expand_var_969_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_969, tvb, offset + 4, 1, value_expand_var_969_d);
  return 5;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_12_609_compound_609(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //600 expand_var_970
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 5, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_971 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_971_d = (double)value_expand_var_971 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_971, tvb, offset + 0, 2, value_expand_var_971_d);
  unsigned int value_expand_var_972 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_972_d = (double)value_expand_var_972 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_972, tvb, offset + 2, 2, value_expand_var_972_d);
  unsigned int value_expand_var_973 = asterix_get_unsigned_value (tvb, offset + 4, 1);
  int value_expand_var_973_s = get_signed_int(value_expand_var_973, 8);
  double value_expand_var_973_d = (double)value_expand_var_973_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_973, tvb, offset + 4, 1, value_expand_var_973_d);
  return 5;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //600 expand_var_962
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 3, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_12_601_compound_601(tvb, offset, asterix_packet_tree, expand_var_963);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_12_605_compound_605(tvb, offset, asterix_packet_tree, expand_var_966);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_12_609_compound_609(tvb, offset, asterix_packet_tree, expand_var_970);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_611_compound_611(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //601 expand_var_975
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  int value_expand_var_s = get_signed_int(value_expand_var, 24);
  double value_expand_var_d = (double)value_expand_var_s * 0.01;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 3, value_expand_var_d);
  return 3;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_612_compound_612(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //601 expand_var_976
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  double value_expand_var_d = (double)value_expand_var * 0.01;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 3, value_expand_var_d);
  return 3;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_613_compound_613(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //601 expand_var_977
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_612_compound_612(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_616_compound_616(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //601 expand_var_978
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_979 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_979 = value_expand_var_979 >> 4;
  double value_expand_var_979_d = (double)value_expand_var_979 * 16.0;
  proto_tree_add_double (tree_group_0, expand_var_979, tvb, offset + 0, 2, value_expand_var_979_d);
  unsigned int value_expand_var_980 = asterix_get_unsigned_value (tvb, offset + 1, 2);
  value_expand_var_980 = value_expand_var_980 & 0b0000111111111111;
  double value_expand_var_980_d = (double)value_expand_var_980 * 16.0;
  proto_tree_add_double (tree_group_0, expand_var_980, tvb, offset + 1, 2, value_expand_var_980_d);
  return 3;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_619_compound_619(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //601 expand_var_981
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_982 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_982 = value_expand_var_982 >> 4;
  double value_expand_var_982_d = (double)value_expand_var_982 * 16.0;
  proto_tree_add_double (tree_group_0, expand_var_982, tvb, offset + 0, 2, value_expand_var_982_d);
  unsigned int value_expand_var_983 = asterix_get_unsigned_value (tvb, offset + 1, 2);
  value_expand_var_983 = value_expand_var_983 & 0b0000111111111111;
  double value_expand_var_983_d = (double)value_expand_var_983 * 16.0;
  proto_tree_add_double (tree_group_0, expand_var_983, tvb, offset + 1, 2, value_expand_var_983_d);
  return 3;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_622_compound_622(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //601 expand_var_984
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_985 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_985_s = get_signed_int(value_expand_var_985, 8);
  double value_expand_var_985_d = (double)value_expand_var_985_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_985, tvb, offset + 0, 1, value_expand_var_985_d);
  unsigned int value_expand_var_986 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  int value_expand_var_986_s = get_signed_int(value_expand_var_986, 8);
  double value_expand_var_986_d = (double)value_expand_var_986_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_986, tvb, offset + 1, 1, value_expand_var_986_d);
  return 2;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_623_compound_623(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //601 expand_var_987
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_622_compound_622(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_624_compound_624(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //601 expand_var_988
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_622_compound_622(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //601 expand_var_974
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 8, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_611_compound_611(tvb, offset, asterix_packet_tree, expand_var_975);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_612_compound_612(tvb, offset, asterix_packet_tree, expand_var_976);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_613_compound_613(tvb, offset, asterix_packet_tree, expand_var_977);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_616_compound_616(tvb, offset, asterix_packet_tree, expand_var_978);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_619_compound_619(tvb, offset, asterix_packet_tree, expand_var_981);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_622_compound_622(tvb, offset, asterix_packet_tree, expand_var_984);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_623_compound_623(tvb, offset, asterix_packet_tree, expand_var_987);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_624_compound_624(tvb, offset, asterix_packet_tree, expand_var_988);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_14_628_compound_628(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //602 expand_var_990
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 5, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_991 = asterix_get_unsigned_value (tvb, offset + 0, 3);
  value_expand_var_991 = value_expand_var_991 >> 4;
  int value_expand_var_991_s = get_signed_int(value_expand_var_991, 20);
  double value_expand_var_991_d = (double)value_expand_var_991_s * 0.01;
  proto_tree_add_double (tree_group_0, expand_var_991, tvb, offset + 0, 3, value_expand_var_991_d);
  unsigned int value_expand_var_992 = asterix_get_unsigned_value (tvb, offset + 2, 3);
  value_expand_var_992 = value_expand_var_992 & 0b000011111111111111111111;
  int value_expand_var_992_s = get_signed_int(value_expand_var_992, 20);
  double value_expand_var_992_d = (double)value_expand_var_992_s * 0.01;
  proto_tree_add_double (tree_group_0, expand_var_992, tvb, offset + 2, 3, value_expand_var_992_d);
  return 5;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_14_632_compound_632(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //602 expand_var_993
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 5, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_994 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_994_d = (double)value_expand_var_994 * 0.01;
  proto_tree_add_double (tree_group_0, expand_var_994, tvb, offset + 0, 2, value_expand_var_994_d);
  unsigned int value_expand_var_995 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_995_d = (double)value_expand_var_995 * 0.01;
  proto_tree_add_double (tree_group_0, expand_var_995, tvb, offset + 2, 2, value_expand_var_995_d);
  unsigned int value_expand_var_996 = asterix_get_unsigned_value (tvb, offset + 4, 1);
  int value_expand_var_996_s = get_signed_int(value_expand_var_996, 8);
  double value_expand_var_996_d = (double)value_expand_var_996_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_996, tvb, offset + 4, 1, value_expand_var_996_d);
  return 5;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_14_634_compound_634(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //602 expand_var_997
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 5, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_998 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_998_d = (double)value_expand_var_998 * 0.01;
  proto_tree_add_double (tree_group_0, expand_var_998, tvb, offset + 0, 2, value_expand_var_998_d);
  unsigned int value_expand_var_999 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_999_d = (double)value_expand_var_999 * 0.01;
  proto_tree_add_double (tree_group_0, expand_var_999, tvb, offset + 2, 2, value_expand_var_999_d);
  unsigned int value_expand_var_1000 = asterix_get_unsigned_value (tvb, offset + 4, 1);
  int value_expand_var_1000_s = get_signed_int(value_expand_var_1000, 8);
  double value_expand_var_1000_d = (double)value_expand_var_1000_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1000, tvb, offset + 4, 1, value_expand_var_1000_d);
  return 5;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_14_639_compound_639(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //602 expand_var_1001
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1002 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_1002_s = get_signed_int(value_expand_var_1002, 8);
  double value_expand_var_1002_d = (double)value_expand_var_1002_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1002, tvb, offset + 0, 1, value_expand_var_1002_d);
  unsigned int value_expand_var_1003 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  int value_expand_var_1003_s = get_signed_int(value_expand_var_1003, 8);
  double value_expand_var_1003_d = (double)value_expand_var_1003_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1003, tvb, offset + 1, 1, value_expand_var_1003_d);
  unsigned int value_expand_var_1004 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  int value_expand_var_1004_s = get_signed_int(value_expand_var_1004, 8);
  double value_expand_var_1004_d = (double)value_expand_var_1004_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1004, tvb, offset + 2, 1, value_expand_var_1004_d);
  unsigned int value_expand_var_1005 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  int value_expand_var_1005_s = get_signed_int(value_expand_var_1005, 8);
  double value_expand_var_1005_d = (double)value_expand_var_1005_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1005, tvb, offset + 3, 1, value_expand_var_1005_d);
  return 4;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //602 expand_var_989
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 4, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_14_628_compound_628(tvb, offset, asterix_packet_tree, expand_var_990);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_14_632_compound_632(tvb, offset, asterix_packet_tree, expand_var_993);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_14_634_compound_634(tvb, offset, asterix_packet_tree, expand_var_997);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_14_639_compound_639(tvb, offset, asterix_packet_tree, expand_var_1001);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_15_643_compound_643(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //603 expand_var_1007
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1008 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1008 = value_expand_var_1008 >> 4;
  int value_expand_var_1008_s = get_signed_int(value_expand_var_1008, 12);
  double value_expand_var_1008_d = (double)value_expand_var_1008_s * 0.0625;
  proto_tree_add_double (tree_group_0, expand_var_1008, tvb, offset + 0, 2, value_expand_var_1008_d);
  unsigned int value_expand_var_1009 = asterix_get_unsigned_value (tvb, offset + 1, 2);
  value_expand_var_1009 = value_expand_var_1009 & 0b0000111111111111;
  int value_expand_var_1009_s = get_signed_int(value_expand_var_1009, 12);
  double value_expand_var_1009_d = (double)value_expand_var_1009_s * 0.0625;
  proto_tree_add_double (tree_group_0, expand_var_1009, tvb, offset + 1, 2, value_expand_var_1009_d);
  return 3;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_15_647_compound_647(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //603 expand_var_1010
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1011 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1011 = value_expand_var_1011 >> 4;
  double value_expand_var_1011_d = (double)value_expand_var_1011 * 0.0625;
  proto_tree_add_double (tree_group_0, expand_var_1011, tvb, offset + 0, 2, value_expand_var_1011_d);
  unsigned int value_expand_var_1012 = asterix_get_unsigned_value (tvb, offset + 1, 2);
  value_expand_var_1012 = value_expand_var_1012 & 0b0000111111111111;
  double value_expand_var_1012_d = (double)value_expand_var_1012 * 0.0625;
  proto_tree_add_double (tree_group_0, expand_var_1012, tvb, offset + 1, 2, value_expand_var_1012_d);
  unsigned int value_expand_var_1013 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  int value_expand_var_1013_s = get_signed_int(value_expand_var_1013, 8);
  double value_expand_var_1013_d = (double)value_expand_var_1013_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1013, tvb, offset + 3, 1, value_expand_var_1013_d);
  return 4;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_15_652_compound_652(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //603 expand_var_1014
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1015 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_1015_s = get_signed_int(value_expand_var_1015, 8);
  double value_expand_var_1015_d = (double)value_expand_var_1015_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1015, tvb, offset + 0, 1, value_expand_var_1015_d);
  unsigned int value_expand_var_1016 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  int value_expand_var_1016_s = get_signed_int(value_expand_var_1016, 8);
  double value_expand_var_1016_d = (double)value_expand_var_1016_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1016, tvb, offset + 1, 1, value_expand_var_1016_d);
  unsigned int value_expand_var_1017 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  int value_expand_var_1017_s = get_signed_int(value_expand_var_1017, 8);
  double value_expand_var_1017_d = (double)value_expand_var_1017_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1017, tvb, offset + 2, 1, value_expand_var_1017_d);
  unsigned int value_expand_var_1018 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  int value_expand_var_1018_s = get_signed_int(value_expand_var_1018, 8);
  double value_expand_var_1018_d = (double)value_expand_var_1018_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1018, tvb, offset + 3, 1, value_expand_var_1018_d);
  return 4;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_15_657_compound_657(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //603 expand_var_1019
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1020 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_1020_s = get_signed_int(value_expand_var_1020, 8);
  double value_expand_var_1020_d = (double)value_expand_var_1020_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1020, tvb, offset + 0, 1, value_expand_var_1020_d);
  unsigned int value_expand_var_1021 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  int value_expand_var_1021_s = get_signed_int(value_expand_var_1021, 8);
  double value_expand_var_1021_d = (double)value_expand_var_1021_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1021, tvb, offset + 1, 1, value_expand_var_1021_d);
  unsigned int value_expand_var_1022 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  int value_expand_var_1022_s = get_signed_int(value_expand_var_1022, 8);
  double value_expand_var_1022_d = (double)value_expand_var_1022_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1022, tvb, offset + 2, 1, value_expand_var_1022_d);
  unsigned int value_expand_var_1023 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  int value_expand_var_1023_s = get_signed_int(value_expand_var_1023, 8);
  double value_expand_var_1023_d = (double)value_expand_var_1023_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1023, tvb, offset + 3, 1, value_expand_var_1023_d);
  return 4;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //603 expand_var_1006
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 4, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_15_643_compound_643(tvb, offset, asterix_packet_tree, expand_var_1007);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_15_647_compound_647(tvb, offset, asterix_packet_tree, expand_var_1010);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_15_652_compound_652(tvb, offset, asterix_packet_tree, expand_var_1014);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_15_657_compound_657(tvb, offset, asterix_packet_tree, expand_var_1019);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_659_compound_659(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //604 expand_var_1025
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  int value_expand_var_s = get_signed_int(value_expand_var, 24);
  double value_expand_var_d = (double)value_expand_var_s * 0.01;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 3, value_expand_var_d);
  return 3;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_660_compound_660(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //604 expand_var_1026
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.01;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_663_compound_663(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //604 expand_var_1027
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1028 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_1028_d = (double)value_expand_var_1028 * 0.01;
  proto_tree_add_double (tree_group_0, expand_var_1028, tvb, offset + 0, 2, value_expand_var_1028_d);
  unsigned int value_expand_var_1029 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  int value_expand_var_1029_s = get_signed_int(value_expand_var_1029, 8);
  double value_expand_var_1029_d = (double)value_expand_var_1029_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1029, tvb, offset + 2, 1, value_expand_var_1029_d);
  return 3;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_664_compound_664(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //604 expand_var_1030
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_622_compound_622(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_665_compound_665(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //604 expand_var_1031
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_622_compound_622(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_666_compound_666(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //604 expand_var_1032
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_622_compound_622(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //604 expand_var_1024
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 6, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_659_compound_659(tvb, offset, asterix_packet_tree, expand_var_1025);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_660_compound_660(tvb, offset, asterix_packet_tree, expand_var_1026);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_663_compound_663(tvb, offset, asterix_packet_tree, expand_var_1027);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_664_compound_664(tvb, offset, asterix_packet_tree, expand_var_1030);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_665_compound_665(tvb, offset, asterix_packet_tree, expand_var_1031);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_666_compound_666(tvb, offset, asterix_packet_tree, expand_var_1032);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_17_668_compound_668(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //605 expand_var_1034
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 0.01;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_17_672_compound_672(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //605 expand_var_1035
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1036 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_1036_d = (double)value_expand_var_1036 * 0.01;
  proto_tree_add_double (tree_group_0, expand_var_1036, tvb, offset + 0, 2, value_expand_var_1036_d);
  unsigned int value_expand_var_1037 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  int value_expand_var_1037_s = get_signed_int(value_expand_var_1037, 8);
  double value_expand_var_1037_d = (double)value_expand_var_1037_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1037, tvb, offset + 2, 1, value_expand_var_1037_d);
  unsigned int value_expand_var_1038 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  int value_expand_var_1038_s = get_signed_int(value_expand_var_1038, 8);
  double value_expand_var_1038_d = (double)value_expand_var_1038_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1038, tvb, offset + 3, 1, value_expand_var_1038_d);
  return 4;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_17_673_compound_673(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //605 expand_var_1039
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_622_compound_622(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_17_674_compound_674(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //605 expand_var_1040
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_622_compound_622(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_17_675_compound_675(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //605 expand_var_1041
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_622_compound_622(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //605 expand_var_1033
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 5, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_17_668_compound_668(tvb, offset, asterix_packet_tree, expand_var_1034);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_17_672_compound_672(tvb, offset, asterix_packet_tree, expand_var_1035);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_17_673_compound_673(tvb, offset, asterix_packet_tree, expand_var_1039);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_17_674_compound_674(tvb, offset, asterix_packet_tree, expand_var_1040);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_17_675_compound_675(tvb, offset, asterix_packet_tree, expand_var_1041);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_18_rep18(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //480 expand_var_1043
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 5);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 5, value_expand_var);
  return 5;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //480 expand_var_1042
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_18_rep18(tvb, offset, sub_tree, expand_var_1043);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_677_compound_677(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //625 expand_var_1045
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  int value_expand_var_s = get_signed_int(value_expand_var, 24);
  double value_expand_var_d = (double)value_expand_var_s * 0.1;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 3, value_expand_var_d);
  return 3;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_678_compound_678(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //625 expand_var_1046
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  double value_expand_var_d = (double)value_expand_var * 0.1;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 3, value_expand_var_d);
  return 3;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_679_compound_679(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //625 expand_var_1047
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_678_compound_678(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_680_compound_680(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //625 expand_var_1048
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  int value_expand_var_s = get_signed_int(value_expand_var, 24);
  double value_expand_var_d = (double)value_expand_var_s * 0.1;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 3, value_expand_var_d);
  return 3;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_681_compound_681(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //625 expand_var_1049
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  double value_expand_var_d = (double)value_expand_var * 0.1;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 3, value_expand_var_d);
  return 3;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_684_compound_684(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //625 expand_var_1050
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1051 = asterix_get_unsigned_value (tvb, offset + 0, 3);
  double value_expand_var_1051_d = (double)value_expand_var_1051 * 0.1;
  proto_tree_add_double (tree_group_0, expand_var_1051, tvb, offset + 0, 3, value_expand_var_1051_d);
  unsigned int value_expand_var_1052 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  int value_expand_var_1052_s = get_signed_int(value_expand_var_1052, 8);
  double value_expand_var_1052_d = (double)value_expand_var_1052_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1052, tvb, offset + 3, 1, value_expand_var_1052_d);
  return 4;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_685_compound_685(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //625 expand_var_1053
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 0.015625;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_689_compound_689(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //625 expand_var_1054
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1055 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_1055_d = (double)value_expand_var_1055 * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1055, tvb, offset + 0, 2, value_expand_var_1055_d);
  unsigned int value_expand_var_1056 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  int value_expand_var_1056_s = get_signed_int(value_expand_var_1056, 8);
  double value_expand_var_1056_d = (double)value_expand_var_1056_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1056, tvb, offset + 2, 1, value_expand_var_1056_d);
  unsigned int value_expand_var_1057 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  int value_expand_var_1057_s = get_signed_int(value_expand_var_1057, 8);
  double value_expand_var_1057_d = (double)value_expand_var_1057_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1057, tvb, offset + 3, 1, value_expand_var_1057_d);
  return 4;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //625 expand_var_1044
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 8, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_677_compound_677(tvb, offset, asterix_packet_tree, expand_var_1045);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_678_compound_678(tvb, offset, asterix_packet_tree, expand_var_1046);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_679_compound_679(tvb, offset, asterix_packet_tree, expand_var_1047);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_680_compound_680(tvb, offset, asterix_packet_tree, expand_var_1048);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_681_compound_681(tvb, offset, asterix_packet_tree, expand_var_1049);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_684_compound_684(tvb, offset, asterix_packet_tree, expand_var_1050);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_685_compound_685(tvb, offset, asterix_packet_tree, expand_var_1053);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_689_compound_689(tvb, offset, asterix_packet_tree, expand_var_1054);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_691_compound_691(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //626 expand_var_1059
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_659_compound_659(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_692_compound_692(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //626 expand_var_1060
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.015625;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_693_compound_693(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //626 expand_var_1061
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_685_compound_685(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_696_compound_696(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //626 expand_var_1062
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1063 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_1063_d = (double)value_expand_var_1063 * 0.015625;
  proto_tree_add_double (tree_group_0, expand_var_1063, tvb, offset + 0, 2, value_expand_var_1063_d);
  unsigned int value_expand_var_1064 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  int value_expand_var_1064_s = get_signed_int(value_expand_var_1064, 8);
  double value_expand_var_1064_d = (double)value_expand_var_1064_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1064, tvb, offset + 2, 1, value_expand_var_1064_d);
  return 3;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_697_compound_697(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //626 expand_var_1065
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_s = get_signed_int(value_expand_var, 8);
  double value_expand_var_d = (double)value_expand_var_s * 0.0078125;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_698_compound_698(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //626 expand_var_1066
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_697_compound_697(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_699_compound_699(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //626 expand_var_1067
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_697_compound_697(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_700_compound_700(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //626 expand_var_1068
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_697_compound_697(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_701_compound_701(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //626 expand_var_1069
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_697_compound_697(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_702_compound_702(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //626 expand_var_1070
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_697_compound_697(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //626 expand_var_1058
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 10, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_691_compound_691(tvb, offset, asterix_packet_tree, expand_var_1059);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_692_compound_692(tvb, offset, asterix_packet_tree, expand_var_1060);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_693_compound_693(tvb, offset, asterix_packet_tree, expand_var_1061);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_696_compound_696(tvb, offset, asterix_packet_tree, expand_var_1062);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_697_compound_697(tvb, offset, asterix_packet_tree, expand_var_1065);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_698_compound_698(tvb, offset, asterix_packet_tree, expand_var_1066);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_699_compound_699(tvb, offset, asterix_packet_tree, expand_var_1067);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_700_compound_700(tvb, offset, asterix_packet_tree, expand_var_1068);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_701_compound_701(tvb, offset, asterix_packet_tree, expand_var_1069);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_702_compound_702(tvb, offset, asterix_packet_tree, expand_var_1070);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_261_compound_261(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //627 expand_var_1072
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_704_compound_704(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //627 expand_var_1073
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.0006866455078125;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_705_compound_705(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //627 expand_var_1074
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_704_compound_704(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_706_compound_706(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //627 expand_var_1075
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 0.00274658203125;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_709_compound_709(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //627 expand_var_1076
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1077 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_1077_d = (double)value_expand_var_1077 * 0.0006866455078125;
  proto_tree_add_double (tree_group_0, expand_var_1077, tvb, offset + 0, 2, value_expand_var_1077_d);
  unsigned int value_expand_var_1078 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  int value_expand_var_1078_s = get_signed_int(value_expand_var_1078, 8);
  double value_expand_var_1078_d = (double)value_expand_var_1078_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1078, tvb, offset + 2, 1, value_expand_var_1078_d);
  return 3;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_712_compound_712(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //627 expand_var_1079
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1080 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_1080_d = (double)value_expand_var_1080 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_1080, tvb, offset + 0, 2, value_expand_var_1080_d);
  unsigned int value_expand_var_1081 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_1081_d = (double)value_expand_var_1081 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_1081, tvb, offset + 2, 2, value_expand_var_1081_d);
  return 4;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //627 expand_var_1071
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 6, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_261_compound_261(tvb, offset, asterix_packet_tree, expand_var_1072);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_704_compound_704(tvb, offset, asterix_packet_tree, expand_var_1073);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_705_compound_705(tvb, offset, asterix_packet_tree, expand_var_1074);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_706_compound_706(tvb, offset, asterix_packet_tree, expand_var_1075);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_709_compound_709(tvb, offset, asterix_packet_tree, expand_var_1076);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_712_compound_712(tvb, offset, asterix_packet_tree, expand_var_1079);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_714_compound_714(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //628 expand_var_1083
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_706_compound_706(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_715_compound_715(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //628 expand_var_1084
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_704_compound_704(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_716_compound_716(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //628 expand_var_1085
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_704_compound_704(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_717_compound_717(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //628 expand_var_1086
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 0.00274658203125;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_720_compound_720(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //628 expand_var_1087
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1088 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_1088_d = (double)value_expand_var_1088 * 0.0006866455078125;
  proto_tree_add_double (tree_group_0, expand_var_1088, tvb, offset + 0, 2, value_expand_var_1088_d);
  unsigned int value_expand_var_1089 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  int value_expand_var_1089_s = get_signed_int(value_expand_var_1089, 8);
  double value_expand_var_1089_d = (double)value_expand_var_1089_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1089, tvb, offset + 2, 1, value_expand_var_1089_d);
  return 3;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_723_compound_723(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //628 expand_var_1090
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1091 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_1091_s = get_signed_int(value_expand_var_1091, 16);
  double value_expand_var_1091_d = (double)value_expand_var_1091_s * 0.00274658203125;
  proto_tree_add_double (tree_group_0, expand_var_1091, tvb, offset + 0, 2, value_expand_var_1091_d);
  unsigned int value_expand_var_1092 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_1092_s = get_signed_int(value_expand_var_1092, 16);
  double value_expand_var_1092_d = (double)value_expand_var_1092_s * 0.00274658203125;
  proto_tree_add_double (tree_group_0, expand_var_1092, tvb, offset + 2, 2, value_expand_var_1092_d);
  return 4;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //628 expand_var_1082
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 6, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_714_compound_714(tvb, offset, asterix_packet_tree, expand_var_1083);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_715_compound_715(tvb, offset, asterix_packet_tree, expand_var_1084);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_716_compound_716(tvb, offset, asterix_packet_tree, expand_var_1085);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_717_compound_717(tvb, offset, asterix_packet_tree, expand_var_1086);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_720_compound_720(tvb, offset, asterix_packet_tree, expand_var_1087);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_723_compound_723(tvb, offset, asterix_packet_tree, expand_var_1090);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_23_725_compound_725(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //630 expand_var_1094
{
  int value_expand_var = asterix_get_signed_value (tvb, offset + 0, 1);
  proto_tree_add_int (tree, expand_var, tvb, offset + 0, 1, value_expand_var);
  return 1;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_23_726_compound_726(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //630 expand_var_1095
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_23_725_compound_725(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_23_728_compound_728(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //630 expand_var_1096
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 7, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 7, spare_item_0);
  int value_expand_var_1097 = asterix_get_signed_value (tvb, offset + 0, 2);
  value_expand_var_1097 = value_expand_var_1097 & 0b0000000111111111;
  proto_tree_add_int (tree_group_0, expand_var_1097, tvb, offset + 0, 2, value_expand_var_1097);
  return 2;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_23_729_compound_729(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //630 expand_var_1098
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_23_725_compound_725(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //630 expand_var_1093
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 4, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_23_725_compound_725(tvb, offset, asterix_packet_tree, expand_var_1094);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_23_726_compound_726(tvb, offset, asterix_packet_tree, expand_var_1095);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_23_728_compound_728(tvb, offset, asterix_packet_tree, expand_var_1096);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_23_729_compound_729(tvb, offset, asterix_packet_tree, expand_var_1098);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_24_rep19(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //631 expand_var_1100
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1101 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_1101_d = (double)value_expand_var_1101 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_1101, tvb, offset + 0, 2, value_expand_var_1101_d);
  unsigned int value_expand_var_1102 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_1102_s = get_signed_int(value_expand_var_1102, 16);
  double value_expand_var_1102_d = (double)value_expand_var_1102_s * 0.00274658203125;
  proto_tree_add_double (tree_group_0, expand_var_1102, tvb, offset + 2, 2, value_expand_var_1102_d);
  unsigned int value_expand_var_1103 = asterix_get_unsigned_value (tvb, offset + 4, 2);
  double value_expand_var_1103_d = (double)value_expand_var_1103 * 0.152587890625;
  proto_tree_add_double (tree_group_0, expand_var_1103, tvb, offset + 4, 2, value_expand_var_1103_d);
  unsigned int value_expand_var_1104 = asterix_get_unsigned_value (tvb, offset + 6, 2);
  double value_expand_var_1104_d = (double)value_expand_var_1104 * 0.152587890625;
  proto_tree_add_double (tree_group_0, expand_var_1104, tvb, offset + 6, 2, value_expand_var_1104_d);
  return 8;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //631 expand_var_1099
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_15_ed_major_1_ed_minor_0_datafield_24_rep19(tvb, offset, sub_tree, expand_var_1100);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_15_ed_major_1_ed_minor_0_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_1105
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_15_ed_major_1_ed_minor_0_uap_table_expand[] = {
  &expand_var_927, //010
  &expand_var_928, //000
  &expand_var_931, //015
  &expand_var_932, //020
  &expand_var_937, //030
  &expand_var_938, //145
  &expand_var_939, //161
  &expand_var_940, //170
  &expand_var_948, //050
  &expand_var_950, //270
  &expand_var_955, //300
  &expand_var_959, //400
  &expand_var_962, //600
  &expand_var_974, //601
  &expand_var_989, //602
  &expand_var_1006, //603
  &expand_var_1024, //604
  &expand_var_1033, //605
  &expand_var_1042, //480
  &expand_var_1044, //625
  &expand_var_1058, //626
  &expand_var_1071, //627
  &expand_var_1082, //628
  &expand_var_1093, //630
  &expand_var_1099, //631
  &expand_var_1105, //S
};
static const ttt cat_15_ed_major_1_ed_minor_0_uap_table[] = {
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_0_uap, //010
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_1_uap, //000
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_2_uap, //015
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_3_uap, //020
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_4_uap, //030
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_5_uap, //145
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_6_uap, //161
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_7_uap, //170
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_8_uap, //050
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_uap, //270
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_10_uap, //300
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_11_uap, //400
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_12_uap, //600
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_uap, //601
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_14_uap, //602
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_15_uap, //603
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_uap, //604
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_17_uap, //605
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_18_uap, //480
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_uap, //625
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_uap, //626
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_uap, //627
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_uap, //628
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_23_uap, //630
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_24_uap, //631
  &dissect_cat_15_ed_major_1_ed_minor_0_datafield_25_uap, //S
};
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_1106
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_1107
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_1108
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_1109
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_1110
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //145 expand_var_1111
{
  return dissect_cat_9_ed_major_2_ed_minor_1_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_1112
{
  return dissect_cat_8_ed_major_1_ed_minor_2_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_1113
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_1114
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_1115
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_1116
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_1117
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //600 expand_var_1118
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //601 expand_var_1119
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //602 expand_var_1120
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //603 expand_var_1121
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //604 expand_var_1122
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //605 expand_var_1123
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //480 expand_var_1124
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //625 expand_var_1125
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //626 expand_var_1126
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //627 expand_var_1127
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //628 expand_var_1128
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //630 expand_var_1129
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //631 expand_var_1130
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_1_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_1131
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_15_ed_major_1_ed_minor_1_uap_table_expand[] = {
  &expand_var_1106, //010
  &expand_var_1107, //000
  &expand_var_1108, //015
  &expand_var_1109, //020
  &expand_var_1110, //030
  &expand_var_1111, //145
  &expand_var_1112, //161
  &expand_var_1113, //170
  &expand_var_1114, //050
  &expand_var_1115, //270
  &expand_var_1116, //300
  &expand_var_1117, //400
  &expand_var_1118, //600
  &expand_var_1119, //601
  &expand_var_1120, //602
  &expand_var_1121, //603
  &expand_var_1122, //604
  &expand_var_1123, //605
  &expand_var_1124, //480
  &expand_var_1125, //625
  &expand_var_1126, //626
  &expand_var_1127, //627
  &expand_var_1128, //628
  &expand_var_1129, //630
  &expand_var_1130, //631
  &expand_var_1131, //S
};
static const ttt cat_15_ed_major_1_ed_minor_1_uap_table[] = {
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_0_uap, //010
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_1_uap, //000
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_2_uap, //015
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_3_uap, //020
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_4_uap, //030
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_5_uap, //145
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_6_uap, //161
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_7_uap, //170
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_8_uap, //050
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_9_uap, //270
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_10_uap, //300
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_11_uap, //400
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_12_uap, //600
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_13_uap, //601
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_14_uap, //602
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_15_uap, //603
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_16_uap, //604
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_17_uap, //605
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_18_uap, //480
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_19_uap, //625
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_20_uap, //626
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_21_uap, //627
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_22_uap, //628
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_23_uap, //630
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_24_uap, //631
  &dissect_cat_15_ed_major_1_ed_minor_1_datafield_25_uap, //S
};
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_1132
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_1133
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_1134
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_1135
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_1136
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //145 expand_var_1137
{
  return dissect_cat_9_ed_major_2_ed_minor_1_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_1138
{
  return dissect_cat_8_ed_major_1_ed_minor_2_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_1139
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_1140
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_1141
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_1142
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_1143
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //600 expand_var_1144
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //601 expand_var_1145
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //602 expand_var_1146
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //603 expand_var_1147
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //604 expand_var_1148
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_16_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //605 expand_var_1149
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //480 expand_var_1150
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //625 expand_var_1151
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_19_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //626 expand_var_1152
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //627 expand_var_1153
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_21_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //628 expand_var_1154
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //630 expand_var_1155
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //631 expand_var_1156
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_15_ed_major_1_ed_minor_2_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_1157
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_15_ed_major_1_ed_minor_2_uap_table_expand[] = {
  &expand_var_1132, //010
  &expand_var_1133, //000
  &expand_var_1134, //015
  &expand_var_1135, //020
  &expand_var_1136, //030
  &expand_var_1137, //145
  &expand_var_1138, //161
  &expand_var_1139, //170
  &expand_var_1140, //050
  &expand_var_1141, //270
  &expand_var_1142, //300
  &expand_var_1143, //400
  &expand_var_1144, //600
  &expand_var_1145, //601
  &expand_var_1146, //602
  &expand_var_1147, //603
  &expand_var_1148, //604
  &expand_var_1149, //605
  &expand_var_1150, //480
  &expand_var_1151, //625
  &expand_var_1152, //626
  &expand_var_1153, //627
  &expand_var_1154, //628
  &expand_var_1155, //630
  &expand_var_1156, //631
  &expand_var_1157, //S
};
static const ttt cat_15_ed_major_1_ed_minor_2_uap_table[] = {
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_0_uap, //010
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_1_uap, //000
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_2_uap, //015
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_3_uap, //020
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_4_uap, //030
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_5_uap, //145
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_6_uap, //161
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_7_uap, //170
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_8_uap, //050
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_9_uap, //270
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_10_uap, //300
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_11_uap, //400
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_12_uap, //600
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_13_uap, //601
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_14_uap, //602
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_15_uap, //603
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_16_uap, //604
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_17_uap, //605
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_18_uap, //480
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_19_uap, //625
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_20_uap, //626
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_21_uap, //627
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_22_uap, //628
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_23_uap, //630
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_24_uap, //631
  &dissect_cat_15_ed_major_1_ed_minor_2_datafield_25_uap, //S
};
static int dissect_cat_16_ed_major_1_ed_minor_0_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_1158
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_16_ed_major_1_ed_minor_0_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_1159
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_16_ed_major_1_ed_minor_0_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_1160
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_16_ed_major_1_ed_minor_0_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_1161
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_16_ed_major_1_ed_minor_0_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_1162
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 1, value_expand_var);
  return 1;
}
static int dissect_cat_16_ed_major_1_ed_minor_0_datafield_5_rep20(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_1164
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1165 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree_group_0, expand_var_1165, tvb, offset + 0, 2, value_expand_var_1165);
  unsigned int value_expand_var_1166 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  proto_tree_add_uint (tree_group_0, expand_var_1166, tvb, offset + 2, 2, value_expand_var_1166);
  unsigned int value_expand_var_1167 = asterix_get_unsigned_value (tvb, offset + 4, 2);
  proto_tree_add_uint (tree_group_0, expand_var_1167, tvb, offset + 4, 2, value_expand_var_1167);
  return 6;
}
static int dissect_cat_16_ed_major_1_ed_minor_0_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_1163
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_16_ed_major_1_ed_minor_0_datafield_5_rep20(tvb, offset, sub_tree, expand_var_1164);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_16_ed_major_1_ed_minor_0_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_1168
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1169 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  int value_expand_var_1169_s = get_signed_int(value_expand_var_1169, 32);
  double value_expand_var_1169_d = (double)value_expand_var_1169_s * 8.381903171539307e-08;
  proto_tree_add_double (tree_group_0, expand_var_1169, tvb, offset + 0, 4, value_expand_var_1169_d);
  unsigned int value_expand_var_1170 = asterix_get_unsigned_value (tvb, offset + 4, 4);
  int value_expand_var_1170_s = get_signed_int(value_expand_var_1170, 32);
  double value_expand_var_1170_d = (double)value_expand_var_1170_s * 8.381903171539307e-08;
  proto_tree_add_double (tree_group_0, expand_var_1170, tvb, offset + 4, 4, value_expand_var_1170_d);
  return 8;
}
static int dissect_cat_16_ed_major_1_ed_minor_0_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //405 expand_var_1171
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 0.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_16_ed_major_1_ed_minor_0_datafield_8_rep21(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //410 expand_var_1173
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 21, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1174 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree_group_0, expand_var_1174, tvb, offset + 0, 2, value_expand_var_1174);
  unsigned int value_expand_var_1175 = asterix_get_unsigned_value (tvb, offset + 2, 4);
  int value_expand_var_1175_s = get_signed_int(value_expand_var_1175, 32);
  double value_expand_var_1175_d = (double)value_expand_var_1175_s * 8.381903171539307e-08;
  proto_tree_add_double (tree_group_0, expand_var_1175, tvb, offset + 2, 4, value_expand_var_1175_d);
  unsigned int value_expand_var_1176 = asterix_get_unsigned_value (tvb, offset + 6, 4);
  int value_expand_var_1176_s = get_signed_int(value_expand_var_1176, 32);
  double value_expand_var_1176_d = (double)value_expand_var_1176_s * 8.381903171539307e-08;
  proto_tree_add_double (tree_group_0, expand_var_1176, tvb, offset + 6, 4, value_expand_var_1176_d);
  unsigned int value_expand_var_1177 = asterix_get_unsigned_value (tvb, offset + 10, 2);
  int value_expand_var_1177_s = get_signed_int(value_expand_var_1177, 16);
  double value_expand_var_1177_d = (double)value_expand_var_1177_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_1177, tvb, offset + 10, 2, value_expand_var_1177_d);
  unsigned int value_expand_var_1178 = asterix_get_unsigned_value (tvb, offset + 12, 4);
  int value_expand_var_1178_s = get_signed_int(value_expand_var_1178, 32);
  double value_expand_var_1178_d = (double)value_expand_var_1178_s * 2.0;
  proto_tree_add_double (tree_group_0, expand_var_1178, tvb, offset + 12, 4, value_expand_var_1178_d);
  proto_item *spare_item_128 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 128, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 128, 4, spare_item_128);
  unsigned int value_expand_var_1179 = asterix_get_unsigned_value (tvb, offset + 16, 3);
  value_expand_var_1179 = value_expand_var_1179 & 0b000011111111111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_1179, tvb, offset + 16, 3, value_expand_var_1179);
  unsigned int value_expand_var_1180 = asterix_get_unsigned_value (tvb, offset + 19, 2);
  proto_tree_add_uint (tree_group_0, expand_var_1180, tvb, offset + 19, 2, value_expand_var_1180);
  return 21;
}
static int dissect_cat_16_ed_major_1_ed_minor_0_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //410 expand_var_1172
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_16_ed_major_1_ed_minor_0_datafield_8_rep21(tvb, offset, sub_tree, expand_var_1173);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_16_ed_major_1_ed_minor_0_datafield_9_rep22(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //420 expand_var_1182
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 12, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1183 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree_group_0, expand_var_1183, tvb, offset + 0, 2, value_expand_var_1183);
  unsigned int value_expand_var_1184 = asterix_get_unsigned_value (tvb, offset + 2, 4);
  int value_expand_var_1184_s = get_signed_int(value_expand_var_1184, 32);
  double value_expand_var_1184_d = (double)value_expand_var_1184_s * 8.381903171539307e-08;
  proto_tree_add_double (tree_group_0, expand_var_1184, tvb, offset + 2, 4, value_expand_var_1184_d);
  unsigned int value_expand_var_1185 = asterix_get_unsigned_value (tvb, offset + 6, 4);
  int value_expand_var_1185_s = get_signed_int(value_expand_var_1185, 32);
  double value_expand_var_1185_d = (double)value_expand_var_1185_s * 8.381903171539307e-08;
  proto_tree_add_double (tree_group_0, expand_var_1185, tvb, offset + 6, 4, value_expand_var_1185_d);
  unsigned int value_expand_var_1186 = asterix_get_unsigned_value (tvb, offset + 10, 2);
  int value_expand_var_1186_s = get_signed_int(value_expand_var_1186, 16);
  double value_expand_var_1186_d = (double)value_expand_var_1186_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_1186, tvb, offset + 10, 2, value_expand_var_1186_d);
  return 12;
}
static int dissect_cat_16_ed_major_1_ed_minor_0_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //420 expand_var_1181
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_16_ed_major_1_ed_minor_0_datafield_9_rep22(tvb, offset, sub_tree, expand_var_1182);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_16_ed_major_1_ed_minor_0_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_1187
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_16_ed_major_1_ed_minor_0_uap_table_expand[] = {
  &expand_var_1158, //010
  &expand_var_1159, //015
  &expand_var_1160, //000
  &expand_var_1161, //140
  &expand_var_1162, //200
  &expand_var_1163, //300
  &expand_var_1168, //400
  &expand_var_1171, //405
  &expand_var_1172, //410
  &expand_var_1181, //420
  &expand_var_1187, //S
};
static const ttt cat_16_ed_major_1_ed_minor_0_uap_table[] = {
  &dissect_cat_16_ed_major_1_ed_minor_0_datafield_0_uap, //010
  &dissect_cat_16_ed_major_1_ed_minor_0_datafield_1_uap, //015
  &dissect_cat_16_ed_major_1_ed_minor_0_datafield_2_uap, //000
  &dissect_cat_16_ed_major_1_ed_minor_0_datafield_3_uap, //140
  &dissect_cat_16_ed_major_1_ed_minor_0_datafield_4_uap, //200
  &dissect_cat_16_ed_major_1_ed_minor_0_datafield_5_uap, //300
  &dissect_cat_16_ed_major_1_ed_minor_0_datafield_6_uap, //400
  &dissect_cat_16_ed_major_1_ed_minor_0_datafield_7_uap, //405
  &dissect_cat_16_ed_major_1_ed_minor_0_datafield_8_uap, //410
  &dissect_cat_16_ed_major_1_ed_minor_0_datafield_9_uap, //420
  &dissect_cat_16_ed_major_1_ed_minor_0_datafield_10_uap, //S
};
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_1188
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //012 expand_var_1189
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_1190
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //350 expand_var_1191
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_1192
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_449_compound_449(tvb, offset, tree, expand_var);
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //221 expand_var_1193
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_1194
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //045 expand_var_1195
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1196 = asterix_get_unsigned_value (tvb, offset + 0, 3);
  int value_expand_var_1196_s = get_signed_int(value_expand_var_1196, 24);
  double value_expand_var_1196_d = (double)value_expand_var_1196_s * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_1196, tvb, offset + 0, 3, value_expand_var_1196_d);
  unsigned int value_expand_var_1197 = asterix_get_unsigned_value (tvb, offset + 3, 3);
  int value_expand_var_1197_s = get_signed_int(value_expand_var_1197, 24);
  double value_expand_var_1197_d = (double)value_expand_var_1197_s * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_1197, tvb, offset + 3, 3, value_expand_var_1197_d);
  return 6;
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_1198
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1199, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1200, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1201, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_1202);
  return 2;
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_1203
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1204, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1205, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1206 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1206 = value_expand_var_1206 & 0b0011111111111111;
  double value_expand_var_1206_d = (double)value_expand_var_1206 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_1206, tvb, offset + 0, 2, value_expand_var_1206_d);
  return 2;
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_1207
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1208 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_1208_d = (double)value_expand_var_1208 * 6.103515625e-05;
  proto_tree_add_double (tree_group_0, expand_var_1208, tvb, offset + 0, 2, value_expand_var_1208_d);
  unsigned int value_expand_var_1209 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_1209_d = (double)value_expand_var_1209 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_1209, tvb, offset + 2, 2, value_expand_var_1209_d);
  return 4;
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_1210
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1211, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1212, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_4 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 4, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 4, spare_item_4);
  return 1;
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //240 expand_var_1213
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1214, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1215, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_2 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 2, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 6, spare_item_2);
  return 1;
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_13_rep23(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_1217
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_449_compound_449(tvb, offset, tree, expand_var);
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_1216
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_17_ed_major_1_ed_minor_3_datafield_13_rep23(tvb, offset, sub_tree, expand_var_1217);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //360 expand_var_1218
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_17_ed_major_1_ed_minor_3_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_1219
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_17_ed_major_1_ed_minor_3_uap_table_expand[] = {
  &expand_var_1188, //010
  &expand_var_1189, //012
  &expand_var_1190, //000
  &expand_var_1191, //350
  &expand_var_1192, //220
  &expand_var_1193, //221
  &expand_var_1194, //140
  &expand_var_1195, //045
  &expand_var_1198, //070
  &expand_var_1203, //050
  &expand_var_1207, //200
  &expand_var_1210, //230
  &expand_var_1213, //240
  &expand_var_1216, //210
  &expand_var_1218, //360
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_1219, //S
};
static const ttt cat_17_ed_major_1_ed_minor_3_uap_table[] = {
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_0_uap, //010
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_1_uap, //012
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_2_uap, //000
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_3_uap, //350
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_4_uap, //220
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_5_uap, //221
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_6_uap, //140
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_7_uap, //045
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_8_uap, //070
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_9_uap, //050
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_10_uap, //200
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_11_uap, //230
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_12_uap, //240
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_13_uap, //210
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_14_uap, //360
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_17_ed_major_1_ed_minor_3_datafield_20_uap, //S
};
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //036 expand_var_1220
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //037 expand_var_1221
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_1222
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //001 expand_var_1223
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1224, tvb, (offset * 8) + 0, 4, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1225, tvb, (offset * 8) + 4, 4, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //005 expand_var_1226
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_449_compound_449(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //016 expand_var_1227
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 4);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 4, value_expand_var);
  return 4;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_6_rep24(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //017 expand_var_1229
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 4);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 4, value_expand_var);
  return 4;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //017 expand_var_1228
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_18_ed_major_1_ed_minor_7_datafield_6_rep24(tvb, offset, sub_tree, expand_var_1229);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //018 expand_var_1230
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 1, spare_item_0);
  unsigned int value_expand_var_1231 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1231 = value_expand_var_1231 >> 2;
  value_expand_var_1231 = value_expand_var_1231 & 0b011111;
  proto_tree_add_uint (tree_group_0, expand_var_1231, tvb, offset + 0, 1, value_expand_var_1231);
  proto_tree_add_bits_item(tree_group_0, expand_var_1232, tvb, (offset * 8) + 6, 2, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //019 expand_var_1233
{
  unsigned int bytes = asterix_get_unsigned_value(tvb , offset, 1);
  int len = 1 + bytes;
  proto_tree_add_item (tree, expand_var, tvb, offset, len, ENC_NA);
  return len;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //028 expand_var_1234
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 2, value_expand_var);
  return 2;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_1235
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1236 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1236 = value_expand_var_1236 >> 3;
  proto_tree_add_uint (tree_group_0, expand_var_1236, tvb, offset + 0, 1, value_expand_var_1236);
  proto_item *spare_item_5 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 5, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 5, 3, spare_item_5);
  proto_tree_add_bits_item(tree_group_0, expand_var_1237, tvb, (offset * 8) + 8, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1238, tvb, (offset * 8) + 9, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1239, tvb, (offset * 8) + 10, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1240, tvb, (offset * 8) + 11, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_13 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 13, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 13, 3, spare_item_13);
  return 2;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //025 expand_var_1241
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_6_rep24(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //027 expand_var_1242
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //029 expand_var_1243
{
  proto_tree_add_item (tree, expand_var, tvb, offset + 0, 7, ENC_NA);
  return 7;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //002 expand_var_1244
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //006 expand_var_1245
{
  return dissect_cat_17_ed_major_1_ed_minor_3_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //007 expand_var_1246
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1247, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1248, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1249, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1250, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_4 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 4, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 4, spare_item_4);
  return 1;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //008 expand_var_1251
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_1252, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1253, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1254, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1255, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_0_4 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 4, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 2, spare_item_0_4);
  proto_tree_add_bits_item(datablock_tree, expand_var_1256, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1257, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_1258, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_1_1 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 1, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 1, 6, spare_item_1_1);
  proto_tree_add_bits_item(datablock_tree, expand_var_1259, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //009 expand_var_1260
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_1261, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1262, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1263, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1264, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1265, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1266, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1267, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1268, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_1269, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1270, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1271, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1272, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1273, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_1_5 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 5, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 5, 2, spare_item_1_5);
  proto_tree_add_bits_item(datablock_tree, expand_var_1274, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_1275
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 5, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_1276, tvb, (offset * 8) + 5, 3, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //011 expand_var_1277
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 7);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 7, value_expand_var);
  return 7;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //014 expand_var_1278
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1279 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_1279_d = (double)value_expand_var_1279 * 0.00390625;
  proto_tree_add_double (tree_group_0, expand_var_1279, tvb, offset + 0, 2, value_expand_var_1279_d);
  unsigned int value_expand_var_1280 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_1280_d = (double)value_expand_var_1280 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_1280, tvb, offset + 2, 2, value_expand_var_1280_d);
  return 4;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_1281
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1282 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_1282_s = get_signed_int(value_expand_var_1282, 16);
  double value_expand_var_1282_d = (double)value_expand_var_1282_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1282, tvb, offset + 0, 2, value_expand_var_1282_d);
  unsigned int value_expand_var_1283 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_1283_s = get_signed_int(value_expand_var_1283, 16);
  double value_expand_var_1283_d = (double)value_expand_var_1283_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_1283, tvb, offset + 2, 2, value_expand_var_1283_d);
  return 4;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_1284
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_6_rep24(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //021 expand_var_1285
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1286 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1286 = value_expand_var_1286 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_1286, tvb, offset + 0, 1, value_expand_var_1286);
  unsigned int value_expand_var_1287 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1287 = value_expand_var_1287 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_1287, tvb, offset + 0, 1, value_expand_var_1287);
  unsigned int value_expand_var_1288 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_1288, tvb, offset + 1, 1, value_expand_var_1288);
  unsigned int value_expand_var_1289 = asterix_get_unsigned_value (tvb, offset + 2, 4);
  proto_tree_add_uint (tree_group_0, expand_var_1289, tvb, offset + 2, 4, value_expand_var_1289);
  return 6;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //022 expand_var_1290
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 5, spare_item_0);
  unsigned int value_expand_var_1291 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  value_expand_var_1291 = value_expand_var_1291 & 0b00000111111111111111111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_1291, tvb, offset + 0, 4, value_expand_var_1291);
  return 4;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //023 expand_var_1292
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 7);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 7, value_expand_var);
  return 7;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //004 expand_var_1293
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1294 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1294 = value_expand_var_1294 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_1294, tvb, offset + 0, 1, value_expand_var_1294);
  unsigned int value_expand_var_1295 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1295 = value_expand_var_1295 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_1295, tvb, offset + 0, 1, value_expand_var_1295);
  return 1;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_28_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //031 expand_var_1296
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 6);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 6, value_expand_var);
  return 6;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_29_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //032 expand_var_1297
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1298, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1299, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1300, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_1301);
  return 2;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_30_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //033 expand_var_1302
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1303, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1304, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1305 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1305 = value_expand_var_1305 & 0b0011111111111111;
  int value_expand_var_1305_s = get_signed_int(value_expand_var_1305, 14);
  double value_expand_var_1305_d = (double)value_expand_var_1305_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_1305, tvb, offset + 0, 2, value_expand_var_1305_d);
  return 2;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_31_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //034 expand_var_1306
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 6.103515625e-05;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_32_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //035 expand_var_1307
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //012 expand_var_1308
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1309, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1310, tvb, (offset * 8) + 1, 7, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_18_ed_major_1_ed_minor_7_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //013 expand_var_1311
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 1, value_expand_var);
  return 1;
}
static int* cat_18_ed_major_1_ed_minor_7_uap_table_expand[] = {
  &expand_var_1220, //036
  &expand_var_1221, //037
  &expand_var_1222, //000
  &expand_var_1223, //001
  &expand_var_1226, //005
  &expand_var_1227, //016
  &expand_var_1228, //017
  &expand_var_1230, //018
  &expand_var_1233, //019
  &expand_var_1234, //028
  &expand_var_1235, //030
  &expand_var_1241, //025
  &expand_var_1242, //027
  &expand_var_1243, //029
  &expand_var_1244, //002
  &expand_var_1245, //006
  &expand_var_1246, //007
  &expand_var_1251, //008
  &expand_var_1260, //009
  &expand_var_1275, //010
  &expand_var_1277, //011
  &expand_var_1278, //014
  &expand_var_1281, //015
  &expand_var_1284, //020
  &expand_var_1285, //021
  &expand_var_1290, //022
  &expand_var_1292, //023
  &expand_var_1293, //004
  &expand_var_1296, //031
  &expand_var_1297, //032
  &expand_var_1302, //033
  &expand_var_1306, //034
  &expand_var_1307, //035
  &expand_var_1308, //012
  &expand_var_1311, //01
};
static const ttt cat_18_ed_major_1_ed_minor_7_uap_table[] = {
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_0_uap, //036
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_1_uap, //037
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_2_uap, //000
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_3_uap, //001
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_4_uap, //005
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_5_uap, //016
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_6_uap, //017
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_7_uap, //018
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_8_uap, //019
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_9_uap, //028
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_10_uap, //030
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_11_uap, //025
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_12_uap, //027
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_13_uap, //029
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_14_uap, //002
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_15_uap, //006
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_16_uap, //007
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_17_uap, //008
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_18_uap, //009
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_19_uap, //010
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_20_uap, //011
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_21_uap, //014
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_22_uap, //015
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_23_uap, //020
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_24_uap, //021
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_25_uap, //022
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_26_uap, //023
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_27_uap, //004
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_28_uap, //031
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_29_uap, //032
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_30_uap, //033
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_31_uap, //034
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_32_uap, //035
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_33_uap, //012
  &dissect_cat_18_ed_major_1_ed_minor_7_datafield_34_uap, //01
};
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //036 expand_var_1312
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //037 expand_var_1313
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_1314
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //001 expand_var_1315
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //005 expand_var_1316
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_449_compound_449(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //016 expand_var_1317
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //017 expand_var_1318
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //018 expand_var_1319
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //019 expand_var_1320
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //028 expand_var_1321
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_1322
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //025 expand_var_1323
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_6_rep24(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //027 expand_var_1324
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //029 expand_var_1325
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //002 expand_var_1326
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //006 expand_var_1327
{
  return dissect_cat_17_ed_major_1_ed_minor_3_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //007 expand_var_1328
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_16_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //008 expand_var_1329
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //009 expand_var_1330
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_1331
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_19_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //011 expand_var_1332
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //014 expand_var_1333
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_21_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_1334
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_1335
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_6_rep24(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //021 expand_var_1336
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //022 expand_var_1337
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //023 expand_var_1338
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //004 expand_var_1339
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_27_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_28_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //031 expand_var_1340
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_28_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_29_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //032 expand_var_1341
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_29_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_30_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //033 expand_var_1342
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_30_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_31_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //034 expand_var_1343
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_31_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_32_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //035 expand_var_1344
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //012 expand_var_1345
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_33_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_18_ed_major_1_ed_minor_8_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //013 expand_var_1346
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_34_uap(tvb, offset, tree, expand_var);
}
static int* cat_18_ed_major_1_ed_minor_8_uap_table_expand[] = {
  &expand_var_1312, //036
  &expand_var_1313, //037
  &expand_var_1314, //000
  &expand_var_1315, //001
  &expand_var_1316, //005
  &expand_var_1317, //016
  &expand_var_1318, //017
  &expand_var_1319, //018
  &expand_var_1320, //019
  &expand_var_1321, //028
  &expand_var_1322, //030
  &expand_var_1323, //025
  &expand_var_1324, //027
  &expand_var_1325, //029
  &expand_var_1326, //002
  &expand_var_1327, //006
  &expand_var_1328, //007
  &expand_var_1329, //008
  &expand_var_1330, //009
  &expand_var_1331, //010
  &expand_var_1332, //011
  &expand_var_1333, //014
  &expand_var_1334, //015
  &expand_var_1335, //020
  &expand_var_1336, //021
  &expand_var_1337, //022
  &expand_var_1338, //023
  &expand_var_1339, //004
  &expand_var_1340, //031
  &expand_var_1341, //032
  &expand_var_1342, //033
  &expand_var_1343, //034
  &expand_var_1344, //035
  &expand_var_1345, //012
  &expand_var_1346, //01
};
static const ttt cat_18_ed_major_1_ed_minor_8_uap_table[] = {
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_0_uap, //036
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_1_uap, //037
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_2_uap, //000
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_3_uap, //001
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_4_uap, //005
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_5_uap, //016
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_6_uap, //017
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_7_uap, //018
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_8_uap, //019
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_9_uap, //028
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_10_uap, //030
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_11_uap, //025
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_12_uap, //027
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_13_uap, //029
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_14_uap, //002
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_15_uap, //006
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_16_uap, //007
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_17_uap, //008
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_18_uap, //009
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_19_uap, //010
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_20_uap, //011
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_21_uap, //014
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_22_uap, //015
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_23_uap, //020
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_24_uap, //021
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_25_uap, //022
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_26_uap, //023
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_27_uap, //004
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_28_uap, //031
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_29_uap, //032
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_30_uap, //033
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_31_uap, //034
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_32_uap, //035
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_33_uap, //012
  &dissect_cat_18_ed_major_1_ed_minor_8_datafield_34_uap, //01
};
static int dissect_cat_19_ed_major_1_ed_minor_3_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_1347
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_19_ed_major_1_ed_minor_3_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_1348
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_19_ed_major_1_ed_minor_3_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_1349
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_19_ed_major_1_ed_minor_3_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //550 expand_var_1350
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1351, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1352, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1353, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1354, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_5 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 5, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 5, 3, spare_item_5);
  return 1;
}
static int dissect_cat_19_ed_major_1_ed_minor_3_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //551 expand_var_1355
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1356, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1357, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1358, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1359, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1360, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1361, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1362, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1363, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_19_ed_major_1_ed_minor_3_datafield_5_rep25(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //552 expand_var_1365
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1366 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree_group_0, expand_var_1366, tvb, offset + 0, 1, value_expand_var_1366);
  proto_item *spare_item_8 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 8, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 8, 1, spare_item_8);
  proto_tree_add_bits_item(tree_group_0, expand_var_1367, tvb, (offset * 8) + 9, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1368, tvb, (offset * 8) + 10, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1369, tvb, (offset * 8) + 11, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1370, tvb, (offset * 8) + 12, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1371, tvb, (offset * 8) + 13, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_14 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 14, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 14, 2, spare_item_14);
  return 2;
}
static int dissect_cat_19_ed_major_1_ed_minor_3_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //552 expand_var_1364
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_19_ed_major_1_ed_minor_3_datafield_5_rep25(tvb, offset, sub_tree, expand_var_1365);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_19_ed_major_1_ed_minor_3_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //553 expand_var_1372
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_1373, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_0_2 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 2, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 2, spare_item_0_2);
  proto_tree_add_bits_item(datablock_tree, expand_var_1374, tvb, (offset * 8) + 4, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_0_6 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 6, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 1, spare_item_0_6);
  proto_tree_add_bits_item(datablock_tree, expand_var_1375, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_1376, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_1_2 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 2, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 2, spare_item_1_2);
  proto_tree_add_bits_item(datablock_tree, expand_var_1377, tvb, (offset * 8) + 4, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_1_6 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 6, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 1, spare_item_1_6);
  proto_tree_add_bits_item(datablock_tree, expand_var_1378, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_19_ed_major_1_ed_minor_3_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //600 expand_var_1379
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1380 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  int value_expand_var_1380_s = get_signed_int(value_expand_var_1380, 32);
  double value_expand_var_1380_d = (double)value_expand_var_1380_s * 1.6763806343078613e-07;
  proto_tree_add_double (tree_group_0, expand_var_1380, tvb, offset + 0, 4, value_expand_var_1380_d);
  unsigned int value_expand_var_1381 = asterix_get_unsigned_value (tvb, offset + 4, 4);
  int value_expand_var_1381_s = get_signed_int(value_expand_var_1381, 32);
  double value_expand_var_1381_d = (double)value_expand_var_1381_s * 1.6763806343078613e-07;
  proto_tree_add_double (tree_group_0, expand_var_1381, tvb, offset + 4, 4, value_expand_var_1381_d);
  return 8;
}
static int dissect_cat_19_ed_major_1_ed_minor_3_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //610 expand_var_1382
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 0.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_19_ed_major_1_ed_minor_3_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //620 expand_var_1383
{
  int value_expand_var = asterix_get_signed_value (tvb, offset + 0, 1);
  proto_tree_add_int (tree, expand_var, tvb, offset + 0, 1, value_expand_var);
  return 1;
}
static int dissect_cat_19_ed_major_1_ed_minor_3_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_19_ed_major_1_ed_minor_3_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_1385
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_19_ed_major_1_ed_minor_3_uap_table_expand[] = {
  &expand_var_1347, //010
  &expand_var_1348, //000
  &expand_var_1349, //140
  &expand_var_1350, //550
  &expand_var_1355, //551
  &expand_var_1364, //552
  &expand_var_1372, //553
  &expand_var_1379, //600
  &expand_var_1382, //610
  &expand_var_1383, //620
  NULL,
  NULL,
  &expand_var_1384, //RE
  &expand_var_1385, //S
};
static const ttt cat_19_ed_major_1_ed_minor_3_uap_table[] = {
  &dissect_cat_19_ed_major_1_ed_minor_3_datafield_0_uap, //010
  &dissect_cat_19_ed_major_1_ed_minor_3_datafield_1_uap, //000
  &dissect_cat_19_ed_major_1_ed_minor_3_datafield_2_uap, //140
  &dissect_cat_19_ed_major_1_ed_minor_3_datafield_3_uap, //550
  &dissect_cat_19_ed_major_1_ed_minor_3_datafield_4_uap, //551
  &dissect_cat_19_ed_major_1_ed_minor_3_datafield_5_uap, //552
  &dissect_cat_19_ed_major_1_ed_minor_3_datafield_6_uap, //553
  &dissect_cat_19_ed_major_1_ed_minor_3_datafield_7_uap, //600
  &dissect_cat_19_ed_major_1_ed_minor_3_datafield_8_uap, //610
  &dissect_cat_19_ed_major_1_ed_minor_3_datafield_9_uap, //620
  NULL,
  NULL,
  &dissect_cat_19_ed_major_1_ed_minor_3_datafield_12_uap, //RE
  &dissect_cat_19_ed_major_1_ed_minor_3_datafield_13_uap, //S
};
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_1386
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_1387
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_1388, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1389, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1390, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1391, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1392, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1393, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1394, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1395, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_1396, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1397, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1398, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1399, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1400, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1401, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1402, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1403, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_1404
{
  return dissect_cat_9_ed_major_2_ed_minor_1_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //041 expand_var_1405
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1406 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  int value_expand_var_1406_s = get_signed_int(value_expand_var_1406, 32);
  double value_expand_var_1406_d = (double)value_expand_var_1406_s * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_1406, tvb, offset + 0, 4, value_expand_var_1406_d);
  unsigned int value_expand_var_1407 = asterix_get_unsigned_value (tvb, offset + 4, 4);
  int value_expand_var_1407_s = get_signed_int(value_expand_var_1407, 32);
  double value_expand_var_1407_d = (double)value_expand_var_1407_s * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_1407, tvb, offset + 4, 4, value_expand_var_1407_d);
  return 8;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //042 expand_var_1408
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1409 = asterix_get_unsigned_value (tvb, offset + 0, 3);
  int value_expand_var_1409_s = get_signed_int(value_expand_var_1409, 24);
  double value_expand_var_1409_d = (double)value_expand_var_1409_s * 0.5;
  proto_tree_add_double (tree_group_0, expand_var_1409, tvb, offset + 0, 3, value_expand_var_1409_d);
  unsigned int value_expand_var_1410 = asterix_get_unsigned_value (tvb, offset + 3, 3);
  int value_expand_var_1410_s = get_signed_int(value_expand_var_1410, 24);
  double value_expand_var_1410_d = (double)value_expand_var_1410_s * 0.5;
  proto_tree_add_double (tree_group_0, expand_var_1410, tvb, offset + 3, 3, value_expand_var_1410_d);
  return 6;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_1411
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  unsigned int value_expand_var_1412 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1412 = value_expand_var_1412 & 0b0000111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_1412, tvb, offset + 0, 2, value_expand_var_1412);
  return 2;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_1413
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_1414, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1415, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1416, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1417, tvb, (offset * 8) + 3, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1418, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1419, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1420, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_1421, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_1_1 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 1, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 1, 6, spare_item_1_1);
  proto_tree_add_bits_item(datablock_tree, expand_var_1422, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_1423
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1424, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1425, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1426, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_1427);
  return 2;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //202 expand_var_1428
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1429 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_1429_s = get_signed_int(value_expand_var_1429, 16);
  double value_expand_var_1429_d = (double)value_expand_var_1429_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_1429, tvb, offset + 0, 2, value_expand_var_1429_d);
  unsigned int value_expand_var_1430 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_1430_s = get_signed_int(value_expand_var_1430, 16);
  double value_expand_var_1430_d = (double)value_expand_var_1430_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_1430, tvb, offset + 2, 2, value_expand_var_1430_d);
  return 4;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_1431
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1432, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1433, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1434 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1434 = value_expand_var_1434 & 0b0011111111111111;
  int value_expand_var_1434_s = get_signed_int(value_expand_var_1434, 14);
  double value_expand_var_1434_d = (double)value_expand_var_1434_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_1434, tvb, offset + 0, 2, value_expand_var_1434_d);
  return 2;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_1435
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1436, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1437, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_2 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 2, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 2, spare_item_2);
  unsigned int value_expand_var_1438 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1438 = value_expand_var_1438 & 0b0000111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_1438, tvb, offset + 0, 2, value_expand_var_1438);
  proto_item *spare_item_16 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 16, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 16, 4, spare_item_16);
  proto_tree_add_bits_item(tree_group_0, expand_var_1439, tvb, (offset * 8) + 20, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1440, tvb, (offset * 8) + 21, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1441, tvb, (offset * 8) + 22, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1442, tvb, (offset * 8) + 23, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1443, tvb, (offset * 8) + 24, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1444, tvb, (offset * 8) + 25, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1445, tvb, (offset * 8) + 26, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1446, tvb, (offset * 8) + 27, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1447, tvb, (offset * 8) + 28, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1448, tvb, (offset * 8) + 29, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1449, tvb, (offset * 8) + 30, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1450, tvb, (offset * 8) + 31, 1, ENC_BIG_ENDIAN);
  return 4;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_1451
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 3, value_expand_var);
  return 3;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //245 expand_var_1452
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 7, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1453, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_2 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 2, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 6, spare_item_2);
  print_icao_string (tvb, offset + 1, 0, 48, 6, tree_group_0, expand_var_1454);
  return 7;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_1455
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 6.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //105 expand_var_1456
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_1457
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1458 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_1458_s = get_signed_int(value_expand_var_1458, 8);
  double value_expand_var_1458_d = (double)value_expand_var_1458_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_1458, tvb, offset + 0, 1, value_expand_var_1458_d);
  unsigned int value_expand_var_1459 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  int value_expand_var_1459_s = get_signed_int(value_expand_var_1459, 8);
  double value_expand_var_1459_d = (double)value_expand_var_1459_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_1459, tvb, offset + 1, 1, value_expand_var_1459_d);
  return 2;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_1460
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //310 expand_var_1461
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1462, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1463, tvb, (offset * 8) + 1, 7, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_18_990_compound_990(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_1465
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1466 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_1466_d = (double)value_expand_var_1466 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_1466, tvb, offset + 0, 2, value_expand_var_1466_d);
  unsigned int value_expand_var_1467 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_1467_d = (double)value_expand_var_1467 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_1467, tvb, offset + 2, 2, value_expand_var_1467_d);
  unsigned int value_expand_var_1468 = asterix_get_unsigned_value (tvb, offset + 4, 2);
  double value_expand_var_1468_d = (double)value_expand_var_1468 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_1468, tvb, offset + 4, 2, value_expand_var_1468_d);
  return 6;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_18_994_compound_994(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_1469
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1470 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_1470_d = (double)value_expand_var_1470 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_1470, tvb, offset + 0, 2, value_expand_var_1470_d);
  unsigned int value_expand_var_1471 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_1471_d = (double)value_expand_var_1471 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_1471, tvb, offset + 2, 2, value_expand_var_1471_d);
  unsigned int value_expand_var_1472 = asterix_get_unsigned_value (tvb, offset + 4, 2);
  double value_expand_var_1472_d = (double)value_expand_var_1472 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_1472, tvb, offset + 4, 2, value_expand_var_1472_d);
  return 6;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_18_995_compound_995(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_1473
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_218_compound_218(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_1464
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 3, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_20_ed_major_1_ed_minor_9_datafield_18_990_compound_990(tvb, offset, asterix_packet_tree, expand_var_1465);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_20_ed_major_1_ed_minor_9_datafield_18_994_compound_994(tvb, offset, asterix_packet_tree, expand_var_1469);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_20_ed_major_1_ed_minor_9_datafield_18_995_compound_995(tvb, offset, asterix_packet_tree, expand_var_1473);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_19_rep26(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_1475
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1476, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1477, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1478, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1479, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1480, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1481, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1482, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1483, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_1474
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_20_ed_major_1_ed_minor_9_datafield_19_rep26(tvb, offset, sub_tree, expand_var_1475);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_20_rep27(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_1485
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1486 = asterix_get_unsigned_value (tvb, offset + 0, 7);
  proto_tree_add_uint (tree_group_0, expand_var_1486, tvb, offset + 0, 7, value_expand_var_1486);
  unsigned int value_expand_var_1487 = asterix_get_unsigned_value (tvb, offset + 7, 1);
  value_expand_var_1487 = value_expand_var_1487 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_1487, tvb, offset + 7, 1, value_expand_var_1487);
  unsigned int value_expand_var_1488 = asterix_get_unsigned_value (tvb, offset + 7, 1);
  value_expand_var_1488 = value_expand_var_1488 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_1488, tvb, offset + 7, 1, value_expand_var_1488);
  return 8;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_1484
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_20_ed_major_1_ed_minor_9_datafield_20_rep27(tvb, offset, sub_tree, expand_var_1485);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_1489
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1490, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1491, tvb, (offset * 8) + 3, 3, ENC_BIG_ENDIAN);
  proto_item *spare_item_6 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 6, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 2, spare_item_6);
  proto_tree_add_bits_item(tree_group_0, expand_var_1492, tvb, (offset * 8) + 8, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1493, tvb, (offset * 8) + 9, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1494, tvb, (offset * 8) + 10, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1495 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_1495 = value_expand_var_1495 >> 4;
  value_expand_var_1495 = value_expand_var_1495 & 0b0001;
  proto_tree_add_uint (tree_group_0, expand_var_1495, tvb, offset + 1, 1, value_expand_var_1495);
  unsigned int value_expand_var_1496 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_1496 = value_expand_var_1496 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_1496, tvb, offset + 1, 1, value_expand_var_1496);
  return 2;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_1497
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_23_rep28(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_1499
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_1498
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  while (true) {
    fun_len = dissect_cat_20_ed_major_1_ed_minor_9_datafield_23_rep28(tvb, offset, sub_tree, expand_var_1499);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
    if (asterix_extended_end(tvb, offset - 1)) break;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //055 expand_var_1500
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1501, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1502, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1503, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1504 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1504 = value_expand_var_1504 & 0b00011111;
  proto_tree_add_uint (tree_group_0, expand_var_1504, tvb, offset + 0, 1, value_expand_var_1504);
  return 1;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_1505
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1506, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1507, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1508, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_1509);
  return 2;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_20_ed_major_1_ed_minor_9_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_1511
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_20_ed_major_1_ed_minor_9_uap_table_expand[] = {
  &expand_var_1386, //010
  &expand_var_1387, //020
  &expand_var_1404, //140
  &expand_var_1405, //041
  &expand_var_1408, //042
  &expand_var_1411, //161
  &expand_var_1413, //170
  &expand_var_1423, //070
  &expand_var_1428, //202
  &expand_var_1431, //090
  &expand_var_1435, //100
  &expand_var_1451, //220
  &expand_var_1452, //245
  &expand_var_1455, //110
  &expand_var_1456, //105
  &expand_var_1457, //210
  &expand_var_1460, //300
  &expand_var_1461, //310
  &expand_var_1464, //500
  &expand_var_1474, //400
  &expand_var_1484, //250
  &expand_var_1489, //230
  &expand_var_1497, //260
  &expand_var_1498, //030
  &expand_var_1500, //055
  &expand_var_1505, //050
  &expand_var_1510, //RE
  &expand_var_1511, //S
};
static const ttt cat_20_ed_major_1_ed_minor_9_uap_table[] = {
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_0_uap, //010
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_1_uap, //020
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_2_uap, //140
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_3_uap, //041
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_4_uap, //042
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_5_uap, //161
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_6_uap, //170
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_7_uap, //070
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_8_uap, //202
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_9_uap, //090
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_10_uap, //100
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_11_uap, //220
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_12_uap, //245
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_13_uap, //110
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_14_uap, //105
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_15_uap, //210
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_16_uap, //300
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_17_uap, //310
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_18_uap, //500
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_19_uap, //400
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_20_uap, //250
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_21_uap, //230
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_22_uap, //260
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_23_uap, //030
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_24_uap, //055
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_25_uap, //050
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_26_uap, //RE
  &dissect_cat_20_ed_major_1_ed_minor_9_datafield_27_uap, //S
};
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_1512
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_1513
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_1514, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1515, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1516, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1517, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1518, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1519, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1520, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1521, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_1522, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1523, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1524, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1525, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1526, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1527, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1528, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1529, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_1530, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_2_2 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 2, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 5, spare_item_2_2);
  proto_tree_add_bits_item(datablock_tree, expand_var_1531, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_1532
{
  return dissect_cat_9_ed_major_2_ed_minor_1_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //041 expand_var_1533
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //042 expand_var_1534
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_1535
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_1536
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_1537, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1538, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1539, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1540, tvb, (offset * 8) + 3, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1541, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1542, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1543, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_1544, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_1_1 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 1, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 1, 6, spare_item_1_1);
  proto_tree_add_bits_item(datablock_tree, expand_var_1545, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_1546
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //202 expand_var_1547
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_1548
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_1549
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_1550
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //245 expand_var_1551
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_1552
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //105 expand_var_1553
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_1554
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_1555
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //310 expand_var_1556
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_1557
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_1558
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_19_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_20_rep29(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_1560
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1561 = asterix_get_unsigned_value (tvb, offset + 0, 7);
  proto_tree_add_uint (tree_group_0, expand_var_1561, tvb, offset + 0, 7, value_expand_var_1561);
  unsigned int value_expand_var_1562 = asterix_get_unsigned_value (tvb, offset + 7, 1);
  value_expand_var_1562 = value_expand_var_1562 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_1562, tvb, offset + 7, 1, value_expand_var_1562);
  unsigned int value_expand_var_1563 = asterix_get_unsigned_value (tvb, offset + 7, 1);
  value_expand_var_1563 = value_expand_var_1563 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_1563, tvb, offset + 7, 1, value_expand_var_1563);
  return 8;
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_1559
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_20_ed_major_1_ed_minor_10_datafield_20_rep29(tvb, offset, sub_tree, expand_var_1560);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_1564
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_21_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_1565
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_1566
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //055 expand_var_1567
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_1568
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_20_ed_major_1_ed_minor_10_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_1570
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_20_ed_major_1_ed_minor_10_uap_table_expand[] = {
  &expand_var_1512, //010
  &expand_var_1513, //020
  &expand_var_1532, //140
  &expand_var_1533, //041
  &expand_var_1534, //042
  &expand_var_1535, //161
  &expand_var_1536, //170
  &expand_var_1546, //070
  &expand_var_1547, //202
  &expand_var_1548, //090
  &expand_var_1549, //100
  &expand_var_1550, //220
  &expand_var_1551, //245
  &expand_var_1552, //110
  &expand_var_1553, //105
  &expand_var_1554, //210
  &expand_var_1555, //300
  &expand_var_1556, //310
  &expand_var_1557, //500
  &expand_var_1558, //400
  &expand_var_1559, //250
  &expand_var_1564, //230
  &expand_var_1565, //260
  &expand_var_1566, //030
  &expand_var_1567, //055
  &expand_var_1568, //050
  &expand_var_1569, //RE
  &expand_var_1570, //S
};
static const ttt cat_20_ed_major_1_ed_minor_10_uap_table[] = {
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_0_uap, //010
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_1_uap, //020
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_2_uap, //140
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_3_uap, //041
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_4_uap, //042
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_5_uap, //161
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_6_uap, //170
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_7_uap, //070
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_8_uap, //202
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_9_uap, //090
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_10_uap, //100
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_11_uap, //220
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_12_uap, //245
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_13_uap, //110
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_14_uap, //105
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_15_uap, //210
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_16_uap, //300
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_17_uap, //310
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_18_uap, //500
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_19_uap, //400
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_20_uap, //250
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_21_uap, //230
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_22_uap, //260
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_23_uap, //030
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_24_uap, //055
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_25_uap, //050
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_26_uap, //RE
  &dissect_cat_20_ed_major_1_ed_minor_10_datafield_27_uap, //S
};
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_1571
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_1572
{
  return dissect_cat_20_ed_major_1_ed_minor_10_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_1573
{
  return dissect_cat_9_ed_major_2_ed_minor_1_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //041 expand_var_1574
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //042 expand_var_1575
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_1576
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_1577
{
  return dissect_cat_20_ed_major_1_ed_minor_10_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_1578
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //202 expand_var_1579
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_1580
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_1581
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_1582
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //245 expand_var_1583
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_1584
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //105 expand_var_1585
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_1586
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_1587
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //310 expand_var_1588
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_1589
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_1590
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_19_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_20_rep30(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_1592
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1593 = asterix_get_unsigned_value (tvb, offset + 0, 7);
  proto_tree_add_uint (tree_group_0, expand_var_1593, tvb, offset + 0, 7, value_expand_var_1593);
  unsigned int value_expand_var_1594 = asterix_get_unsigned_value (tvb, offset + 7, 1);
  value_expand_var_1594 = value_expand_var_1594 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_1594, tvb, offset + 7, 1, value_expand_var_1594);
  unsigned int value_expand_var_1595 = asterix_get_unsigned_value (tvb, offset + 7, 1);
  value_expand_var_1595 = value_expand_var_1595 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_1595, tvb, offset + 7, 1, value_expand_var_1595);
  return 8;
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_1591
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_20_ed_major_1_ed_minor_11_datafield_20_rep30(tvb, offset, sub_tree, expand_var_1592);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_1596
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1597, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1598, tvb, (offset * 8) + 3, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1599, tvb, (offset * 8) + 6, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1600, tvb, (offset * 8) + 8, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1601, tvb, (offset * 8) + 9, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1602, tvb, (offset * 8) + 10, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1603 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_1603 = value_expand_var_1603 >> 4;
  value_expand_var_1603 = value_expand_var_1603 & 0b0001;
  proto_tree_add_uint (tree_group_0, expand_var_1603, tvb, offset + 1, 1, value_expand_var_1603);
  unsigned int value_expand_var_1604 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_1604 = value_expand_var_1604 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_1604, tvb, offset + 1, 1, value_expand_var_1604);
  return 2;
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_1605
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_1606
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //055 expand_var_1607
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_1608
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_20_ed_major_1_ed_minor_11_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_1610
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_20_ed_major_1_ed_minor_11_uap_table_expand[] = {
  &expand_var_1571, //010
  &expand_var_1572, //020
  &expand_var_1573, //140
  &expand_var_1574, //041
  &expand_var_1575, //042
  &expand_var_1576, //161
  &expand_var_1577, //170
  &expand_var_1578, //070
  &expand_var_1579, //202
  &expand_var_1580, //090
  &expand_var_1581, //100
  &expand_var_1582, //220
  &expand_var_1583, //245
  &expand_var_1584, //110
  &expand_var_1585, //105
  &expand_var_1586, //210
  &expand_var_1587, //300
  &expand_var_1588, //310
  &expand_var_1589, //500
  &expand_var_1590, //400
  &expand_var_1591, //250
  &expand_var_1596, //230
  &expand_var_1605, //260
  &expand_var_1606, //030
  &expand_var_1607, //055
  &expand_var_1608, //050
  &expand_var_1609, //RE
  &expand_var_1610, //S
};
static const ttt cat_20_ed_major_1_ed_minor_11_uap_table[] = {
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_0_uap, //010
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_1_uap, //020
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_2_uap, //140
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_3_uap, //041
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_4_uap, //042
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_5_uap, //161
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_6_uap, //170
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_7_uap, //070
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_8_uap, //202
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_9_uap, //090
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_10_uap, //100
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_11_uap, //220
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_12_uap, //245
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_13_uap, //110
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_14_uap, //105
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_15_uap, //210
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_16_uap, //300
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_17_uap, //310
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_18_uap, //500
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_19_uap, //400
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_20_uap, //250
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_21_uap, //230
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_22_uap, //260
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_23_uap, //030
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_24_uap, //055
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_25_uap, //050
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_26_uap, //RE
  &dissect_cat_20_ed_major_1_ed_minor_11_datafield_27_uap, //S
};
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_1611
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_1612
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1613, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1614, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1615, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1616, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1617, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1618, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1619, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  proto_tree_add_bits_item(tree_group_0, expand_var_1620, tvb, (offset * 8) + 8, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1621, tvb, (offset * 8) + 11, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_13 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 13, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 13, 3, spare_item_13);
  return 2;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_1622
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_1623
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1624 = asterix_get_unsigned_value (tvb, offset + 0, 3);
  int value_expand_var_1624_s = get_signed_int(value_expand_var_1624, 24);
  double value_expand_var_1624_d = (double)value_expand_var_1624_s * 2.1457672119140625e-05;
  proto_tree_add_double (tree_group_0, expand_var_1624, tvb, offset + 0, 3, value_expand_var_1624_d);
  unsigned int value_expand_var_1625 = asterix_get_unsigned_value (tvb, offset + 3, 3);
  int value_expand_var_1625_s = get_signed_int(value_expand_var_1625, 24);
  double value_expand_var_1625_d = (double)value_expand_var_1625_s * 2.1457672119140625e-05;
  proto_tree_add_double (tree_group_0, expand_var_1625, tvb, offset + 3, 3, value_expand_var_1625_d);
  return 6;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_1626
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_449_compound_449(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_1627
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_1628
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1629, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1630, tvb, (offset * 8) + 2, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1631, tvb, (offset * 8) + 4, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_6 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 6, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 6, spare_item_6);
  int value_expand_var_1632 = asterix_get_signed_value (tvb, offset + 1, 1);
  value_expand_var_1632 = value_expand_var_1632 & 0b00001111;
  proto_tree_add_int (tree_group_0, expand_var_1632, tvb, offset + 1, 1, value_expand_var_1632);
  return 2;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_1633
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 3, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_1634, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1635, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1636, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1637, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1638, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_1639
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 0.01;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //145 expand_var_1640
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_1641
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1642, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1643 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1643 = value_expand_var_1643 & 0b0111111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_1643, tvb, offset + 0, 2, value_expand_var_1643);
  return 2;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //151 expand_var_1644
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 2, value_expand_var);
  return 2;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //152 expand_var_1645
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //155 expand_var_1646
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 6.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //157 expand_var_1647
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //160 expand_var_1648
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1649 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_1649_s = get_signed_int(value_expand_var_1649, 16);
  double value_expand_var_1649_d = (double)value_expand_var_1649_s * 6.103515625e-05;
  proto_tree_add_double (tree_group_0, expand_var_1649, tvb, offset + 0, 2, value_expand_var_1649_d);
  unsigned int value_expand_var_1650 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_1650_d = (double)value_expand_var_1650 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_1650, tvb, offset + 2, 2, value_expand_var_1650_d);
  return 4;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //165 expand_var_1651
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_1652, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_0_2 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 2, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 5, spare_item_0_2);
  proto_tree_add_bits_item(datablock_tree, expand_var_1653, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  unsigned int value_expand_var_1654 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1654 = value_expand_var_1654 >> 1;
  int value_expand_var_1654_s = get_signed_int(value_expand_var_1654, 7);
  double value_expand_var_1654_d = (double)value_expand_var_1654_s * 0.25;
  proto_tree_add_double (datablock_tree, expand_var_1654, tvb, offset + 0, 1, value_expand_var_1654_d);
  proto_tree_add_bits_item(datablock_tree, expand_var_1655, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_1656
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_227_compound_227(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //095 expand_var_1657
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //032 expand_var_1658
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_d = (double)value_expand_var * 0.00390625;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_1659
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_1660
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_1080_compound_1080(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_1662
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_1081_compound_1081(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_1663
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 2, value_expand_var);
  return 2;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_1082_compound_1082(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_1664
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 0.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_1083_compound_1083(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_1665
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 1, value_expand_var);
  return 1;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_1661
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 4, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_1080_compound_1080(tvb, offset, asterix_packet_tree, expand_var_1662);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_1081_compound_1081(tvb, offset, asterix_packet_tree, expand_var_1663);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_1082_compound_1082(tvb, offset, asterix_packet_tree, expand_var_1664);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_1083_compound_1083(tvb, offset, asterix_packet_tree, expand_var_1665);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //146 expand_var_1666
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1667, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1668, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1669 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1669 = value_expand_var_1669 & 0b0001111111111111;
  int value_expand_var_1669_s = get_signed_int(value_expand_var_1669, 13);
  double value_expand_var_1669_d = (double)value_expand_var_1669_s * 25.0;
  proto_tree_add_double (tree_group_0, expand_var_1669, tvb, offset + 0, 2, value_expand_var_1669_d);
  return 2;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //148 expand_var_1670
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1671, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1672, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1673, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1674 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1674 = value_expand_var_1674 & 0b0001111111111111;
  int value_expand_var_1674_s = get_signed_int(value_expand_var_1674, 13);
  double value_expand_var_1674_d = (double)value_expand_var_1674_s * 25.0;
  proto_tree_add_double (tree_group_0, expand_var_1674, tvb, offset + 0, 2, value_expand_var_1674_d);
  return 2;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_1031_compound_1031(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_1676
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_1677, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1678, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_0_2 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 2, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 5, spare_item_0_2);
  proto_tree_add_bits_item(datablock_tree, expand_var_1679, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_rep31(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_1681
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 15, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1682, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1683, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1684 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1684 = value_expand_var_1684 & 0b00111111;
  proto_tree_add_uint (tree_group_0, expand_var_1684, tvb, offset + 0, 1, value_expand_var_1684);
  unsigned int value_expand_var_1685 = asterix_get_unsigned_value (tvb, offset + 1, 2);
  int value_expand_var_1685_s = get_signed_int(value_expand_var_1685, 16);
  double value_expand_var_1685_d = (double)value_expand_var_1685_s * 10.0;
  proto_tree_add_double (tree_group_0, expand_var_1685, tvb, offset + 1, 2, value_expand_var_1685_d);
  unsigned int value_expand_var_1686 = asterix_get_unsigned_value (tvb, offset + 3, 3);
  int value_expand_var_1686_s = get_signed_int(value_expand_var_1686, 24);
  double value_expand_var_1686_d = (double)value_expand_var_1686_s * 2.1457672119140625e-05;
  proto_tree_add_double (tree_group_0, expand_var_1686, tvb, offset + 3, 3, value_expand_var_1686_d);
  unsigned int value_expand_var_1687 = asterix_get_unsigned_value (tvb, offset + 6, 3);
  int value_expand_var_1687_s = get_signed_int(value_expand_var_1687, 24);
  double value_expand_var_1687_d = (double)value_expand_var_1687_s * 2.1457672119140625e-05;
  proto_tree_add_double (tree_group_0, expand_var_1687, tvb, offset + 6, 3, value_expand_var_1687_d);
  proto_tree_add_bits_item(tree_group_0, expand_var_1688, tvb, (offset * 8) + 72, 4, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1689, tvb, (offset * 8) + 76, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1690, tvb, (offset * 8) + 78, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1691, tvb, (offset * 8) + 79, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1692 = asterix_get_unsigned_value (tvb, offset + 10, 3);
  proto_tree_add_uint (tree_group_0, expand_var_1692, tvb, offset + 10, 3, value_expand_var_1692);
  unsigned int value_expand_var_1693 = asterix_get_unsigned_value (tvb, offset + 13, 2);
  double value_expand_var_1693_d = (double)value_expand_var_1693 * 0.01;
  proto_tree_add_double (tree_group_0, expand_var_1693, tvb, offset + 13, 2, value_expand_var_1693_d);
  return 15;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_1044_compound_1044(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_1680
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_rep31(tvb, offset, sub_tree, expand_var_1681);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_1675
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 2, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_1031_compound_1031(tvb, offset, asterix_packet_tree, expand_var_1676);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_1044_compound_1044(tvb, offset, asterix_packet_tree, expand_var_1680);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 21);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_0_ed_minor_23_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_1695
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_21_ed_major_0_ed_minor_23_uap_table_expand[] = {
  &expand_var_1611, //010
  &expand_var_1612, //040
  &expand_var_1622, //030
  &expand_var_1623, //130
  &expand_var_1626, //080
  &expand_var_1627, //140
  &expand_var_1628, //090
  &expand_var_1633, //210
  &expand_var_1639, //230
  &expand_var_1640, //145
  &expand_var_1641, //150
  &expand_var_1644, //151
  &expand_var_1645, //152
  &expand_var_1646, //155
  &expand_var_1647, //157
  &expand_var_1648, //160
  &expand_var_1651, //165
  &expand_var_1656, //170
  &expand_var_1657, //095
  &expand_var_1658, //032
  &expand_var_1659, //200
  &expand_var_1660, //020
  &expand_var_1661, //220
  &expand_var_1666, //146
  &expand_var_1670, //148
  &expand_var_1675, //110
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_1694, //RE
  &expand_var_1695, //S
};
static const ttt cat_21_ed_major_0_ed_minor_23_uap_table[] = {
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_0_uap, //010
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_1_uap, //040
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_2_uap, //030
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_3_uap, //130
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_4_uap, //080
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_5_uap, //140
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_6_uap, //090
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_7_uap, //210
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap, //230
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_9_uap, //145
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_10_uap, //150
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_11_uap, //151
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_12_uap, //152
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap, //155
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_14_uap, //157
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_15_uap, //160
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_16_uap, //165
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_17_uap, //170
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_18_uap, //095
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_19_uap, //032
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_20_uap, //200
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_21_uap, //020
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_uap, //220
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_23_uap, //146
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_24_uap, //148
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_uap, //110
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_33_uap, //RE
  &dissect_cat_21_ed_major_0_ed_minor_23_datafield_34_uap, //S
};
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_1696
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_1697
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_1698
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_1699
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1700 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  int value_expand_var_1700_s = get_signed_int(value_expand_var_1700, 32);
  double value_expand_var_1700_d = (double)value_expand_var_1700_s * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_1700, tvb, offset + 0, 4, value_expand_var_1700_d);
  unsigned int value_expand_var_1701 = asterix_get_unsigned_value (tvb, offset + 4, 4);
  int value_expand_var_1701_s = get_signed_int(value_expand_var_1701, 32);
  double value_expand_var_1701_d = (double)value_expand_var_1701_s * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_1701, tvb, offset + 4, 4, value_expand_var_1701_d);
  return 8;
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_1702
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_449_compound_449(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_1703
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_1704
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_1705
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_1706
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //145 expand_var_1707
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_1708
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //151 expand_var_1709
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //152 expand_var_1710
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //155 expand_var_1711
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //157 expand_var_1712
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //160 expand_var_1713
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //165 expand_var_1714
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_16_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_1715
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_227_compound_227(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //095 expand_var_1716
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //032 expand_var_1717
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_19_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_1718
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_1719
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_21_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_1720
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //146 expand_var_1721
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //148 expand_var_1722
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_1723
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 21);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_0_ed_minor_24_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_1725
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_21_ed_major_0_ed_minor_24_uap_table_expand[] = {
  &expand_var_1696, //010
  &expand_var_1697, //040
  &expand_var_1698, //030
  &expand_var_1699, //130
  &expand_var_1702, //080
  &expand_var_1703, //140
  &expand_var_1704, //090
  &expand_var_1705, //210
  &expand_var_1706, //230
  &expand_var_1707, //145
  &expand_var_1708, //150
  &expand_var_1709, //151
  &expand_var_1710, //152
  &expand_var_1711, //155
  &expand_var_1712, //157
  &expand_var_1713, //160
  &expand_var_1714, //165
  &expand_var_1715, //170
  &expand_var_1716, //095
  &expand_var_1717, //032
  &expand_var_1718, //200
  &expand_var_1719, //020
  &expand_var_1720, //220
  &expand_var_1721, //146
  &expand_var_1722, //148
  &expand_var_1723, //110
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_1724, //RE
  &expand_var_1725, //S
};
static const ttt cat_21_ed_major_0_ed_minor_24_uap_table[] = {
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_0_uap, //010
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_1_uap, //040
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_2_uap, //030
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_3_uap, //130
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_4_uap, //080
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_5_uap, //140
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_6_uap, //090
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_7_uap, //210
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_8_uap, //230
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_9_uap, //145
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_10_uap, //150
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_11_uap, //151
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_12_uap, //152
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_13_uap, //155
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_14_uap, //157
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_15_uap, //160
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_16_uap, //165
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_17_uap, //170
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_18_uap, //095
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_19_uap, //032
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_20_uap, //200
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_21_uap, //020
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_22_uap, //220
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_23_uap, //146
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_24_uap, //148
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_25_uap, //110
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_33_uap, //RE
  &dissect_cat_21_ed_major_0_ed_minor_24_datafield_34_uap, //S
};
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_1726
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_1727
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_1728
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_1729
{
  return dissect_cat_21_ed_major_0_ed_minor_24_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_1730
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_449_compound_449(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_1731
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_1732
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_1733
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_1734
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //145 expand_var_1735
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_1736
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //151 expand_var_1737
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //152 expand_var_1738
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //155 expand_var_1739
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //157 expand_var_1740
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //160 expand_var_1741
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //165 expand_var_1742
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_16_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_1743
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_227_compound_227(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //095 expand_var_1744
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //032 expand_var_1745
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_19_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_1746
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_1747
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_21_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_1748
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //146 expand_var_1749
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //148 expand_var_1750
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_1751
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 21);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_0_ed_minor_25_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_1753
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_21_ed_major_0_ed_minor_25_uap_table_expand[] = {
  &expand_var_1726, //010
  &expand_var_1727, //040
  &expand_var_1728, //030
  &expand_var_1729, //130
  &expand_var_1730, //080
  &expand_var_1731, //140
  &expand_var_1732, //090
  &expand_var_1733, //210
  &expand_var_1734, //230
  &expand_var_1735, //145
  &expand_var_1736, //150
  &expand_var_1737, //151
  &expand_var_1738, //152
  &expand_var_1739, //155
  &expand_var_1740, //157
  &expand_var_1741, //160
  &expand_var_1742, //165
  &expand_var_1743, //170
  &expand_var_1744, //095
  &expand_var_1745, //032
  &expand_var_1746, //200
  &expand_var_1747, //020
  &expand_var_1748, //220
  &expand_var_1749, //146
  &expand_var_1750, //148
  &expand_var_1751, //110
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_1752, //RE
  &expand_var_1753, //S
};
static const ttt cat_21_ed_major_0_ed_minor_25_uap_table[] = {
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_0_uap, //010
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_1_uap, //040
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_2_uap, //030
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_3_uap, //130
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_4_uap, //080
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_5_uap, //140
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_6_uap, //090
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_7_uap, //210
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_8_uap, //230
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_9_uap, //145
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_10_uap, //150
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_11_uap, //151
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_12_uap, //152
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_13_uap, //155
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_14_uap, //157
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_15_uap, //160
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_16_uap, //165
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_17_uap, //170
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_18_uap, //095
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_19_uap, //032
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_20_uap, //200
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_21_uap, //020
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_22_uap, //220
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_23_uap, //146
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_24_uap, //148
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_25_uap, //110
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_33_uap, //RE
  &dissect_cat_21_ed_major_0_ed_minor_25_datafield_34_uap, //S
};
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_1754
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_1755
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_1756
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_1757
{
  return dissect_cat_21_ed_major_0_ed_minor_24_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_1758
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_449_compound_449(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_1759
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_1760
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_1761
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_1762
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //145 expand_var_1763
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_1764
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //151 expand_var_1765
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //152 expand_var_1766
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //155 expand_var_1767
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //157 expand_var_1768
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //160 expand_var_1769
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //165 expand_var_1770
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_16_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_1771
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_227_compound_227(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //095 expand_var_1772
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //032 expand_var_1773
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_19_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_1774
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_1775
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_21_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_1776
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //146 expand_var_1777
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //148 expand_var_1778
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_1779
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_1780
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1781, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1782, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1783, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_1784);
  return 2;
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //131 expand_var_1785
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 21);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_0_ed_minor_26_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_1787
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_21_ed_major_0_ed_minor_26_uap_table_expand[] = {
  &expand_var_1754, //010
  &expand_var_1755, //040
  &expand_var_1756, //030
  &expand_var_1757, //130
  &expand_var_1758, //080
  &expand_var_1759, //140
  &expand_var_1760, //090
  &expand_var_1761, //210
  &expand_var_1762, //230
  &expand_var_1763, //145
  &expand_var_1764, //150
  &expand_var_1765, //151
  &expand_var_1766, //152
  &expand_var_1767, //155
  &expand_var_1768, //157
  &expand_var_1769, //160
  &expand_var_1770, //165
  &expand_var_1771, //170
  &expand_var_1772, //095
  &expand_var_1773, //032
  &expand_var_1774, //200
  &expand_var_1775, //020
  &expand_var_1776, //220
  &expand_var_1777, //146
  &expand_var_1778, //148
  &expand_var_1779, //110
  &expand_var_1780, //070
  &expand_var_1785, //131
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_1786, //RE
  &expand_var_1787, //S
};
static const ttt cat_21_ed_major_0_ed_minor_26_uap_table[] = {
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_0_uap, //010
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_1_uap, //040
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_2_uap, //030
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_3_uap, //130
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_4_uap, //080
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_5_uap, //140
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_6_uap, //090
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_7_uap, //210
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_8_uap, //230
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_9_uap, //145
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_10_uap, //150
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_11_uap, //151
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_12_uap, //152
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_13_uap, //155
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_14_uap, //157
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_15_uap, //160
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_16_uap, //165
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_17_uap, //170
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_18_uap, //095
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_19_uap, //032
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_20_uap, //200
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_21_uap, //020
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_22_uap, //220
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_23_uap, //146
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_24_uap, //148
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_25_uap, //110
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_26_uap, //070
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_27_uap, //131
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_33_uap, //RE
  &dissect_cat_21_ed_major_0_ed_minor_26_datafield_34_uap, //S
};
static int dissect_cat_21_ed_major_1_ed_minor_4_datafield_0_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1094 expand_var_1788
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  unsigned int value_expand_var_1789 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1789 = value_expand_var_1789 & 0b0000111111111111;
  double value_expand_var_1789_d = (double)value_expand_var_1789 * 0.1;
  proto_tree_add_double (tree_group_0, expand_var_1789, tvb, offset + 0, 2, value_expand_var_1789_d);
  return 2;
}
static int dissect_cat_21_ed_major_1_ed_minor_4_datafield_1_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1098 expand_var_1790
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_1791, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1792, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1793 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1793 = value_expand_var_1793 & 0b0000001111111111;
  double value_expand_var_1793_d = (double)value_expand_var_1793 * 0.703125;
  proto_tree_add_double (tree_group_0, expand_var_1793, tvb, offset + 0, 2, value_expand_var_1793_d);
  return 2;
}
static int dissect_cat_21_ed_major_1_ed_minor_4_datafield_2_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1103 expand_var_1794
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1795, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1796, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1797, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1798, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_4 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 4, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 4, spare_item_4);
  return 1;
}
static int dissect_cat_21_ed_major_1_ed_minor_4_datafield_3_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1104 expand_var_1799
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_1_ed_minor_4_datafield_4_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1111 expand_var_1800
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_1801, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1802, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1803, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1804, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1805 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1805 = value_expand_var_1805 >> 1;
  value_expand_var_1805 = value_expand_var_1805 & 0b000011111111111;
  double value_expand_var_1805_d = (double)value_expand_var_1805 * 0.125;
  proto_tree_add_double (datablock_tree, expand_var_1805, tvb, offset + 0, 2, value_expand_var_1805_d);
  proto_tree_add_bits_item(datablock_tree, expand_var_1806, tvb, (offset * 8) + 15, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset + 1))
  {
    offset+=2;
    goto end;
  }
  offset+=2;
  unsigned int value_expand_var_1807 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1807 = value_expand_var_1807 >> 1;
  double value_expand_var_1807_d = (double)value_expand_var_1807 * 2.8125;
  proto_tree_add_double (datablock_tree, expand_var_1807, tvb, offset + 0, 1, value_expand_var_1807_d);
  proto_tree_add_bits_item(datablock_tree, expand_var_1808, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_1_ed_minor_4_datafield_5_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1114 expand_var_1809
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_1810, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1811, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_0_2 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 2, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 5, spare_item_0_2);
  proto_tree_add_bits_item(datablock_tree, expand_var_1812, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_1_ed_minor_4_datafield_6_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1115 expand_var_1813
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.0054931640625;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_21_ed_major_1_ed_minor_4_datafield_7_1124_compound_1124(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1143 expand_var_1815
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1816, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1817, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1818, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1819, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1820, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1821, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1822, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1823, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_21_ed_major_1_ed_minor_4_datafield_7_1127_compound_1127(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1143 expand_var_1824
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_0);
  unsigned int value_expand_var_1825 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1825 = value_expand_var_1825 & 0b0011111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_1825, tvb, offset + 0, 2, value_expand_var_1825);
  proto_item *spare_item_16 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 16, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 16, 5, spare_item_16);
  unsigned int value_expand_var_1826 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  value_expand_var_1826 = value_expand_var_1826 & 0b0000011111111111;
  proto_tree_add_uint (tree_group_0, expand_var_1826, tvb, offset + 2, 2, value_expand_var_1826);
  return 4;
}
static int dissect_cat_21_ed_major_1_ed_minor_4_datafield_7_1130_compound_1130(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1143 expand_var_1827
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1828, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_1 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 1, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 1, 1, spare_item_1);
  proto_tree_add_bits_item(tree_group_0, expand_var_1829, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_1830);
  return 2;
}
static int dissect_cat_21_ed_major_1_ed_minor_4_datafield_7_1137_compound_1137(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1143 expand_var_1831
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_1832, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1833, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1834, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1835, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1836, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1837, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_21_ed_major_1_ed_minor_4_datafield_7_1139_compound_1139(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1143 expand_var_1838
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 3, spare_item_0);
  unsigned int value_expand_var_1839 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1839 = value_expand_var_1839 & 0b00011111;
  proto_tree_add_uint (tree_group_0, expand_var_1839, tvb, offset + 0, 1, value_expand_var_1839);
  return 1;
}
static int dissect_cat_21_ed_major_1_ed_minor_4_datafield_7_1142_compound_1142(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1143 expand_var_1840
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1841, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_1 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 1, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 1, 1, spare_item_1);
  proto_tree_add_bits_item(tree_group_0, expand_var_1842, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_1843);
  return 2;
}
static int dissect_cat_21_ed_major_1_ed_minor_4_datafield_7_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1143 expand_var_1814
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 6, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_21_ed_major_1_ed_minor_4_datafield_7_1124_compound_1124(tvb, offset, asterix_packet_tree, expand_var_1815);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_21_ed_major_1_ed_minor_4_datafield_7_1127_compound_1127(tvb, offset, asterix_packet_tree, expand_var_1824);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_21_ed_major_1_ed_minor_4_datafield_7_1130_compound_1130(tvb, offset, asterix_packet_tree, expand_var_1827);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_21_ed_major_1_ed_minor_4_datafield_7_1137_compound_1137(tvb, offset, asterix_packet_tree, expand_var_1831);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_21_ed_major_1_ed_minor_4_datafield_7_1139_compound_1139(tvb, offset, asterix_packet_tree, expand_var_1838);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_21_ed_major_1_ed_minor_4_datafield_7_1142_compound_1142(tvb, offset, asterix_packet_tree, expand_var_1840);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int* cat_21_ed_major_1_ed_minor_4_uap_table_expansion_expand[] = {
  &expand_var_1788,
  &expand_var_1790,
  &expand_var_1794,
  &expand_var_1799,
  &expand_var_1800,
  &expand_var_1809,
  &expand_var_1813,
  &expand_var_1814
};
static const ttt cat_21_ed_major_1_ed_minor_4_uap_table_expansion[] = {
  &dissect_cat_21_ed_major_1_ed_minor_4_datafield_0_re,
  &dissect_cat_21_ed_major_1_ed_minor_4_datafield_1_re,
  &dissect_cat_21_ed_major_1_ed_minor_4_datafield_2_re,
  &dissect_cat_21_ed_major_1_ed_minor_4_datafield_3_re,
  &dissect_cat_21_ed_major_1_ed_minor_4_datafield_4_re,
  &dissect_cat_21_ed_major_1_ed_minor_4_datafield_5_re,
  &dissect_cat_21_ed_major_1_ed_minor_4_datafield_6_re,
  &dissect_cat_21_ed_major_1_ed_minor_4_datafield_7_re
};
static int dissect_cat_21_ed_major_1_ed_minor_5_datafield_0_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1094 expand_var_1844
{
  return dissect_cat_21_ed_major_1_ed_minor_4_datafield_0_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_1_ed_minor_5_datafield_1_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1098 expand_var_1845
{
  return dissect_cat_21_ed_major_1_ed_minor_4_datafield_1_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_1_ed_minor_5_datafield_2_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1147 expand_var_1846
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1847, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1848, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1849, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1850, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_item *tree_group_0_group_item_1 = proto_tree_add_item (tree_group_0, expand_var_1851, tvb, offset + 1, 1, ENC_NA);
  proto_tree *tree_group_0_group_1 = proto_item_add_subtree (tree_group_0_group_item_1, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0_group_1, expand_var_1852, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0_group_1, expand_var_1853, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_6 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 6, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 2, spare_item_6);
  return 1;
}
static int dissect_cat_21_ed_major_1_ed_minor_5_datafield_3_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1104 expand_var_1854
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_1_ed_minor_5_datafield_4_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1111 expand_var_1855
{
  return dissect_cat_21_ed_major_1_ed_minor_4_datafield_4_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_1_ed_minor_5_datafield_5_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1182 expand_var_1856
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_1857, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1858, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1859, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1860, tvb, (offset * 8) + 3, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1861, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1862, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1863, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_1864, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1865, tvb, (offset * 8) + 1, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1866, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1867, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1868, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_1869, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1870, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1871, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1872, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1873, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1874, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1875, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_1876, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1877, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1878, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1879 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1879 = value_expand_var_1879 >> 1;
  value_expand_var_1879 = value_expand_var_1879 & 0b0000111;
  proto_tree_add_uint (datablock_tree, expand_var_1879, tvb, offset + 0, 1, value_expand_var_1879);
  proto_tree_add_bits_item(datablock_tree, expand_var_1880, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_1881, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1882, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1883, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1884, tvb, (offset * 8) + 4, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1885, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_1886, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1887, tvb, (offset * 8) + 1, 5, ENC_BIG_ENDIAN);
  proto_item *spare_item_6 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 6, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 1, spare_item_6);
  proto_tree_add_bits_item(datablock_tree, expand_var_1888, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_1_ed_minor_5_datafield_6_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1183 expand_var_1889
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.0054931640625;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_21_ed_major_1_ed_minor_5_datafield_7_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1143 expand_var_1890
{
  return dissect_cat_21_ed_major_1_ed_minor_4_datafield_7_re(tvb, offset, tree, expand_var);
}
static int* cat_21_ed_major_1_ed_minor_5_uap_table_expansion_expand[] = {
  &expand_var_1844,
  &expand_var_1845,
  &expand_var_1846,
  &expand_var_1854,
  &expand_var_1855,
  &expand_var_1856,
  &expand_var_1889,
  &expand_var_1890
};
static const ttt cat_21_ed_major_1_ed_minor_5_uap_table_expansion[] = {
  &dissect_cat_21_ed_major_1_ed_minor_5_datafield_0_re,
  &dissect_cat_21_ed_major_1_ed_minor_5_datafield_1_re,
  &dissect_cat_21_ed_major_1_ed_minor_5_datafield_2_re,
  &dissect_cat_21_ed_major_1_ed_minor_5_datafield_3_re,
  &dissect_cat_21_ed_major_1_ed_minor_5_datafield_4_re,
  &dissect_cat_21_ed_major_1_ed_minor_5_datafield_5_re,
  &dissect_cat_21_ed_major_1_ed_minor_5_datafield_6_re,
  &dissect_cat_21_ed_major_1_ed_minor_5_datafield_7_re
};
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_1891
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_1892
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_1893, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1894, tvb, (offset * 8) + 3, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1895, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1896, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1897, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_1898, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1899, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1900, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1901, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1902, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1903, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1904, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_item *spare_item_2_0 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_2_0);
  proto_tree_add_bits_item(datablock_tree, expand_var_1905, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1906, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1907, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1908, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1909, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1910, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_1911
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  unsigned int value_expand_var_1912 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1912 = value_expand_var_1912 & 0b0000111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_1912, tvb, offset + 0, 2, value_expand_var_1912);
  return 2;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_1913
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //071 expand_var_1914
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_1915
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //131 expand_var_1916
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_1917 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  int value_expand_var_1917_s = get_signed_int(value_expand_var_1917, 32);
  double value_expand_var_1917_d = (double)value_expand_var_1917_s * 1.6763806343078613e-07;
  proto_tree_add_double (tree_group_0, expand_var_1917, tvb, offset + 0, 4, value_expand_var_1917_d);
  unsigned int value_expand_var_1918 = asterix_get_unsigned_value (tvb, offset + 4, 4);
  int value_expand_var_1918_s = get_signed_int(value_expand_var_1918, 32);
  double value_expand_var_1918_d = (double)value_expand_var_1918_s * 1.6763806343078613e-07;
  proto_tree_add_double (tree_group_0, expand_var_1918, tvb, offset + 4, 4, value_expand_var_1918_d);
  return 8;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //072 expand_var_1919
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_1920
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //151 expand_var_1921
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1922, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1923 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1923 = value_expand_var_1923 & 0b0111111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_1923, tvb, offset + 0, 2, value_expand_var_1923);
  return 2;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_1924
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //073 expand_var_1925
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //074 expand_var_1926
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1927, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1928 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  value_expand_var_1928 = value_expand_var_1928 & 0b00111111111111111111111111111111;
  double value_expand_var_1928_d = (double)value_expand_var_1928 * 9.313225746154785e-10;
  proto_tree_add_double (tree_group_0, expand_var_1928, tvb, offset + 0, 4, value_expand_var_1928_d);
  return 4;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //075 expand_var_1929
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //076 expand_var_1930
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1931, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1932 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  value_expand_var_1932 = value_expand_var_1932 & 0b00111111111111111111111111111111;
  double value_expand_var_1932_d = (double)value_expand_var_1932 * 9.313225746154785e-10;
  proto_tree_add_double (tree_group_0, expand_var_1932, tvb, offset + 0, 4, value_expand_var_1932_d);
  return 4;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_1933
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_1934
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  unsigned int value_expand_var_1935 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1935 = value_expand_var_1935 >> 5;
  proto_tree_add_uint (datablock_tree, expand_var_1935, tvb, offset + 0, 1, value_expand_var_1935);
  unsigned int value_expand_var_1936 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1936 = value_expand_var_1936 >> 1;
  value_expand_var_1936 = value_expand_var_1936 & 0b0001111;
  proto_tree_add_uint (datablock_tree, expand_var_1936, tvb, offset + 0, 1, value_expand_var_1936);
  proto_tree_add_bits_item(datablock_tree, expand_var_1937, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  unsigned int value_expand_var_1938 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1938 = value_expand_var_1938 >> 7;
  proto_tree_add_uint (datablock_tree, expand_var_1938, tvb, offset + 0, 1, value_expand_var_1938);
  unsigned int value_expand_var_1939 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1939 = value_expand_var_1939 >> 5;
  value_expand_var_1939 = value_expand_var_1939 & 0b011;
  proto_tree_add_uint (datablock_tree, expand_var_1939, tvb, offset + 0, 1, value_expand_var_1939);
  unsigned int value_expand_var_1940 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1940 = value_expand_var_1940 >> 1;
  value_expand_var_1940 = value_expand_var_1940 & 0b0001111;
  proto_tree_add_uint (datablock_tree, expand_var_1940, tvb, offset + 0, 1, value_expand_var_1940);
  proto_tree_add_bits_item(datablock_tree, expand_var_1941, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_item *spare_item_2_0 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_2_0);
  proto_tree_add_bits_item(datablock_tree, expand_var_1942, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1943 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1943 = value_expand_var_1943 >> 3;
  value_expand_var_1943 = value_expand_var_1943 & 0b00011;
  proto_tree_add_uint (datablock_tree, expand_var_1943, tvb, offset + 0, 1, value_expand_var_1943);
  unsigned int value_expand_var_1944 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1944 = value_expand_var_1944 >> 1;
  value_expand_var_1944 = value_expand_var_1944 & 0b0000011;
  proto_tree_add_uint (datablock_tree, expand_var_1944, tvb, offset + 0, 1, value_expand_var_1944);
  proto_tree_add_bits_item(datablock_tree, expand_var_1945, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  unsigned int value_expand_var_1946 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_1946 = value_expand_var_1946 >> 4;
  proto_tree_add_uint (datablock_tree, expand_var_1946, tvb, offset + 0, 1, value_expand_var_1946);
  proto_item *spare_item_3_4 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 4, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 3, spare_item_3_4);
  proto_tree_add_bits_item(datablock_tree, expand_var_1947, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_1948
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 1, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_1949, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1950, tvb, (offset * 8) + 2, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1951, tvb, (offset * 8) + 5, 3, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_1952
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_1953);
  return 2;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_1954
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //145 expand_var_1955
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //152 expand_var_1956
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_1957
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1958, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1959, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_2 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 2, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 1, spare_item_2);
  proto_tree_add_bits_item(tree_group_0, expand_var_1960, tvb, (offset * 8) + 3, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1961, tvb, (offset * 8) + 6, 2, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //155 expand_var_1962
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1963, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1964 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1964 = value_expand_var_1964 & 0b0111111111111111;
  int value_expand_var_1964_s = get_signed_int(value_expand_var_1964, 15);
  double value_expand_var_1964_d = (double)value_expand_var_1964_s * 6.25;
  proto_tree_add_double (tree_group_0, expand_var_1964, tvb, offset + 0, 2, value_expand_var_1964_d);
  return 2;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //157 expand_var_1965
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1966, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1967 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1967 = value_expand_var_1967 & 0b0111111111111111;
  int value_expand_var_1967_s = get_signed_int(value_expand_var_1967, 15);
  double value_expand_var_1967_d = (double)value_expand_var_1967_s * 6.25;
  proto_tree_add_double (tree_group_0, expand_var_1967, tvb, offset + 0, 2, value_expand_var_1967_d);
  return 2;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //160 expand_var_1968
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1969, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1970 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1970 = value_expand_var_1970 & 0b0111111111111111;
  double value_expand_var_1970_d = (double)value_expand_var_1970 * 6.103515625e-05;
  proto_tree_add_double (tree_group_0, expand_var_1970, tvb, offset + 0, 2, value_expand_var_1970_d);
  unsigned int value_expand_var_1971 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_1971_d = (double)value_expand_var_1971 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_1971, tvb, offset + 2, 2, value_expand_var_1971_d);
  return 4;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //165 expand_var_1972
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 6, spare_item_0);
  unsigned int value_expand_var_1973 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1973 = value_expand_var_1973 & 0b0000001111111111;
  int value_expand_var_1973_s = get_signed_int(value_expand_var_1973, 10);
  double value_expand_var_1973_d = (double)value_expand_var_1973_s * 0.03125;
  proto_tree_add_double (tree_group_0, expand_var_1973, tvb, offset + 0, 2, value_expand_var_1973_d);
  return 2;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //077 expand_var_1974
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_28_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_1975
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_168_compound_168(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_29_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_1976
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_30_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_1977
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_31_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //146 expand_var_1978
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1979, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1980, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1981 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1981 = value_expand_var_1981 & 0b0001111111111111;
  int value_expand_var_1981_s = get_signed_int(value_expand_var_1981, 13);
  double value_expand_var_1981_d = (double)value_expand_var_1981_s * 25.0;
  proto_tree_add_double (tree_group_0, expand_var_1981, tvb, offset + 0, 2, value_expand_var_1981_d);
  return 2;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_32_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //148 expand_var_1982
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1983, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1984, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1985, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_1986 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_1986 = value_expand_var_1986 & 0b0001111111111111;
  int value_expand_var_1986_s = get_signed_int(value_expand_var_1986, 13);
  double value_expand_var_1986_d = (double)value_expand_var_1986_s * 25.0;
  proto_tree_add_double (tree_group_0, expand_var_1986, tvb, offset + 0, 2, value_expand_var_1986_d);
  return 2;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_1987
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //016 expand_var_1988
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_d = (double)value_expand_var * 0.5;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_35_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //008 expand_var_1989
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_1990, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1991, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1992, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1993, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1994, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1995, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_1996, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_36_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //271 expand_var_1997
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_item *spare_item_0_0 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_0_0);
  proto_tree_add_bits_item(datablock_tree, expand_var_1998, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_1999, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2000, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2001, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2002, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2003, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_item *spare_item_1_0 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_1_0);
  unsigned int value_expand_var_2004 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2004 = value_expand_var_2004 & 0b00001111;
  proto_tree_add_uint (datablock_tree, expand_var_2004, tvb, offset + 0, 1, value_expand_var_2004);
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_37_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //132 expand_var_2005
{
  int value_expand_var = asterix_get_signed_value (tvb, offset + 0, 1);
  proto_tree_add_int (tree, expand_var, tvb, offset + 0, 1, value_expand_var);
  return 1;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_38_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_2006
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_448_compound_448(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_39_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_2007
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 7, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2008 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2008 = value_expand_var_2008 >> 3;
  proto_tree_add_uint (tree_group_0, expand_var_2008, tvb, offset + 0, 1, value_expand_var_2008);
  unsigned int value_expand_var_2009 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2009 = value_expand_var_2009 & 0b00000111;
  proto_tree_add_uint (tree_group_0, expand_var_2009, tvb, offset + 0, 1, value_expand_var_2009);
  unsigned int value_expand_var_2010 = asterix_get_unsigned_value (tvb, offset + 1, 2);
  value_expand_var_2010 = value_expand_var_2010 >> 2;
  proto_tree_add_uint (tree_group_0, expand_var_2010, tvb, offset + 1, 2, value_expand_var_2010);
  unsigned int value_expand_var_2011 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  value_expand_var_2011 = value_expand_var_2011 >> 6;
  value_expand_var_2011 = value_expand_var_2011 & 0b0000001111;
  proto_tree_add_uint (tree_group_0, expand_var_2011, tvb, offset + 2, 1, value_expand_var_2011);
  unsigned int value_expand_var_2012 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  value_expand_var_2012 = value_expand_var_2012 >> 5;
  value_expand_var_2012 = value_expand_var_2012 & 0b001;
  proto_tree_add_uint (tree_group_0, expand_var_2012, tvb, offset + 3, 1, value_expand_var_2012);
  unsigned int value_expand_var_2013 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  value_expand_var_2013 = value_expand_var_2013 >> 4;
  value_expand_var_2013 = value_expand_var_2013 & 0b0001;
  proto_tree_add_uint (tree_group_0, expand_var_2013, tvb, offset + 3, 1, value_expand_var_2013);
  unsigned int value_expand_var_2014 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  value_expand_var_2014 = value_expand_var_2014 >> 2;
  value_expand_var_2014 = value_expand_var_2014 & 0b000011;
  proto_tree_add_uint (tree_group_0, expand_var_2014, tvb, offset + 3, 1, value_expand_var_2014);
  unsigned int value_expand_var_2015 = asterix_get_unsigned_value (tvb, offset + 3, 4);
  value_expand_var_2015 = value_expand_var_2015 & 0b00000011111111111111111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_2015, tvb, offset + 3, 4, value_expand_var_2015);
  return 7;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_40_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_2016
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2018
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_d = (double)value_expand_var * 0.1;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1285_compound_1285(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2019
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1286_compound_1286(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2020
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1287_compound_1287(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2021
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1288_compound_1288(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2022
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1289_compound_1289(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2023
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1290_compound_1290(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2024
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1291_compound_1291(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2025
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1292_compound_1292(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2026
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1293_compound_1293(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2027
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1294_compound_1294(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2028
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1295_compound_1295(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2029
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1296_compound_1296(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2030
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1297_compound_1297(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2031
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1298_compound_1298(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2032
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1299_compound_1299(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2033
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1300_compound_1300(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2034
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1301_compound_1301(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2035
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1302_compound_1302(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2036
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1303_compound_1303(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2037
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1304_compound_1304(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2038
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1305_compound_1305(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2039
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1306_compound_1306(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2040
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2017
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 23, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, asterix_packet_tree, expand_var_2018);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1285_compound_1285(tvb, offset, asterix_packet_tree, expand_var_2019);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1286_compound_1286(tvb, offset, asterix_packet_tree, expand_var_2020);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1287_compound_1287(tvb, offset, asterix_packet_tree, expand_var_2021);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1288_compound_1288(tvb, offset, asterix_packet_tree, expand_var_2022);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1289_compound_1289(tvb, offset, asterix_packet_tree, expand_var_2023);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1290_compound_1290(tvb, offset, asterix_packet_tree, expand_var_2024);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1291_compound_1291(tvb, offset, asterix_packet_tree, expand_var_2025);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1292_compound_1292(tvb, offset, asterix_packet_tree, expand_var_2026);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1293_compound_1293(tvb, offset, asterix_packet_tree, expand_var_2027);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1294_compound_1294(tvb, offset, asterix_packet_tree, expand_var_2028);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 12))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1295_compound_1295(tvb, offset, asterix_packet_tree, expand_var_2029);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 13))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1296_compound_1296(tvb, offset, asterix_packet_tree, expand_var_2030);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 14))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1297_compound_1297(tvb, offset, asterix_packet_tree, expand_var_2031);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 15))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 16))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1298_compound_1298(tvb, offset, asterix_packet_tree, expand_var_2032);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 17))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1299_compound_1299(tvb, offset, asterix_packet_tree, expand_var_2033);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 18))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1300_compound_1300(tvb, offset, asterix_packet_tree, expand_var_2034);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 19))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1301_compound_1301(tvb, offset, asterix_packet_tree, expand_var_2035);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 20))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1302_compound_1302(tvb, offset, asterix_packet_tree, expand_var_2036);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 21))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1303_compound_1303(tvb, offset, asterix_packet_tree, expand_var_2037);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 22))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1304_compound_1304(tvb, offset, asterix_packet_tree, expand_var_2038);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 23))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 24))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1305_compound_1305(tvb, offset, asterix_packet_tree, expand_var_2039);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 25))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1306_compound_1306(tvb, offset, asterix_packet_tree, expand_var_2040);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_47_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 21);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_1_datafield_48_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_2042
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_21_ed_major_2_ed_minor_1_uap_table_expand[] = {
  &expand_var_1891, //010
  &expand_var_1892, //040
  &expand_var_1911, //161
  &expand_var_1913, //015
  &expand_var_1914, //071
  &expand_var_1915, //130
  &expand_var_1916, //131
  &expand_var_1919, //072
  &expand_var_1920, //150
  &expand_var_1921, //151
  &expand_var_1924, //080
  &expand_var_1925, //073
  &expand_var_1926, //074
  &expand_var_1929, //075
  &expand_var_1930, //076
  &expand_var_1933, //140
  &expand_var_1934, //090
  &expand_var_1948, //210
  &expand_var_1952, //070
  &expand_var_1954, //230
  &expand_var_1955, //145
  &expand_var_1956, //152
  &expand_var_1957, //200
  &expand_var_1962, //155
  &expand_var_1965, //157
  &expand_var_1968, //160
  &expand_var_1972, //165
  &expand_var_1974, //077
  &expand_var_1975, //170
  &expand_var_1976, //020
  &expand_var_1977, //220
  &expand_var_1978, //146
  &expand_var_1982, //148
  &expand_var_1987, //110
  &expand_var_1988, //016
  &expand_var_1989, //008
  &expand_var_1997, //271
  &expand_var_2005, //132
  &expand_var_2006, //250
  &expand_var_2007, //260
  &expand_var_2016, //400
  &expand_var_2017, //295
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_2041, //RE
  &expand_var_2042, //S
};
static const ttt cat_21_ed_major_2_ed_minor_1_uap_table[] = {
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_0_uap, //010
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_1_uap, //040
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_2_uap, //161
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_3_uap, //015
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_4_uap, //071
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_5_uap, //130
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_6_uap, //131
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_7_uap, //072
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_8_uap, //150
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_9_uap, //151
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_10_uap, //080
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_11_uap, //073
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_12_uap, //074
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_13_uap, //075
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_14_uap, //076
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_15_uap, //140
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_16_uap, //090
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_17_uap, //210
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_18_uap, //070
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_19_uap, //230
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_20_uap, //145
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_21_uap, //152
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_22_uap, //200
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_23_uap, //155
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_24_uap, //157
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_25_uap, //160
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_26_uap, //165
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_27_uap, //077
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_28_uap, //170
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_29_uap, //020
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_30_uap, //220
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_31_uap, //146
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_32_uap, //148
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_33_uap, //110
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_34_uap, //016
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_35_uap, //008
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_36_uap, //271
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_37_uap, //132
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_38_uap, //250
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_39_uap, //260
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_40_uap, //400
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_uap, //295
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_47_uap, //RE
  &dissect_cat_21_ed_major_2_ed_minor_1_datafield_48_uap, //S
};
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2043
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_2044
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_2045
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_2046
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //071 expand_var_2047
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2048
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //131 expand_var_2049
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //072 expand_var_2050
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_2051
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //151 expand_var_2052
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_2053
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //073 expand_var_2054
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //074 expand_var_2055
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //075 expand_var_2056
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //076 expand_var_2057
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_2058
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_2059
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_16_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_2060
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2061
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_2062
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //145 expand_var_2063
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //152 expand_var_2064
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_2065
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2066, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2067, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2068, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2069, tvb, (offset * 8) + 3, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2070, tvb, (offset * 8) + 6, 2, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //155 expand_var_2071
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //157 expand_var_2072
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //160 expand_var_2073
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //165 expand_var_2074
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //077 expand_var_2075
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_28_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_2076
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_168_compound_168(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_29_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_2077
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_29_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_30_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_2078
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_31_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //146 expand_var_2079
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_31_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_32_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //148 expand_var_2080
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_32_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_2081
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //016 expand_var_2082
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_34_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_35_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //008 expand_var_2083
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_35_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_36_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //271 expand_var_2084
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_item *spare_item_0_0 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_0_0);
  proto_tree_add_bits_item(datablock_tree, expand_var_2085, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2086, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2087, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2088, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2089, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2090, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  unsigned int value_expand_var_2091 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2091 = value_expand_var_2091 >> 4;
  proto_tree_add_uint (datablock_tree, expand_var_2091, tvb, offset + 0, 1, value_expand_var_2091);
  proto_item *spare_item_1_4 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 4, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 3, spare_item_1_4);
  proto_tree_add_bits_item(datablock_tree, expand_var_2092, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_37_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //132 expand_var_2093
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_37_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_38_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_2094
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_448_compound_448(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_39_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_2095
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_39_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_40_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_2096
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_41_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2097
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_47_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 21);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_2_datafield_48_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_2099
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_21_ed_major_2_ed_minor_2_uap_table_expand[] = {
  &expand_var_2043, //010
  &expand_var_2044, //040
  &expand_var_2045, //161
  &expand_var_2046, //015
  &expand_var_2047, //071
  &expand_var_2048, //130
  &expand_var_2049, //131
  &expand_var_2050, //072
  &expand_var_2051, //150
  &expand_var_2052, //151
  &expand_var_2053, //080
  &expand_var_2054, //073
  &expand_var_2055, //074
  &expand_var_2056, //075
  &expand_var_2057, //076
  &expand_var_2058, //140
  &expand_var_2059, //090
  &expand_var_2060, //210
  &expand_var_2061, //070
  &expand_var_2062, //230
  &expand_var_2063, //145
  &expand_var_2064, //152
  &expand_var_2065, //200
  &expand_var_2071, //155
  &expand_var_2072, //157
  &expand_var_2073, //160
  &expand_var_2074, //165
  &expand_var_2075, //077
  &expand_var_2076, //170
  &expand_var_2077, //020
  &expand_var_2078, //220
  &expand_var_2079, //146
  &expand_var_2080, //148
  &expand_var_2081, //110
  &expand_var_2082, //016
  &expand_var_2083, //008
  &expand_var_2084, //271
  &expand_var_2093, //132
  &expand_var_2094, //250
  &expand_var_2095, //260
  &expand_var_2096, //400
  &expand_var_2097, //295
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_2098, //RE
  &expand_var_2099, //S
};
static const ttt cat_21_ed_major_2_ed_minor_2_uap_table[] = {
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_0_uap, //010
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_1_uap, //040
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_2_uap, //161
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_3_uap, //015
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_4_uap, //071
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_5_uap, //130
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_6_uap, //131
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_7_uap, //072
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_8_uap, //150
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_9_uap, //151
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_10_uap, //080
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_11_uap, //073
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_12_uap, //074
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_13_uap, //075
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_14_uap, //076
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_15_uap, //140
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_16_uap, //090
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_17_uap, //210
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_18_uap, //070
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_19_uap, //230
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_20_uap, //145
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_21_uap, //152
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_22_uap, //200
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_23_uap, //155
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_24_uap, //157
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_25_uap, //160
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_26_uap, //165
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_27_uap, //077
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_28_uap, //170
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_29_uap, //020
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_30_uap, //220
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_31_uap, //146
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_32_uap, //148
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_33_uap, //110
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_34_uap, //016
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_35_uap, //008
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_36_uap, //271
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_37_uap, //132
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_38_uap, //250
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_39_uap, //260
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_40_uap, //400
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_41_uap, //295
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_47_uap, //RE
  &dissect_cat_21_ed_major_2_ed_minor_2_datafield_48_uap, //S
};
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2100
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_2101
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_2102, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2103, tvb, (offset * 8) + 3, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2104, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2105, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2106, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_2107, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2108, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2109, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2110, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2111, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2112, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2113, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_item *spare_item_2_0 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 0, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 1, spare_item_2_0);
  proto_tree_add_bits_item(datablock_tree, expand_var_2114, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2115, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2116, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2117, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2118, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2119, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2120, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_2121
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_2122
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //071 expand_var_2123
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2124
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //131 expand_var_2125
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //072 expand_var_2126
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_2127
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //151 expand_var_2128
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_2129
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //073 expand_var_2130
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //074 expand_var_2131
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //075 expand_var_2132
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //076 expand_var_2133
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_2134
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_2135
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_16_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_2136
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2137
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_2138
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //145 expand_var_2139
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //152 expand_var_2140
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_2141
{
  return dissect_cat_21_ed_major_2_ed_minor_2_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //155 expand_var_2142
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //157 expand_var_2143
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //160 expand_var_2144
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //165 expand_var_2145
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //077 expand_var_2146
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_28_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_2147
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_168_compound_168(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_29_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_2148
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_29_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_30_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_2149
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_31_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //146 expand_var_2150
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_31_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_32_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //148 expand_var_2151
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_32_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_2152
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //016 expand_var_2153
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_34_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_35_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //008 expand_var_2154
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_35_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_36_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //271 expand_var_2155
{
  return dissect_cat_21_ed_major_2_ed_minor_2_datafield_36_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_37_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //132 expand_var_2156
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_37_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_38_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_2157
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_448_compound_448(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_39_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_2158
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_39_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_40_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_2159
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_41_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2160
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_47_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 21);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_3_datafield_48_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_2162
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_21_ed_major_2_ed_minor_3_uap_table_expand[] = {
  &expand_var_2100, //010
  &expand_var_2101, //040
  &expand_var_2121, //161
  &expand_var_2122, //015
  &expand_var_2123, //071
  &expand_var_2124, //130
  &expand_var_2125, //131
  &expand_var_2126, //072
  &expand_var_2127, //150
  &expand_var_2128, //151
  &expand_var_2129, //080
  &expand_var_2130, //073
  &expand_var_2131, //074
  &expand_var_2132, //075
  &expand_var_2133, //076
  &expand_var_2134, //140
  &expand_var_2135, //090
  &expand_var_2136, //210
  &expand_var_2137, //070
  &expand_var_2138, //230
  &expand_var_2139, //145
  &expand_var_2140, //152
  &expand_var_2141, //200
  &expand_var_2142, //155
  &expand_var_2143, //157
  &expand_var_2144, //160
  &expand_var_2145, //165
  &expand_var_2146, //077
  &expand_var_2147, //170
  &expand_var_2148, //020
  &expand_var_2149, //220
  &expand_var_2150, //146
  &expand_var_2151, //148
  &expand_var_2152, //110
  &expand_var_2153, //016
  &expand_var_2154, //008
  &expand_var_2155, //271
  &expand_var_2156, //132
  &expand_var_2157, //250
  &expand_var_2158, //260
  &expand_var_2159, //400
  &expand_var_2160, //295
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_2161, //RE
  &expand_var_2162, //S
};
static const ttt cat_21_ed_major_2_ed_minor_3_uap_table[] = {
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_0_uap, //010
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_1_uap, //040
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_2_uap, //161
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_3_uap, //015
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_4_uap, //071
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_5_uap, //130
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_6_uap, //131
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_7_uap, //072
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_8_uap, //150
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_9_uap, //151
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_10_uap, //080
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_11_uap, //073
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_12_uap, //074
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_13_uap, //075
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_14_uap, //076
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_15_uap, //140
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_16_uap, //090
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_17_uap, //210
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_18_uap, //070
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_19_uap, //230
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_20_uap, //145
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_21_uap, //152
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_22_uap, //200
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_23_uap, //155
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_24_uap, //157
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_25_uap, //160
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_26_uap, //165
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_27_uap, //077
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_28_uap, //170
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_29_uap, //020
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_30_uap, //220
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_31_uap, //146
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_32_uap, //148
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_33_uap, //110
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_34_uap, //016
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_35_uap, //008
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_36_uap, //271
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_37_uap, //132
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_38_uap, //250
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_39_uap, //260
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_40_uap, //400
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_41_uap, //295
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_47_uap, //RE
  &dissect_cat_21_ed_major_2_ed_minor_3_datafield_48_uap, //S
};
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2163
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_2164
{
  return dissect_cat_21_ed_major_2_ed_minor_3_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_2165
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_2166
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //071 expand_var_2167
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2168
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //131 expand_var_2169
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //072 expand_var_2170
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_2171
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //151 expand_var_2172
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_2173
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //073 expand_var_2174
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //074 expand_var_2175
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //075 expand_var_2176
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //076 expand_var_2177
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_2178
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_2179
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_16_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_2180
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2181
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_2182
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //145 expand_var_2183
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //152 expand_var_2184
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_2185
{
  return dissect_cat_21_ed_major_2_ed_minor_2_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //155 expand_var_2186
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //157 expand_var_2187
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //160 expand_var_2188
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //165 expand_var_2189
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //077 expand_var_2190
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_28_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_2191
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_168_compound_168(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_29_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_2192
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_29_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_30_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_2193
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_31_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //146 expand_var_2194
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_31_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_32_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //148 expand_var_2195
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_32_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_2196
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //016 expand_var_2197
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_34_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_35_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //008 expand_var_2198
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_35_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_36_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //271 expand_var_2199
{
  return dissect_cat_21_ed_major_2_ed_minor_2_datafield_36_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_37_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //132 expand_var_2200
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_37_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_38_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_2201
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_448_compound_448(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_39_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_2202
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_39_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_40_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_2203
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_41_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2204
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_47_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 21);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_4_datafield_48_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_2206
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_21_ed_major_2_ed_minor_4_uap_table_expand[] = {
  &expand_var_2163, //010
  &expand_var_2164, //040
  &expand_var_2165, //161
  &expand_var_2166, //015
  &expand_var_2167, //071
  &expand_var_2168, //130
  &expand_var_2169, //131
  &expand_var_2170, //072
  &expand_var_2171, //150
  &expand_var_2172, //151
  &expand_var_2173, //080
  &expand_var_2174, //073
  &expand_var_2175, //074
  &expand_var_2176, //075
  &expand_var_2177, //076
  &expand_var_2178, //140
  &expand_var_2179, //090
  &expand_var_2180, //210
  &expand_var_2181, //070
  &expand_var_2182, //230
  &expand_var_2183, //145
  &expand_var_2184, //152
  &expand_var_2185, //200
  &expand_var_2186, //155
  &expand_var_2187, //157
  &expand_var_2188, //160
  &expand_var_2189, //165
  &expand_var_2190, //077
  &expand_var_2191, //170
  &expand_var_2192, //020
  &expand_var_2193, //220
  &expand_var_2194, //146
  &expand_var_2195, //148
  &expand_var_2196, //110
  &expand_var_2197, //016
  &expand_var_2198, //008
  &expand_var_2199, //271
  &expand_var_2200, //132
  &expand_var_2201, //250
  &expand_var_2202, //260
  &expand_var_2203, //400
  &expand_var_2204, //295
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_2205, //RE
  &expand_var_2206, //S
};
static const ttt cat_21_ed_major_2_ed_minor_4_uap_table[] = {
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_0_uap, //010
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_1_uap, //040
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_2_uap, //161
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_3_uap, //015
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_4_uap, //071
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_5_uap, //130
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_6_uap, //131
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_7_uap, //072
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_8_uap, //150
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_9_uap, //151
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_10_uap, //080
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_11_uap, //073
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_12_uap, //074
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_13_uap, //075
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_14_uap, //076
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_15_uap, //140
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_16_uap, //090
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_17_uap, //210
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_18_uap, //070
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_19_uap, //230
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_20_uap, //145
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_21_uap, //152
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_22_uap, //200
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_23_uap, //155
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_24_uap, //157
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_25_uap, //160
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_26_uap, //165
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_27_uap, //077
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_28_uap, //170
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_29_uap, //020
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_30_uap, //220
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_31_uap, //146
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_32_uap, //148
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_33_uap, //110
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_34_uap, //016
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_35_uap, //008
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_36_uap, //271
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_37_uap, //132
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_38_uap, //250
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_39_uap, //260
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_40_uap, //400
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_41_uap, //295
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_47_uap, //RE
  &dissect_cat_21_ed_major_2_ed_minor_4_datafield_48_uap, //S
};
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2207
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_2208
{
  return dissect_cat_21_ed_major_2_ed_minor_3_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_2209
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_2210
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //071 expand_var_2211
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2212
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //131 expand_var_2213
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //072 expand_var_2214
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_2215
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //151 expand_var_2216
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_2217
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //073 expand_var_2218
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //074 expand_var_2219
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //075 expand_var_2220
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //076 expand_var_2221
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_2222
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_2223
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_16_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_2224
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 1, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_2225, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2226, tvb, (offset * 8) + 2, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2227, tvb, (offset * 8) + 5, 3, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2228
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_2229
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //145 expand_var_2230
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //152 expand_var_2231
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_2232
{
  return dissect_cat_21_ed_major_2_ed_minor_2_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //155 expand_var_2233
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //157 expand_var_2234
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //160 expand_var_2235
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //165 expand_var_2236
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //077 expand_var_2237
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_9_204_compound_204(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_28_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_2238
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_168_compound_168(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_29_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_2239
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_29_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_30_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_2240
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_31_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //146 expand_var_2241
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_31_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_32_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //148 expand_var_2242
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_32_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_2243
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //016 expand_var_2244
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_34_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_35_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //008 expand_var_2245
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_35_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_36_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //271 expand_var_2246
{
  return dissect_cat_21_ed_major_2_ed_minor_2_datafield_36_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_37_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //132 expand_var_2247
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_37_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_38_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_2248
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_448_compound_448(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_39_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_2249
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_39_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_40_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_2250
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_41_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2251
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_47_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 21);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_5_datafield_48_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_2253
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_21_ed_major_2_ed_minor_5_uap_table_expand[] = {
  &expand_var_2207, //010
  &expand_var_2208, //040
  &expand_var_2209, //161
  &expand_var_2210, //015
  &expand_var_2211, //071
  &expand_var_2212, //130
  &expand_var_2213, //131
  &expand_var_2214, //072
  &expand_var_2215, //150
  &expand_var_2216, //151
  &expand_var_2217, //080
  &expand_var_2218, //073
  &expand_var_2219, //074
  &expand_var_2220, //075
  &expand_var_2221, //076
  &expand_var_2222, //140
  &expand_var_2223, //090
  &expand_var_2224, //210
  &expand_var_2228, //070
  &expand_var_2229, //230
  &expand_var_2230, //145
  &expand_var_2231, //152
  &expand_var_2232, //200
  &expand_var_2233, //155
  &expand_var_2234, //157
  &expand_var_2235, //160
  &expand_var_2236, //165
  &expand_var_2237, //077
  &expand_var_2238, //170
  &expand_var_2239, //020
  &expand_var_2240, //220
  &expand_var_2241, //146
  &expand_var_2242, //148
  &expand_var_2243, //110
  &expand_var_2244, //016
  &expand_var_2245, //008
  &expand_var_2246, //271
  &expand_var_2247, //132
  &expand_var_2248, //250
  &expand_var_2249, //260
  &expand_var_2250, //400
  &expand_var_2251, //295
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_2252, //RE
  &expand_var_2253, //S
};
static const ttt cat_21_ed_major_2_ed_minor_5_uap_table[] = {
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_0_uap, //010
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_1_uap, //040
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_2_uap, //161
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_3_uap, //015
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_4_uap, //071
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_5_uap, //130
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_6_uap, //131
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_7_uap, //072
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_8_uap, //150
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_9_uap, //151
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_10_uap, //080
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_11_uap, //073
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_12_uap, //074
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_13_uap, //075
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_14_uap, //076
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_15_uap, //140
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_16_uap, //090
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_17_uap, //210
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_18_uap, //070
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_19_uap, //230
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_20_uap, //145
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_21_uap, //152
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_22_uap, //200
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_23_uap, //155
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_24_uap, //157
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_25_uap, //160
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_26_uap, //165
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_27_uap, //077
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_28_uap, //170
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_29_uap, //020
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_30_uap, //220
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_31_uap, //146
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_32_uap, //148
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_33_uap, //110
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_34_uap, //016
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_35_uap, //008
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_36_uap, //271
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_37_uap, //132
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_38_uap, //250
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_39_uap, //260
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_40_uap, //400
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_41_uap, //295
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_47_uap, //RE
  &dissect_cat_21_ed_major_2_ed_minor_5_datafield_48_uap, //S
};
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2254
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_2255
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_2256, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2257, tvb, (offset * 8) + 3, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2258, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2259, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2260, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_2261, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2262, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2263, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2264, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2265, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2266, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2267, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_item *spare_item_2_0 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 0, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 1, spare_item_2_0);
  proto_tree_add_bits_item(datablock_tree, expand_var_2268, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2269, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2270, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2271, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2272, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2273, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2274, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_2275, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2276 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2276 = value_expand_var_2276 >> 1;
  value_expand_var_2276 = value_expand_var_2276 & 0b0111111;
  proto_tree_add_uint (datablock_tree, expand_var_2276, tvb, offset + 0, 1, value_expand_var_2276);
  proto_tree_add_bits_item(datablock_tree, expand_var_2277, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_2278, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2279 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2279 = value_expand_var_2279 >> 1;
  value_expand_var_2279 = value_expand_var_2279 & 0b0111111;
  proto_tree_add_uint (datablock_tree, expand_var_2279, tvb, offset + 0, 1, value_expand_var_2279);
  proto_tree_add_bits_item(datablock_tree, expand_var_2280, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_2281
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_2282
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //071 expand_var_2283
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  double value_expand_var_d = (double)value_expand_var * 0.0078125;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 3, value_expand_var_d);
  return 3;
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2284
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //131 expand_var_2285
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //072 expand_var_2286
{
  return dissect_cat_21_ed_major_2_ed_minor_6_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_2287
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //151 expand_var_2288
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_2289
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 3, value_expand_var);
  return 3;
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //073 expand_var_2290
{
  return dissect_cat_21_ed_major_2_ed_minor_6_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //074 expand_var_2291
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2292, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2293 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  value_expand_var_2293 = value_expand_var_2293 & 0b00111111111111111111111111111111;
  double value_expand_var_2293_d = (double)value_expand_var_2293 * 9.313225746154785e-10;
  proto_tree_add_double (tree_group_0, expand_var_2293, tvb, offset + 0, 4, value_expand_var_2293_d);
  return 4;
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //075 expand_var_2294
{
  return dissect_cat_21_ed_major_2_ed_minor_6_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //076 expand_var_2295
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2296, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2297 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  value_expand_var_2297 = value_expand_var_2297 & 0b00111111111111111111111111111111;
  double value_expand_var_2297_d = (double)value_expand_var_2297 * 9.313225746154785e-10;
  proto_tree_add_double (tree_group_0, expand_var_2297, tvb, offset + 0, 4, value_expand_var_2297_d);
  return 4;
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_2298
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_2299
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_16_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_2300
{
  return dissect_cat_21_ed_major_2_ed_minor_5_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2301
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_2302);
  return 2;
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_2303
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //145 expand_var_2304
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //152 expand_var_2305
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_2306
{
  return dissect_cat_21_ed_major_2_ed_minor_2_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //155 expand_var_2307
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //157 expand_var_2308
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //160 expand_var_2309
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //165 expand_var_2310
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //077 expand_var_2311
{
  return dissect_cat_21_ed_major_2_ed_minor_6_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_28_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_2312
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_168_compound_168(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_29_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_2313
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_29_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_30_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_2314
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_31_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //146 expand_var_2315
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_31_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_32_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //148 expand_var_2316
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_32_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_2317
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //016 expand_var_2318
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_34_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_35_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //008 expand_var_2319
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_35_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_36_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //271 expand_var_2320
{
  return dissect_cat_21_ed_major_2_ed_minor_2_datafield_36_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_37_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //132 expand_var_2321
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_37_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_38_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_2322
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_448_compound_448(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_39_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_2323
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_39_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_40_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_2324
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1284_compound_1284(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2326
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1285_compound_1285(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2327
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1286_compound_1286(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2328
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1287_compound_1287(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2329
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1288_compound_1288(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2330
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1289_compound_1289(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2331
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1290_compound_1290(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2332
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1291_compound_1291(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2333
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1335_compound_1335(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2334
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1293_compound_1293(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2335
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1294_compound_1294(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2336
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1295_compound_1295(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2337
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1296_compound_1296(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2338
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1297_compound_1297(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2339
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1298_compound_1298(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2340
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1299_compound_1299(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2341
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1300_compound_1300(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2342
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1301_compound_1301(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2343
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1302_compound_1302(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2344
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1303_compound_1303(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2345
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1304_compound_1304(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2346
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1305_compound_1305(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2347
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1306_compound_1306(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2348
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_41_1284_compound_1284(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2325
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 23, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1284_compound_1284(tvb, offset, asterix_packet_tree, expand_var_2326);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1285_compound_1285(tvb, offset, asterix_packet_tree, expand_var_2327);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1286_compound_1286(tvb, offset, asterix_packet_tree, expand_var_2328);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1287_compound_1287(tvb, offset, asterix_packet_tree, expand_var_2329);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1288_compound_1288(tvb, offset, asterix_packet_tree, expand_var_2330);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1289_compound_1289(tvb, offset, asterix_packet_tree, expand_var_2331);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1290_compound_1290(tvb, offset, asterix_packet_tree, expand_var_2332);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1291_compound_1291(tvb, offset, asterix_packet_tree, expand_var_2333);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1335_compound_1335(tvb, offset, asterix_packet_tree, expand_var_2334);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1293_compound_1293(tvb, offset, asterix_packet_tree, expand_var_2335);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1294_compound_1294(tvb, offset, asterix_packet_tree, expand_var_2336);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 12))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1295_compound_1295(tvb, offset, asterix_packet_tree, expand_var_2337);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 13))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1296_compound_1296(tvb, offset, asterix_packet_tree, expand_var_2338);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 14))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1297_compound_1297(tvb, offset, asterix_packet_tree, expand_var_2339);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 15))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 16))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1298_compound_1298(tvb, offset, asterix_packet_tree, expand_var_2340);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 17))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1299_compound_1299(tvb, offset, asterix_packet_tree, expand_var_2341);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 18))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1300_compound_1300(tvb, offset, asterix_packet_tree, expand_var_2342);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 19))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1301_compound_1301(tvb, offset, asterix_packet_tree, expand_var_2343);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 20))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1302_compound_1302(tvb, offset, asterix_packet_tree, expand_var_2344);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 21))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1303_compound_1303(tvb, offset, asterix_packet_tree, expand_var_2345);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 22))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1304_compound_1304(tvb, offset, asterix_packet_tree, expand_var_2346);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 23))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 24))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1305_compound_1305(tvb, offset, asterix_packet_tree, expand_var_2347);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 25))
  {
    int fun_len = dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_1306_compound_1306(tvb, offset, asterix_packet_tree, expand_var_2348);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_47_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 21);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_6_datafield_48_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_2350
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_21_ed_major_2_ed_minor_6_uap_table_expand[] = {
  &expand_var_2254, //010
  &expand_var_2255, //040
  &expand_var_2281, //161
  &expand_var_2282, //015
  &expand_var_2283, //071
  &expand_var_2284, //130
  &expand_var_2285, //131
  &expand_var_2286, //072
  &expand_var_2287, //150
  &expand_var_2288, //151
  &expand_var_2289, //080
  &expand_var_2290, //073
  &expand_var_2291, //074
  &expand_var_2294, //075
  &expand_var_2295, //076
  &expand_var_2298, //140
  &expand_var_2299, //090
  &expand_var_2300, //210
  &expand_var_2301, //070
  &expand_var_2303, //230
  &expand_var_2304, //145
  &expand_var_2305, //152
  &expand_var_2306, //200
  &expand_var_2307, //155
  &expand_var_2308, //157
  &expand_var_2309, //160
  &expand_var_2310, //165
  &expand_var_2311, //077
  &expand_var_2312, //170
  &expand_var_2313, //020
  &expand_var_2314, //220
  &expand_var_2315, //146
  &expand_var_2316, //148
  &expand_var_2317, //110
  &expand_var_2318, //016
  &expand_var_2319, //008
  &expand_var_2320, //271
  &expand_var_2321, //132
  &expand_var_2322, //250
  &expand_var_2323, //260
  &expand_var_2324, //400
  &expand_var_2325, //295
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_2349, //RE
  &expand_var_2350, //S
};
static const ttt cat_21_ed_major_2_ed_minor_6_uap_table[] = {
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_0_uap, //010
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_1_uap, //040
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_2_uap, //161
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_3_uap, //015
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_4_uap, //071
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_5_uap, //130
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_6_uap, //131
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_7_uap, //072
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_8_uap, //150
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_9_uap, //151
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_10_uap, //080
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_11_uap, //073
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_12_uap, //074
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_13_uap, //075
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_14_uap, //076
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_15_uap, //140
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_16_uap, //090
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_17_uap, //210
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_18_uap, //070
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_19_uap, //230
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_20_uap, //145
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_21_uap, //152
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_22_uap, //200
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_23_uap, //155
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_24_uap, //157
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_25_uap, //160
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_26_uap, //165
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_27_uap, //077
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_28_uap, //170
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_29_uap, //020
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_30_uap, //220
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_31_uap, //146
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_32_uap, //148
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_33_uap, //110
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_34_uap, //016
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_35_uap, //008
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_36_uap, //271
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_37_uap, //132
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_38_uap, //250
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_39_uap, //260
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_40_uap, //400
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_uap, //295
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_47_uap, //RE
  &dissect_cat_21_ed_major_2_ed_minor_6_datafield_48_uap, //S
};
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2351
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_2352
{
  return dissect_cat_21_ed_major_2_ed_minor_6_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_2353
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_2354
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //071 expand_var_2355
{
  return dissect_cat_21_ed_major_2_ed_minor_6_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2356
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //131 expand_var_2357
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //072 expand_var_2358
{
  return dissect_cat_21_ed_major_2_ed_minor_6_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_2359
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //151 expand_var_2360
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_2361
{
  return dissect_cat_21_ed_major_2_ed_minor_6_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //073 expand_var_2362
{
  return dissect_cat_21_ed_major_2_ed_minor_6_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //074 expand_var_2363
{
  return dissect_cat_21_ed_major_2_ed_minor_6_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //075 expand_var_2364
{
  return dissect_cat_21_ed_major_2_ed_minor_6_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //076 expand_var_2365
{
  return dissect_cat_21_ed_major_2_ed_minor_6_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_2366
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_2367
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  unsigned int value_expand_var_2368 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2368 = value_expand_var_2368 >> 5;
  proto_tree_add_uint (datablock_tree, expand_var_2368, tvb, offset + 0, 1, value_expand_var_2368);
  unsigned int value_expand_var_2369 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2369 = value_expand_var_2369 >> 1;
  value_expand_var_2369 = value_expand_var_2369 & 0b0001111;
  proto_tree_add_uint (datablock_tree, expand_var_2369, tvb, offset + 0, 1, value_expand_var_2369);
  proto_tree_add_bits_item(datablock_tree, expand_var_2370, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  unsigned int value_expand_var_2371 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2371 = value_expand_var_2371 >> 7;
  proto_tree_add_uint (datablock_tree, expand_var_2371, tvb, offset + 0, 1, value_expand_var_2371);
  unsigned int value_expand_var_2372 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2372 = value_expand_var_2372 >> 5;
  value_expand_var_2372 = value_expand_var_2372 & 0b011;
  proto_tree_add_uint (datablock_tree, expand_var_2372, tvb, offset + 0, 1, value_expand_var_2372);
  unsigned int value_expand_var_2373 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2373 = value_expand_var_2373 >> 1;
  value_expand_var_2373 = value_expand_var_2373 & 0b0001111;
  proto_tree_add_uint (datablock_tree, expand_var_2373, tvb, offset + 0, 1, value_expand_var_2373);
  proto_tree_add_bits_item(datablock_tree, expand_var_2374, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_item *spare_item_2_0 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_2_0);
  proto_tree_add_bits_item(datablock_tree, expand_var_2375, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2376 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2376 = value_expand_var_2376 >> 3;
  value_expand_var_2376 = value_expand_var_2376 & 0b00011;
  proto_tree_add_uint (datablock_tree, expand_var_2376, tvb, offset + 0, 1, value_expand_var_2376);
  unsigned int value_expand_var_2377 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2377 = value_expand_var_2377 >> 1;
  value_expand_var_2377 = value_expand_var_2377 & 0b0000011;
  proto_tree_add_uint (datablock_tree, expand_var_2377, tvb, offset + 0, 1, value_expand_var_2377);
  proto_tree_add_bits_item(datablock_tree, expand_var_2378, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  unsigned int value_expand_var_2379 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2379 = value_expand_var_2379 >> 4;
  proto_tree_add_uint (datablock_tree, expand_var_2379, tvb, offset + 0, 1, value_expand_var_2379);
  proto_tree_add_bits_item(datablock_tree, expand_var_2380, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3_5 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 5, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 5, 2, spare_item_3_5);
  proto_tree_add_bits_item(datablock_tree, expand_var_2381, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_item *spare_item_4_0 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_4_0);
  proto_tree_add_bits_item(datablock_tree, expand_var_2382, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2383, tvb, (offset * 8) + 3, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2384, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2385, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2386, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  unsigned int value_expand_var_2387 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2387 = value_expand_var_2387 >> 1;
  double value_expand_var_2387_d = (double)value_expand_var_2387 * 128.0;
  proto_tree_add_double (datablock_tree, expand_var_2387, tvb, offset + 0, 1, value_expand_var_2387_d);
  proto_tree_add_bits_item(datablock_tree, expand_var_2388, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  unsigned int value_expand_var_2389 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2389 = value_expand_var_2389 >> 1;
  proto_tree_add_uint (datablock_tree, expand_var_2389, tvb, offset + 0, 1, value_expand_var_2389);
  proto_tree_add_bits_item(datablock_tree, expand_var_2390, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  unsigned int value_expand_var_2391 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2391 = value_expand_var_2391 >> 1;
  double value_expand_var_2391_d = (double)value_expand_var_2391 * 128.0;
  proto_tree_add_double (datablock_tree, expand_var_2391, tvb, offset + 0, 1, value_expand_var_2391_d);
  proto_tree_add_bits_item(datablock_tree, expand_var_2392, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  unsigned int value_expand_var_2393 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2393 = value_expand_var_2393 >> 1;
  proto_tree_add_uint (datablock_tree, expand_var_2393, tvb, offset + 0, 1, value_expand_var_2393);
  proto_tree_add_bits_item(datablock_tree, expand_var_2394, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_2395
{
  return dissect_cat_21_ed_major_2_ed_minor_5_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2396
{
  return dissect_cat_21_ed_major_2_ed_minor_6_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_2397
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //145 expand_var_2398
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //152 expand_var_2399
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_2400
{
  return dissect_cat_21_ed_major_2_ed_minor_2_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //155 expand_var_2401
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //157 expand_var_2402
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //160 expand_var_2403
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //165 expand_var_2404
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //077 expand_var_2405
{
  return dissect_cat_21_ed_major_2_ed_minor_6_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_28_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_2406
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_168_compound_168(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_29_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_2407
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_29_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_30_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_2408
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_31_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //146 expand_var_2409
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_31_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_32_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //148 expand_var_2410
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_32_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_2411
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //016 expand_var_2412
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_34_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_35_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //008 expand_var_2413
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_35_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_36_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //271 expand_var_2414
{
  return dissect_cat_21_ed_major_2_ed_minor_2_datafield_36_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_37_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //132 expand_var_2415
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_37_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_38_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_2416
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_448_compound_448(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_39_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_2417
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_39_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_40_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_2418
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_41_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_2419
{
  return dissect_cat_21_ed_major_2_ed_minor_6_datafield_41_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_47_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 21);
  return offset - offset_start;
}
static int dissect_cat_21_ed_major_2_ed_minor_7_datafield_48_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_2421
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_21_ed_major_2_ed_minor_7_uap_table_expand[] = {
  &expand_var_2351, //010
  &expand_var_2352, //040
  &expand_var_2353, //161
  &expand_var_2354, //015
  &expand_var_2355, //071
  &expand_var_2356, //130
  &expand_var_2357, //131
  &expand_var_2358, //072
  &expand_var_2359, //150
  &expand_var_2360, //151
  &expand_var_2361, //080
  &expand_var_2362, //073
  &expand_var_2363, //074
  &expand_var_2364, //075
  &expand_var_2365, //076
  &expand_var_2366, //140
  &expand_var_2367, //090
  &expand_var_2395, //210
  &expand_var_2396, //070
  &expand_var_2397, //230
  &expand_var_2398, //145
  &expand_var_2399, //152
  &expand_var_2400, //200
  &expand_var_2401, //155
  &expand_var_2402, //157
  &expand_var_2403, //160
  &expand_var_2404, //165
  &expand_var_2405, //077
  &expand_var_2406, //170
  &expand_var_2407, //020
  &expand_var_2408, //220
  &expand_var_2409, //146
  &expand_var_2410, //148
  &expand_var_2411, //110
  &expand_var_2412, //016
  &expand_var_2413, //008
  &expand_var_2414, //271
  &expand_var_2415, //132
  &expand_var_2416, //250
  &expand_var_2417, //260
  &expand_var_2418, //400
  &expand_var_2419, //295
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_2420, //RE
  &expand_var_2421, //S
};
static const ttt cat_21_ed_major_2_ed_minor_7_uap_table[] = {
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_0_uap, //010
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_1_uap, //040
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_2_uap, //161
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_3_uap, //015
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_4_uap, //071
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_5_uap, //130
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_6_uap, //131
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_7_uap, //072
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_8_uap, //150
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_9_uap, //151
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_10_uap, //080
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_11_uap, //073
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_12_uap, //074
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_13_uap, //075
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_14_uap, //076
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_15_uap, //140
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_16_uap, //090
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_17_uap, //210
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_18_uap, //070
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_19_uap, //230
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_20_uap, //145
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_21_uap, //152
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_22_uap, //200
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_23_uap, //155
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_24_uap, //157
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_25_uap, //160
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_26_uap, //165
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_27_uap, //077
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_28_uap, //170
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_29_uap, //020
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_30_uap, //220
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_31_uap, //146
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_32_uap, //148
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_33_uap, //110
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_34_uap, //016
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_35_uap, //008
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_36_uap, //271
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_37_uap, //132
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_38_uap, //250
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_39_uap, //260
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_40_uap, //400
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_41_uap, //295
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_47_uap, //RE
  &dissect_cat_21_ed_major_2_ed_minor_7_datafield_48_uap, //S
};
static int dissect_cat_23_ed_major_1_ed_minor_2_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2422
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_23_ed_major_1_ed_minor_2_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_2423
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_23_ed_major_1_ed_minor_2_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_2424
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2425 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2425 = value_expand_var_2425 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_2425, tvb, offset + 0, 1, value_expand_var_2425);
  proto_tree_add_bits_item(tree_group_0, expand_var_2426, tvb, (offset * 8) + 4, 4, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_23_ed_major_1_ed_minor_2_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2427
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_23_ed_major_1_ed_minor_2_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_2428
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_2429, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2430, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2431, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2432, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2433, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2434, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2435, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2436, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  unsigned int value_expand_var_2437 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2437 = value_expand_var_2437 >> 1;
  proto_tree_add_uint (datablock_tree, expand_var_2437, tvb, offset + 0, 1, value_expand_var_2437);
  proto_tree_add_bits_item(datablock_tree, expand_var_2438, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_23_ed_major_1_ed_minor_2_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //101 expand_var_2439
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  unsigned int value_expand_var_2440 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_2440_d = (double)value_expand_var_2440 * 0.5;
  proto_tree_add_double (datablock_tree, expand_var_2440, tvb, offset + 0, 1, value_expand_var_2440_d);
  proto_tree_add_bits_item(datablock_tree, expand_var_2441, tvb, (offset * 8) + 8, 3, ENC_BIG_ENDIAN);
  proto_item *spare_item_0_11 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 11, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 11, 4, spare_item_0_11);
  proto_tree_add_bits_item(datablock_tree, expand_var_2442, tvb, (offset * 8) + 15, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset + 1))
  {
    offset+=2;
    goto end;
  }
  offset+=2;
  unsigned int value_expand_var_2443 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2443 = value_expand_var_2443 >> 1;
  proto_tree_add_uint (datablock_tree, expand_var_2443, tvb, offset + 0, 1, value_expand_var_2443);
  proto_tree_add_bits_item(datablock_tree, expand_var_2444, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_23_ed_major_1_ed_minor_2_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_2445
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 1, value_expand_var);
  return 1;
}
static int dissect_cat_23_ed_major_1_ed_minor_2_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_2446
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_item *spare_item_0_0 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0_0);
  proto_tree_add_bits_item(datablock_tree, expand_var_2447, tvb, (offset * 8) + 4, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2448, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_23_ed_major_1_ed_minor_2_datafield_8_rep32(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_2450
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2451, tvb, (offset * 8) + 0, 8, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2452, tvb, (offset * 8) + 8, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_9 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 9, 7, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 9, 7, spare_item_9);
  unsigned int value_expand_var_2453 = asterix_get_unsigned_value (tvb, offset + 2, 4);
  proto_tree_add_uint (tree_group_0, expand_var_2453, tvb, offset + 2, 4, value_expand_var_2453);
  return 6;
}
static int dissect_cat_23_ed_major_1_ed_minor_2_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_2449
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_23_ed_major_1_ed_minor_2_datafield_8_rep32(tvb, offset, sub_tree, expand_var_2450);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_23_ed_major_1_ed_minor_2_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_23_ed_major_1_ed_minor_2_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_2455
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_23_ed_major_1_ed_minor_2_uap_table_expand[] = {
  &expand_var_2422, //010
  &expand_var_2423, //000
  &expand_var_2424, //015
  &expand_var_2427, //070
  &expand_var_2428, //100
  &expand_var_2439, //101
  &expand_var_2445, //200
  &expand_var_2446, //110
  &expand_var_2449, //120
  NULL,
  NULL,
  NULL,
  &expand_var_2454, //RE
  &expand_var_2455, //S
};
static const ttt cat_23_ed_major_1_ed_minor_2_uap_table[] = {
  &dissect_cat_23_ed_major_1_ed_minor_2_datafield_0_uap, //010
  &dissect_cat_23_ed_major_1_ed_minor_2_datafield_1_uap, //000
  &dissect_cat_23_ed_major_1_ed_minor_2_datafield_2_uap, //015
  &dissect_cat_23_ed_major_1_ed_minor_2_datafield_3_uap, //070
  &dissect_cat_23_ed_major_1_ed_minor_2_datafield_4_uap, //100
  &dissect_cat_23_ed_major_1_ed_minor_2_datafield_5_uap, //101
  &dissect_cat_23_ed_major_1_ed_minor_2_datafield_6_uap, //200
  &dissect_cat_23_ed_major_1_ed_minor_2_datafield_7_uap, //110
  &dissect_cat_23_ed_major_1_ed_minor_2_datafield_8_uap, //120
  NULL,
  NULL,
  NULL,
  &dissect_cat_23_ed_major_1_ed_minor_2_datafield_12_uap, //RE
  &dissect_cat_23_ed_major_1_ed_minor_2_datafield_13_uap, //S
};
static int dissect_cat_23_ed_major_1_ed_minor_3_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2456
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_23_ed_major_1_ed_minor_3_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_2457
{
  return dissect_cat_23_ed_major_1_ed_minor_2_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_23_ed_major_1_ed_minor_3_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_2458
{
  return dissect_cat_23_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_23_ed_major_1_ed_minor_3_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2459
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_23_ed_major_1_ed_minor_3_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_2460
{
  return dissect_cat_23_ed_major_1_ed_minor_2_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_23_ed_major_1_ed_minor_3_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //101 expand_var_2461
{
  return dissect_cat_23_ed_major_1_ed_minor_2_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_23_ed_major_1_ed_minor_3_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_2462
{
  return dissect_cat_23_ed_major_1_ed_minor_2_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_23_ed_major_1_ed_minor_3_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_2463
{
  return dissect_cat_23_ed_major_1_ed_minor_2_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_23_ed_major_1_ed_minor_3_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_2464
{
  return dissect_cat_23_ed_major_1_ed_minor_2_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_23_ed_major_1_ed_minor_3_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_23_ed_major_1_ed_minor_3_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_2466
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_23_ed_major_1_ed_minor_3_uap_table_expand[] = {
  &expand_var_2456, //010
  &expand_var_2457, //000
  &expand_var_2458, //015
  &expand_var_2459, //070
  &expand_var_2460, //100
  &expand_var_2461, //101
  &expand_var_2462, //200
  &expand_var_2463, //110
  &expand_var_2464, //120
  NULL,
  NULL,
  NULL,
  &expand_var_2465, //RE
  &expand_var_2466, //S
};
static const ttt cat_23_ed_major_1_ed_minor_3_uap_table[] = {
  &dissect_cat_23_ed_major_1_ed_minor_3_datafield_0_uap, //010
  &dissect_cat_23_ed_major_1_ed_minor_3_datafield_1_uap, //000
  &dissect_cat_23_ed_major_1_ed_minor_3_datafield_2_uap, //015
  &dissect_cat_23_ed_major_1_ed_minor_3_datafield_3_uap, //070
  &dissect_cat_23_ed_major_1_ed_minor_3_datafield_4_uap, //100
  &dissect_cat_23_ed_major_1_ed_minor_3_datafield_5_uap, //101
  &dissect_cat_23_ed_major_1_ed_minor_3_datafield_6_uap, //200
  &dissect_cat_23_ed_major_1_ed_minor_3_datafield_7_uap, //110
  &dissect_cat_23_ed_major_1_ed_minor_3_datafield_8_uap, //120
  NULL,
  NULL,
  NULL,
  &dissect_cat_23_ed_major_1_ed_minor_3_datafield_12_uap, //RE
  &dissect_cat_23_ed_major_1_ed_minor_3_datafield_13_uap, //S
};
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2467
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_2468
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2469 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2469 = value_expand_var_2469 >> 1;
  proto_tree_add_uint (tree_group_0, expand_var_2469, tvb, offset + 0, 1, value_expand_var_2469);
  proto_tree_add_bits_item(tree_group_0, expand_var_2470, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_2471
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 3, value_expand_var);
  return 3;
}
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_2472
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_2473
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_168_compound_168(tvb, offset, tree, expand_var);
}
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2474
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_2475
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_2476, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2477, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2478, tvb, (offset * 8) + 3, 4, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2479, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_item *spare_item_1_0 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 0, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 1, spare_item_1_0);
  proto_tree_add_bits_item(datablock_tree, expand_var_2480, tvb, (offset * 8) + 1, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2481, tvb, (offset * 8) + 4, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2482, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_7_rep33(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //105 expand_var_2484
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //105 expand_var_2483
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_25_ed_major_1_ed_minor_5_datafield_7_rep33(tvb, offset, sub_tree, expand_var_2484);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_8_rep34(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_2486
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2487 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree_group_0, expand_var_2487, tvb, offset + 0, 2, value_expand_var_2487);
  proto_tree_add_bits_item(tree_group_0, expand_var_2488, tvb, (offset * 8) + 16, 6, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2489, tvb, (offset * 8) + 22, 2, ENC_BIG_ENDIAN);
  return 3;
}
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_2485
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_25_ed_major_1_ed_minor_5_datafield_8_rep34(tvb, offset, sub_tree, expand_var_2486);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_9_rep35(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_2491
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2492, tvb, (offset * 8) + 0, 8, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2493, tvb, (offset * 8) + 8, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_9 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 9, 7, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 9, 7, spare_item_9);
  unsigned int value_expand_var_2494 = asterix_get_unsigned_value (tvb, offset + 2, 4);
  proto_tree_add_uint (tree_group_0, expand_var_2494, tvb, offset + 2, 4, value_expand_var_2494);
  return 6;
}
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_2490
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_25_ed_major_1_ed_minor_5_datafield_9_rep35(tvb, offset, sub_tree, expand_var_2491);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_2495
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //600 expand_var_2496
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2497 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  int value_expand_var_2497_s = get_signed_int(value_expand_var_2497, 32);
  double value_expand_var_2497_d = (double)value_expand_var_2497_s * 4.190951585769653e-08;
  proto_tree_add_double (tree_group_0, expand_var_2497, tvb, offset + 0, 4, value_expand_var_2497_d);
  unsigned int value_expand_var_2498 = asterix_get_unsigned_value (tvb, offset + 4, 4);
  int value_expand_var_2498_s = get_signed_int(value_expand_var_2498, 32);
  double value_expand_var_2498_d = (double)value_expand_var_2498_s * 4.190951585769653e-08;
  proto_tree_add_double (tree_group_0, expand_var_2498, tvb, offset + 4, 4, value_expand_var_2498_d);
  return 8;
}
static int dissect_cat_25_ed_major_1_ed_minor_5_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //610 expand_var_2499
{
  return dissect_cat_16_ed_major_1_ed_minor_0_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int* cat_25_ed_major_1_ed_minor_5_uap_table_expand[] = {
  &expand_var_2467, //010
  &expand_var_2468, //000
  &expand_var_2471, //200
  &expand_var_2472, //015
  &expand_var_2473, //020
  &expand_var_2474, //070
  &expand_var_2475, //100
  &expand_var_2483, //105
  &expand_var_2485, //120
  &expand_var_2490, //140
  &expand_var_2495, //SP
  &expand_var_2496, //600
  &expand_var_2499, //61
};
static const ttt cat_25_ed_major_1_ed_minor_5_uap_table[] = {
  &dissect_cat_25_ed_major_1_ed_minor_5_datafield_0_uap, //010
  &dissect_cat_25_ed_major_1_ed_minor_5_datafield_1_uap, //000
  &dissect_cat_25_ed_major_1_ed_minor_5_datafield_2_uap, //200
  &dissect_cat_25_ed_major_1_ed_minor_5_datafield_3_uap, //015
  &dissect_cat_25_ed_major_1_ed_minor_5_datafield_4_uap, //020
  &dissect_cat_25_ed_major_1_ed_minor_5_datafield_5_uap, //070
  &dissect_cat_25_ed_major_1_ed_minor_5_datafield_6_uap, //100
  &dissect_cat_25_ed_major_1_ed_minor_5_datafield_7_uap, //105
  &dissect_cat_25_ed_major_1_ed_minor_5_datafield_8_uap, //120
  &dissect_cat_25_ed_major_1_ed_minor_5_datafield_9_uap, //140
  &dissect_cat_25_ed_major_1_ed_minor_5_datafield_10_uap, //SP
  &dissect_cat_25_ed_major_1_ed_minor_5_datafield_11_uap, //600
  &dissect_cat_25_ed_major_1_ed_minor_5_datafield_12_uap, //61
};
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2500
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_2501
{
  return dissect_cat_9_ed_major_2_ed_minor_1_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //018 expand_var_2502
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //035 expand_var_2503
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2504, tvb, (offset * 8) + 0, 4, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2505, tvb, (offset * 8) + 4, 4, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_2506
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_2507
{
  return dissect_cat_9_ed_major_2_ed_minor_1_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_2508
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  unsigned int value_expand_var_2509 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (datablock_tree, expand_var_2509, tvb, offset + 0, 1, value_expand_var_2509);
  unsigned int value_expand_var_2510 = asterix_get_unsigned_value (tvb, offset + 1, 2);
  value_expand_var_2510 = value_expand_var_2510 >> 1;
  proto_tree_add_uint (datablock_tree, expand_var_2510, tvb, offset + 1, 2, value_expand_var_2510);
  proto_tree_add_bits_item(datablock_tree, expand_var_2511, tvb, (offset * 8) + 23, 1, ENC_BIG_ENDIAN);
  offset+=3;
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_2512
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_2513);
  return 2;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_2514
{
  proto_tree_add_item(tree, expand_var, tvb, offset + 0, 7, ENC_ASCII | ENC_NA);
  return 7;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //410 expand_var_2515
{
  return dissect_cat_8_ed_major_1_ed_minor_2_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //420 expand_var_2516
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2517, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2518, tvb, (offset * 8) + 2, 2, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2519 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2519 = value_expand_var_2519 >> 3;
  value_expand_var_2519 = value_expand_var_2519 & 0b00001;
  proto_tree_add_uint (tree_group_0, expand_var_2519, tvb, offset + 0, 1, value_expand_var_2519);
  unsigned int value_expand_var_2520 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2520 = value_expand_var_2520 >> 2;
  value_expand_var_2520 = value_expand_var_2520 & 0b000001;
  proto_tree_add_uint (tree_group_0, expand_var_2520, tvb, offset + 0, 1, value_expand_var_2520);
  unsigned int value_expand_var_2521 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2521 = value_expand_var_2521 >> 1;
  value_expand_var_2521 = value_expand_var_2521 & 0b0000001;
  proto_tree_add_uint (tree_group_0, expand_var_2521, tvb, offset + 0, 1, value_expand_var_2521);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  return 1;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //440 expand_var_2522
{
  proto_tree_add_item(tree, expand_var, tvb, offset + 0, 4, ENC_ASCII | ENC_NA);
  return 4;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //450 expand_var_2523
{
  return dissect_cat_32_ed_major_1_ed_minor_1_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //480 expand_var_2524
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_483_compound_483(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //490 expand_var_2525
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2526 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree_group_0, expand_var_2526, tvb, offset + 0, 1, value_expand_var_2526);
  unsigned int value_expand_var_2527 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_2527, tvb, offset + 1, 1, value_expand_var_2527);
  return 2;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //430 expand_var_2528
{
  return dissect_cat_32_ed_major_1_ed_minor_1_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //435 expand_var_2529
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_17_rep36(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //460 expand_var_2531
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  unsigned int value_expand_var_2532 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2532 = value_expand_var_2532 >> 1;
  value_expand_var_2532 = value_expand_var_2532 & 0b0000111;
  proto_tree_add_uint (tree_group_0, expand_var_2532, tvb, offset + 0, 1, value_expand_var_2532);
  unsigned int value_expand_var_2533 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2533 = value_expand_var_2533 >> 6;
  value_expand_var_2533 = value_expand_var_2533 & 0b0000000111;
  proto_tree_add_uint (tree_group_0, expand_var_2533, tvb, offset + 0, 1, value_expand_var_2533);
  unsigned int value_expand_var_2534 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_2534 = value_expand_var_2534 >> 3;
  value_expand_var_2534 = value_expand_var_2534 & 0b00111;
  proto_tree_add_uint (tree_group_0, expand_var_2534, tvb, offset + 1, 1, value_expand_var_2534);
  unsigned int value_expand_var_2535 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_2535 = value_expand_var_2535 & 0b00000111;
  proto_tree_add_uint (tree_group_0, expand_var_2535, tvb, offset + 1, 1, value_expand_var_2535);
  return 2;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //460 expand_var_2530
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_32_ed_major_1_ed_minor_1_datafield_17_rep36(tvb, offset, sub_tree, expand_var_2531);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1432_compound_1432(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_2537
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2538, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_2 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 2, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 3, spare_item_2);
  unsigned int value_expand_var_2539 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  value_expand_var_2539 = value_expand_var_2539 & 0b00000111111111111111111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_2539, tvb, offset + 0, 4, value_expand_var_2539);
  return 4;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1435_compound_1435(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_2540
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 5, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_2541, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2542, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1439_compound_1439(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_2543
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_item(tree_group_0, expand_var_2544, tvb, offset + 0, 1, ENC_ASCII | ENC_NA);
  proto_tree_add_item(tree_group_0, expand_var_2545, tvb, offset + 1, 1, ENC_ASCII | ENC_NA);
  proto_tree_add_item(tree_group_0, expand_var_2546, tvb, offset + 2, 1, ENC_ASCII | ENC_NA);
  return 3;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_rep37(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_2548
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2549, tvb, (offset * 8) + 0, 5, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2550, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 4, spare_item_7);
  unsigned int value_expand_var_2551 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_2551 = value_expand_var_2551 & 0b00011111;
  proto_tree_add_uint (tree_group_0, expand_var_2551, tvb, offset + 1, 1, value_expand_var_2551);
  proto_item *spare_item_16 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 16, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 16, 2, spare_item_16);
  unsigned int value_expand_var_2552 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  value_expand_var_2552 = value_expand_var_2552 & 0b00111111;
  proto_tree_add_uint (tree_group_0, expand_var_2552, tvb, offset + 2, 1, value_expand_var_2552);
  proto_tree_add_bits_item(tree_group_0, expand_var_2553, tvb, (offset * 8) + 24, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_25 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 25, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 25, 1, spare_item_25);
  unsigned int value_expand_var_2554 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  value_expand_var_2554 = value_expand_var_2554 & 0b00111111;
  proto_tree_add_uint (tree_group_0, expand_var_2554, tvb, offset + 3, 1, value_expand_var_2554);
  return 4;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1446_compound_1446(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_2547
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_rep37(tvb, offset, sub_tree, expand_var_2548);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_494_compound_494(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_2555
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_494_compound_494(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1449_compound_1449(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_2556
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2557, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2558, tvb, (offset * 8) + 2, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_4 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 4, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 4, spare_item_4);
  return 1;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1450_compound_1450(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_2559
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1451_compound_1451(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_2560
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_2536
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 8, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1432_compound_1432(tvb, offset, asterix_packet_tree, expand_var_2537);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1435_compound_1435(tvb, offset, asterix_packet_tree, expand_var_2540);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1439_compound_1439(tvb, offset, asterix_packet_tree, expand_var_2543);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1446_compound_1446(tvb, offset, asterix_packet_tree, expand_var_2547);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_494_compound_494(tvb, offset, asterix_packet_tree, expand_var_2555);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1449_compound_1449(tvb, offset, asterix_packet_tree, expand_var_2556);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1450_compound_1450(tvb, offset, asterix_packet_tree, expand_var_2559);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1451_compound_1451(tvb, offset, asterix_packet_tree, expand_var_2560);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_32_ed_major_1_ed_minor_1_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int* cat_32_ed_major_1_ed_minor_1_uap_table_expand[] = {
  &expand_var_2500, //010
  &expand_var_2501, //015
  &expand_var_2502, //018
  &expand_var_2503, //035
  &expand_var_2506, //020
  &expand_var_2507, //040
  &expand_var_2508, //050
  &expand_var_2512, //060
  &expand_var_2514, //400
  &expand_var_2515, //410
  &expand_var_2516, //420
  &expand_var_2522, //440
  &expand_var_2523, //450
  &expand_var_2524, //480
  &expand_var_2525, //490
  &expand_var_2528, //430
  &expand_var_2529, //435
  &expand_var_2530, //460
  &expand_var_2536, //500
  NULL,
  &expand_var_2561, //R
};
static const ttt cat_32_ed_major_1_ed_minor_1_uap_table[] = {
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_0_uap, //010
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_1_uap, //015
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_2_uap, //018
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_3_uap, //035
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_4_uap, //020
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_5_uap, //040
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_6_uap, //050
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_7_uap, //060
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_8_uap, //400
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_9_uap, //410
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_10_uap, //420
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_11_uap, //440
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_12_uap, //450
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_13_uap, //480
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_14_uap, //490
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_15_uap, //430
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_16_uap, //435
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_17_uap, //460
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_uap, //500
  NULL,
  &dissect_cat_32_ed_major_1_ed_minor_1_datafield_20_uap, //R
};
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2562
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_2563
{
  return dissect_cat_9_ed_major_2_ed_minor_1_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //018 expand_var_2564
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //035 expand_var_2565
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2566, tvb, (offset * 8) + 0, 4, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2567 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2567 = value_expand_var_2567 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_2567, tvb, offset + 0, 1, value_expand_var_2567);
  return 1;
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_2568
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_2569
{
  return dissect_cat_9_ed_major_2_ed_minor_1_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_2570
{
  return dissect_cat_32_ed_major_1_ed_minor_1_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_2571
{
  return dissect_cat_32_ed_major_1_ed_minor_1_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //400 expand_var_2572
{
  return dissect_cat_32_ed_major_1_ed_minor_1_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //410 expand_var_2573
{
  return dissect_cat_8_ed_major_1_ed_minor_2_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //420 expand_var_2574
{
  return dissect_cat_32_ed_major_1_ed_minor_1_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //440 expand_var_2575
{
  return dissect_cat_32_ed_major_1_ed_minor_1_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //450 expand_var_2576
{
  return dissect_cat_32_ed_major_1_ed_minor_1_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //480 expand_var_2577
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_483_compound_483(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //490 expand_var_2578
{
  return dissect_cat_32_ed_major_1_ed_minor_1_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //430 expand_var_2579
{
  return dissect_cat_32_ed_major_1_ed_minor_1_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //435 expand_var_2580
{
  return dissect_cat_32_ed_major_1_ed_minor_1_datafield_16_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //460 expand_var_2581
{
  return dissect_cat_32_ed_major_1_ed_minor_1_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_2582
{
  return dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_32_ed_major_1_ed_minor_2_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int* cat_32_ed_major_1_ed_minor_2_uap_table_expand[] = {
  &expand_var_2562, //010
  &expand_var_2563, //015
  &expand_var_2564, //018
  &expand_var_2565, //035
  &expand_var_2568, //020
  &expand_var_2569, //040
  &expand_var_2570, //050
  &expand_var_2571, //060
  &expand_var_2572, //400
  &expand_var_2573, //410
  &expand_var_2574, //420
  &expand_var_2575, //440
  &expand_var_2576, //450
  &expand_var_2577, //480
  &expand_var_2578, //490
  &expand_var_2579, //430
  &expand_var_2580, //435
  &expand_var_2581, //460
  &expand_var_2582, //500
  NULL,
  &expand_var_2583, //R
};
static const ttt cat_32_ed_major_1_ed_minor_2_uap_table[] = {
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_0_uap, //010
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_1_uap, //015
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_2_uap, //018
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_3_uap, //035
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_4_uap, //020
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_5_uap, //040
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_6_uap, //050
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_7_uap, //060
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_8_uap, //400
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_9_uap, //410
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_10_uap, //420
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_11_uap, //440
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_12_uap, //450
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_13_uap, //480
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_14_uap, //490
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_15_uap, //430
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_16_uap, //435
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_17_uap, //460
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_18_uap, //500
  NULL,
  &dissect_cat_32_ed_major_1_ed_minor_2_datafield_20_uap, //R
};
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2584
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_2585
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_2586
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_2587
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //041 expand_var_2588
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_5_1464_compound_1464(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_2590
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2591, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2592, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2593, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2594, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2595, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2596, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2597, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  return 1;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_5_1469_compound_1469(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_2598
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2599, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2600, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2601, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2602, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_5 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 5, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 5, 3, spare_item_5);
  return 1;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_5_1472_compound_1472(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_2603
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2604, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2605, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2606, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2607, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_5 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 5, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 5, 3, spare_item_5);
  return 1;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_5_1479_compound_1479(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_2608
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2609, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2610, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2611, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2612, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2613, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2614, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2615, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2616, tvb, (offset * 8) + 8, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_9 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 9, 7, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 9, 7, spare_item_9);
  return 2;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_2589
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 6, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_34_ed_major_1_ed_minor_27_datafield_5_1464_compound_1464(tvb, offset, asterix_packet_tree, expand_var_2590);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_34_ed_major_1_ed_minor_27_datafield_5_1469_compound_1469(tvb, offset, asterix_packet_tree, expand_var_2598);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_34_ed_major_1_ed_minor_27_datafield_5_1472_compound_1472(tvb, offset, asterix_packet_tree, expand_var_2603);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_34_ed_major_1_ed_minor_27_datafield_5_1479_compound_1479(tvb, offset, asterix_packet_tree, expand_var_2608);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_6_1483_compound_1483(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_2618
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 1, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_2619, tvb, (offset * 8) + 1, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2620, tvb, (offset * 8) + 4, 3, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  return 1;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_6_1487_compound_1487(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_2621
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2622, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2623, tvb, (offset * 8) + 1, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2624, tvb, (offset * 8) + 4, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_6 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 6, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 2, spare_item_6);
  return 1;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_6_1489_compound_1489(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_2625
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2626, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 5, spare_item_3);
  return 1;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_6_1492_compound_1492(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_2627
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2628, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2629, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_4 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 4, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 4, spare_item_4);
  return 1;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_2617
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 6, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_34_ed_major_1_ed_minor_27_datafield_6_1483_compound_1483(tvb, offset, asterix_packet_tree, expand_var_2618);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_34_ed_major_1_ed_minor_27_datafield_6_1487_compound_1487(tvb, offset, asterix_packet_tree, expand_var_2621);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_34_ed_major_1_ed_minor_27_datafield_6_1489_compound_1489(tvb, offset, asterix_packet_tree, expand_var_2625);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_34_ed_major_1_ed_minor_27_datafield_6_1492_compound_1492(tvb, offset, asterix_packet_tree, expand_var_2627);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_7_rep38(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2631
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2632, tvb, (offset * 8) + 0, 5, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2633 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_2633 = value_expand_var_2633 & 0b0000011111111111;
  proto_tree_add_uint (tree_group_0, expand_var_2633, tvb, offset + 0, 2, value_expand_var_2633);
  return 2;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2630
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_34_ed_major_1_ed_minor_27_datafield_7_rep38(tvb, offset, sub_tree, expand_var_2631);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_2634
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2635 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_2635_d = (double)value_expand_var_2635 * 0.00390625;
  proto_tree_add_double (tree_group_0, expand_var_2635, tvb, offset + 0, 2, value_expand_var_2635_d);
  unsigned int value_expand_var_2636 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_2636_d = (double)value_expand_var_2636 * 0.00390625;
  proto_tree_add_double (tree_group_0, expand_var_2636, tvb, offset + 2, 2, value_expand_var_2636_d);
  unsigned int value_expand_var_2637 = asterix_get_unsigned_value (tvb, offset + 4, 2);
  double value_expand_var_2637_d = (double)value_expand_var_2637 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_2637, tvb, offset + 4, 2, value_expand_var_2637_d);
  unsigned int value_expand_var_2638 = asterix_get_unsigned_value (tvb, offset + 6, 2);
  double value_expand_var_2638_d = (double)value_expand_var_2638 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_2638, tvb, offset + 6, 2, value_expand_var_2638_d);
  return 8;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_2639
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_2640
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  int value_expand_var_2641 = asterix_get_signed_value (tvb, offset + 0, 2);
  proto_tree_add_int (tree_group_0, expand_var_2641, tvb, offset + 0, 2, value_expand_var_2641);
  unsigned int value_expand_var_2642 = asterix_get_unsigned_value (tvb, offset + 2, 3);
  int value_expand_var_2642_s = get_signed_int(value_expand_var_2642, 24);
  double value_expand_var_2642_d = (double)value_expand_var_2642_s * 2.1457672119140625e-05;
  proto_tree_add_double (tree_group_0, expand_var_2642, tvb, offset + 2, 3, value_expand_var_2642_d);
  unsigned int value_expand_var_2643 = asterix_get_unsigned_value (tvb, offset + 5, 3);
  int value_expand_var_2643_s = get_signed_int(value_expand_var_2643, 24);
  double value_expand_var_2643_d = (double)value_expand_var_2643_s * 2.1457672119140625e-05;
  proto_tree_add_double (tree_group_0, expand_var_2643, tvb, offset + 5, 3, value_expand_var_2643_d);
  return 8;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_2644
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2645 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_2645_s = get_signed_int(value_expand_var_2645, 8);
  double value_expand_var_2645_d = (double)value_expand_var_2645_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_2645, tvb, offset + 0, 1, value_expand_var_2645_d);
  unsigned int value_expand_var_2646 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  int value_expand_var_2646_s = get_signed_int(value_expand_var_2646, 8);
  double value_expand_var_2646_d = (double)value_expand_var_2646_s * 0.02197265625;
  proto_tree_add_double (tree_group_0, expand_var_2646, tvb, offset + 1, 1, value_expand_var_2646_d);
  return 2;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_34_ed_major_1_ed_minor_27_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_2648
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_34_ed_major_1_ed_minor_27_uap_table_expand[] = {
  &expand_var_2584, //010
  &expand_var_2585, //000
  &expand_var_2586, //030
  &expand_var_2587, //020
  &expand_var_2588, //041
  &expand_var_2589, //050
  &expand_var_2617, //060
  &expand_var_2630, //070
  &expand_var_2634, //100
  &expand_var_2639, //110
  &expand_var_2640, //120
  &expand_var_2644, //090
  &expand_var_2647, //RE
  &expand_var_2648, //S
};
static const ttt cat_34_ed_major_1_ed_minor_27_uap_table[] = {
  &dissect_cat_34_ed_major_1_ed_minor_27_datafield_0_uap, //010
  &dissect_cat_34_ed_major_1_ed_minor_27_datafield_1_uap, //000
  &dissect_cat_34_ed_major_1_ed_minor_27_datafield_2_uap, //030
  &dissect_cat_34_ed_major_1_ed_minor_27_datafield_3_uap, //020
  &dissect_cat_34_ed_major_1_ed_minor_27_datafield_4_uap, //041
  &dissect_cat_34_ed_major_1_ed_minor_27_datafield_5_uap, //050
  &dissect_cat_34_ed_major_1_ed_minor_27_datafield_6_uap, //060
  &dissect_cat_34_ed_major_1_ed_minor_27_datafield_7_uap, //070
  &dissect_cat_34_ed_major_1_ed_minor_27_datafield_8_uap, //100
  &dissect_cat_34_ed_major_1_ed_minor_27_datafield_9_uap, //110
  &dissect_cat_34_ed_major_1_ed_minor_27_datafield_10_uap, //120
  &dissect_cat_34_ed_major_1_ed_minor_27_datafield_11_uap, //090
  &dissect_cat_34_ed_major_1_ed_minor_27_datafield_12_uap, //RE
  &dissect_cat_34_ed_major_1_ed_minor_27_datafield_13_uap, //S
};
static int dissect_cat_34_ed_major_1_ed_minor_28_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2649
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_28_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_2650
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_34_ed_major_1_ed_minor_28_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_2651
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_28_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_2652
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_28_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //041 expand_var_2653
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_28_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_2654
{
  return dissect_cat_34_ed_major_1_ed_minor_27_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_28_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_2655
{
  return dissect_cat_34_ed_major_1_ed_minor_27_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_28_datafield_7_rep39(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2657
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2658, tvb, (offset * 8) + 0, 5, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2659 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_2659 = value_expand_var_2659 & 0b0000011111111111;
  proto_tree_add_uint (tree_group_0, expand_var_2659, tvb, offset + 0, 2, value_expand_var_2659);
  return 2;
}
static int dissect_cat_34_ed_major_1_ed_minor_28_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2656
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_34_ed_major_1_ed_minor_28_datafield_7_rep39(tvb, offset, sub_tree, expand_var_2657);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_34_ed_major_1_ed_minor_28_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_2660
{
  return dissect_cat_34_ed_major_1_ed_minor_27_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_28_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_2661
{
  return dissect_cat_34_ed_major_1_ed_minor_27_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_28_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_2662
{
  return dissect_cat_34_ed_major_1_ed_minor_27_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_28_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_2663
{
  return dissect_cat_34_ed_major_1_ed_minor_27_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_28_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_34_ed_major_1_ed_minor_28_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_2665
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_34_ed_major_1_ed_minor_28_uap_table_expand[] = {
  &expand_var_2649, //010
  &expand_var_2650, //000
  &expand_var_2651, //030
  &expand_var_2652, //020
  &expand_var_2653, //041
  &expand_var_2654, //050
  &expand_var_2655, //060
  &expand_var_2656, //070
  &expand_var_2660, //100
  &expand_var_2661, //110
  &expand_var_2662, //120
  &expand_var_2663, //090
  &expand_var_2664, //RE
  &expand_var_2665, //S
};
static const ttt cat_34_ed_major_1_ed_minor_28_uap_table[] = {
  &dissect_cat_34_ed_major_1_ed_minor_28_datafield_0_uap, //010
  &dissect_cat_34_ed_major_1_ed_minor_28_datafield_1_uap, //000
  &dissect_cat_34_ed_major_1_ed_minor_28_datafield_2_uap, //030
  &dissect_cat_34_ed_major_1_ed_minor_28_datafield_3_uap, //020
  &dissect_cat_34_ed_major_1_ed_minor_28_datafield_4_uap, //041
  &dissect_cat_34_ed_major_1_ed_minor_28_datafield_5_uap, //050
  &dissect_cat_34_ed_major_1_ed_minor_28_datafield_6_uap, //060
  &dissect_cat_34_ed_major_1_ed_minor_28_datafield_7_uap, //070
  &dissect_cat_34_ed_major_1_ed_minor_28_datafield_8_uap, //100
  &dissect_cat_34_ed_major_1_ed_minor_28_datafield_9_uap, //110
  &dissect_cat_34_ed_major_1_ed_minor_28_datafield_10_uap, //120
  &dissect_cat_34_ed_major_1_ed_minor_28_datafield_11_uap, //090
  &dissect_cat_34_ed_major_1_ed_minor_28_datafield_12_uap, //RE
  &dissect_cat_34_ed_major_1_ed_minor_28_datafield_13_uap, //S
};
static int dissect_cat_34_ed_major_1_ed_minor_29_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2666
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_29_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_2667
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_34_ed_major_1_ed_minor_29_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_2668
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_29_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_2669
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_29_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //041 expand_var_2670
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_29_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_2671
{
  return dissect_cat_34_ed_major_1_ed_minor_27_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_29_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_2672
{
  return dissect_cat_34_ed_major_1_ed_minor_27_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_29_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2673
{
  return dissect_cat_34_ed_major_1_ed_minor_28_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_29_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_2674
{
  return dissect_cat_34_ed_major_1_ed_minor_27_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_29_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_2675
{
  return dissect_cat_34_ed_major_1_ed_minor_27_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_29_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_2676
{
  return dissect_cat_34_ed_major_1_ed_minor_27_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_29_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_2677
{
  return dissect_cat_34_ed_major_1_ed_minor_27_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_34_ed_major_1_ed_minor_29_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_34_ed_major_1_ed_minor_29_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_2679
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_34_ed_major_1_ed_minor_29_uap_table_expand[] = {
  &expand_var_2666, //010
  &expand_var_2667, //000
  &expand_var_2668, //030
  &expand_var_2669, //020
  &expand_var_2670, //041
  &expand_var_2671, //050
  &expand_var_2672, //060
  &expand_var_2673, //070
  &expand_var_2674, //100
  &expand_var_2675, //110
  &expand_var_2676, //120
  &expand_var_2677, //090
  &expand_var_2678, //RE
  &expand_var_2679, //S
};
static const ttt cat_34_ed_major_1_ed_minor_29_uap_table[] = {
  &dissect_cat_34_ed_major_1_ed_minor_29_datafield_0_uap, //010
  &dissect_cat_34_ed_major_1_ed_minor_29_datafield_1_uap, //000
  &dissect_cat_34_ed_major_1_ed_minor_29_datafield_2_uap, //030
  &dissect_cat_34_ed_major_1_ed_minor_29_datafield_3_uap, //020
  &dissect_cat_34_ed_major_1_ed_minor_29_datafield_4_uap, //041
  &dissect_cat_34_ed_major_1_ed_minor_29_datafield_5_uap, //050
  &dissect_cat_34_ed_major_1_ed_minor_29_datafield_6_uap, //060
  &dissect_cat_34_ed_major_1_ed_minor_29_datafield_7_uap, //070
  &dissect_cat_34_ed_major_1_ed_minor_29_datafield_8_uap, //100
  &dissect_cat_34_ed_major_1_ed_minor_29_datafield_9_uap, //110
  &dissect_cat_34_ed_major_1_ed_minor_29_datafield_10_uap, //120
  &dissect_cat_34_ed_major_1_ed_minor_29_datafield_11_uap, //090
  &dissect_cat_34_ed_major_1_ed_minor_29_datafield_12_uap, //RE
  &dissect_cat_34_ed_major_1_ed_minor_29_datafield_13_uap, //S
};
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1514_compound_1514(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1532 expand_var_2681
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2682, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2683, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2684, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2685, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2686, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2687, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2688, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1518_compound_1518(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1532 expand_var_2689
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_0);
  unsigned int value_expand_var_2690 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_2690 = value_expand_var_2690 & 0b0011111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_2690, tvb, offset + 0, 2, value_expand_var_2690);
  proto_item *spare_item_16 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 16, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 16, 2, spare_item_16);
  proto_tree_add_bits_item(tree_group_0, expand_var_2691, tvb, (offset * 8) + 18, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2692 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  value_expand_var_2692 = value_expand_var_2692 & 0b00011111;
  proto_tree_add_uint (tree_group_0, expand_var_2692, tvb, offset + 2, 1, value_expand_var_2692);
  proto_item *spare_item_24 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 24, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 24, 2, spare_item_24);
  unsigned int value_expand_var_2693 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  value_expand_var_2693 = value_expand_var_2693 & 0b00111111;
  proto_tree_add_uint (tree_group_0, expand_var_2693, tvb, offset + 3, 1, value_expand_var_2693);
  return 4;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1521_compound_1521(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1532 expand_var_2694
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2695 = asterix_get_unsigned_value (tvb, offset + 0, 3);
  int value_expand_var_2695_s = get_signed_int(value_expand_var_2695, 24);
  double value_expand_var_2695_d = (double)value_expand_var_2695_s * 2.1457672119140625e-05;
  proto_tree_add_double (tree_group_0, expand_var_2695, tvb, offset + 0, 3, value_expand_var_2695_d);
  unsigned int value_expand_var_2696 = asterix_get_unsigned_value (tvb, offset + 3, 3);
  int value_expand_var_2696_s = get_signed_int(value_expand_var_2696, 24);
  double value_expand_var_2696_d = (double)value_expand_var_2696_s * 2.1457672119140625e-05;
  proto_tree_add_double (tree_group_0, expand_var_2696, tvb, offset + 3, 3, value_expand_var_2696_d);
  return 6;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1524_compound_1524(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1532 expand_var_2697
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 1, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_2698, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2699 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_2699 = value_expand_var_2699 & 0b0011111111111111;
  int value_expand_var_2699_s = get_signed_int(value_expand_var_2699, 14);
  double value_expand_var_2699_d = (double)value_expand_var_2699_s * 25.0;
  proto_tree_add_double (tree_group_0, expand_var_2699, tvb, offset + 0, 2, value_expand_var_2699_d);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1527_compound_1527(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1532 expand_var_2700
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2701, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2702, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2703, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_2704);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1528_compound_1528(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1532 expand_var_2705
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_d = (double)value_expand_var * 0.0078125;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1531_compound_1531(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1532 expand_var_2706
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_2707, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2708, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2709, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2710, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2711, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2712, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1532 expand_var_2680
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 7, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1514_compound_1514(tvb, offset, asterix_packet_tree, expand_var_2681);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1518_compound_1518(tvb, offset, asterix_packet_tree, expand_var_2689);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1521_compound_1521(tvb, offset, asterix_packet_tree, expand_var_2694);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1524_compound_1524(tvb, offset, asterix_packet_tree, expand_var_2697);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1527_compound_1527(tvb, offset, asterix_packet_tree, expand_var_2700);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1528_compound_1528(tvb, offset, asterix_packet_tree, expand_var_2705);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1531_compound_1531(tvb, offset, asterix_packet_tree, expand_var_2706);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1514_compound_1514(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1538 expand_var_2714
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1514_compound_1514(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1535_compound_1535(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1538 expand_var_2715
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_0);
  unsigned int value_expand_var_2716 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_2716 = value_expand_var_2716 & 0b0011111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_2716, tvb, offset + 0, 2, value_expand_var_2716);
  proto_item *spare_item_16 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 16, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 16, 4, spare_item_16);
  proto_tree_add_bits_item(tree_group_0, expand_var_2717, tvb, (offset * 8) + 20, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2718 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  value_expand_var_2718 = value_expand_var_2718 & 0b0000011111111111;
  proto_tree_add_uint (tree_group_0, expand_var_2718, tvb, offset + 2, 2, value_expand_var_2718);
  return 4;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1521_compound_1521(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1538 expand_var_2719
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1521_compound_1521(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1524_compound_1524(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1538 expand_var_2720
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1524_compound_1524(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1527_compound_1527(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1538 expand_var_2721
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1527_compound_1527(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1528_compound_1528(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1538 expand_var_2722
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1528_compound_1528(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1531_compound_1531(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1538 expand_var_2723
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_1531_compound_1531(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1537_compound_1537(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1538 expand_var_2724
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 3, spare_item_0);
  unsigned int value_expand_var_2725 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2725 = value_expand_var_2725 & 0b00011111;
  proto_tree_add_uint (tree_group_0, expand_var_2725, tvb, offset + 0, 1, value_expand_var_2725);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1538 expand_var_2713
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 8, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1514_compound_1514(tvb, offset, asterix_packet_tree, expand_var_2714);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1535_compound_1535(tvb, offset, asterix_packet_tree, expand_var_2715);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1521_compound_1521(tvb, offset, asterix_packet_tree, expand_var_2719);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1524_compound_1524(tvb, offset, asterix_packet_tree, expand_var_2720);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1527_compound_1527(tvb, offset, asterix_packet_tree, expand_var_2721);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1528_compound_1528(tvb, offset, asterix_packet_tree, expand_var_2722);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1531_compound_1531(tvb, offset, asterix_packet_tree, expand_var_2723);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_1537_compound_1537(tvb, offset, asterix_packet_tree, expand_var_2724);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_2_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1540 expand_var_2726
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_item *spare_item_0_0 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 0, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 5, spare_item_0_0);
  proto_tree_add_bits_item(datablock_tree, expand_var_2727, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2728, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_3_1541_compound_1541(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1545 expand_var_2730
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_1083_compound_1083(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_3_1542_compound_1542(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1545 expand_var_2731
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.1;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_3_1543_compound_1543(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1545 expand_var_2732
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.00390625;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_3_1544_compound_1544(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1545 expand_var_2733
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_3_1543_compound_1543(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_3_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1545 expand_var_2729
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 4, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_3_1541_compound_1541(tvb, offset, asterix_packet_tree, expand_var_2730);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_3_1542_compound_1542(tvb, offset, asterix_packet_tree, expand_var_2731);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_3_1543_compound_1543(tvb, offset, asterix_packet_tree, expand_var_2732);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_3_1544_compound_1544(tvb, offset, asterix_packet_tree, expand_var_2733);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_4_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1546 expand_var_2734
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 3);
  double value_expand_var_d = (double)value_expand_var * 0.00390625;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 3, value_expand_var_d);
  return 3;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1553_compound_1553(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2736
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 3, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_2737, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2738, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2739, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2740, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2741, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2742 = asterix_get_unsigned_value (tvb, offset + 1, 2);
  proto_tree_add_uint (tree_group_0, expand_var_2742, tvb, offset + 1, 2, value_expand_var_2742);
  return 3;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_rep40(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2744
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1554_compound_1554(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2743
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_rep40(tvb, offset, sub_tree, expand_var_2744);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1555_compound_1555(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2745
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 1, value_expand_var);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1567_compound_1567(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2746
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 22, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2747 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_2747_d = (double)value_expand_var_2747 * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_2747, tvb, offset + 0, 2, value_expand_var_2747_d);
  unsigned int value_expand_var_2748 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_2748_d = (double)value_expand_var_2748 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_2748, tvb, offset + 2, 2, value_expand_var_2748_d);
  unsigned int value_expand_var_2749 = asterix_get_unsigned_value (tvb, offset + 4, 2);
  double value_expand_var_2749_d = (double)value_expand_var_2749 * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_2749, tvb, offset + 4, 2, value_expand_var_2749_d);
  unsigned int value_expand_var_2750 = asterix_get_unsigned_value (tvb, offset + 6, 2);
  double value_expand_var_2750_d = (double)value_expand_var_2750 * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_2750, tvb, offset + 6, 2, value_expand_var_2750_d);
  unsigned int value_expand_var_2751 = asterix_get_unsigned_value (tvb, offset + 8, 2);
  double value_expand_var_2751_d = (double)value_expand_var_2751 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_2751, tvb, offset + 8, 2, value_expand_var_2751_d);
  unsigned int value_expand_var_2752 = asterix_get_unsigned_value (tvb, offset + 10, 2);
  double value_expand_var_2752_d = (double)value_expand_var_2752 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_2752, tvb, offset + 10, 2, value_expand_var_2752_d);
  unsigned int value_expand_var_2753 = asterix_get_unsigned_value (tvb, offset + 12, 2);
  double value_expand_var_2753_d = (double)value_expand_var_2753 * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_2753, tvb, offset + 12, 2, value_expand_var_2753_d);
  unsigned int value_expand_var_2754 = asterix_get_unsigned_value (tvb, offset + 14, 2);
  double value_expand_var_2754_d = (double)value_expand_var_2754 * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_2754, tvb, offset + 14, 2, value_expand_var_2754_d);
  unsigned int value_expand_var_2755 = asterix_get_unsigned_value (tvb, offset + 16, 2);
  double value_expand_var_2755_d = (double)value_expand_var_2755 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_2755, tvb, offset + 16, 2, value_expand_var_2755_d);
  unsigned int value_expand_var_2756 = asterix_get_unsigned_value (tvb, offset + 18, 2);
  double value_expand_var_2756_d = (double)value_expand_var_2756 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_2756, tvb, offset + 18, 2, value_expand_var_2756_d);
  unsigned int value_expand_var_2757 = asterix_get_unsigned_value (tvb, offset + 20, 2);
  double value_expand_var_2757_d = (double)value_expand_var_2757 * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_2757, tvb, offset + 20, 2, value_expand_var_2757_d);
  return 22;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_rep41(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2759
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2760, tvb, (offset * 8) + 0, 4, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2761, tvb, (offset * 8) + 4, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2762, tvb, (offset * 8) + 6, 2, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1571_compound_1571(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2758
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_rep41(tvb, offset, sub_tree, expand_var_2759);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1574_compound_1574(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2763
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2764, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2765 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_2765 = value_expand_var_2765 & 0b0111111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_2765, tvb, offset + 0, 2, value_expand_var_2765);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1581_compound_1581(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2766
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 7, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 7, spare_item_0);
  unsigned int value_expand_var_2767 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2767 = value_expand_var_2767 >> 5;
  value_expand_var_2767 = value_expand_var_2767 & 0b00000001111;
  proto_tree_add_uint (tree_group_0, expand_var_2767, tvb, offset + 0, 1, value_expand_var_2767);
  unsigned int value_expand_var_2768 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_2768 = value_expand_var_2768 & 0b00011111;
  proto_tree_add_uint (tree_group_0, expand_var_2768, tvb, offset + 1, 1, value_expand_var_2768);
  unsigned int value_expand_var_2769 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  value_expand_var_2769 = value_expand_var_2769 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_2769, tvb, offset + 2, 1, value_expand_var_2769);
  print_octal_string (tvb, offset + 2, 4, 12, 2, tree_group_0, expand_var_2770);
  unsigned int value_expand_var_2771 = asterix_get_unsigned_value (tvb, offset + 4, 1);
  value_expand_var_2771 = value_expand_var_2771 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_2771, tvb, offset + 4, 1, value_expand_var_2771);
  print_octal_string (tvb, offset + 4, 4, 12, 2, tree_group_0, expand_var_2772);
  return 6;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1585_compound_1585(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2773
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2774, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2775 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_2775 = value_expand_var_2775 & 0b0011111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_2775, tvb, offset + 0, 2, value_expand_var_2775);
  unsigned int value_expand_var_2776 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  proto_tree_add_uint (tree_group_0, expand_var_2776, tvb, offset + 2, 2, value_expand_var_2776);
  return 4;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_rep42(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2778
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 7, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2779 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree_group_0, expand_var_2779, tvb, offset + 0, 1, value_expand_var_2779);
  unsigned int value_expand_var_2780 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_2780, tvb, offset + 1, 1, value_expand_var_2780);
  unsigned int value_expand_var_2781 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_2781_d = (double)value_expand_var_2781 * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_2781, tvb, offset + 2, 2, value_expand_var_2781_d);
  proto_tree_add_bits_item(tree_group_0, expand_var_2782, tvb, (offset * 8) + 32, 7, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2783, tvb, (offset * 8) + 39, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2784 = asterix_get_unsigned_value (tvb, offset + 5, 2);
  proto_tree_add_uint (tree_group_0, expand_var_2784, tvb, offset + 5, 2, value_expand_var_2784);
  return 7;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1592_compound_1592(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2777
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_rep42(tvb, offset, sub_tree, expand_var_2778);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1593_compound_1593(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2785
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1596_compound_1596(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2786
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2787, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2788 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2788 = value_expand_var_2788 & 0b01111111;
  proto_tree_add_uint (tree_group_0, expand_var_2788, tvb, offset + 0, 1, value_expand_var_2788);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2735
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 11, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1553_compound_1553(tvb, offset, asterix_packet_tree, expand_var_2736);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1554_compound_1554(tvb, offset, asterix_packet_tree, expand_var_2743);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1555_compound_1555(tvb, offset, asterix_packet_tree, expand_var_2745);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1567_compound_1567(tvb, offset, asterix_packet_tree, expand_var_2746);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1571_compound_1571(tvb, offset, asterix_packet_tree, expand_var_2758);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1574_compound_1574(tvb, offset, asterix_packet_tree, expand_var_2763);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1581_compound_1581(tvb, offset, asterix_packet_tree, expand_var_2766);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1585_compound_1585(tvb, offset, asterix_packet_tree, expand_var_2773);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1592_compound_1592(tvb, offset, asterix_packet_tree, expand_var_2777);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1593_compound_1593(tvb, offset, asterix_packet_tree, expand_var_2785);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1596_compound_1596(tvb, offset, asterix_packet_tree, expand_var_2786);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_6_1598_compound_1598(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1612 expand_var_2790
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_6_rep43(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1612 expand_var_2792
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2793, tvb, (offset * 8) + 0, 8, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2794 = asterix_get_unsigned_value (tvb, offset + 1, 2);
  proto_tree_add_uint (tree_group_0, expand_var_2794, tvb, offset + 1, 2, value_expand_var_2794);
  return 3;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_6_1601_compound_1601(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1612 expand_var_2791
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_6_rep43(tvb, offset, sub_tree, expand_var_2792);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_6_1602_compound_1602(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1612 expand_var_2795
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_1083_compound_1083(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_6_1611_compound_1611(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1612 expand_var_2796
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2797 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2797 = value_expand_var_2797 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_2797, tvb, offset + 0, 1, value_expand_var_2797);
  unsigned int value_expand_var_2798 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2798 = value_expand_var_2798 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_2798, tvb, offset + 0, 1, value_expand_var_2798);
  unsigned int value_expand_var_2799 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_2799 = value_expand_var_2799 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_2799, tvb, offset + 1, 1, value_expand_var_2799);
  unsigned int value_expand_var_2800 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_2800 = value_expand_var_2800 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_2800, tvb, offset + 1, 1, value_expand_var_2800);
  unsigned int value_expand_var_2801 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  value_expand_var_2801 = value_expand_var_2801 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_2801, tvb, offset + 2, 1, value_expand_var_2801);
  unsigned int value_expand_var_2802 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  value_expand_var_2802 = value_expand_var_2802 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_2802, tvb, offset + 2, 1, value_expand_var_2802);
  unsigned int value_expand_var_2803 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  value_expand_var_2803 = value_expand_var_2803 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_2803, tvb, offset + 3, 1, value_expand_var_2803);
  unsigned int value_expand_var_2804 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  value_expand_var_2804 = value_expand_var_2804 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_2804, tvb, offset + 3, 1, value_expand_var_2804);
  return 4;
}
static int dissect_cat_48_ed_major_1_ed_minor_11_datafield_6_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1612 expand_var_2789
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 4, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_6_1598_compound_1598(tvb, offset, asterix_packet_tree, expand_var_2790);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_6_1601_compound_1601(tvb, offset, asterix_packet_tree, expand_var_2791);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_6_1602_compound_1602(tvb, offset, asterix_packet_tree, expand_var_2795);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_11_datafield_6_1611_compound_1611(tvb, offset, asterix_packet_tree, expand_var_2796);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int* cat_48_ed_major_1_ed_minor_11_uap_table_expansion_expand[] = {
  &expand_var_2680,
  &expand_var_2713,
  &expand_var_2726,
  &expand_var_2729,
  &expand_var_2734,
  &expand_var_2735,
  &expand_var_2789
};
static const ttt cat_48_ed_major_1_ed_minor_11_uap_table_expansion[] = {
  &dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_re,
  &dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_re,
  &dissect_cat_48_ed_major_1_ed_minor_11_datafield_2_re,
  &dissect_cat_48_ed_major_1_ed_minor_11_datafield_3_re,
  &dissect_cat_48_ed_major_1_ed_minor_11_datafield_4_re,
  &dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_re,
  &dissect_cat_48_ed_major_1_ed_minor_11_datafield_6_re
};
static int dissect_cat_48_ed_major_1_ed_minor_12_datafield_0_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1532 expand_var_2805
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_12_datafield_1_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1538 expand_var_2806
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_12_datafield_2_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1540 expand_var_2807
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_2_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_12_datafield_3_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1545 expand_var_2808
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_3_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_12_datafield_4_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1546 expand_var_2809
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_4_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_12_datafield_5_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2810
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_12_datafield_6_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1612 expand_var_2811
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_6_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_12_datafield_7_1615_compound_1615(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1621 expand_var_2813
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2814, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2815, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2816, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_2817);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_12_datafield_7_1618_compound_1618(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1621 expand_var_2818
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2819, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2820, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2821, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_2822);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_12_datafield_7_1620_compound_1620(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1621 expand_var_2823
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2824, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2825, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2826 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_2826 = value_expand_var_2826 & 0b0011111111111111;
  int value_expand_var_2826_s = get_signed_int(value_expand_var_2826, 14);
  double value_expand_var_2826_d = (double)value_expand_var_2826_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_2826, tvb, offset + 0, 2, value_expand_var_2826_d);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_12_datafield_7_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1621 expand_var_2812
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 3, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_12_datafield_7_1615_compound_1615(tvb, offset, asterix_packet_tree, expand_var_2813);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_12_datafield_7_1618_compound_1618(tvb, offset, asterix_packet_tree, expand_var_2818);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_12_datafield_7_1620_compound_1620(tvb, offset, asterix_packet_tree, expand_var_2823);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int* cat_48_ed_major_1_ed_minor_12_uap_table_expansion_expand[] = {
  &expand_var_2805,
  &expand_var_2806,
  &expand_var_2807,
  &expand_var_2808,
  &expand_var_2809,
  &expand_var_2810,
  &expand_var_2811,
  &expand_var_2812
};
static const ttt cat_48_ed_major_1_ed_minor_12_uap_table_expansion[] = {
  &dissect_cat_48_ed_major_1_ed_minor_12_datafield_0_re,
  &dissect_cat_48_ed_major_1_ed_minor_12_datafield_1_re,
  &dissect_cat_48_ed_major_1_ed_minor_12_datafield_2_re,
  &dissect_cat_48_ed_major_1_ed_minor_12_datafield_3_re,
  &dissect_cat_48_ed_major_1_ed_minor_12_datafield_4_re,
  &dissect_cat_48_ed_major_1_ed_minor_12_datafield_5_re,
  &dissect_cat_48_ed_major_1_ed_minor_12_datafield_6_re,
  &dissect_cat_48_ed_major_1_ed_minor_12_datafield_7_re
};
static int dissect_cat_48_ed_major_1_ed_minor_13_datafield_0_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1532 expand_var_2827
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_0_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_13_datafield_1_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1538 expand_var_2828
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_1_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_13_datafield_2_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1540 expand_var_2829
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_2_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_13_datafield_3_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1545 expand_var_2830
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_3_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_13_datafield_4_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1546 expand_var_2831
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_4_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_13_datafield_5_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1597 expand_var_2832
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_13_datafield_6_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1612 expand_var_2833
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_6_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_13_datafield_7_1615_compound_1615(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1626 expand_var_2835
{
  return dissect_cat_48_ed_major_1_ed_minor_12_datafield_7_1615_compound_1615(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_13_datafield_7_1618_compound_1618(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1626 expand_var_2836
{
  return dissect_cat_48_ed_major_1_ed_minor_12_datafield_7_1618_compound_1618(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_13_datafield_7_1620_compound_1620(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1626 expand_var_2837
{
  return dissect_cat_48_ed_major_1_ed_minor_12_datafield_7_1620_compound_1620(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_13_datafield_7_1623_compound_1623(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1626 expand_var_2838
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_0);
  unsigned int value_expand_var_2839 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_2839 = value_expand_var_2839 & 0b0011111111111111;
  int value_expand_var_2839_s = get_signed_int(value_expand_var_2839, 14);
  double value_expand_var_2839_d = (double)value_expand_var_2839_s * 0.01;
  proto_tree_add_double (tree_group_0, expand_var_2839, tvb, offset + 0, 2, value_expand_var_2839_d);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_13_datafield_7_1625_compound_1625(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1626 expand_var_2840
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_0);
  unsigned int value_expand_var_2841 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  value_expand_var_2841 = value_expand_var_2841 & 0b00111111111111111111111111111111;
  double value_expand_var_2841_d = (double)value_expand_var_2841 * 1e-06;
  proto_tree_add_double (tree_group_0, expand_var_2841, tvb, offset + 0, 4, value_expand_var_2841_d);
  return 4;
}
static int dissect_cat_48_ed_major_1_ed_minor_13_datafield_7_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1626 expand_var_2834
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 5, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_13_datafield_7_1615_compound_1615(tvb, offset, asterix_packet_tree, expand_var_2835);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_13_datafield_7_1618_compound_1618(tvb, offset, asterix_packet_tree, expand_var_2836);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_13_datafield_7_1620_compound_1620(tvb, offset, asterix_packet_tree, expand_var_2837);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_13_datafield_7_1623_compound_1623(tvb, offset, asterix_packet_tree, expand_var_2838);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_13_datafield_7_1625_compound_1625(tvb, offset, asterix_packet_tree, expand_var_2840);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int* cat_48_ed_major_1_ed_minor_13_uap_table_expansion_expand[] = {
  &expand_var_2827,
  &expand_var_2828,
  &expand_var_2829,
  &expand_var_2830,
  &expand_var_2831,
  &expand_var_2832,
  &expand_var_2833,
  &expand_var_2834
};
static const ttt cat_48_ed_major_1_ed_minor_13_uap_table_expansion[] = {
  &dissect_cat_48_ed_major_1_ed_minor_13_datafield_0_re,
  &dissect_cat_48_ed_major_1_ed_minor_13_datafield_1_re,
  &dissect_cat_48_ed_major_1_ed_minor_13_datafield_2_re,
  &dissect_cat_48_ed_major_1_ed_minor_13_datafield_3_re,
  &dissect_cat_48_ed_major_1_ed_minor_13_datafield_4_re,
  &dissect_cat_48_ed_major_1_ed_minor_13_datafield_5_re,
  &dissect_cat_48_ed_major_1_ed_minor_13_datafield_6_re,
  &dissect_cat_48_ed_major_1_ed_minor_13_datafield_7_re
};
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2842
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_2843
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_2844
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_2845, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2846, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2847, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2848, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2849, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2850, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_2851, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2852, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2853, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2854, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2855, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2856, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2857, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_2858
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2859 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_2859_d = (double)value_expand_var_2859 * 0.00390625;
  proto_tree_add_double (tree_group_0, expand_var_2859, tvb, offset + 0, 2, value_expand_var_2859_d);
  unsigned int value_expand_var_2860 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_2860_d = (double)value_expand_var_2860 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_2860, tvb, offset + 2, 2, value_expand_var_2860_d);
  return 4;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2861
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2862, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2863, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2864, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_2865);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_2866
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2867, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2868, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2869 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_2869 = value_expand_var_2869 & 0b0011111111111111;
  double value_expand_var_2869_d = (double)value_expand_var_2869 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_2869, tvb, offset + 0, 2, value_expand_var_2869_d);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_1667_compound_1667(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2871
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_d = (double)value_expand_var * 0.0439453125;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_1668_compound_1668(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2872
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_1083_compound_1083(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_1669_compound_1669(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2873
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_37_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_1670_compound_1670(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2874
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_1667_compound_1667(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_1671_compound_1671(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2875
{
  return dissect_cat_21_ed_major_2_ed_minor_1_datafield_37_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_1672_compound_1672(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2876
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_s = get_signed_int(value_expand_var, 8);
  double value_expand_var_d = (double)value_expand_var_s * 0.00390625;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_1673_compound_1673(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2877
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_s = get_signed_int(value_expand_var, 8);
  double value_expand_var_d = (double)value_expand_var_s * 0.02197265625;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2870
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 7, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_1667_compound_1667(tvb, offset, asterix_packet_tree, expand_var_2871);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_1668_compound_1668(tvb, offset, asterix_packet_tree, expand_var_2872);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_1669_compound_1669(tvb, offset, asterix_packet_tree, expand_var_2873);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_1670_compound_1670(tvb, offset, asterix_packet_tree, expand_var_2874);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_1671_compound_1671(tvb, offset, asterix_packet_tree, expand_var_2875);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_1672_compound_1672(tvb, offset, asterix_packet_tree, expand_var_2876);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_1673_compound_1673(tvb, offset, asterix_packet_tree, expand_var_2877);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_2878
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //240 expand_var_2879
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_227_compound_227(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_9_rep44(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_2881
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2882 = asterix_get_unsigned_value (tvb, offset + 0, 7);
  proto_tree_add_uint (tree_group_0, expand_var_2882, tvb, offset + 0, 7, value_expand_var_2882);
  unsigned int value_expand_var_2883 = asterix_get_unsigned_value (tvb, offset + 7, 1);
  value_expand_var_2883 = value_expand_var_2883 >> 4;
  proto_tree_add_uint (tree_group_0, expand_var_2883, tvb, offset + 7, 1, value_expand_var_2883);
  unsigned int value_expand_var_2884 = asterix_get_unsigned_value (tvb, offset + 7, 1);
  value_expand_var_2884 = value_expand_var_2884 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_2884, tvb, offset + 7, 1, value_expand_var_2884);
  return 8;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_2880
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_48_ed_major_1_ed_minor_27_datafield_9_rep44(tvb, offset, sub_tree, expand_var_2881);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_2885
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  unsigned int value_expand_var_2886 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_2886 = value_expand_var_2886 & 0b0000111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_2886, tvb, offset + 0, 2, value_expand_var_2886);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //042 expand_var_2887
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2888 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_2888_s = get_signed_int(value_expand_var_2888, 16);
  double value_expand_var_2888_d = (double)value_expand_var_2888_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_2888, tvb, offset + 0, 2, value_expand_var_2888_d);
  unsigned int value_expand_var_2889 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_2889_s = get_signed_int(value_expand_var_2889, 16);
  double value_expand_var_2889_d = (double)value_expand_var_2889_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_2889, tvb, offset + 2, 2, value_expand_var_2889_d);
  return 4;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_2890
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_track(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_2891
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_2892, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2893, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2894, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2895, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2896, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2897, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_2898, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2899, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2900, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_2901, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_1_4 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 4, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 3, spare_item_1_4);
  proto_tree_add_bits_item(datablock_tree, expand_var_2902, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_2903
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2904 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_2904_d = (double)value_expand_var_2904 * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_2904, tvb, offset + 0, 1, value_expand_var_2904_d);
  unsigned int value_expand_var_2905 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  double value_expand_var_2905_d = (double)value_expand_var_2905 * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_2905, tvb, offset + 1, 1, value_expand_var_2905_d);
  unsigned int value_expand_var_2906 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  double value_expand_var_2906_d = (double)value_expand_var_2906 * 6.103515625e-05;
  proto_tree_add_double (tree_group_0, expand_var_2906, tvb, offset + 2, 1, value_expand_var_2906_d);
  unsigned int value_expand_var_2907 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  double value_expand_var_2907_d = (double)value_expand_var_2907 * 0.087890625;
  proto_tree_add_double (tree_group_0, expand_var_2907, tvb, offset + 3, 1, value_expand_var_2907_d);
  return 4;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_15_rep45(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_2909
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_2908
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  while (true) {
    fun_len = dissect_cat_48_ed_major_1_ed_minor_27_datafield_15_rep45(tvb, offset, sub_tree, expand_var_2909);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
    if (asterix_extended_end(tvb, offset - 1)) break;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_2910
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_2911
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_11_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_2912
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_0);
  unsigned int value_expand_var_2913 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_2913 = value_expand_var_2913 & 0b0011111111111111;
  int value_expand_var_2913_s = get_signed_int(value_expand_var_2913, 14);
  double value_expand_var_2913_d = (double)value_expand_var_2913_s * 25.0;
  proto_tree_add_double (tree_group_0, expand_var_2913, tvb, offset + 0, 2, value_expand_var_2913_d);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_19_1661_compound_1661(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_2915
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2916, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_1 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 1, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 1, 5, spare_item_1);
  int value_expand_var_2917 = asterix_get_signed_value (tvb, offset + 0, 2);
  value_expand_var_2917 = value_expand_var_2917 & 0b0000001111111111;
  proto_tree_add_int (tree_group_0, expand_var_2917, tvb, offset + 0, 2, value_expand_var_2917);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_19_rep46(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_2919
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_2920 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree_group_0, expand_var_2920, tvb, offset + 0, 2, value_expand_var_2920);
  unsigned int value_expand_var_2921 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  proto_tree_add_uint (tree_group_0, expand_var_2921, tvb, offset + 2, 2, value_expand_var_2921);
  unsigned int value_expand_var_2922 = asterix_get_unsigned_value (tvb, offset + 4, 2);
  proto_tree_add_uint (tree_group_0, expand_var_2922, tvb, offset + 4, 2, value_expand_var_2922);
  return 6;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_19_1665_compound_1665(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_2918
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_48_ed_major_1_ed_minor_27_datafield_19_rep46(tvb, offset, sub_tree, expand_var_2919);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_2914
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 2, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_27_datafield_19_1661_compound_1661(tvb, offset, asterix_packet_tree, expand_var_2915);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_48_ed_major_1_ed_minor_27_datafield_19_1665_compound_1665(tvb, offset, asterix_packet_tree, expand_var_2918);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_2923
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2924, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2925, tvb, (offset * 8) + 3, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2926, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  proto_tree_add_bits_item(tree_group_0, expand_var_2927, tvb, (offset * 8) + 8, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2928, tvb, (offset * 8) + 9, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2929, tvb, (offset * 8) + 10, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2930 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_2930 = value_expand_var_2930 >> 4;
  value_expand_var_2930 = value_expand_var_2930 & 0b0001;
  proto_tree_add_uint (tree_group_0, expand_var_2930, tvb, offset + 1, 1, value_expand_var_2930);
  unsigned int value_expand_var_2931 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_2931 = value_expand_var_2931 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_2931, tvb, offset + 1, 1, value_expand_var_2931);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_2932
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //055 expand_var_2933
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_2934, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2935, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2936, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_2937 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_2937 = value_expand_var_2937 & 0b00011111;
  proto_tree_add_uint (tree_group_0, expand_var_2937, tvb, offset + 0, 1, value_expand_var_2937);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_2938
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_7_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //065 expand_var_2939
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 3, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_2940, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2941, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2942, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2943, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_2944, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_2945
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_2946
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_27_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 48);
  return offset - offset_start;
}
static int* cat_48_ed_major_1_ed_minor_27_uap_table_expand[] = {
  &expand_var_2842, //010
  &expand_var_2843, //140
  &expand_var_2844, //020
  &expand_var_2858, //040
  &expand_var_2861, //070
  &expand_var_2866, //090
  &expand_var_2870, //130
  &expand_var_2878, //220
  &expand_var_2879, //240
  &expand_var_2880, //250
  &expand_var_2885, //161
  &expand_var_2887, //042
  &expand_var_2890, //200
  &expand_var_2891, //170
  &expand_var_2903, //210
  &expand_var_2908, //030
  &expand_var_2910, //080
  &expand_var_2911, //100
  &expand_var_2912, //110
  &expand_var_2914, //120
  &expand_var_2923, //230
  &expand_var_2932, //260
  &expand_var_2933, //055
  &expand_var_2938, //050
  &expand_var_2939, //065
  &expand_var_2945, //060
  &expand_var_2946, //SP
  &expand_var_2947, //R
};
static const ttt cat_48_ed_major_1_ed_minor_27_uap_table[] = {
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_0_uap, //010
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_1_uap, //140
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_2_uap, //020
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_3_uap, //040
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_4_uap, //070
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_5_uap, //090
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_uap, //130
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_7_uap, //220
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_8_uap, //240
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_9_uap, //250
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_10_uap, //161
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_11_uap, //042
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_12_uap, //200
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_13_uap, //170
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_14_uap, //210
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_15_uap, //030
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_16_uap, //080
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_17_uap, //100
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_18_uap, //110
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_19_uap, //120
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_20_uap, //230
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_21_uap, //260
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_22_uap, //055
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_23_uap, //050
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_24_uap, //065
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_25_uap, //060
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_26_uap, //SP
  &dissect_cat_48_ed_major_1_ed_minor_27_datafield_27_uap, //R
};
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2948
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_2949
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_2950
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_2951
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2952
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_2953
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2954
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_2955
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //240 expand_var_2956
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_227_compound_227(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_2957
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_2958
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //042 expand_var_2959
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_2960
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_track(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_2961
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_2962
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_15_rep47(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_2964
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_2963
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  while (true) {
    fun_len = dissect_cat_48_ed_major_1_ed_minor_28_datafield_15_rep47(tvb, offset, sub_tree, expand_var_2964);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
    if (asterix_extended_end(tvb, offset - 1)) break;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_2965
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_2966
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_11_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_2967
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_2968
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_19_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_2969
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_2970
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //055 expand_var_2971
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_2972
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_7_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //065 expand_var_2973
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_2974
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_2975
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_28_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 48);
  return offset - offset_start;
}
static int* cat_48_ed_major_1_ed_minor_28_uap_table_expand[] = {
  &expand_var_2948, //010
  &expand_var_2949, //140
  &expand_var_2950, //020
  &expand_var_2951, //040
  &expand_var_2952, //070
  &expand_var_2953, //090
  &expand_var_2954, //130
  &expand_var_2955, //220
  &expand_var_2956, //240
  &expand_var_2957, //250
  &expand_var_2958, //161
  &expand_var_2959, //042
  &expand_var_2960, //200
  &expand_var_2961, //170
  &expand_var_2962, //210
  &expand_var_2963, //030
  &expand_var_2965, //080
  &expand_var_2966, //100
  &expand_var_2967, //110
  &expand_var_2968, //120
  &expand_var_2969, //230
  &expand_var_2970, //260
  &expand_var_2971, //055
  &expand_var_2972, //050
  &expand_var_2973, //065
  &expand_var_2974, //060
  &expand_var_2975, //SP
  &expand_var_2976, //R
};
static const ttt cat_48_ed_major_1_ed_minor_28_uap_table[] = {
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_0_uap, //010
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_1_uap, //140
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_2_uap, //020
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_3_uap, //040
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_4_uap, //070
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_5_uap, //090
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_6_uap, //130
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_7_uap, //220
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_8_uap, //240
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_9_uap, //250
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_10_uap, //161
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_11_uap, //042
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_12_uap, //200
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_13_uap, //170
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_14_uap, //210
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_15_uap, //030
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_16_uap, //080
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_17_uap, //100
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_18_uap, //110
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_19_uap, //120
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_20_uap, //230
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_21_uap, //260
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_22_uap, //055
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_23_uap, //050
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_24_uap, //065
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_25_uap, //060
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_26_uap, //SP
  &dissect_cat_48_ed_major_1_ed_minor_28_datafield_27_uap, //R
};
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_2977
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_2978
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_2979
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_2980
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_2981
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_2982
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_2983
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_2984
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //240 expand_var_2985
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_227_compound_227(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_2986
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_2987
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //042 expand_var_2988
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_2989
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_track(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_2990
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_2991
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_2992
{
  return dissect_cat_48_ed_major_1_ed_minor_28_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_2993
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_2994
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_11_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_2995
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_2996
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_19_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_2997
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_2998
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //055 expand_var_2999
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_3000
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_7_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //065 expand_var_3001
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_3002
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_3003
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_29_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 48);
  return offset - offset_start;
}
static int* cat_48_ed_major_1_ed_minor_29_uap_table_expand[] = {
  &expand_var_2977, //010
  &expand_var_2978, //140
  &expand_var_2979, //020
  &expand_var_2980, //040
  &expand_var_2981, //070
  &expand_var_2982, //090
  &expand_var_2983, //130
  &expand_var_2984, //220
  &expand_var_2985, //240
  &expand_var_2986, //250
  &expand_var_2987, //161
  &expand_var_2988, //042
  &expand_var_2989, //200
  &expand_var_2990, //170
  &expand_var_2991, //210
  &expand_var_2992, //030
  &expand_var_2993, //080
  &expand_var_2994, //100
  &expand_var_2995, //110
  &expand_var_2996, //120
  &expand_var_2997, //230
  &expand_var_2998, //260
  &expand_var_2999, //055
  &expand_var_3000, //050
  &expand_var_3001, //065
  &expand_var_3002, //060
  &expand_var_3003, //SP
  &expand_var_3004, //R
};
static const ttt cat_48_ed_major_1_ed_minor_29_uap_table[] = {
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_0_uap, //010
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_1_uap, //140
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_2_uap, //020
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_3_uap, //040
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_4_uap, //070
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_5_uap, //090
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_6_uap, //130
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_7_uap, //220
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_8_uap, //240
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_9_uap, //250
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_10_uap, //161
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_11_uap, //042
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_12_uap, //200
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_13_uap, //170
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_14_uap, //210
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_15_uap, //030
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_16_uap, //080
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_17_uap, //100
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_18_uap, //110
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_19_uap, //120
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_20_uap, //230
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_21_uap, //260
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_22_uap, //055
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_23_uap, //050
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_24_uap, //065
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_25_uap, //060
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_26_uap, //SP
  &dissect_cat_48_ed_major_1_ed_minor_29_datafield_27_uap, //R
};
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_3005
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_3006
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_3007
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_3008
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_3009
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_3010
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_3011
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_3012
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //240 expand_var_3013
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_227_compound_227(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_3014
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_3015
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //042 expand_var_3016
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_3017
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_track(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_3018
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_3019
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_3020
{
  return dissect_cat_48_ed_major_1_ed_minor_28_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_3021
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_3022
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_11_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3023
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_3024
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_19_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_3025
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_3026
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //055 expand_var_3027
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_3028
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_7_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //065 expand_var_3029
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_3030
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_3031
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_30_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 48);
  return offset - offset_start;
}
static int* cat_48_ed_major_1_ed_minor_30_uap_table_expand[] = {
  &expand_var_3005, //010
  &expand_var_3006, //140
  &expand_var_3007, //020
  &expand_var_3008, //040
  &expand_var_3009, //070
  &expand_var_3010, //090
  &expand_var_3011, //130
  &expand_var_3012, //220
  &expand_var_3013, //240
  &expand_var_3014, //250
  &expand_var_3015, //161
  &expand_var_3016, //042
  &expand_var_3017, //200
  &expand_var_3018, //170
  &expand_var_3019, //210
  &expand_var_3020, //030
  &expand_var_3021, //080
  &expand_var_3022, //100
  &expand_var_3023, //110
  &expand_var_3024, //120
  &expand_var_3025, //230
  &expand_var_3026, //260
  &expand_var_3027, //055
  &expand_var_3028, //050
  &expand_var_3029, //065
  &expand_var_3030, //060
  &expand_var_3031, //SP
  &expand_var_3032, //R
};
static const ttt cat_48_ed_major_1_ed_minor_30_uap_table[] = {
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_0_uap, //010
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_1_uap, //140
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_2_uap, //020
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_3_uap, //040
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_4_uap, //070
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_5_uap, //090
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_6_uap, //130
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_7_uap, //220
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_8_uap, //240
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_9_uap, //250
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_10_uap, //161
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_11_uap, //042
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_12_uap, //200
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_13_uap, //170
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_14_uap, //210
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_15_uap, //030
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_16_uap, //080
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_17_uap, //100
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_18_uap, //110
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_19_uap, //120
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_20_uap, //230
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_21_uap, //260
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_22_uap, //055
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_23_uap, //050
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_24_uap, //065
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_25_uap, //060
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_26_uap, //SP
  &dissect_cat_48_ed_major_1_ed_minor_30_datafield_27_uap, //R
};
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_3033
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_3034
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_3035
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_3036, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3037, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3038, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3039, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3040, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3041, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3042, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3043, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3044, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3045, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3046, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3047, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3048, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3049, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3050, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3051, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3052, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3053, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3054, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_2_6 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 6, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 1, spare_item_2_6);
  proto_tree_add_bits_item(datablock_tree, expand_var_3055, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_3056
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_3057
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_3058
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_3059
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_3060
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //240 expand_var_3061
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_227_compound_227(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_3062
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_3063
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //042 expand_var_3064
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_3065
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_track(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_3066
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_3067
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_15_rep48(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_3069
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_3068
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  while (true) {
    fun_len = dissect_cat_48_ed_major_1_ed_minor_31_datafield_15_rep48(tvb, offset, sub_tree, expand_var_3069);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
    if (asterix_extended_end(tvb, offset - 1)) break;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_3070
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_3071
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_11_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3072
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_3073
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_19_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_3074
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_3075
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //055 expand_var_3076
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_3077
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_7_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //065 expand_var_3078
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_3079
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_3080
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_31_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 48);
  return offset - offset_start;
}
static int* cat_48_ed_major_1_ed_minor_31_uap_table_expand[] = {
  &expand_var_3033, //010
  &expand_var_3034, //140
  &expand_var_3035, //020
  &expand_var_3056, //040
  &expand_var_3057, //070
  &expand_var_3058, //090
  &expand_var_3059, //130
  &expand_var_3060, //220
  &expand_var_3061, //240
  &expand_var_3062, //250
  &expand_var_3063, //161
  &expand_var_3064, //042
  &expand_var_3065, //200
  &expand_var_3066, //170
  &expand_var_3067, //210
  &expand_var_3068, //030
  &expand_var_3070, //080
  &expand_var_3071, //100
  &expand_var_3072, //110
  &expand_var_3073, //120
  &expand_var_3074, //230
  &expand_var_3075, //260
  &expand_var_3076, //055
  &expand_var_3077, //050
  &expand_var_3078, //065
  &expand_var_3079, //060
  &expand_var_3080, //SP
  &expand_var_3081, //R
};
static const ttt cat_48_ed_major_1_ed_minor_31_uap_table[] = {
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_0_uap, //010
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_1_uap, //140
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_2_uap, //020
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_3_uap, //040
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_4_uap, //070
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_5_uap, //090
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_6_uap, //130
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_7_uap, //220
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_8_uap, //240
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_9_uap, //250
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_10_uap, //161
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_11_uap, //042
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_12_uap, //200
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_13_uap, //170
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_14_uap, //210
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_15_uap, //030
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_16_uap, //080
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_17_uap, //100
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_18_uap, //110
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_19_uap, //120
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_20_uap, //230
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_21_uap, //260
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_22_uap, //055
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_23_uap, //050
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_24_uap, //065
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_25_uap, //060
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_26_uap, //SP
  &dissect_cat_48_ed_major_1_ed_minor_31_datafield_27_uap, //R
};
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_3082
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_3083
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_3084
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_3085, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3086, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3087, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3088, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3089, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3090, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3091, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3092, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3093, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3094, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3095, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3096, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3097, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3098, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3099, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3100, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3101, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3102, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3103, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_2_6 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 6, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 1, spare_item_2_6);
  proto_tree_add_bits_item(datablock_tree, expand_var_3104, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3105, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3106, tvb, (offset * 8) + 1, 4, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3107, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3108, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3109, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3110, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3111, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3112, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3113, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3114, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3115, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_4_6 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 6, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 1, spare_item_4_6);
  proto_tree_add_bits_item(datablock_tree, expand_var_3116, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3117, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3118, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3119, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3120, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_5_4 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 4, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 3, spare_item_5_4);
  proto_tree_add_bits_item(datablock_tree, expand_var_3121, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_3122
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_3123
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_3124
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3125, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3126, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_3127 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_3127 = value_expand_var_3127 & 0b0011111111111111;
  int value_expand_var_3127_s = get_signed_int(value_expand_var_3127, 14);
  double value_expand_var_3127_d = (double)value_expand_var_3127_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_3127, tvb, offset + 0, 2, value_expand_var_3127_d);
  return 2;
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_3128
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_3129
{
  return dissect_cat_20_ed_major_1_ed_minor_9_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //240 expand_var_3130
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_227_compound_227(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_3131
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //161 expand_var_3132
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //042 expand_var_3133
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_3134
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_5_track(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_3135
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_3136
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_15_rep49(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_3138
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_3137
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  while (true) {
    fun_len = dissect_cat_48_ed_major_1_ed_minor_32_datafield_15_rep49(tvb, offset, sub_tree, expand_var_3138);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
    if (asterix_extended_end(tvb, offset - 1)) break;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_3139
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_3140
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_11_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3141
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_3142
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_19_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_3143
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //260 expand_var_3144
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //055 expand_var_3145
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_22_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_3146
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_7_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //065 expand_var_3147
{
  return dissect_cat_48_ed_major_1_ed_minor_27_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_3148
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_10_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_3149
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_48_ed_major_1_ed_minor_32_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 48);
  return offset - offset_start;
}
static int* cat_48_ed_major_1_ed_minor_32_uap_table_expand[] = {
  &expand_var_3082, //010
  &expand_var_3083, //140
  &expand_var_3084, //020
  &expand_var_3122, //040
  &expand_var_3123, //070
  &expand_var_3124, //090
  &expand_var_3128, //130
  &expand_var_3129, //220
  &expand_var_3130, //240
  &expand_var_3131, //250
  &expand_var_3132, //161
  &expand_var_3133, //042
  &expand_var_3134, //200
  &expand_var_3135, //170
  &expand_var_3136, //210
  &expand_var_3137, //030
  &expand_var_3139, //080
  &expand_var_3140, //100
  &expand_var_3141, //110
  &expand_var_3142, //120
  &expand_var_3143, //230
  &expand_var_3144, //260
  &expand_var_3145, //055
  &expand_var_3146, //050
  &expand_var_3147, //065
  &expand_var_3148, //060
  &expand_var_3149, //SP
  &expand_var_3150, //R
};
static const ttt cat_48_ed_major_1_ed_minor_32_uap_table[] = {
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_0_uap, //010
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_1_uap, //140
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_2_uap, //020
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_3_uap, //040
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_4_uap, //070
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_5_uap, //090
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_6_uap, //130
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_7_uap, //220
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_8_uap, //240
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_9_uap, //250
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_10_uap, //161
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_11_uap, //042
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_12_uap, //200
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_13_uap, //170
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_14_uap, //210
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_15_uap, //030
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_16_uap, //080
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_17_uap, //100
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_18_uap, //110
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_19_uap, //120
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_20_uap, //230
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_21_uap, //260
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_22_uap, //055
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_23_uap, //050
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_24_uap, //065
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_25_uap, //060
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_26_uap, //SP
  &dissect_cat_48_ed_major_1_ed_minor_32_datafield_27_uap, //R
};
static int dissect_cat_62_ed_major_1_ed_minor_2_datafield_0_rep50(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1740 expand_var_3152
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 5, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3153 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree_group_0, expand_var_3153, tvb, offset + 0, 1, value_expand_var_3153);
  unsigned int value_expand_var_3154 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_3154, tvb, offset + 1, 1, value_expand_var_3154);
  proto_item *spare_item_16 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 16, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 16, 4, spare_item_16);
  proto_tree_add_bits_item(tree_group_0, expand_var_3155, tvb, (offset * 8) + 20, 4, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_3156 = asterix_get_unsigned_value (tvb, offset + 3, 2);
  proto_tree_add_uint (tree_group_0, expand_var_3156, tvb, offset + 3, 2, value_expand_var_3156);
  return 5;
}
static int dissect_cat_62_ed_major_1_ed_minor_2_datafield_0_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1740 expand_var_3151
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_62_ed_major_1_ed_minor_2_datafield_0_rep50(tvb, offset, sub_tree, expand_var_3152);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_2_datafield_1_rep51(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1741 expand_var_3158
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3159 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree_group_0, expand_var_3159, tvb, offset + 0, 1, value_expand_var_3159);
  unsigned int value_expand_var_3160 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_3160, tvb, offset + 1, 1, value_expand_var_3160);
  proto_item *spare_item_16 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 16, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 16, 4, spare_item_16);
  proto_tree_add_bits_item(tree_group_0, expand_var_3161, tvb, (offset * 8) + 20, 4, ENC_BIG_ENDIAN);
  return 3;
}
static int dissect_cat_62_ed_major_1_ed_minor_2_datafield_1_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1741 expand_var_3157
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_62_ed_major_1_ed_minor_2_datafield_1_rep51(tvb, offset, sub_tree, expand_var_3158);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_2_datafield_2_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1744 expand_var_3162
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3163 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_3163_s = get_signed_int(value_expand_var_3163, 16);
  double value_expand_var_3163_d = (double)value_expand_var_3163_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_3163, tvb, offset + 0, 2, value_expand_var_3163_d);
  unsigned int value_expand_var_3164 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_3164_s = get_signed_int(value_expand_var_3164, 16);
  double value_expand_var_3164_d = (double)value_expand_var_3164_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_3164, tvb, offset + 2, 2, value_expand_var_3164_d);
  return 4;
}
static int dissect_cat_62_ed_major_1_ed_minor_2_datafield_3_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1746 expand_var_3165
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_3166, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_0_1 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 1, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 1, 6, spare_item_0_1);
  proto_tree_add_bits_item(datablock_tree, expand_var_3167, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int* cat_62_ed_major_1_ed_minor_2_uap_table_expansion_expand[] = {
  &expand_var_3151,
  &expand_var_3157,
  &expand_var_3162,
  &expand_var_3165
};
static const ttt cat_62_ed_major_1_ed_minor_2_uap_table_expansion[] = {
  &dissect_cat_62_ed_major_1_ed_minor_2_datafield_0_re,
  &dissect_cat_62_ed_major_1_ed_minor_2_datafield_1_re,
  &dissect_cat_62_ed_major_1_ed_minor_2_datafield_2_re,
  &dissect_cat_62_ed_major_1_ed_minor_2_datafield_3_re
};
static int dissect_cat_62_ed_major_1_ed_minor_3_datafield_0_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1740 expand_var_3168
{
  return dissect_cat_62_ed_major_1_ed_minor_2_datafield_0_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_3_datafield_1_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1741 expand_var_3169
{
  return dissect_cat_62_ed_major_1_ed_minor_2_datafield_1_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_3_datafield_2_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1744 expand_var_3170
{
  return dissect_cat_62_ed_major_1_ed_minor_2_datafield_2_re(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_3_datafield_3_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1750 expand_var_3171
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_3172, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3173, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3174, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_0_3 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 3, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 4, spare_item_0_3);
  proto_tree_add_bits_item(datablock_tree, expand_var_3175, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_3_datafield_4_1753_compound_1753(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1778 expand_var_3177
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3178, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3179, tvb, (offset * 8) + 1, 3, ENC_BIG_ENDIAN);
  proto_item *spare_item_4 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 4, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 4, spare_item_4);
  return 1;
}
static int dissect_cat_62_ed_major_1_ed_minor_3_datafield_4_1765_compound_1765(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1778 expand_var_3180
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *tree_group_0_group_item_1 = proto_tree_add_item (tree_group_0, expand_var_3181, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0_group_1 = proto_item_add_subtree (tree_group_0_group_item_1, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0_group_1, expand_var_3182, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0_group_1, expand_var_3183, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_item *tree_group_0_group_item_2 = proto_tree_add_item (tree_group_0, expand_var_3184, tvb, offset + 1, 1, ENC_NA);
  proto_tree *tree_group_0_group_2 = proto_item_add_subtree (tree_group_0_group_item_2, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0_group_2, expand_var_3185, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0_group_2, expand_var_3186, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_item *tree_group_0_group_item_3 = proto_tree_add_item (tree_group_0, expand_var_3187, tvb, offset + 1, 1, ENC_NA);
  proto_tree *tree_group_0_group_3 = proto_item_add_subtree (tree_group_0_group_item_3, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0_group_3, expand_var_3188, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0_group_3, expand_var_3189, tvb, (offset * 8) + 6, 2, ENC_BIG_ENDIAN);
  proto_item *tree_group_0_group_item_4 = proto_tree_add_item (tree_group_0, expand_var_3190, tvb, offset + 1, 1, ENC_NA);
  proto_tree *tree_group_0_group_4 = proto_item_add_subtree (tree_group_0_group_item_4, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0_group_4, expand_var_3191, tvb, (offset * 8) + 8, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0_group_4, expand_var_3192, tvb, (offset * 8) + 9, 2, ENC_BIG_ENDIAN);
  proto_item *tree_group_0_group_item_5 = proto_tree_add_item (tree_group_0, expand_var_3193, tvb, offset + 2, 1, ENC_NA);
  proto_tree *tree_group_0_group_5 = proto_item_add_subtree (tree_group_0_group_item_5, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0_group_5, expand_var_3194, tvb, (offset * 8) + 11, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0_group_5, expand_var_3195, tvb, (offset * 8) + 12, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_3196 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_3196 = value_expand_var_3196 >> 5;
  value_expand_var_3196 = value_expand_var_3196 & 0b00000111111;
  proto_tree_add_uint (tree_group_0_group_5, expand_var_3196, tvb, offset + 1, 1, value_expand_var_3196);
  proto_item *spare_item_19 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 19, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 19, 5, spare_item_19);
  return 3;
}
static int dissect_cat_62_ed_major_1_ed_minor_3_datafield_4_1772_compound_1772(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1778 expand_var_3197
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *tree_group_0_group_item_1 = proto_tree_add_item (tree_group_0, expand_var_3198, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0_group_1 = proto_item_add_subtree (tree_group_0_group_item_1, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0_group_1, expand_var_3199, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0_group_1, expand_var_3200, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_item *tree_group_0_group_item_2 = proto_tree_add_item (tree_group_0, expand_var_3201, tvb, offset + 1, 1, ENC_NA);
  proto_tree *tree_group_0_group_2 = proto_item_add_subtree (tree_group_0_group_item_2, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0_group_2, expand_var_3202, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0_group_2, expand_var_3203, tvb, (offset * 8) + 3, 2, ENC_BIG_ENDIAN);
  proto_item *tree_group_0_group_item_3 = proto_tree_add_item (tree_group_0, expand_var_3204, tvb, offset + 1, 1, ENC_NA);
  proto_tree *tree_group_0_group_3 = proto_item_add_subtree (tree_group_0_group_item_3, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0_group_3, expand_var_3205, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0_group_3, expand_var_3206, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  return 1;
}
static int dissect_cat_62_ed_major_1_ed_minor_3_datafield_4_1777_compound_1777(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1778 expand_var_3207
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *tree_group_0_group_item_1 = proto_tree_add_item (tree_group_0, expand_var_3208, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0_group_1 = proto_item_add_subtree (tree_group_0_group_item_1, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0_group_1, expand_var_3209, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0_group_1, expand_var_3210, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_item *tree_group_0_group_item_2 = proto_tree_add_item (tree_group_0, expand_var_3211, tvb, offset + 1, 1, ENC_NA);
  proto_tree *tree_group_0_group_2 = proto_item_add_subtree (tree_group_0_group_item_2, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0_group_2, expand_var_3212, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0_group_2, expand_var_3213, tvb, (offset * 8) + 4, 3, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  return 1;
}
static int dissect_cat_62_ed_major_1_ed_minor_3_datafield_4_re(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //1778 expand_var_3176
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 4, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_3_datafield_4_1753_compound_1753(tvb, offset, asterix_packet_tree, expand_var_3177);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_3_datafield_4_1765_compound_1765(tvb, offset, asterix_packet_tree, expand_var_3180);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_3_datafield_4_1772_compound_1772(tvb, offset, asterix_packet_tree, expand_var_3197);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_3_datafield_4_1777_compound_1777(tvb, offset, asterix_packet_tree, expand_var_3207);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int* cat_62_ed_major_1_ed_minor_3_uap_table_expansion_expand[] = {
  &expand_var_3168,
  &expand_var_3169,
  &expand_var_3170,
  &expand_var_3171,
  &expand_var_3176
};
static const ttt cat_62_ed_major_1_ed_minor_3_uap_table_expansion[] = {
  &dissect_cat_62_ed_major_1_ed_minor_3_datafield_0_re,
  &dissect_cat_62_ed_major_1_ed_minor_3_datafield_1_re,
  &dissect_cat_62_ed_major_1_ed_minor_3_datafield_2_re,
  &dissect_cat_62_ed_major_1_ed_minor_3_datafield_3_re,
  &dissect_cat_62_ed_major_1_ed_minor_3_datafield_4_re
};
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_3214
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_3215
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_3216
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //105 expand_var_3217
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3218 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  int value_expand_var_3218_s = get_signed_int(value_expand_var_3218, 32);
  double value_expand_var_3218_d = (double)value_expand_var_3218_s * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_3218, tvb, offset + 0, 4, value_expand_var_3218_d);
  unsigned int value_expand_var_3219 = asterix_get_unsigned_value (tvb, offset + 4, 4);
  int value_expand_var_3219_s = get_signed_int(value_expand_var_3219, 32);
  double value_expand_var_3219_d = (double)value_expand_var_3219_s * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_3219, tvb, offset + 4, 4, value_expand_var_3219_d);
  return 8;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_3220
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3221 = asterix_get_unsigned_value (tvb, offset + 0, 3);
  int value_expand_var_3221_s = get_signed_int(value_expand_var_3221, 24);
  double value_expand_var_3221_d = (double)value_expand_var_3221_s * 0.5;
  proto_tree_add_double (tree_group_0, expand_var_3221, tvb, offset + 0, 3, value_expand_var_3221_d);
  unsigned int value_expand_var_3222 = asterix_get_unsigned_value (tvb, offset + 3, 3);
  int value_expand_var_3222_s = get_signed_int(value_expand_var_3222, 24);
  double value_expand_var_3222_d = (double)value_expand_var_3222_s * 0.5;
  proto_tree_add_double (tree_group_0, expand_var_3222, tvb, offset + 3, 3, value_expand_var_3222_d);
  return 6;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //185 expand_var_3223
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3224 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_3224_s = get_signed_int(value_expand_var_3224, 16);
  double value_expand_var_3224_d = (double)value_expand_var_3224_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_3224, tvb, offset + 0, 2, value_expand_var_3224_d);
  unsigned int value_expand_var_3225 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_3225_s = get_signed_int(value_expand_var_3225, 16);
  double value_expand_var_3225_d = (double)value_expand_var_3225_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_3225, tvb, offset + 2, 2, value_expand_var_3225_d);
  return 4;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_3226
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3227 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_3227_s = get_signed_int(value_expand_var_3227, 8);
  double value_expand_var_3227_d = (double)value_expand_var_3227_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_3227, tvb, offset + 0, 1, value_expand_var_3227_d);
  unsigned int value_expand_var_3228 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  int value_expand_var_3228_s = get_signed_int(value_expand_var_3228, 8);
  double value_expand_var_3228_d = (double)value_expand_var_3228_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_3228, tvb, offset + 1, 1, value_expand_var_3228_d);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_3229
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_3230, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_3231);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //245 expand_var_3232
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 7, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3233, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_2 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 2, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 6, spare_item_2);
  print_icao_string (tvb, offset + 1, 0, 48, 6, tree_group_0, expand_var_3234);
  return 7;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1913_compound_1913(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3236
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_449_compound_449(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1914_compound_1914(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3237
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_168_compound_168(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1915_compound_1915(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3238
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1918_compound_1918(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3239
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3240, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_3241 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_3241 = value_expand_var_3241 & 0b0111111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_3241, tvb, offset + 0, 2, value_expand_var_3241);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1919_compound_1919(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3242
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1923_compound_1923(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3243
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3244, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3245, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_3246 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_3246 = value_expand_var_3246 & 0b0001111111111111;
  int value_expand_var_3246_s = get_signed_int(value_expand_var_3246, 13);
  double value_expand_var_3246_d = (double)value_expand_var_3246_s * 25.0;
  proto_tree_add_double (tree_group_0, expand_var_3246, tvb, offset + 0, 2, value_expand_var_3246_d);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1925_compound_1925(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3247
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3248, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3249, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3250, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_3251 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_3251 = value_expand_var_3251 & 0b0001111111111111;
  int value_expand_var_3251_s = get_signed_int(value_expand_var_3251, 13);
  double value_expand_var_3251_d = (double)value_expand_var_3251_s * 25.0;
  proto_tree_add_double (tree_group_0, expand_var_3251, tvb, offset + 0, 2, value_expand_var_3251_d);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1928_compound_1928(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3252
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_3253, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3254, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_0_2 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 2, 5, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 5, spare_item_0_2);
  proto_tree_add_bits_item(datablock_tree, expand_var_3255, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_rep52(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3257
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 15, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3258, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3259, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_3260 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_3260 = value_expand_var_3260 & 0b00111111;
  proto_tree_add_uint (tree_group_0, expand_var_3260, tvb, offset + 0, 1, value_expand_var_3260);
  unsigned int value_expand_var_3261 = asterix_get_unsigned_value (tvb, offset + 1, 2);
  int value_expand_var_3261_s = get_signed_int(value_expand_var_3261, 16);
  double value_expand_var_3261_d = (double)value_expand_var_3261_s * 10.0;
  proto_tree_add_double (tree_group_0, expand_var_3261, tvb, offset + 1, 2, value_expand_var_3261_d);
  unsigned int value_expand_var_3262 = asterix_get_unsigned_value (tvb, offset + 3, 3);
  int value_expand_var_3262_s = get_signed_int(value_expand_var_3262, 24);
  double value_expand_var_3262_d = (double)value_expand_var_3262_s * 2.1457672119140625e-05;
  proto_tree_add_double (tree_group_0, expand_var_3262, tvb, offset + 3, 3, value_expand_var_3262_d);
  unsigned int value_expand_var_3263 = asterix_get_unsigned_value (tvb, offset + 6, 3);
  int value_expand_var_3263_s = get_signed_int(value_expand_var_3263, 24);
  double value_expand_var_3263_d = (double)value_expand_var_3263_s * 2.1457672119140625e-05;
  proto_tree_add_double (tree_group_0, expand_var_3263, tvb, offset + 6, 3, value_expand_var_3263_d);
  proto_tree_add_bits_item(tree_group_0, expand_var_3264, tvb, (offset * 8) + 72, 4, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3265, tvb, (offset * 8) + 76, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3266, tvb, (offset * 8) + 78, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3267, tvb, (offset * 8) + 79, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_3268 = asterix_get_unsigned_value (tvb, offset + 10, 3);
  proto_tree_add_uint (tree_group_0, expand_var_3268, tvb, offset + 10, 3, value_expand_var_3268);
  unsigned int value_expand_var_3269 = asterix_get_unsigned_value (tvb, offset + 13, 2);
  double value_expand_var_3269_d = (double)value_expand_var_3269 * 0.01;
  proto_tree_add_double (tree_group_0, expand_var_3269, tvb, offset + 13, 2, value_expand_var_3269_d);
  return 15;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1937_compound_1937(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3256
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_rep52(tvb, offset, sub_tree, expand_var_3257);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1940_compound_1940(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3270
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3271, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3272, tvb, (offset * 8) + 3, 3, ENC_BIG_ENDIAN);
  proto_item *spare_item_6 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 6, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 2, spare_item_6);
  proto_tree_add_bits_item(tree_group_0, expand_var_3273, tvb, (offset * 8) + 8, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3274, tvb, (offset * 8) + 9, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3275, tvb, (offset * 8) + 10, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_3276 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_3276 = value_expand_var_3276 >> 4;
  value_expand_var_3276 = value_expand_var_3276 & 0b0001;
  proto_tree_add_uint (tree_group_0, expand_var_3276, tvb, offset + 1, 1, value_expand_var_3276);
  unsigned int value_expand_var_3277 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_3277 = value_expand_var_3277 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_3277, tvb, offset + 1, 1, value_expand_var_3277);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1946_compound_1946(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3278
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3279, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3280, tvb, (offset * 8) + 2, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3281, tvb, (offset * 8) + 4, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3282, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 6, spare_item_7);
  proto_tree_add_bits_item(tree_group_0, expand_var_3283, tvb, (offset * 8) + 13, 3, ENC_BIG_ENDIAN);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1947_compound_1947(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3284
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1948_compound_1948(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3285
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1949_compound_1949(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3286
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1950_compound_1950(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3287
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1952_compound_1952(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3288
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3289, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_2 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 2, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 6, spare_item_2);
  unsigned int value_expand_var_3290 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_3290 = value_expand_var_3290 >> 1;
  int value_expand_var_3290_s = get_signed_int(value_expand_var_3290, 7);
  double value_expand_var_3290_d = (double)value_expand_var_3290_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_3290, tvb, offset + 1, 1, value_expand_var_3290_d);
  proto_item *spare_item_15 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 15, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 15, 1, spare_item_15);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1953_compound_1953(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3291
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1954_compound_1954(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3292
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 6.103515625e-05;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1955_compound_1955(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3293
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1964_compound_1964(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3294
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3295, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3296, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3297, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3298, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_4 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 4, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 4, spare_item_4);
  unsigned int value_expand_var_3299 = asterix_get_unsigned_value (tvb, offset + 1, 2);
  proto_tree_add_uint (tree_group_0, expand_var_3299, tvb, offset + 1, 2, value_expand_var_3299);
  unsigned int value_expand_var_3300 = asterix_get_unsigned_value (tvb, offset + 3, 2);
  proto_tree_add_uint (tree_group_0, expand_var_3300, tvb, offset + 3, 2, value_expand_var_3300);
  unsigned int value_expand_var_3301 = asterix_get_unsigned_value (tvb, offset + 5, 2);
  int value_expand_var_3301_s = get_signed_int(value_expand_var_3301, 16);
  double value_expand_var_3301_d = (double)value_expand_var_3301_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_3301, tvb, offset + 5, 2, value_expand_var_3301_d);
  unsigned int value_expand_var_3302 = asterix_get_unsigned_value (tvb, offset + 7, 1);
  proto_tree_add_uint (tree_group_0, expand_var_3302, tvb, offset + 7, 1, value_expand_var_3302);
  return 8;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1965_compound_1965(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3303
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1968_compound_1968(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3304
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3305 = asterix_get_unsigned_value (tvb, offset + 0, 3);
  int value_expand_var_3305_s = get_signed_int(value_expand_var_3305, 24);
  double value_expand_var_3305_d = (double)value_expand_var_3305_s * 2.1457672119140625e-05;
  proto_tree_add_double (tree_group_0, expand_var_3305, tvb, offset + 0, 3, value_expand_var_3305_d);
  unsigned int value_expand_var_3306 = asterix_get_unsigned_value (tvb, offset + 3, 3);
  int value_expand_var_3306_s = get_signed_int(value_expand_var_3306, 24);
  double value_expand_var_3306_d = (double)value_expand_var_3306_s * 2.1457672119140625e-05;
  proto_tree_add_double (tree_group_0, expand_var_3306, tvb, offset + 3, 3, value_expand_var_3306_d);
  return 6;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1969_compound_1969(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3307
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1971_compound_1971(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3308
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  unsigned int value_expand_var_3309 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_3309 = value_expand_var_3309 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_3309, tvb, offset + 0, 1, value_expand_var_3309);
  return 1;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1972_compound_1972(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3310
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_448_compound_448(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1973_compound_1973(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3311
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1974_compound_1974(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3312
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.008;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1976_compound_1976(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3313
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  unsigned int value_expand_var_3314 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_3314 = value_expand_var_3314 & 0b0000111111111111;
  double value_expand_var_3314_d = (double)value_expand_var_3314 * 0.1;
  proto_tree_add_double (tree_group_0, expand_var_3314, tvb, offset + 0, 2, value_expand_var_3314_d);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3235
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 28, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1913_compound_1913(tvb, offset, asterix_packet_tree, expand_var_3236);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1914_compound_1914(tvb, offset, asterix_packet_tree, expand_var_3237);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1915_compound_1915(tvb, offset, asterix_packet_tree, expand_var_3238);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1918_compound_1918(tvb, offset, asterix_packet_tree, expand_var_3239);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1919_compound_1919(tvb, offset, asterix_packet_tree, expand_var_3242);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1923_compound_1923(tvb, offset, asterix_packet_tree, expand_var_3243);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1925_compound_1925(tvb, offset, asterix_packet_tree, expand_var_3247);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1928_compound_1928(tvb, offset, asterix_packet_tree, expand_var_3252);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1937_compound_1937(tvb, offset, asterix_packet_tree, expand_var_3256);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1940_compound_1940(tvb, offset, asterix_packet_tree, expand_var_3270);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1946_compound_1946(tvb, offset, asterix_packet_tree, expand_var_3278);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 12))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1947_compound_1947(tvb, offset, asterix_packet_tree, expand_var_3284);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 13))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1948_compound_1948(tvb, offset, asterix_packet_tree, expand_var_3285);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 14))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1949_compound_1949(tvb, offset, asterix_packet_tree, expand_var_3286);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 15))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 16))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1950_compound_1950(tvb, offset, asterix_packet_tree, expand_var_3287);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 17))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1952_compound_1952(tvb, offset, asterix_packet_tree, expand_var_3288);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 18))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1953_compound_1953(tvb, offset, asterix_packet_tree, expand_var_3291);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 19))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1954_compound_1954(tvb, offset, asterix_packet_tree, expand_var_3292);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 20))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1955_compound_1955(tvb, offset, asterix_packet_tree, expand_var_3293);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 21))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1964_compound_1964(tvb, offset, asterix_packet_tree, expand_var_3294);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 22))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1965_compound_1965(tvb, offset, asterix_packet_tree, expand_var_3303);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 23))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 24))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1968_compound_1968(tvb, offset, asterix_packet_tree, expand_var_3304);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 25))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1969_compound_1969(tvb, offset, asterix_packet_tree, expand_var_3307);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 26))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1971_compound_1971(tvb, offset, asterix_packet_tree, expand_var_3308);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 27))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1972_compound_1972(tvb, offset, asterix_packet_tree, expand_var_3310);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 28))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1973_compound_1973(tvb, offset, asterix_packet_tree, expand_var_3311);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 29))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1974_compound_1974(tvb, offset, asterix_packet_tree, expand_var_3312);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 30))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1976_compound_1976(tvb, offset, asterix_packet_tree, expand_var_3313);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_3315
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_3316
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_3317, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3318, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3319, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3320, tvb, (offset * 8) + 3, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3321, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3322, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3323, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3324, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3325, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3326, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3327, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3328, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3329, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3330, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3331, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3332, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3333, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3334, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3335, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3336, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3337, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3338, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3339, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3340, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3341, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3342, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3343, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3344, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3345, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3346, tvb, (offset * 8) + 2, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3347, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3348, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3349, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3350, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3351, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3352, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_5_3 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 3, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 4, spare_item_5_3);
  proto_tree_add_bits_item(datablock_tree, expand_var_3353, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1854_compound_1854(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3355
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1855_compound_1855(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3356
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1856_compound_1856(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3357
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1857_compound_1857(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3358
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1858_compound_1858(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3359
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_436_compound_436(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1859_compound_1859(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3360
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1860_compound_1860(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3361
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1861_compound_1861(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3362
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1862_compound_1862(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3363
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1863_compound_1863(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3364
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3354
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 10, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1854_compound_1854(tvb, offset, asterix_packet_tree, expand_var_3355);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1855_compound_1855(tvb, offset, asterix_packet_tree, expand_var_3356);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1856_compound_1856(tvb, offset, asterix_packet_tree, expand_var_3357);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1857_compound_1857(tvb, offset, asterix_packet_tree, expand_var_3358);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1858_compound_1858(tvb, offset, asterix_packet_tree, expand_var_3359);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1859_compound_1859(tvb, offset, asterix_packet_tree, expand_var_3360);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1860_compound_1860(tvb, offset, asterix_packet_tree, expand_var_3361);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1861_compound_1861(tvb, offset, asterix_packet_tree, expand_var_3362);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1862_compound_1862(tvb, offset, asterix_packet_tree, expand_var_3363);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_1863_compound_1863(tvb, offset, asterix_packet_tree, expand_var_3364);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_3365
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3366, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3367, tvb, (offset * 8) + 2, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3368, tvb, (offset * 8) + 4, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3369, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  return 1;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1865_compound_1865(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3371
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1866_compound_1866(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3372
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1867_compound_1867(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3373
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1868_compound_1868(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3374
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1869_compound_1869(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3375
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1870_compound_1870(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3376
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1871_compound_1871(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3377
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1872_compound_1872(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3378
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1873_compound_1873(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3379
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1874_compound_1874(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3380
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1875_compound_1875(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3381
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1876_compound_1876(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3382
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1877_compound_1877(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3383
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1878_compound_1878(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3384
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1879_compound_1879(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3385
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1880_compound_1880(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3386
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1881_compound_1881(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3387
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1882_compound_1882(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3388
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1883_compound_1883(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3389
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1884_compound_1884(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3390
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1885_compound_1885(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3391
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1886_compound_1886(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3392
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1887_compound_1887(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3393
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1888_compound_1888(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3394
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1889_compound_1889(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3395
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1890_compound_1890(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3396
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1891_compound_1891(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3397
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1892_compound_1892(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3398
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1893_compound_1893(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3399
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1894_compound_1894(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3400
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1895_compound_1895(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3401
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3370
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 31, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1865_compound_1865(tvb, offset, asterix_packet_tree, expand_var_3371);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1866_compound_1866(tvb, offset, asterix_packet_tree, expand_var_3372);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1867_compound_1867(tvb, offset, asterix_packet_tree, expand_var_3373);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1868_compound_1868(tvb, offset, asterix_packet_tree, expand_var_3374);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1869_compound_1869(tvb, offset, asterix_packet_tree, expand_var_3375);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1870_compound_1870(tvb, offset, asterix_packet_tree, expand_var_3376);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1871_compound_1871(tvb, offset, asterix_packet_tree, expand_var_3377);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1872_compound_1872(tvb, offset, asterix_packet_tree, expand_var_3378);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1873_compound_1873(tvb, offset, asterix_packet_tree, expand_var_3379);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1874_compound_1874(tvb, offset, asterix_packet_tree, expand_var_3380);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1875_compound_1875(tvb, offset, asterix_packet_tree, expand_var_3381);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 12))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1876_compound_1876(tvb, offset, asterix_packet_tree, expand_var_3382);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 13))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1877_compound_1877(tvb, offset, asterix_packet_tree, expand_var_3383);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 14))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1878_compound_1878(tvb, offset, asterix_packet_tree, expand_var_3384);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 15))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 16))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1879_compound_1879(tvb, offset, asterix_packet_tree, expand_var_3385);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 17))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1880_compound_1880(tvb, offset, asterix_packet_tree, expand_var_3386);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 18))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1881_compound_1881(tvb, offset, asterix_packet_tree, expand_var_3387);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 19))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1882_compound_1882(tvb, offset, asterix_packet_tree, expand_var_3388);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 20))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1883_compound_1883(tvb, offset, asterix_packet_tree, expand_var_3389);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 21))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1884_compound_1884(tvb, offset, asterix_packet_tree, expand_var_3390);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 22))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1885_compound_1885(tvb, offset, asterix_packet_tree, expand_var_3391);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 23))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 24))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1886_compound_1886(tvb, offset, asterix_packet_tree, expand_var_3392);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 25))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1887_compound_1887(tvb, offset, asterix_packet_tree, expand_var_3393);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 26))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1888_compound_1888(tvb, offset, asterix_packet_tree, expand_var_3394);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 27))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1889_compound_1889(tvb, offset, asterix_packet_tree, expand_var_3395);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 28))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1890_compound_1890(tvb, offset, asterix_packet_tree, expand_var_3396);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 29))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1891_compound_1891(tvb, offset, asterix_packet_tree, expand_var_3397);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 30))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1892_compound_1892(tvb, offset, asterix_packet_tree, expand_var_3398);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 31))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 32))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1893_compound_1893(tvb, offset, asterix_packet_tree, expand_var_3399);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 33))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1894_compound_1894(tvb, offset, asterix_packet_tree, expand_var_3400);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 34))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_1895_compound_1895(tvb, offset, asterix_packet_tree, expand_var_3401);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //136 expand_var_3402
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_3403
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //135 expand_var_3404
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3405, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_3406 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_3406 = value_expand_var_3406 & 0b0111111111111111;
  int value_expand_var_3406_s = get_signed_int(value_expand_var_3406, 15);
  double value_expand_var_3406_d = (double)value_expand_var_3406_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_3406, tvb, offset + 0, 2, value_expand_var_3406_d);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_3407
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1978_compound_1978(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3409
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1979_compound_1979(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3410
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1981_compound_1981(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3411
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3412, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_2 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 2, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 3, spare_item_2);
  unsigned int value_expand_var_3413 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  value_expand_var_3413 = value_expand_var_3413 & 0b00000111111111111111111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_3413, tvb, offset + 0, 4, value_expand_var_3413);
  return 4;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1984_compound_1984(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3414
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3415, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3416, tvb, (offset * 8) + 2, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3417, tvb, (offset * 8) + 4, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3418, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  return 1;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1985_compound_1985(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3419
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1986_compound_1986(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3420
{
  proto_tree_add_item(tree, expand_var, tvb, offset + 0, 1, ENC_ASCII | ENC_NA);
  return 1;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1987_compound_1987(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3421
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1988_compound_1988(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3422
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1439_compound_1439(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3423
{
  return dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1439_compound_1439(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_483_compound_483(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3424
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_483_compound_483(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1989_compound_1989(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3425
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_486_compound_486(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_rep53(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3427
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3428, tvb, (offset * 8) + 0, 5, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3429, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 4, spare_item_7);
  unsigned int value_expand_var_3430 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_3430 = value_expand_var_3430 & 0b00011111;
  proto_tree_add_uint (tree_group_0, expand_var_3430, tvb, offset + 1, 1, value_expand_var_3430);
  proto_item *spare_item_16 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 16, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 16, 2, spare_item_16);
  unsigned int value_expand_var_3431 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  value_expand_var_3431 = value_expand_var_3431 & 0b00111111;
  proto_tree_add_uint (tree_group_0, expand_var_3431, tvb, offset + 2, 1, value_expand_var_3431);
  proto_tree_add_bits_item(tree_group_0, expand_var_3432, tvb, (offset * 8) + 24, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_25 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 25, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 25, 1, spare_item_25);
  unsigned int value_expand_var_3433 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  value_expand_var_3433 = value_expand_var_3433 & 0b00111111;
  proto_tree_add_uint (tree_group_0, expand_var_3433, tvb, offset + 3, 1, value_expand_var_3433);
  return 4;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1995_compound_1995(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3426
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_rep53(tvb, offset, sub_tree, expand_var_3427);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_494_compound_494(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3434
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_494_compound_494(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1449_compound_1449(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3435
{
  return dissect_cat_32_ed_major_1_ed_minor_1_datafield_18_1449_compound_1449(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1996_compound_1996(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3436
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1997_compound_1997(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3437
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1999_compound_1999(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3438
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 3, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_3439, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_3440);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_2000_compound_2000(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3441
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3408
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 18, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1978_compound_1978(tvb, offset, asterix_packet_tree, expand_var_3409);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1979_compound_1979(tvb, offset, asterix_packet_tree, expand_var_3410);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1981_compound_1981(tvb, offset, asterix_packet_tree, expand_var_3411);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1984_compound_1984(tvb, offset, asterix_packet_tree, expand_var_3414);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1985_compound_1985(tvb, offset, asterix_packet_tree, expand_var_3419);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1986_compound_1986(tvb, offset, asterix_packet_tree, expand_var_3420);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1987_compound_1987(tvb, offset, asterix_packet_tree, expand_var_3421);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1988_compound_1988(tvb, offset, asterix_packet_tree, expand_var_3422);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1439_compound_1439(tvb, offset, asterix_packet_tree, expand_var_3423);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_483_compound_483(tvb, offset, asterix_packet_tree, expand_var_3424);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1989_compound_1989(tvb, offset, asterix_packet_tree, expand_var_3425);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 12))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1995_compound_1995(tvb, offset, asterix_packet_tree, expand_var_3426);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 13))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_494_compound_494(tvb, offset, asterix_packet_tree, expand_var_3434);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 14))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1449_compound_1449(tvb, offset, asterix_packet_tree, expand_var_3435);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 15))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 16))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1996_compound_1996(tvb, offset, asterix_packet_tree, expand_var_3436);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 17))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1997_compound_1997(tvb, offset, asterix_packet_tree, expand_var_3437);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 18))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1999_compound_1999(tvb, offset, asterix_packet_tree, expand_var_3438);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 19))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_2000_compound_2000(tvb, offset, asterix_packet_tree, expand_var_3441);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_3442
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_3443
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_1821_compound_1821(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3445
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3446, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3447, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3448, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3449, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3450, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3451, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3452, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3453, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_1822_compound_1822(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3454
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 2, spare_item_0);
  unsigned int value_expand_var_3455 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_3455 = value_expand_var_3455 & 0b0011111111111111;
  proto_tree_add_uint (tree_group_0, expand_var_3455, tvb, offset + 0, 2, value_expand_var_3455);
  proto_item *spare_item_16 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 16, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 16, 3, spare_item_16);
  unsigned int value_expand_var_3456 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  value_expand_var_3456 = value_expand_var_3456 & 0b00011111;
  proto_tree_add_uint (tree_group_0, expand_var_3456, tvb, offset + 2, 1, value_expand_var_3456);
  proto_item *spare_item_24 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 24, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 24, 2, spare_item_24);
  unsigned int value_expand_var_3457 = asterix_get_unsigned_value (tvb, offset + 3, 1);
  value_expand_var_3457 = value_expand_var_3457 & 0b00111111;
  proto_tree_add_uint (tree_group_0, expand_var_3457, tvb, offset + 3, 1, value_expand_var_3457);
  return 4;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_1823_compound_1823(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3458
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_1826_compound_1826(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3459
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 1, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_3460, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_3461 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_3461 = value_expand_var_3461 & 0b0011111111111111;
  int value_expand_var_3461_s = get_signed_int(value_expand_var_3461, 14);
  double value_expand_var_3461_d = (double)value_expand_var_3461_s * 25.0;
  proto_tree_add_double (tree_group_0, expand_var_3461, tvb, offset + 0, 2, value_expand_var_3461_d);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_1828_compound_1828(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3462
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_3463);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_1829_compound_1829(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3464
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  int value_expand_var_s = get_signed_int(value_expand_var, 8);
  double value_expand_var_d = (double)value_expand_var_s * 0.0078125;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_1830_compound_1830(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3465
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 3, spare_item_0);
  proto_tree_add_bits_item(tree_group_0, expand_var_3466, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3467, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3468, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3469, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3470, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3444
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 7, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_1821_compound_1821(tvb, offset, asterix_packet_tree, expand_var_3445);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_1822_compound_1822(tvb, offset, asterix_packet_tree, expand_var_3454);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_1823_compound_1823(tvb, offset, asterix_packet_tree, expand_var_3458);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_1826_compound_1826(tvb, offset, asterix_packet_tree, expand_var_3459);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_1828_compound_1828(tvb, offset, asterix_packet_tree, expand_var_3462);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_1829_compound_1829(tvb, offset, asterix_packet_tree, expand_var_3464);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_1830_compound_1830(tvb, offset, asterix_packet_tree, expand_var_3465);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_3471
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 4, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 4, spare_item_0);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_3472);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_25_rep54(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //510 expand_var_3474
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3475 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree_group_0, expand_var_3475, tvb, offset + 0, 1, value_expand_var_3475);
  unsigned int value_expand_var_3476 = asterix_get_unsigned_value (tvb, offset + 1, 2);
  value_expand_var_3476 = value_expand_var_3476 >> 1;
  proto_tree_add_uint (tree_group_0, expand_var_3476, tvb, offset + 1, 2, value_expand_var_3476);
  return 3;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //510 expand_var_3473
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  while (true) {
    fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_25_rep54(tvb, offset, sub_tree, expand_var_3474);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
    if (asterix_extended_end(tvb, offset - 1)) break;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2004_compound_2004(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_3478
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3479 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_3479_d = (double)value_expand_var_3479 * 0.5;
  proto_tree_add_double (tree_group_0, expand_var_3479, tvb, offset + 0, 2, value_expand_var_3479_d);
  unsigned int value_expand_var_3480 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_3480_d = (double)value_expand_var_3480 * 0.5;
  proto_tree_add_double (tree_group_0, expand_var_3480, tvb, offset + 2, 2, value_expand_var_3480_d);
  return 4;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2005_compound_2005(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_3481
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_23_506_compound_506(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2008_compound_2008(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_3482
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3483 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_3483_d = (double)value_expand_var_3483 * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_3483, tvb, offset + 0, 2, value_expand_var_3483_d);
  unsigned int value_expand_var_3484 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_3484_d = (double)value_expand_var_3484 * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_3484, tvb, offset + 2, 2, value_expand_var_3484_d);
  return 4;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2009_compound_2009(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_3485
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_d = (double)value_expand_var * 6.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2010_compound_2010(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_3486
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_d = (double)value_expand_var * 0.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2013_compound_2013(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_3487
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3488 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_3488_d = (double)value_expand_var_3488 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_3488, tvb, offset + 0, 1, value_expand_var_3488_d);
  unsigned int value_expand_var_3489 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  double value_expand_var_3489_d = (double)value_expand_var_3489 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_3489, tvb, offset + 1, 1, value_expand_var_3489_d);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2016_compound_2016(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_3490
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3491 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_3491_d = (double)value_expand_var_3491 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_3491, tvb, offset + 0, 1, value_expand_var_3491_d);
  unsigned int value_expand_var_3492 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  double value_expand_var_3492_d = (double)value_expand_var_3492 * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_3492, tvb, offset + 1, 1, value_expand_var_3492_d);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2017_compound_2017(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_3493
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_d = (double)value_expand_var * 6.25;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_3477
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 8, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2004_compound_2004(tvb, offset, asterix_packet_tree, expand_var_3478);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2005_compound_2005(tvb, offset, asterix_packet_tree, expand_var_3481);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2008_compound_2008(tvb, offset, asterix_packet_tree, expand_var_3482);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2009_compound_2009(tvb, offset, asterix_packet_tree, expand_var_3485);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2010_compound_2010(tvb, offset, asterix_packet_tree, expand_var_3486);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2013_compound_2013(tvb, offset, asterix_packet_tree, expand_var_3487);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2016_compound_2016(tvb, offset, asterix_packet_tree, expand_var_3490);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_2017_compound_2017(tvb, offset, asterix_packet_tree, expand_var_3493);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1897_compound_1897(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3495
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1900_compound_1900(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3496
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3497 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_3497_d = (double)value_expand_var_3497 * 0.00390625;
  proto_tree_add_double (tree_group_0, expand_var_3497, tvb, offset + 0, 2, value_expand_var_3497_d);
  unsigned int value_expand_var_3498 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_3498_d = (double)value_expand_var_3498 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_3498, tvb, offset + 2, 2, value_expand_var_3498_d);
  return 4;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1901_compound_1901(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3499
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_10_162_compound_162(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1905_compound_1905(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3500
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3501, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3502, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_3503 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  value_expand_var_3503 = value_expand_var_3503 & 0b0011111111111111;
  int value_expand_var_3503_s = get_signed_int(value_expand_var_3503, 14);
  double value_expand_var_3503_d = (double)value_expand_var_3503_s * 0.25;
  proto_tree_add_double (tree_group_0, expand_var_3503, tvb, offset + 0, 2, value_expand_var_3503_d);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1907_compound_1907(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3504
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3505, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3506, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3507, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_3508);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1911_compound_1911(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3509
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3510, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3511, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3512, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3513, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_6 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 6, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 2, spare_item_6);
  return 1;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3494
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 6, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1897_compound_1897(tvb, offset, asterix_packet_tree, expand_var_3495);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1900_compound_1900(tvb, offset, asterix_packet_tree, expand_var_3496);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1901_compound_1901(tvb, offset, asterix_packet_tree, expand_var_3499);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1905_compound_1905(tvb, offset, asterix_packet_tree, expand_var_3500);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1907_compound_1907(tvb, offset, asterix_packet_tree, expand_var_3504);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1911_compound_1911(tvb, offset, asterix_packet_tree, expand_var_3509);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 62);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_16_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_3515
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_62_ed_major_1_ed_minor_16_uap_table_expand[] = {
  &expand_var_3214, //010
  NULL,
  &expand_var_3215, //015
  &expand_var_3216, //070
  &expand_var_3217, //105
  &expand_var_3220, //100
  &expand_var_3223, //185
  &expand_var_3226, //210
  &expand_var_3229, //060
  &expand_var_3232, //245
  &expand_var_3235, //380
  &expand_var_3315, //040
  &expand_var_3316, //080
  &expand_var_3354, //290
  &expand_var_3365, //200
  &expand_var_3370, //295
  &expand_var_3402, //136
  &expand_var_3403, //130
  &expand_var_3404, //135
  &expand_var_3407, //220
  &expand_var_3408, //390
  &expand_var_3442, //270
  &expand_var_3443, //300
  &expand_var_3444, //110
  &expand_var_3471, //120
  &expand_var_3473, //510
  &expand_var_3477, //500
  &expand_var_3494, //340
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_3514, //RE
  &expand_var_3515, //S
};
static const ttt cat_62_ed_major_1_ed_minor_16_uap_table[] = {
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_0_uap, //010
  NULL,
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_2_uap, //015
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_3_uap, //070
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_4_uap, //105
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_5_uap, //100
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_6_uap, //185
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_7_uap, //210
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_8_uap, //060
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_9_uap, //245
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_uap, //380
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_11_uap, //040
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_12_uap, //080
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_uap, //290
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_14_uap, //200
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_uap, //295
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_16_uap, //136
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_17_uap, //130
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_18_uap, //135
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_19_uap, //220
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_uap, //390
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_21_uap, //270
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_22_uap, //300
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_uap, //110
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_24_uap, //120
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_25_uap, //510
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_uap, //500
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_uap, //340
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_33_uap, //RE
  &dissect_cat_62_ed_major_1_ed_minor_16_datafield_34_uap, //S
};
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_3516
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_3517
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_3518
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //105 expand_var_3519
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_3520
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //185 expand_var_3521
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_3522
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_3523
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3524, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3525, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3526, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_3 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 3, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 3, 1, spare_item_3);
  print_octal_string (tvb, offset + 0, 4, 12, 2, tree_group_0, expand_var_3527);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //245 expand_var_3528
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3529
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_3530
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_3531
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3532
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_3533
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3534
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //136 expand_var_3535
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_3536
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //135 expand_var_3537
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_3538
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3539
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_3540
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_3541
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3542
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_3543
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //510 expand_var_3544
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_3545
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3546
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 62);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_17_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_3548
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_62_ed_major_1_ed_minor_17_uap_table_expand[] = {
  &expand_var_3516, //010
  NULL,
  &expand_var_3517, //015
  &expand_var_3518, //070
  &expand_var_3519, //105
  &expand_var_3520, //100
  &expand_var_3521, //185
  &expand_var_3522, //210
  &expand_var_3523, //060
  &expand_var_3528, //245
  &expand_var_3529, //380
  &expand_var_3530, //040
  &expand_var_3531, //080
  &expand_var_3532, //290
  &expand_var_3533, //200
  &expand_var_3534, //295
  &expand_var_3535, //136
  &expand_var_3536, //130
  &expand_var_3537, //135
  &expand_var_3538, //220
  &expand_var_3539, //390
  &expand_var_3540, //270
  &expand_var_3541, //300
  &expand_var_3542, //110
  &expand_var_3543, //120
  &expand_var_3544, //510
  &expand_var_3545, //500
  &expand_var_3546, //340
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_3547, //RE
  &expand_var_3548, //S
};
static const ttt cat_62_ed_major_1_ed_minor_17_uap_table[] = {
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_0_uap, //010
  NULL,
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_2_uap, //015
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_3_uap, //070
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_4_uap, //105
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_5_uap, //100
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_6_uap, //185
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_7_uap, //210
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_8_uap, //060
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_9_uap, //245
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_10_uap, //380
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_11_uap, //040
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_12_uap, //080
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_13_uap, //290
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_14_uap, //200
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_15_uap, //295
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_16_uap, //136
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_17_uap, //130
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_18_uap, //135
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_19_uap, //220
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_20_uap, //390
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_21_uap, //270
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_22_uap, //300
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_23_uap, //110
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_24_uap, //120
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_25_uap, //510
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_26_uap, //500
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_27_uap, //340
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_33_uap, //RE
  &dissect_cat_62_ed_major_1_ed_minor_17_datafield_34_uap, //S
};
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_3549
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_3550
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_3551
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //105 expand_var_3552
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_3553
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //185 expand_var_3554
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_3555
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_3556
{
  return dissect_cat_62_ed_major_1_ed_minor_17_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //245 expand_var_3557
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1913_compound_1913(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3559
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_449_compound_449(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1914_compound_1914(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3560
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_168_compound_168(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1915_compound_1915(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3561
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1918_compound_1918(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3562
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1918_compound_1918(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1919_compound_1919(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3563
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1923_compound_1923(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3564
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1923_compound_1923(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1925_compound_1925(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3565
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1925_compound_1925(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1928_compound_1928(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3566
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1928_compound_1928(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1937_compound_1937(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3567
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1937_compound_1937(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_2028_compound_2028(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3568
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3569, tvb, (offset * 8) + 0, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3570, tvb, (offset * 8) + 3, 3, ENC_BIG_ENDIAN);
  proto_item *spare_item_6 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 6, 2, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 2, spare_item_6);
  proto_tree_add_bits_item(tree_group_0, expand_var_3571, tvb, (offset * 8) + 8, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3572, tvb, (offset * 8) + 9, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3573, tvb, (offset * 8) + 10, 1, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_3574 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_3574 = value_expand_var_3574 >> 4;
  value_expand_var_3574 = value_expand_var_3574 & 0b0001;
  proto_tree_add_uint (tree_group_0, expand_var_3574, tvb, offset + 1, 1, value_expand_var_3574);
  unsigned int value_expand_var_3575 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  value_expand_var_3575 = value_expand_var_3575 & 0b00001111;
  proto_tree_add_uint (tree_group_0, expand_var_3575, tvb, offset + 1, 1, value_expand_var_3575);
  return 2;
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1946_compound_1946(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3576
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1946_compound_1946(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1947_compound_1947(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3577
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1948_compound_1948(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3578
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1949_compound_1949(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3579
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1950_compound_1950(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3580
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1952_compound_1952(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3581
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1952_compound_1952(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1953_compound_1953(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3582
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1954_compound_1954(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3583
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1954_compound_1954(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1955_compound_1955(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3584
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1964_compound_1964(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3585
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1964_compound_1964(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1965_compound_1965(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3586
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1965_compound_1965(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1968_compound_1968(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3587
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1968_compound_1968(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1969_compound_1969(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3588
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1971_compound_1971(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3589
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1971_compound_1971(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1972_compound_1972(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3590
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_448_compound_448(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1973_compound_1973(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3591
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1974_compound_1974(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3592
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1974_compound_1974(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1976_compound_1976(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3593
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1976_compound_1976(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3558
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 28, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1913_compound_1913(tvb, offset, asterix_packet_tree, expand_var_3559);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1914_compound_1914(tvb, offset, asterix_packet_tree, expand_var_3560);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1915_compound_1915(tvb, offset, asterix_packet_tree, expand_var_3561);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1918_compound_1918(tvb, offset, asterix_packet_tree, expand_var_3562);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1919_compound_1919(tvb, offset, asterix_packet_tree, expand_var_3563);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1923_compound_1923(tvb, offset, asterix_packet_tree, expand_var_3564);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1925_compound_1925(tvb, offset, asterix_packet_tree, expand_var_3565);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1928_compound_1928(tvb, offset, asterix_packet_tree, expand_var_3566);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1937_compound_1937(tvb, offset, asterix_packet_tree, expand_var_3567);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_2028_compound_2028(tvb, offset, asterix_packet_tree, expand_var_3568);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1946_compound_1946(tvb, offset, asterix_packet_tree, expand_var_3576);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 12))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1947_compound_1947(tvb, offset, asterix_packet_tree, expand_var_3577);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 13))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1948_compound_1948(tvb, offset, asterix_packet_tree, expand_var_3578);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 14))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1949_compound_1949(tvb, offset, asterix_packet_tree, expand_var_3579);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 15))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 16))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1950_compound_1950(tvb, offset, asterix_packet_tree, expand_var_3580);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 17))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1952_compound_1952(tvb, offset, asterix_packet_tree, expand_var_3581);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 18))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1953_compound_1953(tvb, offset, asterix_packet_tree, expand_var_3582);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 19))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1954_compound_1954(tvb, offset, asterix_packet_tree, expand_var_3583);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 20))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1955_compound_1955(tvb, offset, asterix_packet_tree, expand_var_3584);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 21))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1964_compound_1964(tvb, offset, asterix_packet_tree, expand_var_3585);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 22))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1965_compound_1965(tvb, offset, asterix_packet_tree, expand_var_3586);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 23))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 24))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1968_compound_1968(tvb, offset, asterix_packet_tree, expand_var_3587);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 25))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1969_compound_1969(tvb, offset, asterix_packet_tree, expand_var_3588);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 26))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1971_compound_1971(tvb, offset, asterix_packet_tree, expand_var_3589);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 27))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1972_compound_1972(tvb, offset, asterix_packet_tree, expand_var_3590);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 28))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1973_compound_1973(tvb, offset, asterix_packet_tree, expand_var_3591);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 29))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1974_compound_1974(tvb, offset, asterix_packet_tree, expand_var_3592);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 30))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_1976_compound_1976(tvb, offset, asterix_packet_tree, expand_var_3593);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_3594
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_3595
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_3596, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3597, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3598, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3599, tvb, (offset * 8) + 3, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3600, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3601, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3602, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3603, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3604, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3605, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3606, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3607, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3608, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3609, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3610, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3611, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3612, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3613, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3614, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3615, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3616, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3617, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3618, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3619, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3620, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3621, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3622, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3623, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3624, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3625, tvb, (offset * 8) + 2, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3626, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3627, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3628, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3629, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3630, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3631, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3632, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3633, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3634, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_5_6 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 6, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 1, spare_item_5_6);
  proto_tree_add_bits_item(datablock_tree, expand_var_3635, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3636
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_3637
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3638
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //136 expand_var_3639
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_3640
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //135 expand_var_3641
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_3642
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3643
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_3644
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_3645
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3646
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_3647
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //510 expand_var_3648
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_3649
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3650
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 62);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_18_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_3652
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_62_ed_major_1_ed_minor_18_uap_table_expand[] = {
  &expand_var_3549, //010
  NULL,
  &expand_var_3550, //015
  &expand_var_3551, //070
  &expand_var_3552, //105
  &expand_var_3553, //100
  &expand_var_3554, //185
  &expand_var_3555, //210
  &expand_var_3556, //060
  &expand_var_3557, //245
  &expand_var_3558, //380
  &expand_var_3594, //040
  &expand_var_3595, //080
  &expand_var_3636, //290
  &expand_var_3637, //200
  &expand_var_3638, //295
  &expand_var_3639, //136
  &expand_var_3640, //130
  &expand_var_3641, //135
  &expand_var_3642, //220
  &expand_var_3643, //390
  &expand_var_3644, //270
  &expand_var_3645, //300
  &expand_var_3646, //110
  &expand_var_3647, //120
  &expand_var_3648, //510
  &expand_var_3649, //500
  &expand_var_3650, //340
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_3651, //RE
  &expand_var_3652, //S
};
static const ttt cat_62_ed_major_1_ed_minor_18_uap_table[] = {
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_0_uap, //010
  NULL,
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_2_uap, //015
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_3_uap, //070
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_4_uap, //105
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_5_uap, //100
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_6_uap, //185
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_7_uap, //210
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_8_uap, //060
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_9_uap, //245
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_uap, //380
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_11_uap, //040
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_12_uap, //080
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_13_uap, //290
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_14_uap, //200
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_15_uap, //295
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_16_uap, //136
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_17_uap, //130
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_18_uap, //135
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_19_uap, //220
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_20_uap, //390
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_21_uap, //270
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_22_uap, //300
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_23_uap, //110
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_24_uap, //120
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_25_uap, //510
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_26_uap, //500
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_27_uap, //340
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_33_uap, //RE
  &dissect_cat_62_ed_major_1_ed_minor_18_datafield_34_uap, //S
};
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_3653
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_3654
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_3655
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //105 expand_var_3656
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_3657
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //185 expand_var_3658
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_3659
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_3660
{
  return dissect_cat_62_ed_major_1_ed_minor_17_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //245 expand_var_3661
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1913_compound_1913(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3663
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_449_compound_449(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1914_compound_1914(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3664
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_168_compound_168(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1915_compound_1915(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3665
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1918_compound_1918(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3666
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1918_compound_1918(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1919_compound_1919(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3667
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1923_compound_1923(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3668
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1923_compound_1923(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1925_compound_1925(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3669
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1925_compound_1925(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1928_compound_1928(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3670
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1928_compound_1928(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1937_compound_1937(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3671
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1937_compound_1937(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_2028_compound_2028(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3672
{
  return dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_2028_compound_2028(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1946_compound_1946(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3673
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1946_compound_1946(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1947_compound_1947(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3674
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1948_compound_1948(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3675
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1949_compound_1949(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3676
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1950_compound_1950(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3677
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1952_compound_1952(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3678
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1952_compound_1952(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1953_compound_1953(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3679
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1954_compound_1954(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3680
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1954_compound_1954(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1955_compound_1955(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3681
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1964_compound_1964(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3682
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1964_compound_1964(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1965_compound_1965(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3683
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1965_compound_1965(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1968_compound_1968(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3684
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1968_compound_1968(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1969_compound_1969(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3685
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1971_compound_1971(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3686
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1971_compound_1971(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1972_compound_1972(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3687
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_448_compound_448(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1973_compound_1973(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3688
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1974_compound_1974(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3689
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1974_compound_1974(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_2032_compound_2032(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3690
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1976_compound_1976(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3662
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 28, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1913_compound_1913(tvb, offset, asterix_packet_tree, expand_var_3663);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1914_compound_1914(tvb, offset, asterix_packet_tree, expand_var_3664);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1915_compound_1915(tvb, offset, asterix_packet_tree, expand_var_3665);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1918_compound_1918(tvb, offset, asterix_packet_tree, expand_var_3666);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1919_compound_1919(tvb, offset, asterix_packet_tree, expand_var_3667);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1923_compound_1923(tvb, offset, asterix_packet_tree, expand_var_3668);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1925_compound_1925(tvb, offset, asterix_packet_tree, expand_var_3669);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1928_compound_1928(tvb, offset, asterix_packet_tree, expand_var_3670);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1937_compound_1937(tvb, offset, asterix_packet_tree, expand_var_3671);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_2028_compound_2028(tvb, offset, asterix_packet_tree, expand_var_3672);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1946_compound_1946(tvb, offset, asterix_packet_tree, expand_var_3673);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 12))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1947_compound_1947(tvb, offset, asterix_packet_tree, expand_var_3674);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 13))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1948_compound_1948(tvb, offset, asterix_packet_tree, expand_var_3675);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 14))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1949_compound_1949(tvb, offset, asterix_packet_tree, expand_var_3676);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 15))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 16))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1950_compound_1950(tvb, offset, asterix_packet_tree, expand_var_3677);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 17))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1952_compound_1952(tvb, offset, asterix_packet_tree, expand_var_3678);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 18))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1953_compound_1953(tvb, offset, asterix_packet_tree, expand_var_3679);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 19))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1954_compound_1954(tvb, offset, asterix_packet_tree, expand_var_3680);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 20))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1955_compound_1955(tvb, offset, asterix_packet_tree, expand_var_3681);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 21))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1964_compound_1964(tvb, offset, asterix_packet_tree, expand_var_3682);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 22))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1965_compound_1965(tvb, offset, asterix_packet_tree, expand_var_3683);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 23))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 24))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1968_compound_1968(tvb, offset, asterix_packet_tree, expand_var_3684);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 25))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1969_compound_1969(tvb, offset, asterix_packet_tree, expand_var_3685);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 26))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1971_compound_1971(tvb, offset, asterix_packet_tree, expand_var_3686);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 27))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1972_compound_1972(tvb, offset, asterix_packet_tree, expand_var_3687);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 28))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1973_compound_1973(tvb, offset, asterix_packet_tree, expand_var_3688);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 29))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_1974_compound_1974(tvb, offset, asterix_packet_tree, expand_var_3689);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 30))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_2032_compound_2032(tvb, offset, asterix_packet_tree, expand_var_3690);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_3691
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_3692
{
  return dissect_cat_62_ed_major_1_ed_minor_18_datafield_12_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3693
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_3694
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3695
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //136 expand_var_3696
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_3697
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //135 expand_var_3698
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_3699
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3700
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_3701
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_3702
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3703
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_3704
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //510 expand_var_3705
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_3706
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_1897_compound_1897(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3708
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_1900_compound_1900(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3709
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1900_compound_1900(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_2030_compound_2030(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3710
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_1905_compound_1905(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3711
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1905_compound_1905(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_1907_compound_1907(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3712
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1907_compound_1907(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_1911_compound_1911(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3713
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_27_1911_compound_1911(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3707
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 6, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_1897_compound_1897(tvb, offset, asterix_packet_tree, expand_var_3708);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_1900_compound_1900(tvb, offset, asterix_packet_tree, expand_var_3709);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_2030_compound_2030(tvb, offset, asterix_packet_tree, expand_var_3710);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_1905_compound_1905(tvb, offset, asterix_packet_tree, expand_var_3711);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_1907_compound_1907(tvb, offset, asterix_packet_tree, expand_var_3712);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_1911_compound_1911(tvb, offset, asterix_packet_tree, expand_var_3713);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 62);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_19_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_3715
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_62_ed_major_1_ed_minor_19_uap_table_expand[] = {
  &expand_var_3653, //010
  NULL,
  &expand_var_3654, //015
  &expand_var_3655, //070
  &expand_var_3656, //105
  &expand_var_3657, //100
  &expand_var_3658, //185
  &expand_var_3659, //210
  &expand_var_3660, //060
  &expand_var_3661, //245
  &expand_var_3662, //380
  &expand_var_3691, //040
  &expand_var_3692, //080
  &expand_var_3693, //290
  &expand_var_3694, //200
  &expand_var_3695, //295
  &expand_var_3696, //136
  &expand_var_3697, //130
  &expand_var_3698, //135
  &expand_var_3699, //220
  &expand_var_3700, //390
  &expand_var_3701, //270
  &expand_var_3702, //300
  &expand_var_3703, //110
  &expand_var_3704, //120
  &expand_var_3705, //510
  &expand_var_3706, //500
  &expand_var_3707, //340
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_3714, //RE
  &expand_var_3715, //S
};
static const ttt cat_62_ed_major_1_ed_minor_19_uap_table[] = {
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_0_uap, //010
  NULL,
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_2_uap, //015
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_3_uap, //070
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_4_uap, //105
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_5_uap, //100
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_6_uap, //185
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_7_uap, //210
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_8_uap, //060
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_9_uap, //245
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_10_uap, //380
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_11_uap, //040
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_12_uap, //080
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_13_uap, //290
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_14_uap, //200
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_15_uap, //295
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_16_uap, //136
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_17_uap, //130
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_18_uap, //135
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_19_uap, //220
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_20_uap, //390
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_21_uap, //270
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_22_uap, //300
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_23_uap, //110
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_24_uap, //120
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_25_uap, //510
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_26_uap, //500
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_uap, //340
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_33_uap, //RE
  &dissect_cat_62_ed_major_1_ed_minor_19_datafield_34_uap, //S
};
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_3716
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_3717
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_3718
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //105 expand_var_3719
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_3720
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //185 expand_var_3721
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_3722
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_3723
{
  return dissect_cat_62_ed_major_1_ed_minor_17_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //245 expand_var_3724
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1913_compound_1913(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3726
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_449_compound_449(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1914_compound_1914(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3727
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_14_168_compound_168(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1915_compound_1915(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3728
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1918_compound_1918(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3729
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1918_compound_1918(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1919_compound_1919(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3730
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1923_compound_1923(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3731
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1923_compound_1923(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1925_compound_1925(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3732
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1925_compound_1925(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1928_compound_1928(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3733
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1928_compound_1928(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1937_compound_1937(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3734
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1937_compound_1937(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_2028_compound_2028(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3735
{
  return dissect_cat_62_ed_major_1_ed_minor_18_datafield_10_2028_compound_2028(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1946_compound_1946(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3736
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1946_compound_1946(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1947_compound_1947(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3737
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1948_compound_1948(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3738
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1949_compound_1949(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3739
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1950_compound_1950(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3740
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1952_compound_1952(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3741
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1952_compound_1952(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1953_compound_1953(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3742
{
  return dissect_cat_15_ed_major_1_ed_minor_0_datafield_9_590_compound_590(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1954_compound_1954(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3743
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1954_compound_1954(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1955_compound_1955(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3744
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1964_compound_1964(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3745
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1964_compound_1964(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1965_compound_1965(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3746
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1965_compound_1965(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1968_compound_1968(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3747
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1968_compound_1968(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1969_compound_1969(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3748
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1971_compound_1971(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3749
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1971_compound_1971(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_2036_compound_2036(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3750
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_448_compound_448(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1973_compound_1973(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3751
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1974_compound_1974(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3752
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1974_compound_1974(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_2032_compound_2032(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3753
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1976_compound_1976(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3725
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 28, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1913_compound_1913(tvb, offset, asterix_packet_tree, expand_var_3726);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1914_compound_1914(tvb, offset, asterix_packet_tree, expand_var_3727);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1915_compound_1915(tvb, offset, asterix_packet_tree, expand_var_3728);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1918_compound_1918(tvb, offset, asterix_packet_tree, expand_var_3729);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1919_compound_1919(tvb, offset, asterix_packet_tree, expand_var_3730);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1923_compound_1923(tvb, offset, asterix_packet_tree, expand_var_3731);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1925_compound_1925(tvb, offset, asterix_packet_tree, expand_var_3732);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1928_compound_1928(tvb, offset, asterix_packet_tree, expand_var_3733);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1937_compound_1937(tvb, offset, asterix_packet_tree, expand_var_3734);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_2028_compound_2028(tvb, offset, asterix_packet_tree, expand_var_3735);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1946_compound_1946(tvb, offset, asterix_packet_tree, expand_var_3736);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 12))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1947_compound_1947(tvb, offset, asterix_packet_tree, expand_var_3737);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 13))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1948_compound_1948(tvb, offset, asterix_packet_tree, expand_var_3738);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 14))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1949_compound_1949(tvb, offset, asterix_packet_tree, expand_var_3739);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 15))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 16))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1950_compound_1950(tvb, offset, asterix_packet_tree, expand_var_3740);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 17))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1952_compound_1952(tvb, offset, asterix_packet_tree, expand_var_3741);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 18))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1953_compound_1953(tvb, offset, asterix_packet_tree, expand_var_3742);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 19))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1954_compound_1954(tvb, offset, asterix_packet_tree, expand_var_3743);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 20))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1955_compound_1955(tvb, offset, asterix_packet_tree, expand_var_3744);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 21))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1964_compound_1964(tvb, offset, asterix_packet_tree, expand_var_3745);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 22))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1965_compound_1965(tvb, offset, asterix_packet_tree, expand_var_3746);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 23))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 24))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1968_compound_1968(tvb, offset, asterix_packet_tree, expand_var_3747);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 25))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1969_compound_1969(tvb, offset, asterix_packet_tree, expand_var_3748);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 26))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1971_compound_1971(tvb, offset, asterix_packet_tree, expand_var_3749);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 27))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_2036_compound_2036(tvb, offset, asterix_packet_tree, expand_var_3750);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 28))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1973_compound_1973(tvb, offset, asterix_packet_tree, expand_var_3751);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 29))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_1974_compound_1974(tvb, offset, asterix_packet_tree, expand_var_3752);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 30))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_2032_compound_2032(tvb, offset, asterix_packet_tree, expand_var_3753);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_3754
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_3755
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_3756, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3757, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3758, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3759, tvb, (offset * 8) + 3, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3760, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3761, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3762, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3763, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3764, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3765, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3766, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3767, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3768, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3769, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3770, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3771, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3772, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3773, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3774, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3775, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3776, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3777, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3778, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3779, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3780, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3781, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3782, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3783, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3784, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3785, tvb, (offset * 8) + 2, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3786, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3787, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3788, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3789, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3790, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3791, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3792, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3793, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3794, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3795, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3796, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3797
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_3798
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3799
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //136 expand_var_3800
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_3801
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //135 expand_var_3802
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_3803
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3804
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_3805
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_3806
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3807
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_3808
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //510 expand_var_3809
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_3810
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3811
{
  return dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 62);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_20_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_3813
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_62_ed_major_1_ed_minor_20_uap_table_expand[] = {
  &expand_var_3716, //010
  NULL,
  &expand_var_3717, //015
  &expand_var_3718, //070
  &expand_var_3719, //105
  &expand_var_3720, //100
  &expand_var_3721, //185
  &expand_var_3722, //210
  &expand_var_3723, //060
  &expand_var_3724, //245
  &expand_var_3725, //380
  &expand_var_3754, //040
  &expand_var_3755, //080
  &expand_var_3797, //290
  &expand_var_3798, //200
  &expand_var_3799, //295
  &expand_var_3800, //136
  &expand_var_3801, //130
  &expand_var_3802, //135
  &expand_var_3803, //220
  &expand_var_3804, //390
  &expand_var_3805, //270
  &expand_var_3806, //300
  &expand_var_3807, //110
  &expand_var_3808, //120
  &expand_var_3809, //510
  &expand_var_3810, //500
  &expand_var_3811, //340
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_3812, //RE
  &expand_var_3813, //S
};
static const ttt cat_62_ed_major_1_ed_minor_20_uap_table[] = {
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_0_uap, //010
  NULL,
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_2_uap, //015
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_3_uap, //070
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_4_uap, //105
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_5_uap, //100
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_6_uap, //185
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_7_uap, //210
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_8_uap, //060
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_9_uap, //245
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_uap, //380
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_11_uap, //040
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_12_uap, //080
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_13_uap, //290
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_14_uap, //200
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_15_uap, //295
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_16_uap, //136
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_17_uap, //130
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_18_uap, //135
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_19_uap, //220
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_20_uap, //390
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_21_uap, //270
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_22_uap, //300
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_23_uap, //110
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_24_uap, //120
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_25_uap, //510
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_26_uap, //500
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_27_uap, //340
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_33_uap, //RE
  &dissect_cat_62_ed_major_1_ed_minor_20_datafield_34_uap, //S
};
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_3814
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_3815
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_3816
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //105 expand_var_3817
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3818 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  int value_expand_var_3818_s = get_signed_int(value_expand_var_3818, 32);
  double value_expand_var_3818_d = (double)value_expand_var_3818_s * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_3818, tvb, offset + 0, 4, value_expand_var_3818_d);
  unsigned int value_expand_var_3819 = asterix_get_unsigned_value (tvb, offset + 4, 4);
  int value_expand_var_3819_s = get_signed_int(value_expand_var_3819, 32);
  double value_expand_var_3819_d = (double)value_expand_var_3819_s * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_3819, tvb, offset + 4, 4, value_expand_var_3819_d);
  return 8;
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_3820
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3821 = asterix_get_unsigned_value (tvb, offset + 0, 3);
  int value_expand_var_3821_s = get_signed_int(value_expand_var_3821, 24);
  double value_expand_var_3821_d = (double)value_expand_var_3821_s * 0.5;
  proto_tree_add_double (tree_group_0, expand_var_3821, tvb, offset + 0, 3, value_expand_var_3821_d);
  unsigned int value_expand_var_3822 = asterix_get_unsigned_value (tvb, offset + 3, 3);
  int value_expand_var_3822_s = get_signed_int(value_expand_var_3822, 24);
  double value_expand_var_3822_d = (double)value_expand_var_3822_s * 0.5;
  proto_tree_add_double (tree_group_0, expand_var_3822, tvb, offset + 3, 3, value_expand_var_3822_d);
  return 6;
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //185 expand_var_3823
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_3824
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_3825
{
  return dissect_cat_62_ed_major_1_ed_minor_17_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //245 expand_var_3826
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_9_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //380 expand_var_3827
{
  return dissect_cat_62_ed_major_1_ed_minor_20_datafield_10_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_3828
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_3829
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_3830, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3831, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3832, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3833, tvb, (offset * 8) + 3, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3834, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3835, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3836, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3837, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3838, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3839, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3840, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3841, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3842, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3843, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3844, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3845, tvb, (offset * 8) + 1, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3846, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3847, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3848, tvb, (offset * 8) + 5, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3849, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3850, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3851, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3852, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3853, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3854, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3855, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3856, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3857, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3858, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3859, tvb, (offset * 8) + 2, 3, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3860, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3861, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3862, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3863, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3864, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3865, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3866, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3867, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3868, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3869, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3870, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3871, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_6_1 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 1, 6, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 1, 6, spare_item_6_1);
  proto_tree_add_bits_item(datablock_tree, expand_var_3872, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //290 expand_var_3873
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_3874
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_14_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1865_compound_1865(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3876
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1866_compound_1866(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3877
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1867_compound_1867(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3878
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1868_compound_1868(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3879
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1869_compound_1869(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3880
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1870_compound_1870(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3881
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1871_compound_1871(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3882
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1872_compound_1872(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3883
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1873_compound_1873(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3884
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1874_compound_1874(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3885
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1875_compound_1875(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3886
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1876_compound_1876(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3887
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1877_compound_1877(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3888
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1878_compound_1878(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3889
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1879_compound_1879(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3890
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1880_compound_1880(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3891
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1881_compound_1881(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3892
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1882_compound_1882(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3893
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1883_compound_1883(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3894
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1884_compound_1884(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3895
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1885_compound_1885(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3896
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1886_compound_1886(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3897
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1887_compound_1887(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3898
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1888_compound_1888(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3899
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1889_compound_1889(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3900
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1890_compound_1890(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3901
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1891_compound_1891(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3902
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_2046_compound_2046(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3903
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1893_compound_1893(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3904
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1894_compound_1894(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3905
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1895_compound_1895(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3906
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_13_431_compound_431(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //295 expand_var_3875
{
  unsigned offset_start = offset;
  unsigned fspec_len = asterix_fspec_len (tvb, offset);
  proto_item *ti = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *asterix_packet_tree = proto_item_add_subtree (ti, ett_asterix_subtree);
  asterix_dissect_fspec (tvb, offset, asterix_packet_tree);
  offset += fspec_len;
  if (!asterix_fspec_check (fspec_len, 31, ti))
  {
    return -1;
  }
  if (asterix_field_exists (tvb, offset_start, 0))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1865_compound_1865(tvb, offset, asterix_packet_tree, expand_var_3876);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 1))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1866_compound_1866(tvb, offset, asterix_packet_tree, expand_var_3877);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 2))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1867_compound_1867(tvb, offset, asterix_packet_tree, expand_var_3878);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 3))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1868_compound_1868(tvb, offset, asterix_packet_tree, expand_var_3879);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 4))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1869_compound_1869(tvb, offset, asterix_packet_tree, expand_var_3880);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 5))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1870_compound_1870(tvb, offset, asterix_packet_tree, expand_var_3881);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 6))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1871_compound_1871(tvb, offset, asterix_packet_tree, expand_var_3882);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 7))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 8))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1872_compound_1872(tvb, offset, asterix_packet_tree, expand_var_3883);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 9))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1873_compound_1873(tvb, offset, asterix_packet_tree, expand_var_3884);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 10))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1874_compound_1874(tvb, offset, asterix_packet_tree, expand_var_3885);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 11))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1875_compound_1875(tvb, offset, asterix_packet_tree, expand_var_3886);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 12))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1876_compound_1876(tvb, offset, asterix_packet_tree, expand_var_3887);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 13))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1877_compound_1877(tvb, offset, asterix_packet_tree, expand_var_3888);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 14))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1878_compound_1878(tvb, offset, asterix_packet_tree, expand_var_3889);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 15))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 16))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1879_compound_1879(tvb, offset, asterix_packet_tree, expand_var_3890);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 17))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1880_compound_1880(tvb, offset, asterix_packet_tree, expand_var_3891);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 18))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1881_compound_1881(tvb, offset, asterix_packet_tree, expand_var_3892);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 19))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1882_compound_1882(tvb, offset, asterix_packet_tree, expand_var_3893);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 20))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1883_compound_1883(tvb, offset, asterix_packet_tree, expand_var_3894);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 21))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1884_compound_1884(tvb, offset, asterix_packet_tree, expand_var_3895);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 22))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1885_compound_1885(tvb, offset, asterix_packet_tree, expand_var_3896);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 23))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 24))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1886_compound_1886(tvb, offset, asterix_packet_tree, expand_var_3897);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 25))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1887_compound_1887(tvb, offset, asterix_packet_tree, expand_var_3898);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 26))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1888_compound_1888(tvb, offset, asterix_packet_tree, expand_var_3899);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 27))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1889_compound_1889(tvb, offset, asterix_packet_tree, expand_var_3900);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 28))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1890_compound_1890(tvb, offset, asterix_packet_tree, expand_var_3901);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 29))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1891_compound_1891(tvb, offset, asterix_packet_tree, expand_var_3902);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 30))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_2046_compound_2046(tvb, offset, asterix_packet_tree, expand_var_3903);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (!asterix_field_exists (tvb, offset_start, 31))
  {
    goto end;
  }
  if (asterix_field_exists (tvb, offset_start, 32))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1893_compound_1893(tvb, offset, asterix_packet_tree, expand_var_3904);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 33))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1894_compound_1894(tvb, offset, asterix_packet_tree, expand_var_3905);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
  if (asterix_field_exists (tvb, offset_start, 34))
  {
    int fun_len = dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_1895_compound_1895(tvb, offset, asterix_packet_tree, expand_var_3906);
    if (fun_len == -1) {
      return -1;
    }
    offset += fun_len;
  }
end:
  proto_item_set_len(ti, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //136 expand_var_3907
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_3908
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_17_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //135 expand_var_3909
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_3910
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_13_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //390 expand_var_3911
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //270 expand_var_3912
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_18_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //300 expand_var_3913
{
  return dissect_cat_10_ed_major_1_ed_minor_1_datafield_15_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_3914
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_23_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_3915
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_24_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //510 expand_var_3916
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_25_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //500 expand_var_3917
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_26_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //340 expand_var_3918
{
  return dissect_cat_62_ed_major_1_ed_minor_19_datafield_27_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_33_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset++, len, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  offset+=asterix_parse_re_field (tvb, offset, sub_tree, 1, 62);
  return offset - offset_start;
}
static int dissect_cat_62_ed_major_1_ed_minor_21_datafield_34_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_3920
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_62_ed_major_1_ed_minor_21_uap_table_expand[] = {
  &expand_var_3814, //010
  NULL,
  &expand_var_3815, //015
  &expand_var_3816, //070
  &expand_var_3817, //105
  &expand_var_3820, //100
  &expand_var_3823, //185
  &expand_var_3824, //210
  &expand_var_3825, //060
  &expand_var_3826, //245
  &expand_var_3827, //380
  &expand_var_3828, //040
  &expand_var_3829, //080
  &expand_var_3873, //290
  &expand_var_3874, //200
  &expand_var_3875, //295
  &expand_var_3907, //136
  &expand_var_3908, //130
  &expand_var_3909, //135
  &expand_var_3910, //220
  &expand_var_3911, //390
  &expand_var_3912, //270
  &expand_var_3913, //300
  &expand_var_3914, //110
  &expand_var_3915, //120
  &expand_var_3916, //510
  &expand_var_3917, //500
  &expand_var_3918, //340
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_3919, //RE
  &expand_var_3920, //S
};
static const ttt cat_62_ed_major_1_ed_minor_21_uap_table[] = {
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_0_uap, //010
  NULL,
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_2_uap, //015
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_3_uap, //070
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_4_uap, //105
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_5_uap, //100
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_6_uap, //185
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_7_uap, //210
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_8_uap, //060
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_9_uap, //245
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_10_uap, //380
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_11_uap, //040
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_12_uap, //080
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_13_uap, //290
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_14_uap, //200
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_15_uap, //295
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_16_uap, //136
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_17_uap, //130
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_18_uap, //135
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_19_uap, //220
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_20_uap, //390
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_21_uap, //270
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_22_uap, //300
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_23_uap, //110
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_24_uap, //120
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_25_uap, //510
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_26_uap, //500
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_27_uap, //340
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_33_uap, //RE
  &dissect_cat_62_ed_major_1_ed_minor_21_datafield_34_uap, //S
};
static int dissect_cat_63_ed_major_1_ed_minor_6_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_3921
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_63_ed_major_1_ed_minor_6_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_3922
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_63_ed_major_1_ed_minor_6_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_3923
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_63_ed_major_1_ed_minor_6_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_3924
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_63_ed_major_1_ed_minor_6_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_3925
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_3926, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3927, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3928, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3929, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3930, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3931, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3932, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3933, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3934, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3935, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3936, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3937, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3938, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_1_6 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 6, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 1, spare_item_1_6);
  proto_tree_add_bits_item(datablock_tree, expand_var_3939, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_63_ed_major_1_ed_minor_6_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_3940
{
  int value_expand_var = asterix_get_signed_value (tvb, offset + 0, 2);
  proto_tree_add_int (tree, expand_var, tvb, offset + 0, 2, value_expand_var);
  return 2;
}
static int dissect_cat_63_ed_major_1_ed_minor_6_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_3941
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3942 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_3942_s = get_signed_int(value_expand_var_3942, 16);
  double value_expand_var_3942_d = (double)value_expand_var_3942_s * 1e-05;
  proto_tree_add_double (tree_group_0, expand_var_3942, tvb, offset + 0, 2, value_expand_var_3942_d);
  unsigned int value_expand_var_3943 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_3943_s = get_signed_int(value_expand_var_3943, 16);
  double value_expand_var_3943_d = (double)value_expand_var_3943_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_3943, tvb, offset + 2, 2, value_expand_var_3943_d);
  return 4;
}
static int dissect_cat_63_ed_major_1_ed_minor_6_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //081 expand_var_3944
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 0.0054931640625;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_63_ed_major_1_ed_minor_6_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_3945
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3946 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_3946_s = get_signed_int(value_expand_var_3946, 16);
  double value_expand_var_3946_d = (double)value_expand_var_3946_s * 1e-05;
  proto_tree_add_double (tree_group_0, expand_var_3946, tvb, offset + 0, 2, value_expand_var_3946_d);
  unsigned int value_expand_var_3947 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_3947_s = get_signed_int(value_expand_var_3947, 16);
  double value_expand_var_3947_d = (double)value_expand_var_3947_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_3947, tvb, offset + 2, 2, value_expand_var_3947_d);
  return 4;
}
static int dissect_cat_63_ed_major_1_ed_minor_6_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //091 expand_var_3948
{
  return dissect_cat_63_ed_major_1_ed_minor_6_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_63_ed_major_1_ed_minor_6_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //092 expand_var_3949
{
  return dissect_cat_63_ed_major_1_ed_minor_6_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_63_ed_major_1_ed_minor_6_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_63_ed_major_1_ed_minor_6_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_3951
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_63_ed_major_1_ed_minor_6_uap_table_expand[] = {
  &expand_var_3921, //010
  &expand_var_3922, //015
  &expand_var_3923, //030
  &expand_var_3924, //050
  &expand_var_3925, //060
  &expand_var_3940, //070
  &expand_var_3941, //080
  &expand_var_3944, //081
  &expand_var_3945, //090
  &expand_var_3948, //091
  &expand_var_3949, //092
  NULL,
  &expand_var_3950, //RE
  &expand_var_3951, //S
};
static const ttt cat_63_ed_major_1_ed_minor_6_uap_table[] = {
  &dissect_cat_63_ed_major_1_ed_minor_6_datafield_0_uap, //010
  &dissect_cat_63_ed_major_1_ed_minor_6_datafield_1_uap, //015
  &dissect_cat_63_ed_major_1_ed_minor_6_datafield_2_uap, //030
  &dissect_cat_63_ed_major_1_ed_minor_6_datafield_3_uap, //050
  &dissect_cat_63_ed_major_1_ed_minor_6_datafield_4_uap, //060
  &dissect_cat_63_ed_major_1_ed_minor_6_datafield_5_uap, //070
  &dissect_cat_63_ed_major_1_ed_minor_6_datafield_6_uap, //080
  &dissect_cat_63_ed_major_1_ed_minor_6_datafield_7_uap, //081
  &dissect_cat_63_ed_major_1_ed_minor_6_datafield_8_uap, //090
  &dissect_cat_63_ed_major_1_ed_minor_6_datafield_9_uap, //091
  &dissect_cat_63_ed_major_1_ed_minor_6_datafield_10_uap, //092
  NULL,
  &dissect_cat_63_ed_major_1_ed_minor_6_datafield_12_uap, //RE
  &dissect_cat_63_ed_major_1_ed_minor_6_datafield_13_uap, //S
};
static int dissect_cat_63_ed_major_1_ed_minor_7_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_3952
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_63_ed_major_1_ed_minor_7_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_3953
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_63_ed_major_1_ed_minor_7_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_3954
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_63_ed_major_1_ed_minor_7_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_3955
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_63_ed_major_1_ed_minor_7_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_3956
{
  int offset_start = offset;
  proto_item *sub_tree = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *datablock_tree = proto_item_add_subtree (sub_tree, ett_asterix_subtree);
  proto_tree_add_bits_item(datablock_tree, expand_var_3957, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3958, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3959, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3960, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3961, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3962, tvb, (offset * 8) + 6, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3963, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3964, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3965, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3966, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3967, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3968, tvb, (offset * 8) + 4, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3969, tvb, (offset * 8) + 5, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_1_6 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 6, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 6, 1, spare_item_1_6);
  proto_tree_add_bits_item(datablock_tree, expand_var_3970, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  if (asterix_extended_end(tvb, offset))
  {
    offset+=1;
    goto end;
  }
  offset+=1;
  proto_tree_add_bits_item(datablock_tree, expand_var_3971, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3972, tvb, (offset * 8) + 1, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3973, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(datablock_tree, expand_var_3974, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_2_4 = proto_tree_add_bits_item(datablock_tree, hf_asterix_spare, tvb, (offset * 8) + 4, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 4, 3, spare_item_2_4);
  proto_tree_add_bits_item(datablock_tree, expand_var_3975, tvb, (offset * 8) + 7, 1, ENC_BIG_ENDIAN);
  offset+=1;
end:
  proto_item_set_len(sub_tree, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_63_ed_major_1_ed_minor_7_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_3976
{
  int value_expand_var = asterix_get_signed_value (tvb, offset + 0, 2);
  proto_tree_add_int (tree, expand_var, tvb, offset + 0, 2, value_expand_var);
  return 2;
}
static int dissect_cat_63_ed_major_1_ed_minor_7_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_3977
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3978 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_3978_s = get_signed_int(value_expand_var_3978, 16);
  double value_expand_var_3978_d = (double)value_expand_var_3978_s * 1e-05;
  proto_tree_add_double (tree_group_0, expand_var_3978, tvb, offset + 0, 2, value_expand_var_3978_d);
  unsigned int value_expand_var_3979 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_3979_s = get_signed_int(value_expand_var_3979, 16);
  double value_expand_var_3979_d = (double)value_expand_var_3979_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_3979, tvb, offset + 2, 2, value_expand_var_3979_d);
  return 4;
}
static int dissect_cat_63_ed_major_1_ed_minor_7_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //081 expand_var_3980
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 0.0054931640625;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_63_ed_major_1_ed_minor_7_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_3981
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_3982 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_3982_s = get_signed_int(value_expand_var_3982, 16);
  double value_expand_var_3982_d = (double)value_expand_var_3982_s * 1e-05;
  proto_tree_add_double (tree_group_0, expand_var_3982, tvb, offset + 0, 2, value_expand_var_3982_d);
  unsigned int value_expand_var_3983 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_3983_s = get_signed_int(value_expand_var_3983, 16);
  double value_expand_var_3983_d = (double)value_expand_var_3983_s * 0.0078125;
  proto_tree_add_double (tree_group_0, expand_var_3983, tvb, offset + 2, 2, value_expand_var_3983_d);
  return 4;
}
static int dissect_cat_63_ed_major_1_ed_minor_7_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //091 expand_var_3984
{
  return dissect_cat_63_ed_major_1_ed_minor_7_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_63_ed_major_1_ed_minor_7_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //092 expand_var_3985
{
  return dissect_cat_63_ed_major_1_ed_minor_7_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_63_ed_major_1_ed_minor_7_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_63_ed_major_1_ed_minor_7_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_3987
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_63_ed_major_1_ed_minor_7_uap_table_expand[] = {
  &expand_var_3952, //010
  &expand_var_3953, //015
  &expand_var_3954, //030
  &expand_var_3955, //050
  &expand_var_3956, //060
  &expand_var_3976, //070
  &expand_var_3977, //080
  &expand_var_3980, //081
  &expand_var_3981, //090
  &expand_var_3984, //091
  &expand_var_3985, //092
  NULL,
  &expand_var_3986, //RE
  &expand_var_3987, //S
};
static const ttt cat_63_ed_major_1_ed_minor_7_uap_table[] = {
  &dissect_cat_63_ed_major_1_ed_minor_7_datafield_0_uap, //010
  &dissect_cat_63_ed_major_1_ed_minor_7_datafield_1_uap, //015
  &dissect_cat_63_ed_major_1_ed_minor_7_datafield_2_uap, //030
  &dissect_cat_63_ed_major_1_ed_minor_7_datafield_3_uap, //050
  &dissect_cat_63_ed_major_1_ed_minor_7_datafield_4_uap, //060
  &dissect_cat_63_ed_major_1_ed_minor_7_datafield_5_uap, //070
  &dissect_cat_63_ed_major_1_ed_minor_7_datafield_6_uap, //080
  &dissect_cat_63_ed_major_1_ed_minor_7_datafield_7_uap, //081
  &dissect_cat_63_ed_major_1_ed_minor_7_datafield_8_uap, //090
  &dissect_cat_63_ed_major_1_ed_minor_7_datafield_9_uap, //091
  &dissect_cat_63_ed_major_1_ed_minor_7_datafield_10_uap, //092
  NULL,
  &dissect_cat_63_ed_major_1_ed_minor_7_datafield_12_uap, //RE
  &dissect_cat_63_ed_major_1_ed_minor_7_datafield_13_uap, //S
};
static int dissect_cat_65_ed_major_1_ed_minor_4_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_3988
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_4_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_3989
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_65_ed_major_1_ed_minor_4_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_3990
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_4_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_3991
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_4_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_3992
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_1083_compound_1083(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_4_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_3993
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_3994, tvb, (offset * 8) + 0, 2, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3995, tvb, (offset * 8) + 2, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3996, tvb, (offset * 8) + 3, 1, ENC_BIG_ENDIAN);
  proto_tree_add_bits_item(tree_group_0, expand_var_3997, tvb, (offset * 8) + 4, 2, ENC_BIG_ENDIAN);
  unsigned int value_expand_var_3998 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_3998 = value_expand_var_3998 >> 1;
  value_expand_var_3998 = value_expand_var_3998 & 0b0000001;
  proto_tree_add_uint (tree_group_0, expand_var_3998, tvb, offset + 0, 1, value_expand_var_3998);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  return 1;
}
static int dissect_cat_65_ed_major_1_ed_minor_4_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_3999
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_65_ed_major_1_ed_minor_4_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_65_ed_major_1_ed_minor_4_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_4001
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_65_ed_major_1_ed_minor_4_uap_table_expand[] = {
  &expand_var_3988, //010
  &expand_var_3989, //000
  &expand_var_3990, //015
  &expand_var_3991, //030
  &expand_var_3992, //020
  &expand_var_3993, //040
  &expand_var_3999, //050
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_4000, //RE
  &expand_var_4001, //S
};
static const ttt cat_65_ed_major_1_ed_minor_4_uap_table[] = {
  &dissect_cat_65_ed_major_1_ed_minor_4_datafield_0_uap, //010
  &dissect_cat_65_ed_major_1_ed_minor_4_datafield_1_uap, //000
  &dissect_cat_65_ed_major_1_ed_minor_4_datafield_2_uap, //015
  &dissect_cat_65_ed_major_1_ed_minor_4_datafield_3_uap, //030
  &dissect_cat_65_ed_major_1_ed_minor_4_datafield_4_uap, //020
  &dissect_cat_65_ed_major_1_ed_minor_4_datafield_5_uap, //040
  &dissect_cat_65_ed_major_1_ed_minor_4_datafield_6_uap, //050
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_65_ed_major_1_ed_minor_4_datafield_12_uap, //RE
  &dissect_cat_65_ed_major_1_ed_minor_4_datafield_13_uap, //S
};
static int dissect_cat_65_ed_major_1_ed_minor_5_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_4002
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_5_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_4003
{
  return dissect_cat_65_ed_major_1_ed_minor_4_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_5_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_4004
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_5_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_4005
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_5_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_4006
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_1083_compound_1083(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_5_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_4007
{
  return dissect_cat_65_ed_major_1_ed_minor_4_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_5_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_4008
{
  return dissect_cat_65_ed_major_1_ed_minor_4_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_5_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_65_ed_major_1_ed_minor_5_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_4010
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_65_ed_major_1_ed_minor_5_uap_table_expand[] = {
  &expand_var_4002, //010
  &expand_var_4003, //000
  &expand_var_4004, //015
  &expand_var_4005, //030
  &expand_var_4006, //020
  &expand_var_4007, //040
  &expand_var_4008, //050
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_4009, //RE
  &expand_var_4010, //S
};
static const ttt cat_65_ed_major_1_ed_minor_5_uap_table[] = {
  &dissect_cat_65_ed_major_1_ed_minor_5_datafield_0_uap, //010
  &dissect_cat_65_ed_major_1_ed_minor_5_datafield_1_uap, //000
  &dissect_cat_65_ed_major_1_ed_minor_5_datafield_2_uap, //015
  &dissect_cat_65_ed_major_1_ed_minor_5_datafield_3_uap, //030
  &dissect_cat_65_ed_major_1_ed_minor_5_datafield_4_uap, //020
  &dissect_cat_65_ed_major_1_ed_minor_5_datafield_5_uap, //040
  &dissect_cat_65_ed_major_1_ed_minor_5_datafield_6_uap, //050
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_65_ed_major_1_ed_minor_5_datafield_12_uap, //RE
  &dissect_cat_65_ed_major_1_ed_minor_5_datafield_13_uap, //S
};
static int dissect_cat_65_ed_major_1_ed_minor_6_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_4011
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_6_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_4012
{
  return dissect_cat_65_ed_major_1_ed_minor_4_datafield_1_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_6_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_4013
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_6_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_4014
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_6_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_4015
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_22_1083_compound_1083(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_6_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_4016
{
  return dissect_cat_65_ed_major_1_ed_minor_4_datafield_5_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_6_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_4017
{
  return dissect_cat_65_ed_major_1_ed_minor_4_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_65_ed_major_1_ed_minor_6_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_65_ed_major_1_ed_minor_6_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_4019
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_65_ed_major_1_ed_minor_6_uap_table_expand[] = {
  &expand_var_4011, //010
  &expand_var_4012, //000
  &expand_var_4013, //015
  &expand_var_4014, //030
  &expand_var_4015, //020
  &expand_var_4016, //040
  &expand_var_4017, //050
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &expand_var_4018, //RE
  &expand_var_4019, //S
};
static const ttt cat_65_ed_major_1_ed_minor_6_uap_table[] = {
  &dissect_cat_65_ed_major_1_ed_minor_6_datafield_0_uap, //010
  &dissect_cat_65_ed_major_1_ed_minor_6_datafield_1_uap, //000
  &dissect_cat_65_ed_major_1_ed_minor_6_datafield_2_uap, //015
  &dissect_cat_65_ed_major_1_ed_minor_6_datafield_3_uap, //030
  &dissect_cat_65_ed_major_1_ed_minor_6_datafield_4_uap, //020
  &dissect_cat_65_ed_major_1_ed_minor_6_datafield_5_uap, //040
  &dissect_cat_65_ed_major_1_ed_minor_6_datafield_6_uap, //050
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  &dissect_cat_65_ed_major_1_ed_minor_6_datafield_12_uap, //RE
  &dissect_cat_65_ed_major_1_ed_minor_6_datafield_13_uap, //S
};
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_4020
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_4021 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree_group_0, expand_var_4021, tvb, offset + 0, 1, value_expand_var_4021);
  unsigned int value_expand_var_4022 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_4022, tvb, offset + 1, 1, value_expand_var_4022);
  return 2;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_4023
{
  return dissect_cat_150_ed_major_3_ed_minor_0_datafield_0_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_4024
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_4025
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_4026
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_4027
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_4028
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_4029
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_4030
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_4031
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_4032 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_4032 = value_expand_var_4032 >> 7;
  proto_tree_add_uint (tree_group_0, expand_var_4032, tvb, offset + 0, 1, value_expand_var_4032);
  unsigned int value_expand_var_4033 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_4033 = value_expand_var_4033 >> 6;
  value_expand_var_4033 = value_expand_var_4033 & 0b01;
  proto_tree_add_uint (tree_group_0, expand_var_4033, tvb, offset + 0, 1, value_expand_var_4033);
  proto_item *spare_item_2 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 2, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 2, 3, spare_item_2);
  unsigned int value_expand_var_4034 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_4034 = value_expand_var_4034 >> 2;
  value_expand_var_4034 = value_expand_var_4034 & 0b000001;
  proto_tree_add_uint (tree_group_0, expand_var_4034, tvb, offset + 0, 1, value_expand_var_4034);
  unsigned int value_expand_var_4035 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_4035 = value_expand_var_4035 >> 1;
  value_expand_var_4035 = value_expand_var_4035 & 0b0000001;
  proto_tree_add_uint (tree_group_0, expand_var_4035, tvb, offset + 0, 1, value_expand_var_4035);
  proto_item *spare_item_7 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 7, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 7, 1, spare_item_7);
  return 1;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_4036
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 1, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_item *spare_item_0 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 0, 1, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 0, 1, spare_item_0);
  unsigned int value_expand_var_4037 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_4037 = value_expand_var_4037 >> 6;
  value_expand_var_4037 = value_expand_var_4037 & 0b01;
  proto_tree_add_uint (tree_group_0, expand_var_4037, tvb, offset + 0, 1, value_expand_var_4037);
  unsigned int value_expand_var_4038 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_4038 = value_expand_var_4038 >> 5;
  value_expand_var_4038 = value_expand_var_4038 & 0b001;
  proto_tree_add_uint (tree_group_0, expand_var_4038, tvb, offset + 0, 1, value_expand_var_4038);
  unsigned int value_expand_var_4039 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_4039 = value_expand_var_4039 >> 4;
  value_expand_var_4039 = value_expand_var_4039 & 0b0001;
  proto_tree_add_uint (tree_group_0, expand_var_4039, tvb, offset + 0, 1, value_expand_var_4039);
  unsigned int value_expand_var_4040 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  value_expand_var_4040 = value_expand_var_4040 >> 3;
  value_expand_var_4040 = value_expand_var_4040 & 0b00001;
  proto_tree_add_uint (tree_group_0, expand_var_4040, tvb, offset + 0, 1, value_expand_var_4040);
  proto_item *spare_item_5 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 5, 3, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 5, 3, spare_item_5);
  return 1;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_4041
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 7, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_item(tree_group_0, expand_var_4042, tvb, offset + 0, 2, ENC_ASCII | ENC_NA);
  proto_tree_add_item(tree_group_0, expand_var_4043, tvb, offset + 2, 4, ENC_ASCII | ENC_NA);
  proto_tree_add_item(tree_group_0, expand_var_4044, tvb, offset + 6, 1, ENC_ASCII | ENC_NA);
  return 7;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_4045
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_482_compound_482(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_13_rep55(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_4047
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 12, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_4048, tvb, (offset * 8) + 0, 8, ENC_BIG_ENDIAN);
  proto_tree_add_item(tree_group_0, expand_var_4049, tvb, offset + 1, 11, ENC_ASCII | ENC_NA);
  return 12;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_4046
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_150_ed_major_3_ed_minor_0_datafield_13_rep55(tvb, offset, sub_tree, expand_var_4047);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_14_rep56(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_4051
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_4052 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_4052_s = get_signed_int(value_expand_var_4052, 16);
  double value_expand_var_4052_d = (double)value_expand_var_4052_s * 0.015625;
  proto_tree_add_double (tree_group_0, expand_var_4052, tvb, offset + 0, 2, value_expand_var_4052_d);
  unsigned int value_expand_var_4053 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  int value_expand_var_4053_s = get_signed_int(value_expand_var_4053, 16);
  double value_expand_var_4053_d = (double)value_expand_var_4053_s * 0.015625;
  proto_tree_add_double (tree_group_0, expand_var_4053, tvb, offset + 2, 2, value_expand_var_4053_d);
  return 4;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_4050
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_150_ed_major_3_ed_minor_0_datafield_14_rep56(tvb, offset, sub_tree, expand_var_4051);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_15_rep57(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //160 expand_var_4055
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_item(tree_group_0, expand_var_4056, tvb, offset + 0, 2, ENC_ASCII | ENC_NA);
  proto_tree_add_item(tree_group_0, expand_var_4057, tvb, offset + 2, 2, ENC_ASCII | ENC_NA);
  return 4;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //160 expand_var_4054
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_150_ed_major_3_ed_minor_0_datafield_15_rep57(tvb, offset, sub_tree, expand_var_4055);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_16_rep58(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_4059
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_20_482_compound_482(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_4058
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_150_ed_major_3_ed_minor_0_datafield_16_rep58(tvb, offset, sub_tree, expand_var_4059);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_17_rep59(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //180 expand_var_4061
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_10_461_compound_461(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //180 expand_var_4060
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_150_ed_major_3_ed_minor_0_datafield_17_rep59(tvb, offset, sub_tree, expand_var_4061);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //190 expand_var_4062
{
  proto_tree_add_item(tree, expand_var, tvb, offset + 0, 2, ENC_ASCII | ENC_NA);
  return 2;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_19_rep60(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_4064
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_20_1986_compound_1986(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_4063
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_150_ed_major_3_ed_minor_0_datafield_19_rep60(tvb, offset, sub_tree, expand_var_4064);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //210 expand_var_4065
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //220 expand_var_4066
{
  return dissect_cat_9_ed_major_2_ed_minor_1_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_22_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //230 expand_var_4067
{
  return dissect_cat_9_ed_major_2_ed_minor_1_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_23_rep61(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //240 expand_var_4069
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_4070 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree_group_0, expand_var_4070, tvb, offset + 0, 2, value_expand_var_4070);
  unsigned int value_expand_var_4071 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  proto_tree_add_uint (tree_group_0, expand_var_4071, tvb, offset + 2, 2, value_expand_var_4071);
  return 4;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_23_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //240 expand_var_4068
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_150_ed_major_3_ed_minor_0_datafield_23_rep61(tvb, offset, sub_tree, expand_var_4069);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_24_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //250 expand_var_4072
{
  return dissect_cat_48_ed_major_1_ed_minor_11_datafield_5_1554_compound_1554(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_25_rep62(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //251 expand_var_4074
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 4, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_4075 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree_group_0, expand_var_4075, tvb, offset + 0, 2, value_expand_var_4075);
  unsigned int value_expand_var_4076 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  proto_tree_add_uint (tree_group_0, expand_var_4076, tvb, offset + 2, 2, value_expand_var_4076);
  return 4;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_25_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //251 expand_var_4073
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_150_ed_major_3_ed_minor_0_datafield_25_rep62(tvb, offset, sub_tree, expand_var_4074);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_26_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //171 expand_var_4077
{
  return dissect_cat_150_ed_major_3_ed_minor_0_datafield_16_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_27_rep63(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //151 expand_var_4079
{
  return dissect_cat_62_ed_major_1_ed_minor_16_datafield_10_1968_compound_1968(tvb, offset, tree, expand_var);
}
static int dissect_cat_150_ed_major_3_ed_minor_0_datafield_27_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //151 expand_var_4078
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_150_ed_major_3_ed_minor_0_datafield_27_rep63(tvb, offset, sub_tree, expand_var_4079);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int* cat_150_ed_major_3_ed_minor_0_uap_table_expand[] = {
  &expand_var_4020, //010
  &expand_var_4023, //020
  &expand_var_4024, //030
  &expand_var_4025, //040
  &expand_var_4026, //050
  &expand_var_4027, //060
  &expand_var_4028, //070
  &expand_var_4029, //080
  &expand_var_4030, //090
  &expand_var_4031, //100
  &expand_var_4036, //110
  &expand_var_4041, //120
  &expand_var_4045, //130
  &expand_var_4046, //140
  &expand_var_4050, //150
  &expand_var_4054, //160
  &expand_var_4058, //170
  &expand_var_4060, //180
  &expand_var_4062, //190
  &expand_var_4063, //200
  &expand_var_4065, //210
  &expand_var_4066, //220
  &expand_var_4067, //230
  &expand_var_4068, //240
  &expand_var_4072, //250
  &expand_var_4073, //251
  &expand_var_4077, //171
  &expand_var_4078, //15
};
static const ttt cat_150_ed_major_3_ed_minor_0_uap_table[] = {
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_0_uap, //010
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_1_uap, //020
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_2_uap, //030
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_3_uap, //040
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_4_uap, //050
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_5_uap, //060
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_6_uap, //070
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_7_uap, //080
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_8_uap, //090
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_9_uap, //100
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_10_uap, //110
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_11_uap, //120
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_12_uap, //130
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_13_uap, //140
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_14_uap, //150
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_15_uap, //160
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_16_uap, //170
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_17_uap, //180
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_18_uap, //190
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_19_uap, //200
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_20_uap, //210
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_21_uap, //220
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_22_uap, //230
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_23_uap, //240
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_24_uap, //250
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_25_uap, //251
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_26_uap, //171
  &dissect_cat_150_ed_major_3_ed_minor_0_datafield_27_uap, //15
};
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_4080
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_4081
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_4082
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_4083
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_4084
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //090 expand_var_4085
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_8_206_compound_206(tvb, offset, tree, expand_var);
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_4086
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 8, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_4087 = asterix_get_unsigned_value (tvb, offset + 0, 4);
  int value_expand_var_4087_s = get_signed_int(value_expand_var_4087, 32);
  double value_expand_var_4087_d = (double)value_expand_var_4087_s * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_4087, tvb, offset + 0, 4, value_expand_var_4087_d);
  unsigned int value_expand_var_4088 = asterix_get_unsigned_value (tvb, offset + 4, 4);
  int value_expand_var_4088_s = get_signed_int(value_expand_var_4088, 32);
  double value_expand_var_4088_d = (double)value_expand_var_4088_s * 5.364418029785156e-06;
  proto_tree_add_double (tree_group_0, expand_var_4088, tvb, offset + 4, 4, value_expand_var_4088_d);
  return 8;
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //060 expand_var_4089
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 6, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_4090 = asterix_get_unsigned_value (tvb, offset + 0, 3);
  int value_expand_var_4090_s = get_signed_int(value_expand_var_4090, 24);
  double value_expand_var_4090_d = (double)value_expand_var_4090_s * 0.5;
  proto_tree_add_double (tree_group_0, expand_var_4090, tvb, offset + 0, 3, value_expand_var_4090_d);
  unsigned int value_expand_var_4091 = asterix_get_unsigned_value (tvb, offset + 3, 3);
  int value_expand_var_4091_s = get_signed_int(value_expand_var_4091, 24);
  double value_expand_var_4091_d = (double)value_expand_var_4091_s * 0.5;
  proto_tree_add_double (tree_group_0, expand_var_4091, tvb, offset + 3, 3, value_expand_var_4091_d);
  return 6;
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //070 expand_var_4092
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_d = (double)value_expand_var * 0.01;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //080 expand_var_4093
{
  return dissect_cat_205_ed_major_1_ed_minor_0_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //100 expand_var_4094
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //110 expand_var_4095
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 1);
  double value_expand_var_d = (double)value_expand_var * 100.0;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 1, value_expand_var_d);
  return 1;
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_12_rep64(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_4097
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //120 expand_var_4096
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_205_ed_major_1_ed_minor_0_datafield_12_rep64(tvb, offset, sub_tree, expand_var_4097);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //130 expand_var_4098
{
  return dissect_cat_205_ed_major_1_ed_minor_0_datafield_6_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_14_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_4099
{
  return dissect_cat_205_ed_major_1_ed_minor_0_datafield_7_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_15_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //150 expand_var_4100
{
  return dissect_cat_205_ed_major_1_ed_minor_0_datafield_11_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_16_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //160 expand_var_4101
{
  return dissect_cat_4_ed_major_1_ed_minor_12_datafield_4_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_17_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //170 expand_var_4102
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_18_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //180 expand_var_4103
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 2);
  int value_expand_var_s = get_signed_int(value_expand_var, 16);
  double value_expand_var_d = (double)value_expand_var_s * 0.01;
  proto_tree_add_double (tree, expand_var, tvb, offset + 0, 2, value_expand_var_d);
  return 2;
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_19_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //190 expand_var_4104
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_20_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //200 expand_var_4105
{
  return dissect_cat_21_ed_major_0_ed_minor_23_datafield_8_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_205_ed_major_1_ed_minor_0_datafield_21_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_4106
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_205_ed_major_1_ed_minor_0_uap_table_expand[] = {
  &expand_var_4080, //010
  &expand_var_4081, //015
  &expand_var_4082, //000
  &expand_var_4083, //030
  &expand_var_4084, //040
  &expand_var_4085, //090
  &expand_var_4086, //050
  &expand_var_4089, //060
  &expand_var_4092, //070
  &expand_var_4093, //080
  &expand_var_4094, //100
  &expand_var_4095, //110
  &expand_var_4096, //120
  &expand_var_4098, //130
  &expand_var_4099, //140
  &expand_var_4100, //150
  &expand_var_4101, //160
  &expand_var_4102, //170
  &expand_var_4103, //180
  &expand_var_4104, //190
  &expand_var_4105, //200
  &expand_var_4106, //S
};
static const ttt cat_205_ed_major_1_ed_minor_0_uap_table[] = {
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_0_uap, //010
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_1_uap, //015
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_2_uap, //000
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_3_uap, //030
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_4_uap, //040
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_5_uap, //090
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_6_uap, //050
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_7_uap, //060
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_8_uap, //070
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_9_uap, //080
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_10_uap, //100
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_11_uap, //110
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_12_uap, //120
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_13_uap, //130
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_14_uap, //140
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_15_uap, //150
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_16_uap, //160
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_17_uap, //170
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_18_uap, //180
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_19_uap, //190
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_20_uap, //200
  &dissect_cat_205_ed_major_1_ed_minor_0_datafield_21_uap, //S
};
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_4107
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //000 expand_var_4108
{
  proto_tree_add_item(tree, expand_var, tvb, offset, 1, ENC_BIG_ENDIAN);
  return 1;
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //020 expand_var_4109
{
  return dissect_cat_18_ed_major_1_ed_minor_7_datafield_6_rep24(tvb, offset, tree, expand_var);
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //030 expand_var_4110
{
  return dissect_cat_150_ed_major_3_ed_minor_0_datafield_19_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_4_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //040 expand_var_4111
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 12, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_4112 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_4112_d = (double)value_expand_var_4112 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_4112, tvb, offset + 0, 2, value_expand_var_4112_d);
  unsigned int value_expand_var_4113 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_4113_d = (double)value_expand_var_4113 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_4113, tvb, offset + 2, 2, value_expand_var_4113_d);
  unsigned int value_expand_var_4114 = asterix_get_unsigned_value (tvb, offset + 4, 4);
  proto_tree_add_uint (tree_group_0, expand_var_4114, tvb, offset + 4, 4, value_expand_var_4114);
  unsigned int value_expand_var_4115 = asterix_get_unsigned_value (tvb, offset + 8, 4);
  proto_tree_add_uint (tree_group_0, expand_var_4115, tvb, offset + 8, 4, value_expand_var_4115);
  return 12;
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //041 expand_var_4116
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 12, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_4117 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  double value_expand_var_4117_d = (double)value_expand_var_4117 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_4117, tvb, offset + 0, 2, value_expand_var_4117_d);
  unsigned int value_expand_var_4118 = asterix_get_unsigned_value (tvb, offset + 2, 2);
  double value_expand_var_4118_d = (double)value_expand_var_4118 * 0.0054931640625;
  proto_tree_add_double (tree_group_0, expand_var_4118, tvb, offset + 2, 2, value_expand_var_4118_d);
  unsigned int value_expand_var_4119 = asterix_get_unsigned_value (tvb, offset + 4, 4);
  proto_tree_add_uint (tree_group_0, expand_var_4119, tvb, offset + 4, 4, value_expand_var_4119);
  unsigned int value_expand_var_4120 = asterix_get_unsigned_value (tvb, offset + 8, 4);
  proto_tree_add_uint (tree_group_0, expand_var_4120, tvb, offset + 8, 4, value_expand_var_4120);
  return 12;
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //048 expand_var_4121
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 2, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  proto_tree_add_bits_item(tree_group_0, expand_var_4122, tvb, (offset * 8) + 0, 1, ENC_BIG_ENDIAN);
  proto_item *spare_item_1 = proto_tree_add_bits_item(tree_group_0, hf_asterix_spare, tvb, (offset * 8) + 1, 7, ENC_NA);
  check_spare_bits (tvb, (offset * 8) + 1, 7, spare_item_1);
  proto_tree_add_bits_item(tree_group_0, expand_var_4123, tvb, (offset * 8) + 8, 8, ENC_BIG_ENDIAN);
  return 2;
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_7_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //049 expand_var_4124
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 5, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_4125 = asterix_get_unsigned_value (tvb, offset + 0, 2);
  proto_tree_add_uint (tree_group_0, expand_var_4125, tvb, offset + 0, 2, value_expand_var_4125);
  unsigned int value_expand_var_4126 = asterix_get_unsigned_value (tvb, offset + 2, 3);
  proto_tree_add_uint (tree_group_0, expand_var_4126, tvb, offset + 2, 3, value_expand_var_4126);
  return 5;
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_8_rep65(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_4128
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 4);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 4, value_expand_var);
  return 4;
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_8_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //050 expand_var_4127
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_240_ed_major_1_ed_minor_3_datafield_8_rep65(tvb, offset, sub_tree, expand_var_4128);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_9_rep66(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //051 expand_var_4130
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 64);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 64, value_expand_var);
  return 64;
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_9_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //051 expand_var_4129
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_240_ed_major_1_ed_minor_3_datafield_9_rep66(tvb, offset, sub_tree, expand_var_4130);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_10_rep67(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //052 expand_var_4132
{
  unsigned int value_expand_var = asterix_get_unsigned_value (tvb, offset + 0, 256);
  proto_tree_add_uint (tree, expand_var, tvb, offset + 0, 256, value_expand_var);
  return 256;
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_10_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //052 expand_var_4131
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_240_ed_major_1_ed_minor_3_datafield_10_rep67(tvb, offset, sub_tree, expand_var_4132);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_11_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_4133
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_12_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int dissect_cat_240_ed_major_1_ed_minor_3_datafield_13_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_4135
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int* cat_240_ed_major_1_ed_minor_3_uap_table_expand[] = {
  &expand_var_4107, //010
  &expand_var_4108, //000
  &expand_var_4109, //020
  &expand_var_4110, //030
  &expand_var_4111, //040
  &expand_var_4116, //041
  &expand_var_4121, //048
  &expand_var_4124, //049
  &expand_var_4127, //050
  &expand_var_4129, //051
  &expand_var_4131, //052
  &expand_var_4133, //140
  &expand_var_4134, //RE
  &expand_var_4135, //S
};
static const ttt cat_240_ed_major_1_ed_minor_3_uap_table[] = {
  &dissect_cat_240_ed_major_1_ed_minor_3_datafield_0_uap, //010
  &dissect_cat_240_ed_major_1_ed_minor_3_datafield_1_uap, //000
  &dissect_cat_240_ed_major_1_ed_minor_3_datafield_2_uap, //020
  &dissect_cat_240_ed_major_1_ed_minor_3_datafield_3_uap, //030
  &dissect_cat_240_ed_major_1_ed_minor_3_datafield_4_uap, //040
  &dissect_cat_240_ed_major_1_ed_minor_3_datafield_5_uap, //041
  &dissect_cat_240_ed_major_1_ed_minor_3_datafield_6_uap, //048
  &dissect_cat_240_ed_major_1_ed_minor_3_datafield_7_uap, //049
  &dissect_cat_240_ed_major_1_ed_minor_3_datafield_8_uap, //050
  &dissect_cat_240_ed_major_1_ed_minor_3_datafield_9_uap, //051
  &dissect_cat_240_ed_major_1_ed_minor_3_datafield_10_uap, //052
  &dissect_cat_240_ed_major_1_ed_minor_3_datafield_11_uap, //140
  &dissect_cat_240_ed_major_1_ed_minor_3_datafield_12_uap, //RE
  &dissect_cat_240_ed_major_1_ed_minor_3_datafield_13_uap, //S
};
static int dissect_cat_247_ed_major_1_ed_minor_2_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_4136
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_247_ed_major_1_ed_minor_2_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_4137
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_247_ed_major_1_ed_minor_2_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_4138
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_247_ed_major_1_ed_minor_2_datafield_3_rep68(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //550 expand_var_4140
{
  proto_item *tree_group_item_0 = proto_tree_add_item (tree, expand_var, tvb, offset + 0, 3, ENC_NA);
  proto_tree *tree_group_0 = proto_item_add_subtree (tree_group_item_0, ett_asterix_subtree);
  unsigned int value_expand_var_4141 = asterix_get_unsigned_value (tvb, offset + 0, 1);
  proto_tree_add_uint (tree_group_0, expand_var_4141, tvb, offset + 0, 1, value_expand_var_4141);
  unsigned int value_expand_var_4142 = asterix_get_unsigned_value (tvb, offset + 1, 1);
  proto_tree_add_uint (tree_group_0, expand_var_4142, tvb, offset + 1, 1, value_expand_var_4142);
  unsigned int value_expand_var_4143 = asterix_get_unsigned_value (tvb, offset + 2, 1);
  proto_tree_add_uint (tree_group_0, expand_var_4143, tvb, offset + 2, 1, value_expand_var_4143);
  return 3;
}
static int dissect_cat_247_ed_major_1_ed_minor_2_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //550 expand_var_4139
{
  int fun_len;
  unsigned offset_start = offset;
  proto_item *item = proto_tree_add_item (tree, expand_var, tvb, offset, 0, ENC_NA);
  proto_tree *sub_tree = proto_item_add_subtree (item, ett_asterix_subtree);
  proto_tree_add_item (sub_tree, hf_asterix_counter, tvb, offset_start, 1, ENC_BIG_ENDIAN);
  unsigned repetitive_length = asterix_get_unsigned_value(tvb, offset, 1);
  offset+=1;
  for (unsigned i = 0; i < repetitive_length; i++)
  {
    fun_len = dissect_cat_247_ed_major_1_ed_minor_2_datafield_3_rep68(tvb, offset, sub_tree, expand_var_4140);
    if (fun_len == -1) {
      return -1;
    };
    offset += fun_len;
  }
  proto_item_set_len(item, offset - offset_start);
  return offset - offset_start;
}
static int dissect_cat_247_ed_major_1_ed_minor_2_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_4144
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_247_ed_major_1_ed_minor_2_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int* cat_247_ed_major_1_ed_minor_2_uap_table_expand[] = {
  &expand_var_4136, //010
  &expand_var_4137, //015
  &expand_var_4138, //140
  &expand_var_4139, //550
  NULL,
  &expand_var_4144, //SP
  &expand_var_4145, //R
};
static const ttt cat_247_ed_major_1_ed_minor_2_uap_table[] = {
  &dissect_cat_247_ed_major_1_ed_minor_2_datafield_0_uap, //010
  &dissect_cat_247_ed_major_1_ed_minor_2_datafield_1_uap, //015
  &dissect_cat_247_ed_major_1_ed_minor_2_datafield_2_uap, //140
  &dissect_cat_247_ed_major_1_ed_minor_2_datafield_3_uap, //550
  NULL,
  &dissect_cat_247_ed_major_1_ed_minor_2_datafield_5_uap, //SP
  &dissect_cat_247_ed_major_1_ed_minor_2_datafield_6_uap, //R
};
static int dissect_cat_247_ed_major_1_ed_minor_3_datafield_0_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //010 expand_var_4146
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_0_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_247_ed_major_1_ed_minor_3_datafield_1_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //015 expand_var_4147
{
  return dissect_cat_11_ed_major_1_ed_minor_2_datafield_2_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_247_ed_major_1_ed_minor_3_datafield_2_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //140 expand_var_4148
{
  return dissect_cat_2_ed_major_1_ed_minor_0_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_247_ed_major_1_ed_minor_3_datafield_3_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //550 expand_var_4149
{
  return dissect_cat_247_ed_major_1_ed_minor_2_datafield_3_uap(tvb, offset, tree, expand_var);
}
static int dissect_cat_247_ed_major_1_ed_minor_3_datafield_5_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //SP expand_var_4150
{
  return dissect_cat_1_ed_major_1_ed_minor_2_datafield_19_plot(tvb, offset, tree, expand_var);
}
static int dissect_cat_247_ed_major_1_ed_minor_3_datafield_6_uap(tvbuff_t *tvb, unsigned offset, proto_tree *tree, int expand_var) //RE
{
  int offset_start = offset;
  unsigned len = tvb_get_uint8(tvb, offset);
  (void)tree;(void)expand_var;
  offset+=len;
  return offset - offset_start;
}
static int* cat_247_ed_major_1_ed_minor_3_uap_table_expand[] = {
  &expand_var_4146, //010
  &expand_var_4147, //015
  &expand_var_4148, //140
  &expand_var_4149, //550
  NULL,
  &expand_var_4150, //SP
  &expand_var_4151, //R
};
static const ttt cat_247_ed_major_1_ed_minor_3_uap_table[] = {
  &dissect_cat_247_ed_major_1_ed_minor_3_datafield_0_uap, //010
  &dissect_cat_247_ed_major_1_ed_minor_3_datafield_1_uap, //015
  &dissect_cat_247_ed_major_1_ed_minor_3_datafield_2_uap, //140
  &dissect_cat_247_ed_major_1_ed_minor_3_datafield_3_uap, //550
  NULL,
  &dissect_cat_247_ed_major_1_ed_minor_3_datafield_5_uap, //SP
  &dissect_cat_247_ed_major_1_ed_minor_3_datafield_6_uap, //R
};
static const enum uaps_enums_e {
  uap_1_1_2_plot,
  uap_1_1_2_track,
  uap_1_1_3_plot,
  uap_1_1_3_track,
  uap_1_1_4_plot,
  uap_1_1_4_track,
  uap_2_1_0_uap,
  uap_2_1_1_uap,
  uap_2_1_2_uap,
  uap_4_1_12_uap,
  uap_4_1_13_uap,
  uap_8_1_2_uap,
  uap_8_1_3_uap,
  uap_9_2_1_uap,
  uap_10_1_1_uap,
  uap_11_1_2_uap,
  uap_11_1_3_uap,
  uap_15_1_0_uap,
  uap_15_1_1_uap,
  uap_15_1_2_uap,
  uap_16_1_0_uap,
  uap_17_1_3_uap,
  uap_18_1_7_uap,
  uap_18_1_8_uap,
  uap_19_1_3_uap,
  uap_20_1_9_uap,
  uap_20_1_10_uap,
  uap_20_1_11_uap,
  uap_21_0_23_uap,
  uap_21_0_24_uap,
  uap_21_0_25_uap,
  uap_21_0_26_uap,
  uap_21_2_1_uap,
  uap_21_2_2_uap,
  uap_21_2_3_uap,
  uap_21_2_4_uap,
  uap_21_2_5_uap,
  uap_21_2_6_uap,
  uap_21_2_7_uap,
  uap_23_1_2_uap,
  uap_23_1_3_uap,
  uap_25_1_5_uap,
  uap_32_1_1_uap,
  uap_32_1_2_uap,
  uap_34_1_27_uap,
  uap_34_1_28_uap,
  uap_34_1_29_uap,
  uap_48_1_27_uap,
  uap_48_1_28_uap,
  uap_48_1_29_uap,
  uap_48_1_30_uap,
  uap_48_1_31_uap,
  uap_48_1_32_uap,
  uap_62_1_16_uap,
  uap_62_1_17_uap,
  uap_62_1_18_uap,
  uap_62_1_19_uap,
  uap_62_1_20_uap,
  uap_62_1_21_uap,
  uap_63_1_6_uap,
  uap_63_1_7_uap,
  uap_65_1_4_uap,
  uap_65_1_5_uap,
  uap_65_1_6_uap,
  uap_150_3_0_uap,
  uap_205_1_0_uap,
  uap_240_1_3_uap,
  uap_247_1_2_uap,
  uap_247_1_3_uap
} uaps_enums;
static void get_uap_tables(unsigned int cat, int ed, uap_table_indexes *indexes)
{
  if (cat == 1 && ed == value_1_1_2)
  {
    indexes->start_index = 0;
    indexes->end_index = 1;
  }
  else if (cat == 1 && ed == value_1_1_3)
  {
    indexes->start_index = 2;
    indexes->end_index = 3;
  }
  else if (cat == 1 && ed == value_1_1_4)
  {
    indexes->start_index = 4;
    indexes->end_index = 5;
  }
  else if (cat == 2 && ed == value_2_1_0)
  {
    indexes->start_index = 6;
    indexes->end_index = 6;
  }
  else if (cat == 2 && ed == value_2_1_1)
  {
    indexes->start_index = 7;
    indexes->end_index = 7;
  }
  else if (cat == 2 && ed == value_2_1_2)
  {
    indexes->start_index = 8;
    indexes->end_index = 8;
  }
  else if (cat == 4 && ed == value_4_1_12)
  {
    indexes->start_index = 9;
    indexes->end_index = 9;
  }
  else if (cat == 4 && ed == value_4_1_13)
  {
    indexes->start_index = 10;
    indexes->end_index = 10;
  }
  else if (cat == 8 && ed == value_8_1_2)
  {
    indexes->start_index = 11;
    indexes->end_index = 11;
  }
  else if (cat == 8 && ed == value_8_1_3)
  {
    indexes->start_index = 12;
    indexes->end_index = 12;
  }
  else if (cat == 9 && ed == value_9_2_1)
  {
    indexes->start_index = 13;
    indexes->end_index = 13;
  }
  else if (cat == 10 && ed == value_10_1_1)
  {
    indexes->start_index = 14;
    indexes->end_index = 14;
  }
  else if (cat == 11 && ed == value_11_1_2)
  {
    indexes->start_index = 15;
    indexes->end_index = 15;
  }
  else if (cat == 11 && ed == value_11_1_3)
  {
    indexes->start_index = 16;
    indexes->end_index = 16;
  }
  else if (cat == 15 && ed == value_15_1_0)
  {
    indexes->start_index = 17;
    indexes->end_index = 17;
  }
  else if (cat == 15 && ed == value_15_1_1)
  {
    indexes->start_index = 18;
    indexes->end_index = 18;
  }
  else if (cat == 15 && ed == value_15_1_2)
  {
    indexes->start_index = 19;
    indexes->end_index = 19;
  }
  else if (cat == 16 && ed == value_16_1_0)
  {
    indexes->start_index = 20;
    indexes->end_index = 20;
  }
  else if (cat == 17 && ed == value_17_1_3)
  {
    indexes->start_index = 21;
    indexes->end_index = 21;
  }
  else if (cat == 18 && ed == value_18_1_7)
  {
    indexes->start_index = 22;
    indexes->end_index = 22;
  }
  else if (cat == 18 && ed == value_18_1_8)
  {
    indexes->start_index = 23;
    indexes->end_index = 23;
  }
  else if (cat == 19 && ed == value_19_1_3)
  {
    indexes->start_index = 24;
    indexes->end_index = 24;
  }
  else if (cat == 20 && ed == value_20_1_9)
  {
    indexes->start_index = 25;
    indexes->end_index = 25;
  }
  else if (cat == 20 && ed == value_20_1_10)
  {
    indexes->start_index = 26;
    indexes->end_index = 26;
  }
  else if (cat == 20 && ed == value_20_1_11)
  {
    indexes->start_index = 27;
    indexes->end_index = 27;
  }
  else if (cat == 21 && ed == value_21_0_23)
  {
    indexes->start_index = 28;
    indexes->end_index = 28;
  }
  else if (cat == 21 && ed == value_21_0_24)
  {
    indexes->start_index = 29;
    indexes->end_index = 29;
  }
  else if (cat == 21 && ed == value_21_0_25)
  {
    indexes->start_index = 30;
    indexes->end_index = 30;
  }
  else if (cat == 21 && ed == value_21_0_26)
  {
    indexes->start_index = 31;
    indexes->end_index = 31;
  }
  else if (cat == 21 && ed == value_21_2_1)
  {
    indexes->start_index = 32;
    indexes->end_index = 32;
  }
  else if (cat == 21 && ed == value_21_2_2)
  {
    indexes->start_index = 33;
    indexes->end_index = 33;
  }
  else if (cat == 21 && ed == value_21_2_3)
  {
    indexes->start_index = 34;
    indexes->end_index = 34;
  }
  else if (cat == 21 && ed == value_21_2_4)
  {
    indexes->start_index = 35;
    indexes->end_index = 35;
  }
  else if (cat == 21 && ed == value_21_2_5)
  {
    indexes->start_index = 36;
    indexes->end_index = 36;
  }
  else if (cat == 21 && ed == value_21_2_6)
  {
    indexes->start_index = 37;
    indexes->end_index = 37;
  }
  else if (cat == 21 && ed == value_21_2_7)
  {
    indexes->start_index = 38;
    indexes->end_index = 38;
  }
  else if (cat == 23 && ed == value_23_1_2)
  {
    indexes->start_index = 39;
    indexes->end_index = 39;
  }
  else if (cat == 23 && ed == value_23_1_3)
  {
    indexes->start_index = 40;
    indexes->end_index = 40;
  }
  else if (cat == 25 && ed == value_25_1_5)
  {
    indexes->start_index = 41;
    indexes->end_index = 41;
  }
  else if (cat == 32 && ed == value_32_1_1)
  {
    indexes->start_index = 42;
    indexes->end_index = 42;
  }
  else if (cat == 32 && ed == value_32_1_2)
  {
    indexes->start_index = 43;
    indexes->end_index = 43;
  }
  else if (cat == 34 && ed == value_34_1_27)
  {
    indexes->start_index = 44;
    indexes->end_index = 44;
  }
  else if (cat == 34 && ed == value_34_1_28)
  {
    indexes->start_index = 45;
    indexes->end_index = 45;
  }
  else if (cat == 34 && ed == value_34_1_29)
  {
    indexes->start_index = 46;
    indexes->end_index = 46;
  }
  else if (cat == 48 && ed == value_48_1_27)
  {
    indexes->start_index = 47;
    indexes->end_index = 47;
  }
  else if (cat == 48 && ed == value_48_1_28)
  {
    indexes->start_index = 48;
    indexes->end_index = 48;
  }
  else if (cat == 48 && ed == value_48_1_29)
  {
    indexes->start_index = 49;
    indexes->end_index = 49;
  }
  else if (cat == 48 && ed == value_48_1_30)
  {
    indexes->start_index = 50;
    indexes->end_index = 50;
  }
  else if (cat == 48 && ed == value_48_1_31)
  {
    indexes->start_index = 51;
    indexes->end_index = 51;
  }
  else if (cat == 48 && ed == value_48_1_32)
  {
    indexes->start_index = 52;
    indexes->end_index = 52;
  }
  else if (cat == 62 && ed == value_62_1_16)
  {
    indexes->start_index = 53;
    indexes->end_index = 53;
  }
  else if (cat == 62 && ed == value_62_1_17)
  {
    indexes->start_index = 54;
    indexes->end_index = 54;
  }
  else if (cat == 62 && ed == value_62_1_18)
  {
    indexes->start_index = 55;
    indexes->end_index = 55;
  }
  else if (cat == 62 && ed == value_62_1_19)
  {
    indexes->start_index = 56;
    indexes->end_index = 56;
  }
  else if (cat == 62 && ed == value_62_1_20)
  {
    indexes->start_index = 57;
    indexes->end_index = 57;
  }
  else if (cat == 62 && ed == value_62_1_21)
  {
    indexes->start_index = 58;
    indexes->end_index = 58;
  }
  else if (cat == 63 && ed == value_63_1_6)
  {
    indexes->start_index = 59;
    indexes->end_index = 59;
  }
  else if (cat == 63 && ed == value_63_1_7)
  {
    indexes->start_index = 60;
    indexes->end_index = 60;
  }
  else if (cat == 65 && ed == value_65_1_4)
  {
    indexes->start_index = 61;
    indexes->end_index = 61;
  }
  else if (cat == 65 && ed == value_65_1_5)
  {
    indexes->start_index = 62;
    indexes->end_index = 62;
  }
  else if (cat == 65 && ed == value_65_1_6)
  {
    indexes->start_index = 63;
    indexes->end_index = 63;
  }
  else if (cat == 150 && ed == value_150_3_0)
  {
    indexes->start_index = 64;
    indexes->end_index = 64;
  }
  else if (cat == 205 && ed == value_205_1_0)
  {
    indexes->start_index = 65;
    indexes->end_index = 65;
  }
  else if (cat == 240 && ed == value_240_1_3)
  {
    indexes->start_index = 66;
    indexes->end_index = 66;
  }
  else if (cat == 247 && ed == value_247_1_2)
  {
    indexes->start_index = 67;
    indexes->end_index = 67;
  }
  else if (cat == 247 && ed == value_247_1_3)
  {
    indexes->start_index = 68;
    indexes->end_index = 68;
  }
  else
  {
    indexes->start_index = 0;
    indexes->end_index = 0;
  }
  return;
}
static void get_category_uap_table(unsigned int cat, int ed, int uap, table_params *table)
{
  if (cat == 1 && ed == value_1_1_2 && uap == uap_1_1_2_plot)
  {
    table->table_size = 21;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "plot");
    table->table_pointer = cat_1_ed_major_1_ed_minor_2_plot_table;
    table->table_pointer_expand = cat_1_ed_major_1_ed_minor_2_plot_table_expand;
  }
  else if (cat == 1 && ed == value_1_1_2 && uap == uap_1_1_2_track)
  {
    table->table_size = 22;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "track");
    table->table_pointer = cat_1_ed_major_1_ed_minor_2_track_table;
    table->table_pointer_expand = cat_1_ed_major_1_ed_minor_2_track_table_expand;
  }
  else if (cat == 1 && ed == value_1_1_3 && uap == uap_1_1_3_plot)
  {
    table->table_size = 21;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "plot");
    table->table_pointer = cat_1_ed_major_1_ed_minor_3_plot_table;
    table->table_pointer_expand = cat_1_ed_major_1_ed_minor_3_plot_table_expand;
  }
  else if (cat == 1 && ed == value_1_1_3 && uap == uap_1_1_3_track)
  {
    table->table_size = 22;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "track");
    table->table_pointer = cat_1_ed_major_1_ed_minor_3_track_table;
    table->table_pointer_expand = cat_1_ed_major_1_ed_minor_3_track_table_expand;
  }
  else if (cat == 1 && ed == value_1_1_4 && uap == uap_1_1_4_plot)
  {
    table->table_size = 21;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "plot");
    table->table_pointer = cat_1_ed_major_1_ed_minor_4_plot_table;
    table->table_pointer_expand = cat_1_ed_major_1_ed_minor_4_plot_table_expand;
  }
  else if (cat == 1 && ed == value_1_1_4 && uap == uap_1_1_4_track)
  {
    table->table_size = 22;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "track");
    table->table_pointer = cat_1_ed_major_1_ed_minor_4_track_table;
    table->table_pointer_expand = cat_1_ed_major_1_ed_minor_4_track_table_expand;
  }
  else if (cat == 2 && ed == value_2_1_0 && uap == uap_2_1_0_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_2_ed_major_1_ed_minor_0_uap_table;
    table->table_pointer_expand = cat_2_ed_major_1_ed_minor_0_uap_table_expand;
  }
  else if (cat == 2 && ed == value_2_1_1 && uap == uap_2_1_1_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_2_ed_major_1_ed_minor_1_uap_table;
    table->table_pointer_expand = cat_2_ed_major_1_ed_minor_1_uap_table_expand;
  }
  else if (cat == 2 && ed == value_2_1_2 && uap == uap_2_1_2_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_2_ed_major_1_ed_minor_2_uap_table;
    table->table_pointer_expand = cat_2_ed_major_1_ed_minor_2_uap_table_expand;
  }
  else if (cat == 4 && ed == value_4_1_12 && uap == uap_4_1_12_uap)
  {
    table->table_size = 21;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_4_ed_major_1_ed_minor_12_uap_table;
    table->table_pointer_expand = cat_4_ed_major_1_ed_minor_12_uap_table_expand;
  }
  else if (cat == 4 && ed == value_4_1_13 && uap == uap_4_1_13_uap)
  {
    table->table_size = 21;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_4_ed_major_1_ed_minor_13_uap_table;
    table->table_pointer_expand = cat_4_ed_major_1_ed_minor_13_uap_table_expand;
  }
  else if (cat == 8 && ed == value_8_1_2 && uap == uap_8_1_2_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_8_ed_major_1_ed_minor_2_uap_table;
    table->table_pointer_expand = cat_8_ed_major_1_ed_minor_2_uap_table_expand;
  }
  else if (cat == 8 && ed == value_8_1_3 && uap == uap_8_1_3_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_8_ed_major_1_ed_minor_3_uap_table;
    table->table_pointer_expand = cat_8_ed_major_1_ed_minor_3_uap_table_expand;
  }
  else if (cat == 9 && ed == value_9_2_1 && uap == uap_9_2_1_uap)
  {
    table->table_size = 9;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_9_ed_major_2_ed_minor_1_uap_table;
    table->table_pointer_expand = cat_9_ed_major_2_ed_minor_1_uap_table_expand;
  }
  else if (cat == 10 && ed == value_10_1_1 && uap == uap_10_1_1_uap)
  {
    table->table_size = 28;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_10_ed_major_1_ed_minor_1_uap_table;
    table->table_pointer_expand = cat_10_ed_major_1_ed_minor_1_uap_table_expand;
  }
  else if (cat == 11 && ed == value_11_1_2 && uap == uap_11_1_2_uap)
  {
    table->table_size = 29;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_11_ed_major_1_ed_minor_2_uap_table;
    table->table_pointer_expand = cat_11_ed_major_1_ed_minor_2_uap_table_expand;
  }
  else if (cat == 11 && ed == value_11_1_3 && uap == uap_11_1_3_uap)
  {
    table->table_size = 29;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_11_ed_major_1_ed_minor_3_uap_table;
    table->table_pointer_expand = cat_11_ed_major_1_ed_minor_3_uap_table_expand;
  }
  else if (cat == 15 && ed == value_15_1_0 && uap == uap_15_1_0_uap)
  {
    table->table_size = 26;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_15_ed_major_1_ed_minor_0_uap_table;
    table->table_pointer_expand = cat_15_ed_major_1_ed_minor_0_uap_table_expand;
  }
  else if (cat == 15 && ed == value_15_1_1 && uap == uap_15_1_1_uap)
  {
    table->table_size = 26;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_15_ed_major_1_ed_minor_1_uap_table;
    table->table_pointer_expand = cat_15_ed_major_1_ed_minor_1_uap_table_expand;
  }
  else if (cat == 15 && ed == value_15_1_2 && uap == uap_15_1_2_uap)
  {
    table->table_size = 26;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_15_ed_major_1_ed_minor_2_uap_table;
    table->table_pointer_expand = cat_15_ed_major_1_ed_minor_2_uap_table_expand;
  }
  else if (cat == 16 && ed == value_16_1_0 && uap == uap_16_1_0_uap)
  {
    table->table_size = 11;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_16_ed_major_1_ed_minor_0_uap_table;
    table->table_pointer_expand = cat_16_ed_major_1_ed_minor_0_uap_table_expand;
  }
  else if (cat == 17 && ed == value_17_1_3 && uap == uap_17_1_3_uap)
  {
    table->table_size = 21;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_17_ed_major_1_ed_minor_3_uap_table;
    table->table_pointer_expand = cat_17_ed_major_1_ed_minor_3_uap_table_expand;
  }
  else if (cat == 18 && ed == value_18_1_7 && uap == uap_18_1_7_uap)
  {
    table->table_size = 35;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_18_ed_major_1_ed_minor_7_uap_table;
    table->table_pointer_expand = cat_18_ed_major_1_ed_minor_7_uap_table_expand;
  }
  else if (cat == 18 && ed == value_18_1_8 && uap == uap_18_1_8_uap)
  {
    table->table_size = 35;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_18_ed_major_1_ed_minor_8_uap_table;
    table->table_pointer_expand = cat_18_ed_major_1_ed_minor_8_uap_table_expand;
  }
  else if (cat == 19 && ed == value_19_1_3 && uap == uap_19_1_3_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_19_ed_major_1_ed_minor_3_uap_table;
    table->table_pointer_expand = cat_19_ed_major_1_ed_minor_3_uap_table_expand;
  }
  else if (cat == 20 && ed == value_20_1_9 && uap == uap_20_1_9_uap)
  {
    table->table_size = 28;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_20_ed_major_1_ed_minor_9_uap_table;
    table->table_pointer_expand = cat_20_ed_major_1_ed_minor_9_uap_table_expand;
  }
  else if (cat == 20 && ed == value_20_1_10 && uap == uap_20_1_10_uap)
  {
    table->table_size = 28;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_20_ed_major_1_ed_minor_10_uap_table;
    table->table_pointer_expand = cat_20_ed_major_1_ed_minor_10_uap_table_expand;
  }
  else if (cat == 20 && ed == value_20_1_11 && uap == uap_20_1_11_uap)
  {
    table->table_size = 28;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_20_ed_major_1_ed_minor_11_uap_table;
    table->table_pointer_expand = cat_20_ed_major_1_ed_minor_11_uap_table_expand;
  }
  else if (cat == 21 && ed == value_21_0_23 && uap == uap_21_0_23_uap)
  {
    table->table_size = 35;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_21_ed_major_0_ed_minor_23_uap_table;
    table->table_pointer_expand = cat_21_ed_major_0_ed_minor_23_uap_table_expand;
  }
  else if (cat == 21 && ed == value_21_0_24 && uap == uap_21_0_24_uap)
  {
    table->table_size = 35;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_21_ed_major_0_ed_minor_24_uap_table;
    table->table_pointer_expand = cat_21_ed_major_0_ed_minor_24_uap_table_expand;
  }
  else if (cat == 21 && ed == value_21_0_25 && uap == uap_21_0_25_uap)
  {
    table->table_size = 35;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_21_ed_major_0_ed_minor_25_uap_table;
    table->table_pointer_expand = cat_21_ed_major_0_ed_minor_25_uap_table_expand;
  }
  else if (cat == 21 && ed == value_21_0_26 && uap == uap_21_0_26_uap)
  {
    table->table_size = 35;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_21_ed_major_0_ed_minor_26_uap_table;
    table->table_pointer_expand = cat_21_ed_major_0_ed_minor_26_uap_table_expand;
  }
  else if (cat == 21 && ed == value_21_2_1 && uap == uap_21_2_1_uap)
  {
    table->table_size = 49;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_21_ed_major_2_ed_minor_1_uap_table;
    table->table_pointer_expand = cat_21_ed_major_2_ed_minor_1_uap_table_expand;
  }
  else if (cat == 21 && ed == value_21_2_2 && uap == uap_21_2_2_uap)
  {
    table->table_size = 49;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_21_ed_major_2_ed_minor_2_uap_table;
    table->table_pointer_expand = cat_21_ed_major_2_ed_minor_2_uap_table_expand;
  }
  else if (cat == 21 && ed == value_21_2_3 && uap == uap_21_2_3_uap)
  {
    table->table_size = 49;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_21_ed_major_2_ed_minor_3_uap_table;
    table->table_pointer_expand = cat_21_ed_major_2_ed_minor_3_uap_table_expand;
  }
  else if (cat == 21 && ed == value_21_2_4 && uap == uap_21_2_4_uap)
  {
    table->table_size = 49;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_21_ed_major_2_ed_minor_4_uap_table;
    table->table_pointer_expand = cat_21_ed_major_2_ed_minor_4_uap_table_expand;
  }
  else if (cat == 21 && ed == value_21_2_5 && uap == uap_21_2_5_uap)
  {
    table->table_size = 49;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_21_ed_major_2_ed_minor_5_uap_table;
    table->table_pointer_expand = cat_21_ed_major_2_ed_minor_5_uap_table_expand;
  }
  else if (cat == 21 && ed == value_21_2_6 && uap == uap_21_2_6_uap)
  {
    table->table_size = 49;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_21_ed_major_2_ed_minor_6_uap_table;
    table->table_pointer_expand = cat_21_ed_major_2_ed_minor_6_uap_table_expand;
  }
  else if (cat == 21 && ed == value_21_2_7 && uap == uap_21_2_7_uap)
  {
    table->table_size = 49;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_21_ed_major_2_ed_minor_7_uap_table;
    table->table_pointer_expand = cat_21_ed_major_2_ed_minor_7_uap_table_expand;
  }
  else if (cat == 23 && ed == value_23_1_2 && uap == uap_23_1_2_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_23_ed_major_1_ed_minor_2_uap_table;
    table->table_pointer_expand = cat_23_ed_major_1_ed_minor_2_uap_table_expand;
  }
  else if (cat == 23 && ed == value_23_1_3 && uap == uap_23_1_3_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_23_ed_major_1_ed_minor_3_uap_table;
    table->table_pointer_expand = cat_23_ed_major_1_ed_minor_3_uap_table_expand;
  }
  else if (cat == 25 && ed == value_25_1_5 && uap == uap_25_1_5_uap)
  {
    table->table_size = 13;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_25_ed_major_1_ed_minor_5_uap_table;
    table->table_pointer_expand = cat_25_ed_major_1_ed_minor_5_uap_table_expand;
  }
  else if (cat == 32 && ed == value_32_1_1 && uap == uap_32_1_1_uap)
  {
    table->table_size = 21;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_32_ed_major_1_ed_minor_1_uap_table;
    table->table_pointer_expand = cat_32_ed_major_1_ed_minor_1_uap_table_expand;
  }
  else if (cat == 32 && ed == value_32_1_2 && uap == uap_32_1_2_uap)
  {
    table->table_size = 21;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_32_ed_major_1_ed_minor_2_uap_table;
    table->table_pointer_expand = cat_32_ed_major_1_ed_minor_2_uap_table_expand;
  }
  else if (cat == 34 && ed == value_34_1_27 && uap == uap_34_1_27_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_34_ed_major_1_ed_minor_27_uap_table;
    table->table_pointer_expand = cat_34_ed_major_1_ed_minor_27_uap_table_expand;
  }
  else if (cat == 34 && ed == value_34_1_28 && uap == uap_34_1_28_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_34_ed_major_1_ed_minor_28_uap_table;
    table->table_pointer_expand = cat_34_ed_major_1_ed_minor_28_uap_table_expand;
  }
  else if (cat == 34 && ed == value_34_1_29 && uap == uap_34_1_29_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_34_ed_major_1_ed_minor_29_uap_table;
    table->table_pointer_expand = cat_34_ed_major_1_ed_minor_29_uap_table_expand;
  }
  else if (cat == 48 && ed == value_48_1_27 && uap == uap_48_1_27_uap)
  {
    table->table_size = 28;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_48_ed_major_1_ed_minor_27_uap_table;
    table->table_pointer_expand = cat_48_ed_major_1_ed_minor_27_uap_table_expand;
  }
  else if (cat == 48 && ed == value_48_1_28 && uap == uap_48_1_28_uap)
  {
    table->table_size = 28;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_48_ed_major_1_ed_minor_28_uap_table;
    table->table_pointer_expand = cat_48_ed_major_1_ed_minor_28_uap_table_expand;
  }
  else if (cat == 48 && ed == value_48_1_29 && uap == uap_48_1_29_uap)
  {
    table->table_size = 28;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_48_ed_major_1_ed_minor_29_uap_table;
    table->table_pointer_expand = cat_48_ed_major_1_ed_minor_29_uap_table_expand;
  }
  else if (cat == 48 && ed == value_48_1_30 && uap == uap_48_1_30_uap)
  {
    table->table_size = 28;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_48_ed_major_1_ed_minor_30_uap_table;
    table->table_pointer_expand = cat_48_ed_major_1_ed_minor_30_uap_table_expand;
  }
  else if (cat == 48 && ed == value_48_1_31 && uap == uap_48_1_31_uap)
  {
    table->table_size = 28;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_48_ed_major_1_ed_minor_31_uap_table;
    table->table_pointer_expand = cat_48_ed_major_1_ed_minor_31_uap_table_expand;
  }
  else if (cat == 48 && ed == value_48_1_32 && uap == uap_48_1_32_uap)
  {
    table->table_size = 28;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_48_ed_major_1_ed_minor_32_uap_table;
    table->table_pointer_expand = cat_48_ed_major_1_ed_minor_32_uap_table_expand;
  }
  else if (cat == 62 && ed == value_62_1_16 && uap == uap_62_1_16_uap)
  {
    table->table_size = 35;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_62_ed_major_1_ed_minor_16_uap_table;
    table->table_pointer_expand = cat_62_ed_major_1_ed_minor_16_uap_table_expand;
  }
  else if (cat == 62 && ed == value_62_1_17 && uap == uap_62_1_17_uap)
  {
    table->table_size = 35;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_62_ed_major_1_ed_minor_17_uap_table;
    table->table_pointer_expand = cat_62_ed_major_1_ed_minor_17_uap_table_expand;
  }
  else if (cat == 62 && ed == value_62_1_18 && uap == uap_62_1_18_uap)
  {
    table->table_size = 35;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_62_ed_major_1_ed_minor_18_uap_table;
    table->table_pointer_expand = cat_62_ed_major_1_ed_minor_18_uap_table_expand;
  }
  else if (cat == 62 && ed == value_62_1_19 && uap == uap_62_1_19_uap)
  {
    table->table_size = 35;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_62_ed_major_1_ed_minor_19_uap_table;
    table->table_pointer_expand = cat_62_ed_major_1_ed_minor_19_uap_table_expand;
  }
  else if (cat == 62 && ed == value_62_1_20 && uap == uap_62_1_20_uap)
  {
    table->table_size = 35;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_62_ed_major_1_ed_minor_20_uap_table;
    table->table_pointer_expand = cat_62_ed_major_1_ed_minor_20_uap_table_expand;
  }
  else if (cat == 62 && ed == value_62_1_21 && uap == uap_62_1_21_uap)
  {
    table->table_size = 35;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_62_ed_major_1_ed_minor_21_uap_table;
    table->table_pointer_expand = cat_62_ed_major_1_ed_minor_21_uap_table_expand;
  }
  else if (cat == 63 && ed == value_63_1_6 && uap == uap_63_1_6_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_63_ed_major_1_ed_minor_6_uap_table;
    table->table_pointer_expand = cat_63_ed_major_1_ed_minor_6_uap_table_expand;
  }
  else if (cat == 63 && ed == value_63_1_7 && uap == uap_63_1_7_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_63_ed_major_1_ed_minor_7_uap_table;
    table->table_pointer_expand = cat_63_ed_major_1_ed_minor_7_uap_table_expand;
  }
  else if (cat == 65 && ed == value_65_1_4 && uap == uap_65_1_4_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_65_ed_major_1_ed_minor_4_uap_table;
    table->table_pointer_expand = cat_65_ed_major_1_ed_minor_4_uap_table_expand;
  }
  else if (cat == 65 && ed == value_65_1_5 && uap == uap_65_1_5_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_65_ed_major_1_ed_minor_5_uap_table;
    table->table_pointer_expand = cat_65_ed_major_1_ed_minor_5_uap_table_expand;
  }
  else if (cat == 65 && ed == value_65_1_6 && uap == uap_65_1_6_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_65_ed_major_1_ed_minor_6_uap_table;
    table->table_pointer_expand = cat_65_ed_major_1_ed_minor_6_uap_table_expand;
  }
  else if (cat == 150 && ed == value_150_3_0 && uap == uap_150_3_0_uap)
  {
    table->table_size = 28;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_150_ed_major_3_ed_minor_0_uap_table;
    table->table_pointer_expand = cat_150_ed_major_3_ed_minor_0_uap_table_expand;
  }
  else if (cat == 205 && ed == value_205_1_0 && uap == uap_205_1_0_uap)
  {
    table->table_size = 22;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_205_ed_major_1_ed_minor_0_uap_table;
    table->table_pointer_expand = cat_205_ed_major_1_ed_minor_0_uap_table_expand;
  }
  else if (cat == 240 && ed == value_240_1_3 && uap == uap_240_1_3_uap)
  {
    table->table_size = 14;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_240_ed_major_1_ed_minor_3_uap_table;
    table->table_pointer_expand = cat_240_ed_major_1_ed_minor_3_uap_table_expand;
  }
  else if (cat == 247 && ed == value_247_1_2 && uap == uap_247_1_2_uap)
  {
    table->table_size = 7;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_247_ed_major_1_ed_minor_2_uap_table;
    table->table_pointer_expand = cat_247_ed_major_1_ed_minor_2_uap_table_expand;
  }
  else if (cat == 247 && ed == value_247_1_3 && uap == uap_247_1_3_uap)
  {
    table->table_size = 7;
    snprintf(table->uap_name, sizeof(table->uap_name), "%s", "uap");
    table->table_pointer = cat_247_ed_major_1_ed_minor_3_uap_table;
    table->table_pointer_expand = cat_247_ed_major_1_ed_minor_3_uap_table_expand;
  }
  else
  {
    table->table_size = 0;
    table->table_pointer = NULL;
    table->table_pointer_expand = NULL;
  }
}
static void get_expansion_table(unsigned int cat, int ed, table_params *table)
{
  if (cat == 21 && ed == value_21_1_4_re)
  {
    table->table_size = 8;
    table->table_pointer = cat_21_ed_major_1_ed_minor_4_uap_table_expansion;
    table->table_pointer_expand = cat_21_ed_major_1_ed_minor_4_uap_table_expansion_expand;
  }
  else
  if (cat == 21 && ed == value_21_1_5_re)
  {
    table->table_size = 8;
    table->table_pointer = cat_21_ed_major_1_ed_minor_5_uap_table_expansion;
    table->table_pointer_expand = cat_21_ed_major_1_ed_minor_5_uap_table_expansion_expand;
  }
  else
  if (cat == 48 && ed == value_48_1_11_re)
  {
    table->table_size = 7;
    table->table_pointer = cat_48_ed_major_1_ed_minor_11_uap_table_expansion;
    table->table_pointer_expand = cat_48_ed_major_1_ed_minor_11_uap_table_expansion_expand;
  }
  else
  if (cat == 48 && ed == value_48_1_12_re)
  {
    table->table_size = 8;
    table->table_pointer = cat_48_ed_major_1_ed_minor_12_uap_table_expansion;
    table->table_pointer_expand = cat_48_ed_major_1_ed_minor_12_uap_table_expansion_expand;
  }
  else
  if (cat == 48 && ed == value_48_1_13_re)
  {
    table->table_size = 8;
    table->table_pointer = cat_48_ed_major_1_ed_minor_13_uap_table_expansion;
    table->table_pointer_expand = cat_48_ed_major_1_ed_minor_13_uap_table_expansion_expand;
  }
  else
  if (cat == 62 && ed == value_62_1_2_re)
  {
    table->table_size = 4;
    table->table_pointer = cat_62_ed_major_1_ed_minor_2_uap_table_expansion;
    table->table_pointer_expand = cat_62_ed_major_1_ed_minor_2_uap_table_expansion_expand;
  }
  else
  if (cat == 62 && ed == value_62_1_3_re)
  {
    table->table_size = 5;
    table->table_pointer = cat_62_ed_major_1_ed_minor_3_uap_table_expansion;
    table->table_pointer_expand = cat_62_ed_major_1_ed_minor_3_uap_table_expansion_expand;
  }
  else
  {
    table->table_size = 0;
    table->table_pointer = NULL;
    table->table_pointer_expand = NULL;
  }
}